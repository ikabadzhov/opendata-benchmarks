<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1046" onload="init(evt)" viewBox="0 0 1200 1046" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1046.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1029" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1029" > </text>
<g id="frames">
<g >
<title>llvm::FPPassManager::runOnModule (35 samples, 1.31%)</title><rect x="1048.1" y="645" width="15.4" height="15.0" fill="rgb(229,208,1)" rx="2" ry="2" />
<text  x="1051.12" y="655.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1172.8" y="773" width="0.5" height="15.0" fill="rgb(235,185,10)" rx="2" ry="2" />
<text  x="1175.82" y="783.5" ></text>
</g>
<g >
<title>TClingTypedefInfo::TClingTypedefInfo (1 samples, 0.04%)</title><rect x="784.2" y="613" width="0.4" height="15.0" fill="rgb(241,41,18)" rx="2" ry="2" />
<text  x="787.18" y="623.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::loadObjectImpl (49 samples, 1.83%)</title><rect x="868.3" y="597" width="21.6" height="15.0" fill="rgb(215,149,25)" rx="2" ry="2" />
<text  x="871.34" y="607.5" >l..</text>
</g>
<g >
<title>TString::TString (1 samples, 0.04%)</title><rect x="1075.9" y="853" width="0.4" height="15.0" fill="rgb(225,104,29)" rx="2" ry="2" />
<text  x="1078.88" y="863.5" ></text>
</g>
<g >
<title>clang::MultiplexConsumer::HandleCXXStaticMemberVarInstantiation (1 samples, 0.04%)</title><rect x="1130.1" y="613" width="0.4" height="15.0" fill="rgb(247,27,49)" rx="2" ry="2" />
<text  x="1133.07" y="623.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1172.8" y="709" width="0.5" height="15.0" fill="rgb(216,29,51)" rx="2" ry="2" />
<text  x="1175.82" y="719.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (2 samples, 0.07%)</title><rect x="1109.8" y="629" width="0.9" height="15.0" fill="rgb(254,229,9)" rx="2" ry="2" />
<text  x="1112.81" y="639.5" ></text>
</g>
<g >
<title>llvm::DAGTypeLegalizer::run (1 samples, 0.04%)</title><rect x="1152.1" y="741" width="0.4" height="15.0" fill="rgb(240,204,35)" rx="2" ry="2" />
<text  x="1155.11" y="751.5" ></text>
</g>
<g >
<title>DeduceTemplateArgumentsByTypeMatch (1 samples, 0.04%)</title><rect x="1142.4" y="741" width="0.5" height="15.0" fill="rgb(206,213,35)" rx="2" ry="2" />
<text  x="1145.41" y="751.5" ></text>
</g>
<g >
<title>cling::DynamicLibraryManager::loadLibrary (1 samples, 0.04%)</title><rect x="1149.5" y="501" width="0.4" height="15.0" fill="rgb(243,64,23)" rx="2" ry="2" />
<text  x="1152.46" y="511.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitVarDecl (2 samples, 0.07%)</title><rect x="1107.6" y="837" width="0.9" height="15.0" fill="rgb(247,104,52)" rx="2" ry="2" />
<text  x="1110.60" y="847.5" ></text>
</g>
<g >
<title>clang::LinkageComputer::getLVForDecl (1 samples, 0.04%)</title><rect x="1105.4" y="613" width="0.4" height="15.0" fill="rgb(240,72,16)" rx="2" ry="2" />
<text  x="1108.40" y="623.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadStmtFromStream (1 samples, 0.04%)</title><rect x="1099.7" y="853" width="0.4" height="15.0" fill="rgb(232,40,35)" rx="2" ry="2" />
<text  x="1102.67" y="863.5" ></text>
</g>
<g >
<title>llvm::PMTopLevelManager::findAnalysisPass (10 samples, 0.37%)</title><rect x="1039.7" y="597" width="4.5" height="15.0" fill="rgb(237,123,24)" rx="2" ry="2" />
<text  x="1042.75" y="607.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitClassTemplateSpecializationDeclImpl (1 samples, 0.04%)</title><rect x="1132.7" y="581" width="0.5" height="15.0" fill="rgb(220,109,3)" rx="2" ry="2" />
<text  x="1135.72" y="591.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;clang::CXXMethodDecl const*, clang::OverridingMethods&gt;, std::allocator&lt;std::pair&lt;clang::CXXMethodDecl const*, clang::OverridingMethods&gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;clang::CXXMethodDecl const*, clang::OverridingMethods&gt; &gt; (1 samples, 0.04%)</title><rect x="1107.6" y="629" width="0.4" height="15.0" fill="rgb(235,95,51)" rx="2" ry="2" />
<text  x="1110.60" y="639.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;, void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;::LookupBucketFor&lt;void const*&gt; (1 samples, 0.04%)</title><rect x="693.9" y="709" width="0.4" height="15.0" fill="rgb(231,69,23)" rx="2" ry="2" />
<text  x="696.85" y="719.5" ></text>
</g>
<g >
<title>clang::VarDecl::isThisDeclarationADefinition (1 samples, 0.04%)</title><rect x="1125.2" y="789" width="0.5" height="15.0" fill="rgb(253,86,3)" rx="2" ry="2" />
<text  x="1128.23" y="799.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1098.8" y="933" width="0.4" height="15.0" fill="rgb(207,116,53)" rx="2" ry="2" />
<text  x="1101.79" y="943.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1097.5" y="517" width="0.4" height="15.0" fill="rgb(246,24,52)" rx="2" ry="2" />
<text  x="1100.47" y="527.5" ></text>
</g>
<g >
<title>clang::TypeLoc::initializeImpl (1 samples, 0.04%)</title><rect x="1138.4" y="677" width="0.5" height="15.0" fill="rgb(213,199,50)" rx="2" ry="2" />
<text  x="1141.45" y="687.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::IncrementalExecutor (8 samples, 0.30%)</title><rect x="1066.2" y="821" width="3.5" height="15.0" fill="rgb(212,115,28)" rx="2" ry="2" />
<text  x="1069.18" y="831.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.04%)</title><rect x="905.4" y="805" width="0.4" height="15.0" fill="rgb(216,127,31)" rx="2" ry="2" />
<text  x="908.35" y="815.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::runOnMachineFunction (10 samples, 0.37%)</title><rect x="1159.6" y="757" width="4.4" height="15.0" fill="rgb(223,113,45)" rx="2" ry="2" />
<text  x="1162.60" y="767.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::runOnMachineFunction (1 samples, 0.04%)</title><rect x="1152.1" y="805" width="0.4" height="15.0" fill="rgb(216,190,30)" rx="2" ry="2" />
<text  x="1155.11" y="815.5" ></text>
</g>
<g >
<title>clang::CXXRecordDecl::bases (1 samples, 0.04%)</title><rect x="1123.5" y="693" width="0.4" height="15.0" fill="rgb(240,204,18)" rx="2" ry="2" />
<text  x="1126.47" y="703.5" ></text>
</g>
<g >
<title>clang::Sema::BuildDeclRefExpr (1 samples, 0.04%)</title><rect x="1128.3" y="949" width="0.5" height="15.0" fill="rgb(208,8,1)" rx="2" ry="2" />
<text  x="1131.31" y="959.5" ></text>
</g>
<g >
<title>__GI__IO_fread (2 samples, 0.07%)</title><rect x="1068.4" y="757" width="0.9" height="15.0" fill="rgb(235,223,13)" rx="2" ry="2" />
<text  x="1071.39" y="767.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.04%)</title><rect x="1103.6" y="677" width="0.5" height="15.0" fill="rgb(208,9,44)" rx="2" ry="2" />
<text  x="1106.64" y="687.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::runStaticInitializersOnce (1 samples, 0.04%)</title><rect x="1147.3" y="885" width="0.4" height="15.0" fill="rgb(231,19,32)" rx="2" ry="2" />
<text  x="1150.26" y="895.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitAggExpr (1 samples, 0.04%)</title><rect x="1138.0" y="741" width="0.4" height="15.0" fill="rgb(253,128,2)" rx="2" ry="2" />
<text  x="1141.01" y="751.5" ></text>
</g>
<g >
<title>StrengthenNoWrapFlags (1 samples, 0.04%)</title><rect x="1159.2" y="533" width="0.4" height="15.0" fill="rgb(238,168,41)" rx="2" ry="2" />
<text  x="1162.16" y="543.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.04%)</title><rect x="1107.6" y="613" width="0.4" height="15.0" fill="rgb(205,129,52)" rx="2" ry="2" />
<text  x="1110.60" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.04%)</title><rect x="1133.2" y="805" width="0.4" height="15.0" fill="rgb(230,52,12)" rx="2" ry="2" />
<text  x="1136.16" y="815.5" ></text>
</g>
<g >
<title>TClingDataMemberInfo::TClingDataMemberInfo (1 samples, 0.04%)</title><rect x="905.4" y="533" width="0.4" height="15.0" fill="rgb(219,163,3)" rx="2" ry="2" />
<text  x="908.35" y="543.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization (1 samples, 0.04%)</title><rect x="1131.0" y="869" width="0.4" height="15.0" fill="rgb(207,137,18)" rx="2" ry="2" />
<text  x="1133.96" y="879.5" ></text>
</g>
<g >
<title>clang::Sema::IsPointerConversion (1 samples, 0.04%)</title><rect x="1127.9" y="837" width="0.4" height="15.0" fill="rgb(209,106,38)" rx="2" ry="2" />
<text  x="1130.87" y="847.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::FinishBasicBlock (1 samples, 0.04%)</title><rect x="701.3" y="709" width="0.5" height="15.0" fill="rgb(216,95,0)" rx="2" ry="2" />
<text  x="704.34" y="719.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::getAddExpr (1 samples, 0.04%)</title><rect x="829.6" y="917" width="0.4" height="15.0" fill="rgb(250,214,16)" rx="2" ry="2" />
<text  x="832.57" y="927.5" ></text>
</g>
<g >
<title>TBranch::GetEntry (8 samples, 0.30%)</title><rect x="416.3" y="837" width="3.5" height="15.0" fill="rgb(212,17,21)" rx="2" ry="2" />
<text  x="419.26" y="847.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCtorPrologue (1 samples, 0.04%)</title><rect x="1114.7" y="837" width="0.4" height="15.0" fill="rgb(244,218,54)" rx="2" ry="2" />
<text  x="1117.65" y="847.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::CreateTempAlloca (1 samples, 0.04%)</title><rect x="1115.1" y="709" width="0.4" height="15.0" fill="rgb(254,33,1)" rx="2" ry="2" />
<text  x="1118.09" y="719.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass (1 samples, 0.04%)</title><rect x="1098.3" y="901" width="0.5" height="15.0" fill="rgb(206,39,15)" rx="2" ry="2" />
<text  x="1101.35" y="911.5" ></text>
</g>
<g >
<title>llvm::TargetPassConfig::addMachinePasses (1 samples, 0.04%)</title><rect x="830.4" y="597" width="0.5" height="15.0" fill="rgb(246,65,2)" rx="2" ry="2" />
<text  x="833.45" y="607.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddTemplateArgument (1 samples, 0.04%)</title><rect x="1135.8" y="581" width="0.4" height="15.0" fill="rgb(234,217,21)" rx="2" ry="2" />
<text  x="1138.80" y="591.5" ></text>
</g>
<g >
<title>cling::MetaProcessor::process (1 samples, 0.04%)</title><rect x="1027.0" y="853" width="0.4" height="15.0" fill="rgb(236,108,6)" rx="2" ry="2" />
<text  x="1029.97" y="863.5" ></text>
</g>
<g >
<title>llvm::AttributeList::addAttributes (1 samples, 0.04%)</title><rect x="1112.0" y="645" width="0.4" height="15.0" fill="rgb(211,81,41)" rx="2" ry="2" />
<text  x="1115.01" y="655.5" ></text>
</g>
<g >
<title>clang::Sema::BuildQualifiedDeclarationNameExpr (1 samples, 0.04%)</title><rect x="1131.0" y="677" width="0.4" height="15.0" fill="rgb(247,164,16)" rx="2" ry="2" />
<text  x="1133.96" y="687.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertRecordDeclType (1 samples, 0.04%)</title><rect x="1117.7" y="677" width="0.5" height="15.0" fill="rgb(228,6,30)" rx="2" ry="2" />
<text  x="1120.74" y="687.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="21.5" y="453" width="0.4" height="15.0" fill="rgb(220,90,1)" rx="2" ry="2" />
<text  x="24.46" y="463.5" ></text>
</g>
<g >
<title>frombuf (9 samples, 0.34%)</title><rect x="663.9" y="901" width="4.0" height="15.0" fill="rgb(230,35,36)" rx="2" ry="2" />
<text  x="666.89" y="911.5" ></text>
</g>
<g >
<title>clang::Sema::SetCtorInitializers (1 samples, 0.04%)</title><rect x="1097.5" y="853" width="0.4" height="15.0" fill="rgb(251,189,31)" rx="2" ry="2" />
<text  x="1100.47" y="863.5" ></text>
</g>
<g >
<title>llvm::LoopInfoWrapperPass::runOnFunction (1 samples, 0.04%)</title><rect x="1051.6" y="613" width="0.5" height="15.0" fill="rgb(250,122,49)" rx="2" ry="2" />
<text  x="1054.64" y="623.5" ></text>
</g>
<g >
<title>llvm::X86TargetMachine::getTargetTransformInfo (3 samples, 0.11%)</title><rect x="864.4" y="549" width="1.3" height="15.0" fill="rgb(213,227,10)" rx="2" ry="2" />
<text  x="867.38" y="559.5" ></text>
</g>
<g >
<title>llvm::User::growHungoffUses (1 samples, 0.04%)</title><rect x="900.1" y="597" width="0.4" height="15.0" fill="rgb(212,38,38)" rx="2" ry="2" />
<text  x="903.07" y="607.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalDefinition (1 samples, 0.04%)</title><rect x="1109.8" y="533" width="0.4" height="15.0" fill="rgb(229,195,7)" rx="2" ry="2" />
<text  x="1112.81" y="543.5" ></text>
</g>
<g >
<title>llvm::orc::lookupWithLegacyFn&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}::operator()(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;) const::{lambda(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)#1}&gt; (2 samples, 0.07%)</title><rect x="1144.2" y="837" width="0.9" height="15.0" fill="rgb(241,100,39)" rx="2" ry="2" />
<text  x="1147.17" y="847.5" ></text>
</g>
<g >
<title>TCling::ProcessLine (160 samples, 5.97%)</title><rect x="830.0" y="933" width="70.5" height="15.0" fill="rgb(209,186,26)" rx="2" ry="2" />
<text  x="833.01" y="943.5" >TCling:..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1168.4" y="869" width="0.4" height="15.0" fill="rgb(243,142,13)" rx="2" ry="2" />
<text  x="1171.41" y="879.5" ></text>
</g>
<g >
<title>execute_command (4 samples, 0.15%)</title><rect x="22.3" y="597" width="1.8" height="15.0" fill="rgb(247,161,2)" rx="2" ry="2" />
<text  x="25.34" y="607.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1072.4" y="693" width="0.4" height="15.0" fill="rgb(244,88,42)" rx="2" ry="2" />
<text  x="1075.35" y="703.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetType (1 samples, 0.04%)</title><rect x="1132.7" y="517" width="0.5" height="15.0" fill="rgb(226,42,44)" rx="2" ry="2" />
<text  x="1135.72" y="527.5" ></text>
</g>
<g >
<title>clang::ASTReader::readTypeRecord (1 samples, 0.04%)</title><rect x="1142.9" y="661" width="0.4" height="15.0" fill="rgb(249,53,30)" rx="2" ry="2" />
<text  x="1145.85" y="671.5" ></text>
</g>
<g >
<title>TTreeCache::ReadBufferNormal (1 samples, 0.04%)</title><rect x="414.5" y="789" width="0.4" height="15.0" fill="rgb(239,151,54)" rx="2" ry="2" />
<text  x="417.50" y="799.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitStaticAssertDecl (1 samples, 0.04%)</title><rect x="1155.2" y="581" width="0.4" height="15.0" fill="rgb(214,225,14)" rx="2" ry="2" />
<text  x="1158.19" y="591.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (1 samples, 0.04%)</title><rect x="904.9" y="501" width="0.5" height="15.0" fill="rgb(230,120,4)" rx="2" ry="2" />
<text  x="907.91" y="511.5" ></text>
</g>
<g >
<title>clang::RedeclarableTemplateDecl::addSpecializationImpl&lt;clang::ClassTemplateDecl, clang::ClassTemplateSpecializationDecl&gt; (1 samples, 0.04%)</title><rect x="1124.3" y="693" width="0.5" height="15.0" fill="rgb(215,138,41)" rx="2" ry="2" />
<text  x="1127.35" y="703.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.15%)</title><rect x="1083.8" y="757" width="1.8" height="15.0" fill="rgb(216,125,46)" rx="2" ry="2" />
<text  x="1086.81" y="767.5" ></text>
</g>
<g >
<title>commonEmitCXXMemberOrOperatorCall (1 samples, 0.04%)</title><rect x="1138.0" y="885" width="0.4" height="15.0" fill="rgb(226,179,32)" rx="2" ry="2" />
<text  x="1141.01" y="895.5" ></text>
</g>
<g >
<title>TTree::Streamer (1 samples, 0.04%)</title><rect x="783.3" y="853" width="0.4" height="15.0" fill="rgb(226,226,41)" rx="2" ry="2" />
<text  x="786.30" y="863.5" ></text>
</g>
<g >
<title>TCling::ExecuteMacro (1 samples, 0.04%)</title><rect x="903.6" y="853" width="0.4" height="15.0" fill="rgb(243,140,6)" rx="2" ry="2" />
<text  x="906.59" y="863.5" ></text>
</g>
<g >
<title>llvm::Attribute::hasAttribute (1 samples, 0.04%)</title><rect x="845.0" y="517" width="0.4" height="15.0" fill="rgb(242,3,51)" rx="2" ry="2" />
<text  x="847.99" y="527.5" ></text>
</g>
<g >
<title>clang::Sema::PerformPendingInstantiations (6 samples, 0.22%)</title><rect x="1133.2" y="949" width="2.6" height="15.0" fill="rgb(208,70,2)" rx="2" ry="2" />
<text  x="1136.16" y="959.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="992.2" y="901" width="0.4" height="15.0" fill="rgb(233,165,34)" rx="2" ry="2" />
<text  x="995.16" y="911.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit (2 samples, 0.07%)</title><rect x="1100.1" y="949" width="0.9" height="15.0" fill="rgb(251,86,8)" rx="2" ry="2" />
<text  x="1103.11" y="959.5" ></text>
</g>
<g >
<title>cling::MetaSema::actOnxCommand (1 samples, 0.04%)</title><rect x="903.6" y="725" width="0.4" height="15.0" fill="rgb(235,137,54)" rx="2" ry="2" />
<text  x="906.59" y="735.5" ></text>
</g>
<g >
<title>llvm::X86TargetMachine::getTargetTransformInfo (1 samples, 0.04%)</title><rect x="1148.1" y="549" width="0.5" height="15.0" fill="rgb(227,121,38)" rx="2" ry="2" />
<text  x="1151.14" y="559.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::TargetTransformInfo (llvm::Function const&amp;), llvm::TargetMachine::getTargetIRAnalysis()::{lambda(llvm::Function const&amp;)#1}&gt;::_M_invoke (2 samples, 0.07%)</title><rect x="1045.9" y="613" width="0.9" height="15.0" fill="rgb(214,90,6)" rx="2" ry="2" />
<text  x="1048.91" y="623.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (1 samples, 0.04%)</title><rect x="1048.1" y="597" width="0.5" height="15.0" fill="rgb(216,88,38)" rx="2" ry="2" />
<text  x="1051.12" y="607.5" ></text>
</g>
<g >
<title>TCling::ProcessLine (85 samples, 3.17%)</title><rect x="1028.7" y="869" width="37.5" height="15.0" fill="rgb(215,140,43)" rx="2" ry="2" />
<text  x="1031.73" y="879.5" >TCl..</text>
</g>
<g >
<title>clang::ASTReader::finishPendingActions (1 samples, 0.04%)</title><rect x="1104.5" y="853" width="0.5" height="15.0" fill="rgb(252,128,1)" rx="2" ry="2" />
<text  x="1107.52" y="863.5" ></text>
</g>
<g >
<title>llvm::scc_iterator&lt;llvm::Function const*, llvm::GraphTraits&lt;llvm::Function const*&gt; &gt;::DFSVisitOne (1 samples, 0.04%)</title><rect x="1034.5" y="581" width="0.4" height="15.0" fill="rgb(234,175,34)" rx="2" ry="2" />
<text  x="1037.46" y="591.5" ></text>
</g>
<g >
<title>cling::utils::platform::GetSystemLibraryPaths (8 samples, 0.30%)</title><rect x="1066.2" y="789" width="3.5" height="15.0" fill="rgb(230,111,18)" rx="2" ry="2" />
<text  x="1069.18" y="799.5" ></text>
</g>
<g >
<title>llvm::orc::LambdaSymbolResolver&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt; const&amp;)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}&gt;::lookup (1 samples, 0.04%)</title><rect x="1159.2" y="869" width="0.4" height="15.0" fill="rgb(205,211,51)" rx="2" ry="2" />
<text  x="1162.16" y="879.5" ></text>
</g>
<g >
<title>llvm::SROA::runImpl (1 samples, 0.04%)</title><rect x="689.9" y="725" width="0.4" height="15.0" fill="rgb(219,28,38)" rx="2" ry="2" />
<text  x="692.89" y="735.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1093.9" y="677" width="0.5" height="15.0" fill="rgb(228,134,35)" rx="2" ry="2" />
<text  x="1096.94" y="687.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="21.5" y="549" width="0.4" height="15.0" fill="rgb(232,33,40)" rx="2" ry="2" />
<text  x="24.46" y="559.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnModule (7 samples, 0.26%)</title><rect x="897.4" y="709" width="3.1" height="15.0" fill="rgb(252,147,3)" rx="2" ry="2" />
<text  x="900.42" y="719.5" ></text>
</g>
<g >
<title>clang::ASTReader::readTypeRecord (1 samples, 0.04%)</title><rect x="1099.7" y="885" width="0.4" height="15.0" fill="rgb(209,167,25)" rx="2" ry="2" />
<text  x="1102.67" y="895.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit (1 samples, 0.04%)</title><rect x="1132.7" y="725" width="0.5" height="15.0" fill="rgb(207,70,48)" rx="2" ry="2" />
<text  x="1135.72" y="735.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTemplateIdType (1 samples, 0.04%)</title><rect x="1141.1" y="933" width="0.4" height="15.0" fill="rgb(228,207,9)" rx="2" ry="2" />
<text  x="1144.09" y="943.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::verifyPreservedAnalysis (12 samples, 0.45%)</title><rect x="1056.0" y="613" width="5.3" height="15.0" fill="rgb(217,46,1)" rx="2" ry="2" />
<text  x="1059.05" y="623.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition (1 samples, 0.04%)</title><rect x="785.1" y="677" width="0.4" height="15.0" fill="rgb(208,215,19)" rx="2" ry="2" />
<text  x="788.06" y="687.5" ></text>
</g>
<g >
<title>Evaluate (1 samples, 0.04%)</title><rect x="1123.5" y="869" width="0.4" height="15.0" fill="rgb(234,39,30)" rx="2" ry="2" />
<text  x="1126.47" y="879.5" ></text>
</g>
<g >
<title>clang::Sema::SubstFunctionDeclType (1 samples, 0.04%)</title><rect x="1131.4" y="693" width="0.4" height="15.0" fill="rgb(239,229,31)" rx="2" ry="2" />
<text  x="1134.40" y="703.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (6 samples, 0.22%)</title><rect x="1109.8" y="805" width="2.6" height="15.0" fill="rgb(220,204,47)" rx="2" ry="2" />
<text  x="1112.81" y="815.5" ></text>
</g>
<g >
<title>clang::ASTReader::FindExternalLexicalDecls (1 samples, 0.04%)</title><rect x="1137.1" y="629" width="0.5" height="15.0" fill="rgb(208,216,49)" rx="2" ry="2" />
<text  x="1140.12" y="639.5" ></text>
</g>
<g >
<title>read_alias_file (1 samples, 0.04%)</title><rect x="25.9" y="869" width="0.4" height="15.0" fill="rgb(234,45,40)" rx="2" ry="2" />
<text  x="28.86" y="879.5" ></text>
</g>
<g >
<title>clang::RedeclarableTemplateDecl::addSpecializationImpl&lt;clang::ClassTemplateDecl, clang::ClassTemplateSpecializationDecl&gt; (1 samples, 0.04%)</title><rect x="1123.0" y="725" width="0.5" height="15.0" fill="rgb(244,0,25)" rx="2" ry="2" />
<text  x="1126.02" y="735.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (14 samples, 0.52%)</title><rect x="891.3" y="709" width="6.1" height="15.0" fill="rgb(249,122,44)" rx="2" ry="2" />
<text  x="894.25" y="719.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;llvm::Comdat*, std::pair&lt;llvm::Comdat* const, llvm::GlobalValue*&gt;, std::allocator&lt;std::pair&lt;llvm::Comdat* const, llvm::GlobalValue*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;llvm::Comdat*&gt;, std::hash&lt;llvm::Comdat*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, false&gt; &gt;::equal_range (1 samples, 0.04%)</title><rect x="698.7" y="757" width="0.4" height="15.0" fill="rgb(211,227,1)" rx="2" ry="2" />
<text  x="701.70" y="767.5" ></text>
</g>
<g >
<title>llvm::orc::LambdaSymbolResolver&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt; const&amp;)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}&gt;::lookup (1 samples, 0.04%)</title><rect x="1146.8" y="837" width="0.5" height="15.0" fill="rgb(237,9,13)" rx="2" ry="2" />
<text  x="1149.82" y="847.5" ></text>
</g>
<g >
<title>LazyFunctionCreatorAutoloadForModule (1 samples, 0.04%)</title><rect x="1149.5" y="565" width="0.4" height="15.0" fill="rgb(246,219,47)" rx="2" ry="2" />
<text  x="1152.46" y="575.5" ></text>
</g>
<g >
<title>non-virtual thunk to clang::ASTReader::GetExternalDeclStmt(unsigned long) (1 samples, 0.04%)</title><rect x="1121.3" y="821" width="0.4" height="15.0" fill="rgb(209,221,9)" rx="2" ry="2" />
<text  x="1124.26" y="831.5" ></text>
</g>
<g >
<title>llvm::BitstreamCursor::readRecord (1 samples, 0.04%)</title><rect x="908.9" y="565" width="0.4" height="15.0" fill="rgb(224,9,24)" rx="2" ry="2" />
<text  x="911.88" y="575.5" ></text>
</g>
<g >
<title>clang::TemplateDeclInstantiator::VisitCXXMethodDecl (1 samples, 0.04%)</title><rect x="1129.2" y="853" width="0.4" height="15.0" fill="rgb(233,181,15)" rx="2" ry="2" />
<text  x="1132.19" y="863.5" ></text>
</g>
<g >
<title>clang::LinkageComputer::mergeTemplateLV (1 samples, 0.04%)</title><rect x="1103.2" y="597" width="0.4" height="15.0" fill="rgb(216,142,23)" rx="2" ry="2" />
<text  x="1106.20" y="607.5" ></text>
</g>
<g >
<title>TClass::CallShowMembers (1 samples, 0.04%)</title><rect x="783.3" y="789" width="0.4" height="15.0" fill="rgb(225,16,51)" rx="2" ry="2" />
<text  x="786.30" y="799.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1164.0" y="821" width="0.4" height="15.0" fill="rgb(214,24,14)" rx="2" ry="2" />
<text  x="1167.00" y="831.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitAggExpr (1 samples, 0.04%)</title><rect x="1138.0" y="789" width="0.4" height="15.0" fill="rgb(214,212,43)" rx="2" ry="2" />
<text  x="1141.01" y="799.5" ></text>
</g>
<g >
<title>clang::Sema::SubstType (1 samples, 0.04%)</title><rect x="1129.2" y="773" width="0.4" height="15.0" fill="rgb(216,162,38)" rx="2" ry="2" />
<text  x="1132.19" y="783.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition (1 samples, 0.04%)</title><rect x="1134.5" y="805" width="0.4" height="15.0" fill="rgb(249,103,6)" rx="2" ry="2" />
<text  x="1137.48" y="815.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.04%)</title><rect x="845.4" y="501" width="0.5" height="15.0" fill="rgb(215,96,7)" rx="2" ry="2" />
<text  x="848.43" y="511.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitDecl (2 samples, 0.07%)</title><rect x="1107.6" y="853" width="0.9" height="15.0" fill="rgb(252,109,8)" rx="2" ry="2" />
<text  x="1110.60" y="863.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::RebuildDependentNameType (1 samples, 0.04%)</title><rect x="1129.6" y="869" width="0.5" height="15.0" fill="rgb(232,114,32)" rx="2" ry="2" />
<text  x="1132.63" y="879.5" ></text>
</g>
<g >
<title>llvm::InstrEmitter::AddOperand (1 samples, 0.04%)</title><rect x="1150.8" y="597" width="0.4" height="15.0" fill="rgb(235,86,6)" rx="2" ry="2" />
<text  x="1153.78" y="607.5" ></text>
</g>
<g >
<title>llvm::AsmPrinter::EmitFunctionBody (1 samples, 0.04%)</title><rect x="1144.6" y="709" width="0.5" height="15.0" fill="rgb(229,125,42)" rx="2" ry="2" />
<text  x="1147.62" y="719.5" ></text>
</g>
<g >
<title>execute_command_internal (5 samples, 0.19%)</title><rect x="10.4" y="661" width="2.2" height="15.0" fill="rgb(231,155,45)" rx="2" ry="2" />
<text  x="13.44" y="671.5" ></text>
</g>
<g >
<title>llvm::Module::getNamedValue (1 samples, 0.04%)</title><rect x="897.0" y="613" width="0.4" height="15.0" fill="rgb(235,59,31)" rx="2" ry="2" />
<text  x="899.98" y="623.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1169.3" y="917" width="0.4" height="15.0" fill="rgb(230,67,36)" rx="2" ry="2" />
<text  x="1172.29" y="927.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="10.9" y="389" width="0.4" height="15.0" fill="rgb(212,96,22)" rx="2" ry="2" />
<text  x="13.88" y="399.5" ></text>
</g>
<g >
<title>llvm::SelectionDAG::getConstant (1 samples, 0.04%)</title><rect x="1154.7" y="885" width="0.5" height="15.0" fill="rgb(209,192,31)" rx="2" ry="2" />
<text  x="1157.75" y="895.5" ></text>
</g>
<g >
<title>TCling::ProcessLine (1 samples, 0.04%)</title><rect x="903.6" y="805" width="0.4" height="15.0" fill="rgb(234,157,5)" rx="2" ry="2" />
<text  x="906.59" y="815.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.15%)</title><rect x="1083.8" y="741" width="1.8" height="15.0" fill="rgb(251,67,26)" rx="2" ry="2" />
<text  x="1086.81" y="751.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.04%)</title><rect x="1103.6" y="613" width="0.5" height="15.0" fill="rgb(216,158,4)" rx="2" ry="2" />
<text  x="1106.64" y="623.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (6 samples, 0.22%)</title><rect x="906.2" y="629" width="2.7" height="15.0" fill="rgb(242,29,14)" rx="2" ry="2" />
<text  x="909.24" y="639.5" ></text>
</g>
<g >
<title>clang::TemplateDeclInstantiator::VisitCXXMethodDecl (1 samples, 0.04%)</title><rect x="1129.6" y="741" width="0.5" height="15.0" fill="rgb(225,193,34)" rx="2" ry="2" />
<text  x="1132.63" y="751.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitRedeclarableTemplateDecl (1 samples, 0.04%)</title><rect x="1132.7" y="693" width="0.5" height="15.0" fill="rgb(208,227,31)" rx="2" ry="2" />
<text  x="1135.72" y="703.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::FindExternalLexicalDecls (1 samples, 0.04%)</title><rect x="786.4" y="245" width="0.4" height="15.0" fill="rgb(218,96,16)" rx="2" ry="2" />
<text  x="789.39" y="255.5" ></text>
</g>
<g >
<title>TCling::InspectMembers (1 samples, 0.04%)</title><rect x="784.2" y="709" width="0.4" height="15.0" fill="rgb(250,15,12)" rx="2" ry="2" />
<text  x="787.18" y="719.5" ></text>
</g>
<g >
<title>clang::ASTContext::getASTRecordLayout (1 samples, 0.04%)</title><rect x="1123.5" y="709" width="0.4" height="15.0" fill="rgb(231,48,27)" rx="2" ry="2" />
<text  x="1126.47" y="719.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertTypeForMem (1 samples, 0.04%)</title><rect x="1117.7" y="901" width="0.5" height="15.0" fill="rgb(245,125,24)" rx="2" ry="2" />
<text  x="1120.74" y="911.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitRedeclarableTemplateDecl (1 samples, 0.04%)</title><rect x="1099.2" y="565" width="0.5" height="15.0" fill="rgb(238,216,43)" rx="2" ry="2" />
<text  x="1102.23" y="575.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitRedeclarableTemplateDecl (1 samples, 0.04%)</title><rect x="904.5" y="645" width="0.4" height="15.0" fill="rgb(242,220,12)" rx="2" ry="2" />
<text  x="907.47" y="655.5" ></text>
</g>
<g >
<title>TClass::GetClass (1 samples, 0.04%)</title><rect x="904.5" y="965" width="0.4" height="15.0" fill="rgb(229,177,54)" rx="2" ry="2" />
<text  x="907.47" y="975.5" ></text>
</g>
<g >
<title>llvm::SelectionDAG::AssignTopologicalOrder (1 samples, 0.04%)</title><rect x="906.2" y="533" width="0.5" height="15.0" fill="rgb(205,41,17)" rx="2" ry="2" />
<text  x="909.24" y="543.5" ></text>
</g>
<g >
<title>llvm::GlobalDCEPass::run (1 samples, 0.04%)</title><rect x="698.7" y="789" width="0.4" height="15.0" fill="rgb(253,57,29)" rx="2" ry="2" />
<text  x="701.70" y="799.5" ></text>
</g>
<g >
<title>cling::Interpreter::DeclareInternal (5 samples, 0.19%)</title><rect x="908.9" y="837" width="2.2" height="15.0" fill="rgb(215,189,6)" rx="2" ry="2" />
<text  x="911.88" y="847.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1078.1" y="725" width="0.4" height="15.0" fill="rgb(223,66,54)" rx="2" ry="2" />
<text  x="1081.08" y="735.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalDefinition (1 samples, 0.04%)</title><rect x="1113.8" y="853" width="0.4" height="15.0" fill="rgb(249,153,40)" rx="2" ry="2" />
<text  x="1116.77" y="863.5" ></text>
</g>
<g >
<title>cling::Interpreter::RunFunction (1 samples, 0.04%)</title><rect x="904.0" y="709" width="0.5" height="15.0" fill="rgb(240,125,37)" rx="2" ry="2" />
<text  x="907.03" y="719.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.11%)</title><rect x="1164.4" y="885" width="1.4" height="15.0" fill="rgb(243,192,49)" rx="2" ry="2" />
<text  x="1167.44" y="895.5" ></text>
</g>
<g >
<title>clang::Decl::getTranslationUnitDecl (1 samples, 0.04%)</title><rect x="1141.1" y="549" width="0.4" height="15.0" fill="rgb(230,74,51)" rx="2" ry="2" />
<text  x="1144.09" y="559.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::SetFunctionAttributes (1 samples, 0.04%)</title><rect x="1115.5" y="773" width="0.5" height="15.0" fill="rgb(237,22,29)" rx="2" ry="2" />
<text  x="1118.53" y="783.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (1 samples, 0.04%)</title><rect x="1145.5" y="885" width="0.4" height="15.0" fill="rgb(213,133,10)" rx="2" ry="2" />
<text  x="1148.50" y="895.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1067.9" y="677" width="0.5" height="15.0" fill="rgb(215,189,44)" rx="2" ry="2" />
<text  x="1070.95" y="687.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::NotifyLazyFunctionCreators (1 samples, 0.04%)</title><rect x="1149.5" y="597" width="0.4" height="15.0" fill="rgb(254,174,26)" rx="2" ry="2" />
<text  x="1152.46" y="607.5" ></text>
</g>
<g >
<title>clang::IdentifierTable::get (1 samples, 0.04%)</title><rect x="1071.0" y="581" width="0.5" height="15.0" fill="rgb(217,149,28)" rx="2" ry="2" />
<text  x="1074.03" y="591.5" ></text>
</g>
<g >
<title>clang::Sema::AddTemplateOverloadCandidate (1 samples, 0.04%)</title><rect x="1119.1" y="901" width="0.4" height="15.0" fill="rgb(228,187,45)" rx="2" ry="2" />
<text  x="1122.06" y="911.5" ></text>
</g>
<g >
<title>llvm::TargetRegisterInfo::checkAllSuperRegsMarked (1 samples, 0.04%)</title><rect x="700.5" y="709" width="0.4" height="15.0" fill="rgb(207,189,17)" rx="2" ry="2" />
<text  x="703.46" y="719.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitBranchOnBoolExpr (1 samples, 0.04%)</title><rect x="1102.3" y="917" width="0.5" height="15.0" fill="rgb(215,190,36)" rx="2" ry="2" />
<text  x="1105.32" y="927.5" ></text>
</g>
<g >
<title>llvm::matchSelectPattern (1 samples, 0.04%)</title><rect x="829.6" y="789" width="0.4" height="15.0" fill="rgb(223,131,15)" rx="2" ry="2" />
<text  x="832.57" y="799.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertTypeForMem (1 samples, 0.04%)</title><rect x="1117.7" y="837" width="0.5" height="15.0" fill="rgb(226,135,9)" rx="2" ry="2" />
<text  x="1120.74" y="847.5" ></text>
</g>
<g >
<title>_dl_map_object (1 samples, 0.04%)</title><rect x="904.9" y="469" width="0.5" height="15.0" fill="rgb(250,227,46)" rx="2" ry="2" />
<text  x="907.91" y="479.5" ></text>
</g>
<g >
<title>execute_command (26 samples, 0.97%)</title><rect x="10.4" y="821" width="11.5" height="15.0" fill="rgb(210,5,24)" rx="2" ry="2" />
<text  x="13.44" y="831.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformReturnStmt (1 samples, 0.04%)</title><rect x="1122.1" y="821" width="0.5" height="15.0" fill="rgb(221,149,41)" rx="2" ry="2" />
<text  x="1125.14" y="831.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="431.2" y="757" width="0.5" height="15.0" fill="rgb(252,20,0)" rx="2" ry="2" />
<text  x="434.24" y="767.5" ></text>
</g>
<g >
<title>llvm::StringMapImpl::LookupBucketFor (1 samples, 0.04%)</title><rect x="1071.0" y="565" width="0.5" height="15.0" fill="rgb(230,123,23)" rx="2" ry="2" />
<text  x="1074.03" y="575.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::SelectAllBasicBlocks (1 samples, 0.04%)</title><rect x="1150.8" y="661" width="0.4" height="15.0" fill="rgb(224,62,8)" rx="2" ry="2" />
<text  x="1153.78" y="671.5" ></text>
</g>
<g >
<title>llvm::AttributeList::removeAttribute (1 samples, 0.04%)</title><rect x="1110.7" y="629" width="0.4" height="15.0" fill="rgb(214,166,42)" rx="2" ry="2" />
<text  x="1113.69" y="639.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (10 samples, 0.37%)</title><rect x="1056.9" y="565" width="4.4" height="15.0" fill="rgb(219,112,23)" rx="2" ry="2" />
<text  x="1059.93" y="575.5" ></text>
</g>
<g >
<title>llvm::InstructionCombiningPass::runOnFunction (1 samples, 0.04%)</title><rect x="1027.0" y="645" width="0.4" height="15.0" fill="rgb(248,211,34)" rx="2" ry="2" />
<text  x="1029.97" y="655.5" ></text>
</g>
<g >
<title>TBufferFile::ReadObjectAny (1 samples, 0.04%)</title><rect x="905.4" y="709" width="0.4" height="15.0" fill="rgb(250,13,45)" rx="2" ry="2" />
<text  x="908.35" y="719.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.04%)</title><rect x="1103.6" y="789" width="0.5" height="15.0" fill="rgb(227,42,18)" rx="2" ry="2" />
<text  x="1106.64" y="799.5" ></text>
</g>
<g >
<title>llvm::SelectionDAG::getIntPtrConstant (2 samples, 0.07%)</title><rect x="1153.4" y="901" width="0.9" height="15.0" fill="rgb(229,142,39)" rx="2" ry="2" />
<text  x="1156.43" y="911.5" ></text>
</g>
<g >
<title>llvm::orc::lookupWithLegacyFn&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}::operator()(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;) const::{lambda(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)#1}&gt; (10 samples, 0.37%)</title><rect x="1159.6" y="869" width="4.4" height="15.0" fill="rgb(237,79,50)" rx="2" ry="2" />
<text  x="1162.60" y="879.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.04%)</title><rect x="1149.9" y="693" width="0.4" height="15.0" fill="rgb(234,73,40)" rx="2" ry="2" />
<text  x="1152.90" y="703.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::visitICmpInst (1 samples, 0.04%)</title><rect x="893.5" y="645" width="0.4" height="15.0" fill="rgb(249,19,47)" rx="2" ry="2" />
<text  x="896.46" y="655.5" ></text>
</g>
<g >
<title>[bash] (15 samples, 0.56%)</title><rect x="12.6" y="421" width="6.7" height="15.0" fill="rgb(251,70,42)" rx="2" ry="2" />
<text  x="15.64" y="431.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldELF::processRelocationRef (1 samples, 0.04%)</title><rect x="868.3" y="581" width="0.5" height="15.0" fill="rgb(215,33,9)" rx="2" ry="2" />
<text  x="871.34" y="591.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="21.5" y="469" width="0.4" height="15.0" fill="rgb(227,13,41)" rx="2" ry="2" />
<text  x="24.46" y="479.5" ></text>
</g>
<g >
<title>THashTable::Add (1 samples, 0.04%)</title><rect x="786.4" y="789" width="0.4" height="15.0" fill="rgb(242,177,37)" rx="2" ry="2" />
<text  x="789.39" y="799.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1020.4" y="853" width="0.4" height="15.0" fill="rgb(251,133,32)" rx="2" ry="2" />
<text  x="1023.36" y="863.5" ></text>
</g>
<g >
<title>llvm::AttributeList::addAttribute (1 samples, 0.04%)</title><rect x="1114.2" y="821" width="0.5" height="15.0" fill="rgb(230,75,6)" rx="2" ry="2" />
<text  x="1117.21" y="831.5" ></text>
</g>
<g >
<title>clang::Sema::BuildDeclarationNameExpr (1 samples, 0.04%)</title><rect x="1130.1" y="725" width="0.4" height="15.0" fill="rgb(213,157,10)" rx="2" ry="2" />
<text  x="1133.07" y="735.5" ></text>
</g>
<g >
<title>dl_main (1 samples, 0.04%)</title><rect x="10.0" y="917" width="0.4" height="15.0" fill="rgb(244,186,19)" rx="2" ry="2" />
<text  x="13.00" y="927.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (2 samples, 0.07%)</title><rect x="684.6" y="645" width="0.9" height="15.0" fill="rgb(211,164,40)" rx="2" ry="2" />
<text  x="687.60" y="655.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (1 samples, 0.04%)</title><rect x="334.7" y="933" width="0.5" height="15.0" fill="rgb(211,57,5)" rx="2" ry="2" />
<text  x="337.74" y="943.5" ></text>
</g>
<g >
<title>TTreeReader::SetEntryBase (106 samples, 3.96%)</title><rect x="713.7" y="901" width="46.7" height="15.0" fill="rgb(210,119,27)" rx="2" ry="2" />
<text  x="716.68" y="911.5" >TTre..</text>
</g>
<g >
<title>llvm::AttributeSet::removeAttribute (1 samples, 0.04%)</title><rect x="1110.2" y="549" width="0.5" height="15.0" fill="rgb(247,76,18)" rx="2" ry="2" />
<text  x="1113.25" y="559.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateArgument (1 samples, 0.04%)</title><rect x="1141.5" y="933" width="0.5" height="15.0" fill="rgb(254,137,7)" rx="2" ry="2" />
<text  x="1144.53" y="943.5" ></text>
</g>
<g >
<title>llvm::AttrBuilder::addAttribute (1 samples, 0.04%)</title><rect x="1112.4" y="725" width="0.5" height="15.0" fill="rgb(218,96,24)" rx="2" ry="2" />
<text  x="1115.45" y="735.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::computeSectionStubBufSize (23 samples, 0.86%)</title><rect x="868.8" y="565" width="10.1" height="15.0" fill="rgb(213,218,45)" rx="2" ry="2" />
<text  x="871.78" y="575.5" ></text>
</g>
<g >
<title>llvm::TargetPassConfig::addPass (1 samples, 0.04%)</title><rect x="830.4" y="581" width="0.5" height="15.0" fill="rgb(245,155,41)" rx="2" ry="2" />
<text  x="833.45" y="591.5" ></text>
</g>
<g >
<title>clang::LinkageComputer::getLVForClassMember (1 samples, 0.04%)</title><rect x="1105.4" y="581" width="0.4" height="15.0" fill="rgb(248,182,26)" rx="2" ry="2" />
<text  x="1108.40" y="591.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitScalarExpr (1 samples, 0.04%)</title><rect x="1107.2" y="869" width="0.4" height="15.0" fill="rgb(206,160,39)" rx="2" ry="2" />
<text  x="1110.16" y="879.5" ></text>
</g>
<g >
<title>__GI_exit (2 samples, 0.07%)</title><rect x="1027.8" y="917" width="0.9" height="15.0" fill="rgb(247,28,54)" rx="2" ry="2" />
<text  x="1030.85" y="927.5" ></text>
</g>
<g >
<title>cling::MetaProcessor::process (2 samples, 0.07%)</title><rect x="684.6" y="949" width="0.9" height="15.0" fill="rgb(246,179,26)" rx="2" ry="2" />
<text  x="687.60" y="959.5" ></text>
</g>
<g >
<title>llvm::dyn_cast&lt;llvm::ConstantExpr, llvm::Value&gt; (1 samples, 0.04%)</title><rect x="1027.0" y="565" width="0.4" height="15.0" fill="rgb(211,56,35)" rx="2" ry="2" />
<text  x="1029.97" y="575.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertType (1 samples, 0.04%)</title><rect x="1117.7" y="757" width="0.5" height="15.0" fill="rgb(228,123,7)" rx="2" ry="2" />
<text  x="1120.74" y="767.5" ></text>
</g>
<g >
<title>clang::DiagnosticsEngine::DiagStateMap::lookup (1 samples, 0.04%)</title><rect x="908.9" y="645" width="0.4" height="15.0" fill="rgb(248,155,28)" rx="2" ry="2" />
<text  x="911.88" y="655.5" ></text>
</g>
<g >
<title>llvm::PMTopLevelManager::findAnalysisPass (10 samples, 0.37%)</title><rect x="1056.9" y="581" width="4.4" height="15.0" fill="rgb(220,204,36)" rx="2" ry="2" />
<text  x="1059.93" y="591.5" ></text>
</g>
<g >
<title>clang::Sema::SubstParmVarDecl (1 samples, 0.04%)</title><rect x="1129.2" y="789" width="0.4" height="15.0" fill="rgb(254,42,22)" rx="2" ry="2" />
<text  x="1132.19" y="799.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1171.9" y="869" width="0.5" height="15.0" fill="rgb(237,195,35)" rx="2" ry="2" />
<text  x="1174.93" y="879.5" ></text>
</g>
<g >
<title>MarkExprReferenced (1 samples, 0.04%)</title><rect x="1128.3" y="933" width="0.5" height="15.0" fill="rgb(244,149,42)" rx="2" ry="2" />
<text  x="1131.31" y="943.5" ></text>
</g>
<g >
<title>llvm::orc::SimpleCompiler::operator() (1 samples, 0.04%)</title><rect x="904.0" y="661" width="0.5" height="15.0" fill="rgb(240,226,44)" rx="2" ry="2" />
<text  x="907.03" y="671.5" ></text>
</g>
<g >
<title>clang::ASTContext::getTypeInfo (1 samples, 0.04%)</title><rect x="1116.4" y="789" width="0.5" height="15.0" fill="rgb(237,87,27)" rx="2" ry="2" />
<text  x="1119.42" y="799.5" ></text>
</g>
<g >
<title>llvm::Value::deleteValue (1 samples, 0.04%)</title><rect x="689.9" y="677" width="0.4" height="15.0" fill="rgb(234,37,46)" rx="2" ry="2" />
<text  x="692.89" y="687.5" ></text>
</g>
<g >
<title>bitTrackingDCE (1 samples, 0.04%)</title><rect x="691.2" y="773" width="0.5" height="15.0" fill="rgb(248,110,0)" rx="2" ry="2" />
<text  x="694.21" y="783.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1098.3" y="837" width="0.5" height="15.0" fill="rgb(239,55,30)" rx="2" ry="2" />
<text  x="1101.35" y="847.5" ></text>
</g>
<g >
<title>LookupDirect (1 samples, 0.04%)</title><rect x="1129.6" y="709" width="0.5" height="15.0" fill="rgb(252,68,11)" rx="2" ry="2" />
<text  x="1132.63" y="719.5" ></text>
</g>
<g >
<title>clang::Type::getAs&lt;clang::ObjCObjectPointerType&gt; (1 samples, 0.04%)</title><rect x="1125.7" y="933" width="0.4" height="15.0" fill="rgb(232,27,35)" rx="2" ry="2" />
<text  x="1128.67" y="943.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass (1 samples, 0.04%)</title><rect x="1130.5" y="677" width="0.5" height="15.0" fill="rgb(221,135,6)" rx="2" ry="2" />
<text  x="1133.52" y="687.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTSIInObjectScope (1 samples, 0.04%)</title><rect x="1123.0" y="773" width="0.5" height="15.0" fill="rgb(213,178,39)" rx="2" ry="2" />
<text  x="1126.02" y="783.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::GetAddrOfFunction (1 samples, 0.04%)</title><rect x="1101.0" y="789" width="0.4" height="15.0" fill="rgb(238,105,10)" rx="2" ry="2" />
<text  x="1103.99" y="799.5" ></text>
</g>
<g >
<title>execute_command_internal (4 samples, 0.15%)</title><rect x="22.3" y="837" width="1.8" height="15.0" fill="rgb(234,35,51)" rx="2" ry="2" />
<text  x="25.34" y="847.5" ></text>
</g>
<g >
<title>clang::Sema::BuildBaseInitializer (2 samples, 0.07%)</title><rect x="1119.5" y="965" width="0.9" height="15.0" fill="rgb(240,49,24)" rx="2" ry="2" />
<text  x="1122.50" y="975.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl (1 samples, 0.04%)</title><rect x="1131.8" y="693" width="0.5" height="15.0" fill="rgb(230,206,53)" rx="2" ry="2" />
<text  x="1134.84" y="703.5" ></text>
</g>
<g >
<title>processCallSite (1 samples, 0.04%)</title><rect x="897.0" y="677" width="0.4" height="15.0" fill="rgb(222,20,27)" rx="2" ry="2" />
<text  x="899.98" y="687.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGBuilder::visit (2 samples, 0.07%)</title><rect x="1148.6" y="581" width="0.9" height="15.0" fill="rgb(206,7,5)" rx="2" ry="2" />
<text  x="1151.58" y="591.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="992.2" y="885" width="0.4" height="15.0" fill="rgb(206,109,50)" rx="2" ry="2" />
<text  x="995.16" y="895.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke (2 samples, 0.07%)</title><rect x="1144.2" y="949" width="0.9" height="15.0" fill="rgb(230,217,12)" rx="2" ry="2" />
<text  x="1147.17" y="959.5" ></text>
</g>
<g >
<title>llvm::legacy::FunctionPassManagerImpl::run (3 samples, 0.11%)</title><rect x="689.0" y="773" width="1.3" height="15.0" fill="rgb(227,130,50)" rx="2" ry="2" />
<text  x="692.01" y="783.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;llvm::make_const_ptr, (anonymous namespace)::IntExprEvaluator, bool&gt;::Visit (1 samples, 0.04%)</title><rect x="1138.9" y="709" width="0.4" height="15.0" fill="rgb(247,20,16)" rx="2" ry="2" />
<text  x="1141.89" y="719.5" ></text>
</g>
<g >
<title>set_signal_handler (1 samples, 0.04%)</title><rect x="21.9" y="181" width="0.4" height="15.0" fill="rgb(223,212,5)" rx="2" ry="2" />
<text  x="24.90" y="191.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformNestedNameSpecifierLoc (1 samples, 0.04%)</title><rect x="1123.0" y="789" width="0.5" height="15.0" fill="rgb(224,3,36)" rx="2" ry="2" />
<text  x="1126.02" y="799.5" ></text>
</g>
<g >
<title>llvm::Value::deleteValue (1 samples, 0.04%)</title><rect x="1050.3" y="517" width="0.5" height="15.0" fill="rgb(254,60,27)" rx="2" ry="2" />
<text  x="1053.32" y="527.5" ></text>
</g>
<g >
<title>llvm::Module::getNamedValue (1 samples, 0.04%)</title><rect x="1149.9" y="581" width="0.4" height="15.0" fill="rgb(244,50,17)" rx="2" ry="2" />
<text  x="1152.90" y="591.5" ></text>
</g>
<g >
<title>std::__find_if&lt;void const* const*, __gnu_cxx::__ops::_Iter_equals_val&lt;void const* const&gt; &gt; (1 samples, 0.04%)</title><rect x="703.5" y="741" width="0.5" height="15.0" fill="rgb(244,38,5)" rx="2" ry="2" />
<text  x="706.55" y="751.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyld::finalizeWithMemoryManagerLocking (2 samples, 0.07%)</title><rect x="1144.2" y="917" width="0.9" height="15.0" fill="rgb(243,12,7)" rx="2" ry="2" />
<text  x="1147.17" y="927.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization (2 samples, 0.07%)</title><rect x="1128.8" y="885" width="0.8" height="15.0" fill="rgb(246,79,38)" rx="2" ry="2" />
<text  x="1131.75" y="895.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitFunctionTemplateDecl (1 samples, 0.04%)</title><rect x="904.5" y="757" width="0.4" height="15.0" fill="rgb(215,189,49)" rx="2" ry="2" />
<text  x="907.47" y="767.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteDeclContext (2 samples, 0.07%)</title><rect x="1139.8" y="933" width="0.8" height="15.0" fill="rgb(250,77,52)" rx="2" ry="2" />
<text  x="1142.77" y="943.5" ></text>
</g>
<g >
<title>clang::Sema::BuildCallExpr (1 samples, 0.04%)</title><rect x="1121.3" y="965" width="0.4" height="15.0" fill="rgb(231,149,18)" rx="2" ry="2" />
<text  x="1124.26" y="975.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitAutoVarDecl (2 samples, 0.07%)</title><rect x="1107.6" y="821" width="0.9" height="15.0" fill="rgb(241,184,28)" rx="2" ry="2" />
<text  x="1110.60" y="831.5" ></text>
</g>
<g >
<title>_dl_open (2 samples, 0.07%)</title><rect x="1093.9" y="821" width="0.9" height="15.0" fill="rgb(242,37,37)" rx="2" ry="2" />
<text  x="1096.94" y="831.5" ></text>
</g>
<g >
<title>clang::Sema::CheckBaseSpecifier (1 samples, 0.04%)</title><rect x="1128.8" y="741" width="0.4" height="15.0" fill="rgb(212,98,34)" rx="2" ry="2" />
<text  x="1131.75" y="751.5" ></text>
</g>
<g >
<title>__GI__dl_catch_error (2 samples, 0.07%)</title><rect x="1093.9" y="869" width="0.9" height="15.0" fill="rgb(236,138,13)" rx="2" ry="2" />
<text  x="1096.94" y="879.5" ></text>
</g>
<g >
<title>clang::Sema::FinishTemplateArgumentDeduction (1 samples, 0.04%)</title><rect x="1136.2" y="917" width="0.5" height="15.0" fill="rgb(208,181,24)" rx="2" ry="2" />
<text  x="1139.24" y="927.5" ></text>
</g>
<g >
<title>execute_command (26 samples, 0.97%)</title><rect x="10.4" y="901" width="11.5" height="15.0" fill="rgb(245,74,14)" rx="2" ry="2" />
<text  x="13.44" y="911.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::computeTotalAllocSize (1 samples, 0.04%)</title><rect x="707.5" y="757" width="0.5" height="15.0" fill="rgb(211,207,9)" rx="2" ry="2" />
<text  x="710.51" y="767.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1169.3" y="757" width="0.4" height="15.0" fill="rgb(206,171,4)" rx="2" ry="2" />
<text  x="1172.29" y="767.5" ></text>
</g>
<g >
<title>cling::MetaSema::actOnxCommand (12 samples, 0.45%)</title><rect x="905.8" y="885" width="5.3" height="15.0" fill="rgb(214,64,39)" rx="2" ry="2" />
<text  x="908.80" y="895.5" ></text>
</g>
<g >
<title>clang::LinkageComputer::getLVForDecl (1 samples, 0.04%)</title><rect x="1105.8" y="645" width="0.5" height="15.0" fill="rgb(226,172,1)" rx="2" ry="2" />
<text  x="1108.84" y="655.5" ></text>
</g>
<g >
<title>TROOT::RegisterModule (1 samples, 0.04%)</title><rect x="904.9" y="677" width="0.5" height="15.0" fill="rgb(244,211,49)" rx="2" ry="2" />
<text  x="907.91" y="687.5" ></text>
</g>
<g >
<title>llvm::Use::getImpliedUser (1 samples, 0.04%)</title><rect x="1145.5" y="837" width="0.4" height="15.0" fill="rgb(213,102,48)" rx="2" ry="2" />
<text  x="1148.50" y="847.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTemplateIdType (1 samples, 0.04%)</title><rect x="1123.0" y="741" width="0.5" height="15.0" fill="rgb(208,117,5)" rx="2" ry="2" />
<text  x="1126.02" y="751.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertType (1 samples, 0.04%)</title><rect x="1117.7" y="693" width="0.5" height="15.0" fill="rgb(216,38,41)" rx="2" ry="2" />
<text  x="1120.74" y="703.5" ></text>
</g>
<g >
<title>R__unzip (446 samples, 16.65%)</title><rect x="447.5" y="885" width="196.6" height="15.0" fill="rgb(238,49,7)" rx="2" ry="2" />
<text  x="450.54" y="895.5" >R__unzip</text>
</g>
<g >
<title>DeduceTemplateArguments (1 samples, 0.04%)</title><rect x="1142.4" y="773" width="0.5" height="15.0" fill="rgb(227,136,50)" rx="2" ry="2" />
<text  x="1145.41" y="783.5" ></text>
</g>
<g >
<title>cling::MetaSema::actOnLCommand (85 samples, 3.17%)</title><rect x="1028.7" y="773" width="37.5" height="15.0" fill="rgb(220,134,9)" rx="2" ry="2" />
<text  x="1031.73" y="783.5" >cli..</text>
</g>
<g >
<title>execute_command (5 samples, 0.19%)</title><rect x="10.4" y="725" width="2.2" height="15.0" fill="rgb(220,77,41)" rx="2" ry="2" />
<text  x="13.44" y="735.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::run (1 samples, 0.04%)</title><rect x="1035.3" y="597" width="0.5" height="15.0" fill="rgb(248,125,26)" rx="2" ry="2" />
<text  x="1038.34" y="607.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1176.3" y="757" width="0.5" height="15.0" fill="rgb(218,109,30)" rx="2" ry="2" />
<text  x="1179.34" y="767.5" ></text>
</g>
<g >
<title>llvm::BasicBlock::getSinglePredecessor (1 samples, 0.04%)</title><rect x="691.7" y="741" width="0.4" height="15.0" fill="rgb(243,16,5)" rx="2" ry="2" />
<text  x="694.65" y="751.5" ></text>
</g>
<g >
<title>llvm::PatternMatch::BinaryOp_match&lt;llvm::PatternMatch::bind_ty&lt;llvm::Value&gt;, llvm::PatternMatch::apint_match, 13u, false&gt;::match&lt;llvm::Value&gt; (1 samples, 0.04%)</title><rect x="1027.0" y="581" width="0.4" height="15.0" fill="rgb(219,90,0)" rx="2" ry="2" />
<text  x="1029.97" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (1 samples, 0.04%)</title><rect x="1133.2" y="789" width="0.4" height="15.0" fill="rgb(217,124,11)" rx="2" ry="2" />
<text  x="1136.16" y="799.5" ></text>
</g>
<g >
<title>TStreamerInfo::ReadBuffer&lt;char**&gt; (1 samples, 0.04%)</title><rect x="905.4" y="757" width="0.4" height="15.0" fill="rgb(253,12,36)" rx="2" ry="2" />
<text  x="908.35" y="767.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::CodeGenAndEmitDAG (2 samples, 0.07%)</title><rect x="684.6" y="581" width="0.9" height="15.0" fill="rgb(250,119,11)" rx="2" ry="2" />
<text  x="687.60" y="591.5" ></text>
</g>
<g >
<title>TLeaf::GetFullName (1 samples, 0.04%)</title><rect x="785.9" y="837" width="0.5" height="15.0" fill="rgb(249,62,53)" rx="2" ry="2" />
<text  x="788.94" y="847.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddType (1 samples, 0.04%)</title><rect x="1140.2" y="565" width="0.4" height="15.0" fill="rgb(220,156,37)" rx="2" ry="2" />
<text  x="1143.21" y="575.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.04%)</title><rect x="1122.1" y="789" width="0.5" height="15.0" fill="rgb(217,73,42)" rx="2" ry="2" />
<text  x="1125.14" y="799.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="21.9" y="853" width="0.4" height="15.0" fill="rgb(241,179,9)" rx="2" ry="2" />
<text  x="24.90" y="863.5" ></text>
</g>
<g >
<title>llvm::Attribute::get (1 samples, 0.04%)</title><rect x="1111.6" y="597" width="0.4" height="15.0" fill="rgb(219,165,8)" rx="2" ry="2" />
<text  x="1114.57" y="607.5" ></text>
</g>
<g >
<title>__GI__IO_getline_info (2 samples, 0.07%)</title><rect x="1075.0" y="821" width="0.9" height="15.0" fill="rgb(216,145,2)" rx="2" ry="2" />
<text  x="1078.00" y="831.5" ></text>
</g>
<g >
<title>llvm::BasicAAResult::getModRefInfo (1 samples, 0.04%)</title><rect x="1150.3" y="645" width="0.5" height="15.0" fill="rgb(212,194,46)" rx="2" ry="2" />
<text  x="1153.34" y="655.5" ></text>
</g>
<g >
<title>TryReferenceInit (1 samples, 0.04%)</title><rect x="1126.5" y="901" width="0.5" height="15.0" fill="rgb(253,1,44)" rx="2" ry="2" />
<text  x="1129.55" y="911.5" ></text>
</g>
<g >
<title>clang::Sema::DefineImplicitMoveConstructor (1 samples, 0.04%)</title><rect x="1097.5" y="869" width="0.4" height="15.0" fill="rgb(218,93,52)" rx="2" ry="2" />
<text  x="1100.47" y="879.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (2 samples, 0.07%)</title><rect x="1142.0" y="869" width="0.9" height="15.0" fill="rgb(252,32,31)" rx="2" ry="2" />
<text  x="1144.97" y="879.5" ></text>
</g>
<g >
<title>?? (108 samples, 4.03%)</title><rect x="713.2" y="933" width="47.6" height="15.0" fill="rgb(211,116,39)" rx="2" ry="2" />
<text  x="716.24" y="943.5" >??</text>
</g>
<g >
<title>llvm::MachineFunctionPass::runOnFunction (1 samples, 0.04%)</title><rect x="1152.1" y="821" width="0.4" height="15.0" fill="rgb(235,118,13)" rx="2" ry="2" />
<text  x="1155.11" y="831.5" ></text>
</g>
<g >
<title>clang::Parser::TryAnnotateTypeOrScopeTokenAfterScopeSpec (1 samples, 0.04%)</title><rect x="1118.2" y="885" width="0.4" height="15.0" fill="rgb(219,80,42)" rx="2" ry="2" />
<text  x="1121.18" y="895.5" ></text>
</g>
<g >
<title>llvm::BlockFrequencyInfoWrapperPass::runOnFunction (1 samples, 0.04%)</title><rect x="1034.0" y="629" width="0.5" height="15.0" fill="rgb(230,169,3)" rx="2" ry="2" />
<text  x="1037.02" y="639.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertTypeForMem (1 samples, 0.04%)</title><rect x="1117.7" y="933" width="0.5" height="15.0" fill="rgb(205,100,38)" rx="2" ry="2" />
<text  x="1120.74" y="943.5" ></text>
</g>
<g >
<title>clang::ASTReader::readTypeRecord (1 samples, 0.04%)</title><rect x="1140.6" y="725" width="0.5" height="15.0" fill="rgb(250,163,18)" rx="2" ry="2" />
<text  x="1143.65" y="735.5" ></text>
</g>
<g >
<title>clang::TemplateDeclInstantiator::VisitTypeAliasDecl (1 samples, 0.04%)</title><rect x="1131.4" y="949" width="0.4" height="15.0" fill="rgb(224,60,23)" rx="2" ry="2" />
<text  x="1134.40" y="959.5" ></text>
</g>
<g >
<title>SubstDefaultTemplateArgument (1 samples, 0.04%)</title><rect x="1123.9" y="933" width="0.4" height="15.0" fill="rgb(246,24,48)" rx="2" ry="2" />
<text  x="1126.91" y="943.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock const*, llvm::MachineBasicBlock*, llvm::DenseMapInfo&lt;llvm::BasicBlock const*&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock const*, llvm::MachineBasicBlock*&gt; &gt;, llvm::BasicBlock const*, llvm::MachineBasicBlock*, llvm::DenseMapInfo&lt;llvm::BasicBlock const*&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock const*, llvm::MachineBasicBlock*&gt; &gt;::LookupBucketFor&lt;llvm::BasicBlock const*&gt; (1 samples, 0.04%)</title><rect x="844.5" y="533" width="0.5" height="15.0" fill="rgb(239,140,37)" rx="2" ry="2" />
<text  x="847.55" y="543.5" ></text>
</g>
<g >
<title>[unknown] (18 samples, 0.67%)</title><rect x="1179.9" y="789" width="7.9" height="15.0" fill="rgb(228,37,32)" rx="2" ry="2" />
<text  x="1182.87" y="799.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertRecordDeclType (1 samples, 0.04%)</title><rect x="1117.3" y="917" width="0.4" height="15.0" fill="rgb(216,178,19)" rx="2" ry="2" />
<text  x="1120.30" y="927.5" ></text>
</g>
<g >
<title>cling::Interpreter::Interpreter (12 samples, 0.45%)</title><rect x="1066.2" y="837" width="5.3" height="15.0" fill="rgb(249,161,34)" rx="2" ry="2" />
<text  x="1069.18" y="847.5" ></text>
</g>
<g >
<title>clang::Parser::ParseCastExpression (1 samples, 0.04%)</title><rect x="1118.2" y="965" width="0.4" height="15.0" fill="rgb(231,152,15)" rx="2" ry="2" />
<text  x="1121.18" y="975.5" ></text>
</g>
<g >
<title>execute_command_internal (5 samples, 0.19%)</title><rect x="10.4" y="629" width="2.2" height="15.0" fill="rgb(249,76,0)" rx="2" ry="2" />
<text  x="13.44" y="639.5" ></text>
</g>
<g >
<title>clang::Sema::BuildDeclRefExpr (1 samples, 0.04%)</title><rect x="1141.1" y="741" width="0.4" height="15.0" fill="rgb(218,14,1)" rx="2" ry="2" />
<text  x="1144.09" y="751.5" ></text>
</g>
<g >
<title>TSystem::Load (1 samples, 0.04%)</title><rect x="1149.5" y="533" width="0.4" height="15.0" fill="rgb(232,76,23)" rx="2" ry="2" />
<text  x="1152.46" y="543.5" ></text>
</g>
<g >
<title>cling::MetaParser::isXCommand (160 samples, 5.97%)</title><rect x="830.0" y="869" width="70.5" height="15.0" fill="rgb(223,2,47)" rx="2" ry="2" />
<text  x="833.01" y="879.5" >cling::..</text>
</g>
<g >
<title>llvm::Value::assertModuleIsMaterializedImpl (1 samples, 0.04%)</title><rect x="689.9" y="645" width="0.4" height="15.0" fill="rgb(215,142,11)" rx="2" ry="2" />
<text  x="692.89" y="655.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="21.9" y="661" width="0.4" height="15.0" fill="rgb(253,65,0)" rx="2" ry="2" />
<text  x="24.90" y="671.5" ></text>
</g>
<g >
<title>__reclaim_stacks (4 samples, 0.15%)</title><rect x="1085.6" y="789" width="1.7" height="15.0" fill="rgb(222,137,12)" rx="2" ry="2" />
<text  x="1088.57" y="799.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1176.8" y="741" width="0.4" height="15.0" fill="rgb(207,183,53)" rx="2" ry="2" />
<text  x="1179.78" y="751.5" ></text>
</g>
<g >
<title>llvm::Pass::getPassName (1 samples, 0.04%)</title><rect x="1044.6" y="629" width="0.4" height="15.0" fill="rgb(243,14,7)" rx="2" ry="2" />
<text  x="1047.59" y="639.5" ></text>
</g>
<g >
<title>llvm::Expected&lt;unsigned long&gt;::~Expected (1 samples, 0.04%)</title><rect x="1132.7" y="421" width="0.5" height="15.0" fill="rgb(218,209,14)" rx="2" ry="2" />
<text  x="1135.72" y="431.5" ></text>
</g>
<g >
<title>clang::Sema::BuildDeclRefExpr (1 samples, 0.04%)</title><rect x="1121.3" y="901" width="0.4" height="15.0" fill="rgb(218,191,43)" rx="2" ry="2" />
<text  x="1124.26" y="911.5" ></text>
</g>
<g >
<title>llvm::SparseSolver&lt;llvm::PointerIntPair&lt;llvm::Value*, 2u, (anonymous namespace)::IPOGrouping, llvm::PointerLikeTypeTraits&lt;llvm::Value*&gt;, llvm::PointerIntPairInfo&lt;llvm::Value*, 2u, llvm::PointerLikeTypeTraits&lt;llvm::Value*&gt; &gt; &gt;, (anonymous namespace)::CVPLatticeVal, llvm::LatticeKeyInfo&lt;llvm::PointerIntPair&lt;llvm::Value*, 2u, (anonymous namespace)::IPOGrouping, llvm::PointerLikeTypeTraits&lt;llvm::Value*&gt;, llvm::PointerIntPairInfo&lt;llvm::Value*, 2u, llvm::PointerLikeTypeTraits&lt;llvm::Value*&gt; &gt; &gt; &gt; &gt;::visitInst (1 samples, 0.04%)</title><rect x="903.2" y="661" width="0.4" height="15.0" fill="rgb(212,117,15)" rx="2" ry="2" />
<text  x="906.15" y="671.5" ></text>
</g>
<g >
<title>[bash] (4 samples, 0.15%)</title><rect x="22.3" y="229" width="1.8" height="15.0" fill="rgb(243,96,19)" rx="2" ry="2" />
<text  x="25.34" y="239.5" ></text>
</g>
<g >
<title>execute_command (4 samples, 0.15%)</title><rect x="22.3" y="901" width="1.8" height="15.0" fill="rgb(252,200,7)" rx="2" ry="2" />
<text  x="25.34" y="911.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentNameType (1 samples, 0.04%)</title><rect x="1132.3" y="757" width="0.4" height="15.0" fill="rgb(219,202,0)" rx="2" ry="2" />
<text  x="1135.28" y="767.5" ></text>
</g>
<g >
<title>clang::CXXRecordDecl::isDerivedFrom (1 samples, 0.04%)</title><rect x="1119.5" y="821" width="0.4" height="15.0" fill="rgb(242,179,24)" rx="2" ry="2" />
<text  x="1122.50" y="831.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalDefinition (1 samples, 0.04%)</title><rect x="1111.6" y="693" width="0.4" height="15.0" fill="rgb(230,86,17)" rx="2" ry="2" />
<text  x="1114.57" y="703.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCompoundStmtWithoutScope (1 samples, 0.04%)</title><rect x="1102.8" y="901" width="0.4" height="15.0" fill="rgb(219,217,49)" rx="2" ry="2" />
<text  x="1105.76" y="911.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::createNodeForGEP (1 samples, 0.04%)</title><rect x="1159.2" y="581" width="0.4" height="15.0" fill="rgb(226,21,29)" rx="2" ry="2" />
<text  x="1162.16" y="591.5" ></text>
</g>
<g >
<title>clang::Lexer::Lex (1 samples, 0.04%)</title><rect x="1071.0" y="677" width="0.5" height="15.0" fill="rgb(236,121,35)" rx="2" ry="2" />
<text  x="1074.03" y="687.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke (7 samples, 0.26%)</title><rect x="905.8" y="693" width="3.1" height="15.0" fill="rgb(246,176,34)" rx="2" ry="2" />
<text  x="908.80" y="703.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::executeWrapper (1 samples, 0.04%)</title><rect x="1150.8" y="917" width="0.4" height="15.0" fill="rgb(214,115,32)" rx="2" ry="2" />
<text  x="1153.78" y="927.5" ></text>
</g>
<g >
<title>llvm::AllocaInst::AllocaInst (1 samples, 0.04%)</title><rect x="1115.1" y="677" width="0.4" height="15.0" fill="rgb(234,84,2)" rx="2" ry="2" />
<text  x="1118.09" y="687.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::~ScalarEvolution (1 samples, 0.04%)</title><rect x="1038.4" y="581" width="0.5" height="15.0" fill="rgb(206,117,37)" rx="2" ry="2" />
<text  x="1041.42" y="591.5" ></text>
</g>
<g >
<title>llvm::zlib::uncompress (1 samples, 0.04%)</title><rect x="1137.6" y="565" width="0.4" height="15.0" fill="rgb(215,163,17)" rx="2" ry="2" />
<text  x="1140.57" y="575.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (12 samples, 0.45%)</title><rect x="1109.8" y="917" width="5.3" height="15.0" fill="rgb(245,28,42)" rx="2" ry="2" />
<text  x="1112.81" y="927.5" ></text>
</g>
<g >
<title>make_child (5 samples, 0.19%)</title><rect x="10.4" y="421" width="2.2" height="15.0" fill="rgb(211,134,42)" rx="2" ry="2" />
<text  x="13.44" y="431.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddDecl (1 samples, 0.04%)</title><rect x="1123.0" y="565" width="0.5" height="15.0" fill="rgb(240,146,30)" rx="2" ry="2" />
<text  x="1126.02" y="575.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitAggExpr (1 samples, 0.04%)</title><rect x="1101.0" y="933" width="0.4" height="15.0" fill="rgb(216,207,10)" rx="2" ry="2" />
<text  x="1103.99" y="943.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.04%)</title><rect x="831.3" y="501" width="0.5" height="15.0" fill="rgb(244,174,18)" rx="2" ry="2" />
<text  x="834.33" y="511.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (1 samples, 0.04%)</title><rect x="1027.8" y="725" width="0.5" height="15.0" fill="rgb(244,145,17)" rx="2" ry="2" />
<text  x="1030.85" y="735.5" ></text>
</g>
<g >
<title>llvm::orc::lookupWithLegacyFn&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}::operator()(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;) const::{lambda(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)#1}&gt; (136 samples, 5.08%)</title><rect x="830.0" y="677" width="59.9" height="15.0" fill="rgb(211,67,14)" rx="2" ry="2" />
<text  x="833.01" y="687.5" >llvm::..</text>
</g>
<g >
<title>cling::Interpreter::~Interpreter (2 samples, 0.07%)</title><rect x="1027.8" y="789" width="0.9" height="15.0" fill="rgb(208,114,12)" rx="2" ry="2" />
<text  x="1030.85" y="799.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::SelectCodeCommon (1 samples, 0.04%)</title><rect x="1154.7" y="901" width="0.5" height="15.0" fill="rgb(246,3,5)" rx="2" ry="2" />
<text  x="1157.75" y="911.5" ></text>
</g>
<g >
<title>llvm::generic_gep_type_iterator&lt;llvm::Use const*&gt;::operator++ (1 samples, 0.04%)</title><rect x="696.1" y="629" width="0.4" height="15.0" fill="rgb(205,144,10)" rx="2" ry="2" />
<text  x="699.06" y="639.5" ></text>
</g>
<g >
<title>isKnownNonZero (1 samples, 0.04%)</title><rect x="892.1" y="613" width="0.5" height="15.0" fill="rgb(223,29,0)" rx="2" ry="2" />
<text  x="895.14" y="623.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::SelectAllBasicBlocks (1 samples, 0.04%)</title><rect x="1154.3" y="965" width="0.4" height="15.0" fill="rgb(214,155,29)" rx="2" ry="2" />
<text  x="1157.31" y="975.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTemplateArgumentList (1 samples, 0.04%)</title><rect x="1123.5" y="965" width="0.4" height="15.0" fill="rgb(235,192,36)" rx="2" ry="2" />
<text  x="1126.47" y="975.5" ></text>
</g>
<g >
<title>cling::Interpreter::executeTransaction (1 samples, 0.04%)</title><rect x="1151.2" y="869" width="0.5" height="15.0" fill="rgb(217,52,31)" rx="2" ry="2" />
<text  x="1154.22" y="879.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="20.6" y="501" width="0.4" height="15.0" fill="rgb(207,85,51)" rx="2" ry="2" />
<text  x="23.58" y="511.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddType (1 samples, 0.04%)</title><rect x="1124.3" y="613" width="0.5" height="15.0" fill="rgb(218,123,5)" rx="2" ry="2" />
<text  x="1127.35" y="623.5" ></text>
</g>
<g >
<title>llvm::orc::lookupWithLegacyFn&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}::operator()(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;) const::{lambda(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)#1}&gt; (1 samples, 0.04%)</title><rect x="1152.1" y="917" width="0.4" height="15.0" fill="rgb(240,135,40)" rx="2" ry="2" />
<text  x="1155.11" y="927.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1074.6" y="725" width="0.4" height="15.0" fill="rgb(244,43,8)" rx="2" ry="2" />
<text  x="1077.56" y="735.5" ></text>
</g>
<g >
<title>_IO_new_popen (5 samples, 0.19%)</title><rect x="1095.3" y="885" width="2.2" height="15.0" fill="rgb(219,199,35)" rx="2" ry="2" />
<text  x="1098.27" y="895.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (2 samples, 0.07%)</title><rect x="1064.0" y="629" width="0.9" height="15.0" fill="rgb(227,143,8)" rx="2" ry="2" />
<text  x="1066.98" y="639.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitDecl (1 samples, 0.04%)</title><rect x="1115.1" y="805" width="0.4" height="15.0" fill="rgb(209,15,22)" rx="2" ry="2" />
<text  x="1118.09" y="815.5" ></text>
</g>
<g >
<title>clang::CodeGeneratorImpl::HandleTranslationUnit (1 samples, 0.04%)</title><rect x="909.3" y="773" width="0.5" height="15.0" fill="rgb(212,73,34)" rx="2" ry="2" />
<text  x="912.32" y="783.5" ></text>
</g>
<g >
<title>TSystem::Load (1 samples, 0.04%)</title><rect x="904.9" y="917" width="0.5" height="15.0" fill="rgb(205,7,35)" rx="2" ry="2" />
<text  x="907.91" y="927.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.04%)</title><rect x="889.5" y="565" width="0.4" height="15.0" fill="rgb(211,183,41)" rx="2" ry="2" />
<text  x="892.49" y="575.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1172.4" y="789" width="0.4" height="15.0" fill="rgb(241,142,32)" rx="2" ry="2" />
<text  x="1175.37" y="799.5" ></text>
</g>
<g >
<title>llvm::ProfileSummaryInfo::computeSummary (1 samples, 0.04%)</title><rect x="1035.8" y="613" width="0.4" height="15.0" fill="rgb(231,70,29)" rx="2" ry="2" />
<text  x="1038.78" y="623.5" ></text>
</g>
<g >
<title>llvm::FoldingSetBase::FindNodeOrInsertPos (1 samples, 0.04%)</title><rect x="1111.6" y="581" width="0.4" height="15.0" fill="rgb(234,199,40)" rx="2" ry="2" />
<text  x="1114.57" y="591.5" ></text>
</g>
<g >
<title>ROOT::Internal::TTreeReaderValueBase::GetAddress (192 samples, 7.17%)</title><rect x="347.1" y="901" width="84.6" height="15.0" fill="rgb(226,192,12)" rx="2" ry="2" />
<text  x="350.08" y="911.5" >ROOT::Int..</text>
</g>
<g >
<title>__run_fork_handlers (4 samples, 0.15%)</title><rect x="1085.6" y="805" width="1.7" height="15.0" fill="rgb(210,225,47)" rx="2" ry="2" />
<text  x="1088.57" y="815.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertType (1 samples, 0.04%)</title><rect x="1117.3" y="677" width="0.4" height="15.0" fill="rgb(235,159,2)" rx="2" ry="2" />
<text  x="1120.30" y="687.5" ></text>
</g>
<g >
<title>llvm::StringMapImpl::LookupBucketFor (1 samples, 0.04%)</title><rect x="866.1" y="565" width="0.5" height="15.0" fill="rgb(229,220,33)" rx="2" ry="2" />
<text  x="869.14" y="575.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1171.9" y="805" width="0.5" height="15.0" fill="rgb(221,119,16)" rx="2" ry="2" />
<text  x="1174.93" y="815.5" ></text>
</g>
<g >
<title>clang::TemplateArgumentList::ComputeODRHash (1 samples, 0.04%)</title><rect x="1103.2" y="405" width="0.4" height="15.0" fill="rgb(229,8,16)" rx="2" ry="2" />
<text  x="1106.20" y="415.5" ></text>
</g>
<g >
<title>TBranch::GetEntry (574 samples, 21.43%)</title><rect x="431.7" y="949" width="252.9" height="15.0" fill="rgb(235,170,41)" rx="2" ry="2" />
<text  x="434.68" y="959.5" >TBranch::GetEntry</text>
</g>
<g >
<title>computeKnownBits (1 samples, 0.04%)</title><rect x="889.9" y="613" width="0.5" height="15.0" fill="rgb(253,45,16)" rx="2" ry="2" />
<text  x="892.93" y="623.5" ></text>
</g>
<g >
<title>cling::DeclCollector::HandleTopLevelDecl (1 samples, 0.04%)</title><rect x="1133.2" y="901" width="0.4" height="15.0" fill="rgb(240,152,32)" rx="2" ry="2" />
<text  x="1136.16" y="911.5" ></text>
</g>
<g >
<title>__dlopen_check (1 samples, 0.04%)</title><rect x="1149.5" y="469" width="0.4" height="15.0" fill="rgb(225,229,9)" rx="2" ry="2" />
<text  x="1152.46" y="479.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTSIInObjectScope (1 samples, 0.04%)</title><rect x="1138.4" y="773" width="0.5" height="15.0" fill="rgb(220,14,4)" rx="2" ry="2" />
<text  x="1141.45" y="783.5" ></text>
</g>
<g >
<title>strcmp (1 samples, 0.04%)</title><rect x="1166.2" y="837" width="0.4" height="15.0" fill="rgb(227,147,53)" rx="2" ry="2" />
<text  x="1169.21" y="847.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteDeclContext (1 samples, 0.04%)</title><rect x="1123.0" y="949" width="0.5" height="15.0" fill="rgb(247,154,7)" rx="2" ry="2" />
<text  x="1126.02" y="959.5" ></text>
</g>
<g >
<title>clang::ASTRecordReader::readRecord (1 samples, 0.04%)</title><rect x="1142.9" y="597" width="0.4" height="15.0" fill="rgb(237,222,19)" rx="2" ry="2" />
<text  x="1145.85" y="607.5" ></text>
</g>
<g >
<title>llvm::DeleteContainerSeconds&lt;llvm::DenseMap&lt;clang::Type const*, clang::CodeGen::CGRecordLayout*, llvm::DenseMapInfo&lt;clang::Type const*&gt;, llvm::detail::DenseMapPair&lt;clang::Type const*, clang::CodeGen::CGRecordLayout*&gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="903.6" y="549" width="0.4" height="15.0" fill="rgb(211,117,4)" rx="2" ry="2" />
<text  x="906.59" y="559.5" ></text>
</g>
<g >
<title>cling::MetaParser::isCommand (7 samples, 0.26%)</title><rect x="900.5" y="853" width="3.1" height="15.0" fill="rgb(247,92,25)" rx="2" ry="2" />
<text  x="903.51" y="863.5" ></text>
</g>
<g >
<title>llvm::PopulateLoopsDFS&lt;llvm::BasicBlock, llvm::Loop&gt;::traverse (1 samples, 0.04%)</title><rect x="833.5" y="549" width="0.5" height="15.0" fill="rgb(254,66,30)" rx="2" ry="2" />
<text  x="836.53" y="559.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::StartFunction (1 samples, 0.04%)</title><rect x="1108.5" y="933" width="0.4" height="15.0" fill="rgb(226,169,39)" rx="2" ry="2" />
<text  x="1111.48" y="943.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::emitDestroy (1 samples, 0.04%)</title><rect x="1115.5" y="837" width="0.5" height="15.0" fill="rgb(227,122,21)" rx="2" ry="2" />
<text  x="1118.53" y="847.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::GetCPUAndFeaturesAttributes (1 samples, 0.04%)</title><rect x="1101.0" y="709" width="0.4" height="15.0" fill="rgb(211,52,35)" rx="2" ry="2" />
<text  x="1103.99" y="719.5" ></text>
</g>
<g >
<title>__GI___fork (7 samples, 0.26%)</title><rect x="1173.3" y="805" width="3.0" height="15.0" fill="rgb(217,202,18)" rx="2" ry="2" />
<text  x="1176.26" y="815.5" ></text>
</g>
<g >
<title>llvm::LazyValueInfo::getPredicateOnEdge (1 samples, 0.04%)</title><rect x="897.0" y="645" width="0.4" height="15.0" fill="rgb(239,216,35)" rx="2" ry="2" />
<text  x="899.98" y="655.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (1 samples, 0.04%)</title><rect x="1123.9" y="821" width="0.4" height="15.0" fill="rgb(221,115,20)" rx="2" ry="2" />
<text  x="1126.91" y="831.5" ></text>
</g>
<g >
<title>?? (219 samples, 8.18%)</title><rect x="335.2" y="949" width="96.5" height="15.0" fill="rgb(232,39,39)" rx="2" ry="2" />
<text  x="338.18" y="959.5" >??</text>
</g>
<g >
<title>llvm::AttributeList::addAttributes (1 samples, 0.04%)</title><rect x="1112.9" y="757" width="0.4" height="15.0" fill="rgb(254,92,13)" rx="2" ry="2" />
<text  x="1115.89" y="767.5" ></text>
</g>
<g >
<title>[bash] (4 samples, 0.15%)</title><rect x="22.3" y="389" width="1.8" height="15.0" fill="rgb(246,174,34)" rx="2" ry="2" />
<text  x="25.34" y="399.5" ></text>
</g>
<g >
<title>TBranch::GetBasketImpl (456 samples, 17.03%)</title><rect x="447.5" y="917" width="201.0" height="15.0" fill="rgb(243,184,53)" rx="2" ry="2" />
<text  x="450.54" y="927.5" >TBranch::GetBasketImpl</text>
</g>
<g >
<title>llvm::orc::JITSymbolResolverAdapter::lookup (1 samples, 0.04%)</title><rect x="1152.1" y="949" width="0.4" height="15.0" fill="rgb(243,162,23)" rx="2" ry="2" />
<text  x="1155.11" y="959.5" ></text>
</g>
<g >
<title>zread (4 samples, 0.15%)</title><rect x="17.5" y="325" width="1.8" height="15.0" fill="rgb(251,56,42)" rx="2" ry="2" />
<text  x="20.49" y="335.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1095.3" y="821" width="0.4" height="15.0" fill="rgb(233,5,36)" rx="2" ry="2" />
<text  x="1098.27" y="831.5" ></text>
</g>
<g >
<title>llvm::MCAssembler::Finish (1 samples, 0.04%)</title><rect x="699.1" y="741" width="0.5" height="15.0" fill="rgb(234,224,42)" rx="2" ry="2" />
<text  x="702.14" y="751.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="21.9" y="421" width="0.4" height="15.0" fill="rgb(213,6,1)" rx="2" ry="2" />
<text  x="24.90" y="431.5" ></text>
</g>
<g >
<title>llvm::LazyValueInfo::getConstant (1 samples, 0.04%)</title><rect x="895.7" y="677" width="0.4" height="15.0" fill="rgb(228,41,6)" rx="2" ry="2" />
<text  x="898.66" y="687.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::commitTransaction (1 samples, 0.04%)</title><rect x="903.6" y="645" width="0.4" height="15.0" fill="rgb(207,137,38)" rx="2" ry="2" />
<text  x="906.59" y="655.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (8 samples, 0.30%)</title><rect x="695.2" y="773" width="3.5" height="15.0" fill="rgb(218,102,46)" rx="2" ry="2" />
<text  x="698.18" y="783.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EnterDtorCleanups (1 samples, 0.04%)</title><rect x="1109.8" y="469" width="0.4" height="15.0" fill="rgb(221,92,26)" rx="2" ry="2" />
<text  x="1112.81" y="479.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;std::add_pointer, (anonymous namespace)::AggExprEmitter, void&gt;::Visit (1 samples, 0.04%)</title><rect x="1101.0" y="917" width="0.4" height="15.0" fill="rgb(218,169,18)" rx="2" ry="2" />
<text  x="1103.99" y="927.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateArgument (1 samples, 0.04%)</title><rect x="1143.3" y="725" width="0.4" height="15.0" fill="rgb(235,87,53)" rx="2" ry="2" />
<text  x="1146.29" y="735.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="12.6" y="325" width="0.5" height="15.0" fill="rgb(211,48,33)" rx="2" ry="2" />
<text  x="15.64" y="335.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke (1 samples, 0.04%)</title><rect x="1147.7" y="757" width="0.4" height="15.0" fill="rgb(237,201,36)" rx="2" ry="2" />
<text  x="1150.70" y="767.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="1128.3" y="469" width="0.5" height="15.0" fill="rgb(220,40,1)" rx="2" ry="2" />
<text  x="1131.31" y="479.5" ></text>
</g>
<g >
<title>clang::Decl::canBeWeakImported (1 samples, 0.04%)</title><rect x="1125.2" y="805" width="0.5" height="15.0" fill="rgb(206,140,11)" rx="2" ry="2" />
<text  x="1128.23" y="815.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.07%)</title><rect x="1175.5" y="709" width="0.8" height="15.0" fill="rgb(246,161,19)" rx="2" ry="2" />
<text  x="1178.46" y="719.5" ></text>
</g>
<g >
<title>__GI__dl_addr (1 samples, 0.04%)</title><rect x="1189.6" y="805" width="0.4" height="15.0" fill="rgb(212,164,23)" rx="2" ry="2" />
<text  x="1192.56" y="815.5" ></text>
</g>
<g >
<title>TClass::GetBaseClass (1 samples, 0.04%)</title><rect x="786.4" y="565" width="0.4" height="15.0" fill="rgb(229,94,11)" rx="2" ry="2" />
<text  x="789.39" y="575.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXConstructExpr (1 samples, 0.04%)</title><rect x="1106.7" y="757" width="0.5" height="15.0" fill="rgb(253,225,29)" rx="2" ry="2" />
<text  x="1109.72" y="767.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl (1 samples, 0.04%)</title><rect x="1155.2" y="629" width="0.4" height="15.0" fill="rgb(244,138,41)" rx="2" ry="2" />
<text  x="1158.19" y="639.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization (1 samples, 0.04%)</title><rect x="1137.1" y="709" width="0.5" height="15.0" fill="rgb(205,140,10)" rx="2" ry="2" />
<text  x="1140.12" y="719.5" ></text>
</g>
<g >
<title>?? (16 samples, 0.60%)</title><rect x="794.8" y="949" width="7.0" height="15.0" fill="rgb(238,5,29)" rx="2" ry="2" />
<text  x="797.76" y="959.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (10 samples, 0.37%)</title><rect x="1109.8" y="901" width="4.4" height="15.0" fill="rgb(241,13,9)" rx="2" ry="2" />
<text  x="1112.81" y="911.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::initializeAnalysisImpl (2 samples, 0.07%)</title><rect x="847.2" y="581" width="0.9" height="15.0" fill="rgb(236,215,12)" rx="2" ry="2" />
<text  x="850.19" y="591.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl (1 samples, 0.04%)</title><rect x="1099.2" y="725" width="0.5" height="15.0" fill="rgb(236,105,41)" rx="2" ry="2" />
<text  x="1102.23" y="735.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1135.8" y="789" width="0.4" height="15.0" fill="rgb(230,3,24)" rx="2" ry="2" />
<text  x="1138.80" y="799.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.07%)</title><rect x="1096.1" y="805" width="0.9" height="15.0" fill="rgb(253,175,10)" rx="2" ry="2" />
<text  x="1099.15" y="815.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnModule (2 samples, 0.07%)</title><rect x="1145.9" y="741" width="0.9" height="15.0" fill="rgb(212,205,52)" rx="2" ry="2" />
<text  x="1148.94" y="751.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="431.2" y="853" width="0.5" height="15.0" fill="rgb(211,120,5)" rx="2" ry="2" />
<text  x="434.24" y="863.5" ></text>
</g>
<g >
<title>clang::InitializationSequence::InitializeFrom (2 samples, 0.07%)</title><rect x="1119.5" y="949" width="0.9" height="15.0" fill="rgb(224,73,40)" rx="2" ry="2" />
<text  x="1122.50" y="959.5" ></text>
</g>
<g >
<title>clang::TemplateSpecializationType::Profile (1 samples, 0.04%)</title><rect x="1100.1" y="709" width="0.5" height="15.0" fill="rgb(217,155,12)" rx="2" ry="2" />
<text  x="1103.11" y="719.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::runOnMachineFunction (1 samples, 0.04%)</title><rect x="1158.7" y="869" width="0.5" height="15.0" fill="rgb(252,142,38)" rx="2" ry="2" />
<text  x="1161.72" y="879.5" ></text>
</g>
<g >
<title>execute_command (21 samples, 0.78%)</title><rect x="12.6" y="677" width="9.3" height="15.0" fill="rgb(251,164,8)" rx="2" ry="2" />
<text  x="15.64" y="687.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1096.6" y="773" width="0.4" height="15.0" fill="rgb(206,100,46)" rx="2" ry="2" />
<text  x="1099.59" y="783.5" ></text>
</g>
<g >
<title>llvm::FindFunctionBackedges (1 samples, 0.04%)</title><rect x="1063.1" y="581" width="0.4" height="15.0" fill="rgb(221,186,3)" rx="2" ry="2" />
<text  x="1066.10" y="591.5" ></text>
</g>
<g >
<title>llvm::AAResults::getModRefInfo (1 samples, 0.04%)</title><rect x="1150.3" y="677" width="0.5" height="15.0" fill="rgb(220,185,10)" rx="2" ry="2" />
<text  x="1153.34" y="687.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::executeWrapper (1 samples, 0.04%)</title><rect x="1146.8" y="949" width="0.5" height="15.0" fill="rgb(237,38,3)" rx="2" ry="2" />
<text  x="1149.82" y="959.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1171.9" y="837" width="0.5" height="15.0" fill="rgb(221,130,36)" rx="2" ry="2" />
<text  x="1174.93" y="847.5" ></text>
</g>
<g >
<title>clang::Sema::CreateBuiltinBinOp (1 samples, 0.04%)</title><rect x="1125.2" y="965" width="0.5" height="15.0" fill="rgb(224,120,12)" rx="2" ry="2" />
<text  x="1128.23" y="975.5" ></text>
</g>
<g >
<title>cling::Dyld::searchLibrariesForSymbol[abi:cxx11] (2 samples, 0.07%)</title><rect x="867.5" y="469" width="0.8" height="15.0" fill="rgb(205,7,18)" rx="2" ry="2" />
<text  x="870.46" y="479.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::SimplifyDemandedUseBits (1 samples, 0.04%)</title><rect x="893.5" y="597" width="0.4" height="15.0" fill="rgb(229,177,42)" rx="2" ry="2" />
<text  x="896.46" y="607.5" ></text>
</g>
<g >
<title>frombuf (4 samples, 0.15%)</title><rect x="425.5" y="805" width="1.8" height="15.0" fill="rgb(206,188,43)" rx="2" ry="2" />
<text  x="428.51" y="815.5" ></text>
</g>
<g >
<title>ROOT::Detail::RDF::RLoopManager::RunAndCheckFilters (49 samples, 1.83%)</title><rect x="760.8" y="933" width="21.6" height="15.0" fill="rgb(247,141,2)" rx="2" ry="2" />
<text  x="763.83" y="943.5" >R..</text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="21.9" y="549" width="0.4" height="15.0" fill="rgb(221,89,7)" rx="2" ry="2" />
<text  x="24.90" y="559.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitExprAsInit (2 samples, 0.07%)</title><rect x="1107.6" y="789" width="0.9" height="15.0" fill="rgb(248,7,42)" rx="2" ry="2" />
<text  x="1110.60" y="799.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::runOnMachineFunction (1 samples, 0.04%)</title><rect x="1151.7" y="933" width="0.4" height="15.0" fill="rgb(234,171,49)" rx="2" ry="2" />
<text  x="1154.67" y="943.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::CreateTempAlloca (1 samples, 0.04%)</title><rect x="1115.1" y="741" width="0.4" height="15.0" fill="rgb(216,217,10)" rx="2" ry="2" />
<text  x="1118.09" y="751.5" ></text>
</g>
<g >
<title>TClass::CreateListOfDataMembers (1 samples, 0.04%)</title><rect x="786.4" y="405" width="0.4" height="15.0" fill="rgb(237,86,19)" rx="2" ry="2" />
<text  x="789.39" y="415.5" ></text>
</g>
<g >
<title>clang::LinkageComputer::computeLVForDecl (1 samples, 0.04%)</title><rect x="1105.4" y="549" width="0.4" height="15.0" fill="rgb(220,207,49)" rx="2" ry="2" />
<text  x="1108.40" y="559.5" ></text>
</g>
<g >
<title>llvm::orc::JITSymbolResolverAdapter::lookup (1 samples, 0.04%)</title><rect x="1150.8" y="821" width="0.4" height="15.0" fill="rgb(247,90,40)" rx="2" ry="2" />
<text  x="1153.78" y="831.5" ></text>
</g>
<g >
<title>llvm::DAGTypeLegalizer::PromoteIntegerResult (1 samples, 0.04%)</title><rect x="1157.8" y="773" width="0.5" height="15.0" fill="rgb(207,139,27)" rx="2" ry="2" />
<text  x="1160.83" y="783.5" ></text>
</g>
<g >
<title>.annobin_rtld.c (6 samples, 0.22%)</title><rect x="1169.3" y="965" width="2.6" height="15.0" fill="rgb(247,193,41)" rx="2" ry="2" />
<text  x="1172.29" y="975.5" ></text>
</g>
<g >
<title>TClass::InheritsFrom (1 samples, 0.04%)</title><rect x="786.4" y="597" width="0.4" height="15.0" fill="rgb(236,24,43)" rx="2" ry="2" />
<text  x="789.39" y="607.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::CodeGenAndEmitDAG (2 samples, 0.07%)</title><rect x="1152.5" y="757" width="0.9" height="15.0" fill="rgb(231,161,25)" rx="2" ry="2" />
<text  x="1155.55" y="767.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::visitCallInst (2 samples, 0.07%)</title><rect x="892.6" y="645" width="0.9" height="15.0" fill="rgb(212,184,3)" rx="2" ry="2" />
<text  x="895.58" y="655.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (1 samples, 0.04%)</title><rect x="334.7" y="885" width="0.5" height="15.0" fill="rgb(205,207,52)" rx="2" ry="2" />
<text  x="337.74" y="895.5" ></text>
</g>
<g >
<title>clang::ASTReader::readTypeRecord (1 samples, 0.04%)</title><rect x="1140.6" y="757" width="0.5" height="15.0" fill="rgb(211,167,12)" rx="2" ry="2" />
<text  x="1143.65" y="767.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitDeclStmt (1 samples, 0.04%)</title><rect x="1115.1" y="821" width="0.4" height="15.0" fill="rgb(250,121,54)" rx="2" ry="2" />
<text  x="1118.09" y="831.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType (1 samples, 0.04%)</title><rect x="1143.3" y="965" width="0.4" height="15.0" fill="rgb(225,163,50)" rx="2" ry="2" />
<text  x="1146.29" y="975.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (1 samples, 0.04%)</title><rect x="904.9" y="597" width="0.5" height="15.0" fill="rgb(205,20,1)" rx="2" ry="2" />
<text  x="907.91" y="607.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::removeNotPreservedAnalysis (1 samples, 0.04%)</title><rect x="703.5" y="757" width="0.5" height="15.0" fill="rgb(253,50,25)" rx="2" ry="2" />
<text  x="706.55" y="767.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitRedeclarableTemplateDecl (1 samples, 0.04%)</title><rect x="1132.7" y="789" width="0.5" height="15.0" fill="rgb(224,119,26)" rx="2" ry="2" />
<text  x="1135.72" y="799.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformFunctionTypeParams (1 samples, 0.04%)</title><rect x="1131.4" y="677" width="0.4" height="15.0" fill="rgb(247,20,8)" rx="2" ry="2" />
<text  x="1134.40" y="687.5" ></text>
</g>
<g >
<title>clang::Sema::SubstType (1 samples, 0.04%)</title><rect x="1123.0" y="853" width="0.5" height="15.0" fill="rgb(244,220,9)" rx="2" ry="2" />
<text  x="1126.02" y="863.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;, void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;::LookupBucketFor&lt;void const*&gt; (1 samples, 0.04%)</title><rect x="1064.9" y="565" width="0.4" height="15.0" fill="rgb(230,120,42)" rx="2" ry="2" />
<text  x="1067.86" y="575.5" ></text>
</g>
<g >
<title>clang::Sema::SubstType (1 samples, 0.04%)</title><rect x="1127.4" y="789" width="0.5" height="15.0" fill="rgb(250,201,29)" rx="2" ry="2" />
<text  x="1130.43" y="799.5" ></text>
</g>
<g >
<title>CreateCoercedStore (1 samples, 0.04%)</title><rect x="1108.5" y="901" width="0.4" height="15.0" fill="rgb(210,146,14)" rx="2" ry="2" />
<text  x="1111.48" y="911.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentNameType (1 samples, 0.04%)</title><rect x="1139.3" y="965" width="0.5" height="15.0" fill="rgb(207,156,50)" rx="2" ry="2" />
<text  x="1142.33" y="975.5" ></text>
</g>
<g >
<title>main (40 samples, 1.49%)</title><rect x="1172.4" y="933" width="17.6" height="15.0" fill="rgb(252,82,15)" rx="2" ry="2" />
<text  x="1175.37" y="943.5" ></text>
</g>
<g >
<title>TCling::LazyFunctionCreatorAutoload (2 samples, 0.07%)</title><rect x="867.5" y="517" width="0.8" height="15.0" fill="rgb(219,186,5)" rx="2" ry="2" />
<text  x="870.46" y="527.5" ></text>
</g>
<g >
<title>llvm::ScheduleDAGSDNodes::EmitSchedule(llvm::MachineInstrBundleIterator&lt;llvm::MachineInstr, false&gt;&amp;)::{lambda(llvm::SDNode*, bool, bool, llvm::DenseMap&lt;llvm::SDValue, unsigned int, llvm::DenseMapInfo&lt;llvm::SDValue&gt;, llvm::detail::DenseMapPair&lt;llvm::SDValue, unsigned int&gt; &gt;&amp;)#1}::operator() (1 samples, 0.04%)</title><rect x="700.9" y="677" width="0.4" height="15.0" fill="rgb(229,110,23)" rx="2" ry="2" />
<text  x="703.90" y="687.5" ></text>
</g>
<g >
<title>TBasket::ReadBasketBuffers (51 samples, 1.90%)</title><rect x="392.5" y="805" width="22.4" height="15.0" fill="rgb(237,99,47)" rx="2" ry="2" />
<text  x="395.46" y="815.5" >T..</text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (1 samples, 0.04%)</title><rect x="1152.1" y="869" width="0.4" height="15.0" fill="rgb(225,81,9)" rx="2" ry="2" />
<text  x="1155.11" y="879.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl (1 samples, 0.04%)</title><rect x="1137.1" y="613" width="0.5" height="15.0" fill="rgb(250,71,12)" rx="2" ry="2" />
<text  x="1140.12" y="623.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;std::add_pointer, (anonymous namespace)::ScalarExprEmitter, llvm::Value*&gt;::Visit (1 samples, 0.04%)</title><rect x="1106.3" y="789" width="0.4" height="15.0" fill="rgb(241,31,27)" rx="2" ry="2" />
<text  x="1109.28" y="799.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformCompoundStmt (1 samples, 0.04%)</title><rect x="1135.4" y="837" width="0.4" height="15.0" fill="rgb(230,162,23)" rx="2" ry="2" />
<text  x="1138.36" y="847.5" ></text>
</g>
<g >
<title>llvm::AttributeSetNode::get (1 samples, 0.04%)</title><rect x="1102.3" y="693" width="0.5" height="15.0" fill="rgb(205,112,44)" rx="2" ry="2" />
<text  x="1105.32" y="703.5" ></text>
</g>
<g >
<title>clang::Sema::BuildReturnStmt (1 samples, 0.04%)</title><rect x="785.1" y="629" width="0.4" height="15.0" fill="rgb(232,225,50)" rx="2" ry="2" />
<text  x="788.06" y="639.5" ></text>
</g>
<g >
<title>cling::MetaProcessor::process (85 samples, 3.17%)</title><rect x="1028.7" y="837" width="37.5" height="15.0" fill="rgb(247,3,37)" rx="2" ry="2" />
<text  x="1031.73" y="847.5" >cli..</text>
</g>
<g >
<title>combineInstructionsOverFunction (5 samples, 0.19%)</title><rect x="897.4" y="661" width="2.2" height="15.0" fill="rgb(232,210,8)" rx="2" ry="2" />
<text  x="900.42" y="671.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (6 samples, 0.22%)</title><rect x="704.0" y="741" width="2.6" height="15.0" fill="rgb(235,187,10)" rx="2" ry="2" />
<text  x="706.99" y="751.5" ></text>
</g>
<g >
<title>llvm::legacy::FunctionPassManagerImpl::run (2 samples, 0.07%)</title><rect x="900.5" y="661" width="0.9" height="15.0" fill="rgb(222,165,30)" rx="2" ry="2" />
<text  x="903.51" y="671.5" ></text>
</g>
<g >
<title>clang::CodeGeneratorImpl::HandleTopLevelDecl (1 samples, 0.04%)</title><rect x="1133.2" y="869" width="0.4" height="15.0" fill="rgb(215,93,17)" rx="2" ry="2" />
<text  x="1136.16" y="879.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXConstructExpr (1 samples, 0.04%)</title><rect x="1101.0" y="901" width="0.4" height="15.0" fill="rgb(218,94,40)" rx="2" ry="2" />
<text  x="1103.99" y="911.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.04%)</title><rect x="21.9" y="645" width="0.4" height="15.0" fill="rgb(215,204,13)" rx="2" ry="2" />
<text  x="24.90" y="655.5" ></text>
</g>
<g >
<title>llvm::AsmPrinter::doFinalization (1 samples, 0.04%)</title><rect x="905.8" y="629" width="0.4" height="15.0" fill="rgb(211,112,10)" rx="2" ry="2" />
<text  x="908.80" y="639.5" ></text>
</g>
<g >
<title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::CalculateFromScratch (1 samples, 0.04%)</title><rect x="1034.9" y="613" width="0.4" height="15.0" fill="rgb(221,158,28)" rx="2" ry="2" />
<text  x="1037.90" y="623.5" ></text>
</g>
<g >
<title>TCling::UpdateListsOnCommitted (1 samples, 0.04%)</title><rect x="1065.7" y="677" width="0.5" height="15.0" fill="rgb(253,86,16)" rx="2" ry="2" />
<text  x="1068.74" y="687.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.04%)</title><rect x="786.4" y="357" width="0.4" height="15.0" fill="rgb(222,68,22)" rx="2" ry="2" />
<text  x="789.39" y="367.5" ></text>
</g>
<g >
<title>llvm::X86FrameLowering::hasFP (1 samples, 0.04%)</title><rect x="845.9" y="533" width="0.4" height="15.0" fill="rgb(222,191,44)" rx="2" ry="2" />
<text  x="848.87" y="543.5" ></text>
</g>
<g >
<title>clang::TemplateArgumentList::ComputeODRHash (1 samples, 0.04%)</title><rect x="1123.0" y="677" width="0.5" height="15.0" fill="rgb(228,43,38)" rx="2" ry="2" />
<text  x="1126.02" y="687.5" ></text>
</g>
<g >
<title>TClingTypedefInfo::Init (1 samples, 0.04%)</title><rect x="784.2" y="597" width="0.4" height="15.0" fill="rgb(236,12,50)" rx="2" ry="2" />
<text  x="787.18" y="607.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt;, llvm::DenseMapInfo&lt;llvm::BasicBlock*&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt; &gt; &gt;, llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt;, llvm::DenseMapInfo&lt;llvm::BasicBlock*&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt; &gt; &gt;::destroyAll (1 samples, 0.04%)</title><rect x="1054.3" y="549" width="0.4" height="15.0" fill="rgb(253,25,54)" rx="2" ry="2" />
<text  x="1057.29" y="559.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::commitTransaction (7 samples, 0.26%)</title><rect x="900.5" y="741" width="3.1" height="15.0" fill="rgb(208,117,53)" rx="2" ry="2" />
<text  x="903.51" y="751.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (1 samples, 0.04%)</title><rect x="1146.8" y="741" width="0.5" height="15.0" fill="rgb(212,62,26)" rx="2" ry="2" />
<text  x="1149.82" y="751.5" ></text>
</g>
<g >
<title>llvm::FunctionLoweringInfo::clear (1 samples, 0.04%)</title><rect x="844.1" y="549" width="0.4" height="15.0" fill="rgb(244,134,14)" rx="2" ry="2" />
<text  x="847.11" y="559.5" ></text>
</g>
<g >
<title>execute_command (4 samples, 0.15%)</title><rect x="22.3" y="741" width="1.8" height="15.0" fill="rgb(236,206,39)" rx="2" ry="2" />
<text  x="25.34" y="751.5" ></text>
</g>
<g >
<title>clang::LinkageComputer::computeLVForDecl (1 samples, 0.04%)</title><rect x="1105.4" y="597" width="0.4" height="15.0" fill="rgb(217,176,29)" rx="2" ry="2" />
<text  x="1108.40" y="607.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="431.2" y="805" width="0.5" height="15.0" fill="rgb(244,28,29)" rx="2" ry="2" />
<text  x="434.24" y="815.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1172.8" y="677" width="0.5" height="15.0" fill="rgb(213,43,7)" rx="2" ry="2" />
<text  x="1175.82" y="687.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1129.2" y="741" width="0.4" height="15.0" fill="rgb(207,77,30)" rx="2" ry="2" />
<text  x="1132.19" y="751.5" ></text>
</g>
<g >
<title>llvm::GlobalAddressSDNode::GlobalAddressSDNode (1 samples, 0.04%)</title><rect x="1148.6" y="501" width="0.4" height="15.0" fill="rgb(250,127,19)" rx="2" ry="2" />
<text  x="1151.58" y="511.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveRelocations (2 samples, 0.07%)</title><rect x="1144.2" y="901" width="0.9" height="15.0" fill="rgb(211,7,50)" rx="2" ry="2" />
<text  x="1147.17" y="911.5" ></text>
</g>
<g >
<title>[bash] (15 samples, 0.56%)</title><rect x="12.6" y="469" width="6.7" height="15.0" fill="rgb(227,138,38)" rx="2" ry="2" />
<text  x="15.64" y="479.5" ></text>
</g>
<g >
<title>llvm::Attribute::hasAttribute (1 samples, 0.04%)</title><rect x="864.4" y="485" width="0.4" height="15.0" fill="rgb(206,159,22)" rx="2" ry="2" />
<text  x="867.38" y="495.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetType (1 samples, 0.04%)</title><rect x="1142.9" y="677" width="0.4" height="15.0" fill="rgb(234,77,10)" rx="2" ry="2" />
<text  x="1145.85" y="687.5" ></text>
</g>
<g >
<title>TBranch::GetSubBranch (1 samples, 0.04%)</title><rect x="785.9" y="741" width="0.5" height="15.0" fill="rgb(218,21,52)" rx="2" ry="2" />
<text  x="788.94" y="751.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitRedeclarable&lt;clang::RedeclarableTemplateDecl&gt; (1 samples, 0.04%)</title><rect x="1099.2" y="837" width="0.5" height="15.0" fill="rgb(249,15,17)" rx="2" ry="2" />
<text  x="1102.23" y="847.5" ></text>
</g>
<g >
<title>clang::Sema::AddOverloadCandidate (2 samples, 0.07%)</title><rect x="1119.5" y="901" width="0.9" height="15.0" fill="rgb(244,115,31)" rx="2" ry="2" />
<text  x="1122.50" y="911.5" ></text>
</g>
<g >
<title>_nl_load_locale_from_archive (1 samples, 0.04%)</title><rect x="1189.6" y="869" width="0.4" height="15.0" fill="rgb(254,216,19)" rx="2" ry="2" />
<text  x="1192.56" y="879.5" ></text>
</g>
<g >
<title>llvm::orc::JITSymbolResolverAdapter::lookup (2 samples, 0.07%)</title><rect x="684.6" y="757" width="0.9" height="15.0" fill="rgb(226,180,12)" rx="2" ry="2" />
<text  x="687.60" y="767.5" ></text>
</g>
<g >
<title>llvm::SROA::deleteDeadInstructions (1 samples, 0.04%)</title><rect x="1029.2" y="565" width="0.4" height="15.0" fill="rgb(207,214,45)" rx="2" ry="2" />
<text  x="1032.17" y="575.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformInitializer (1 samples, 0.04%)</title><rect x="1135.8" y="901" width="0.4" height="15.0" fill="rgb(245,187,32)" rx="2" ry="2" />
<text  x="1138.80" y="911.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ComputeRecordLayout (1 samples, 0.04%)</title><rect x="1117.7" y="661" width="0.5" height="15.0" fill="rgb(250,187,19)" rx="2" ry="2" />
<text  x="1120.74" y="671.5" ></text>
</g>
<g >
<title>llvm::hashing::detail::hash_state::mix (1 samples, 0.04%)</title><rect x="1105.0" y="789" width="0.4" height="15.0" fill="rgb(227,69,0)" rx="2" ry="2" />
<text  x="1107.96" y="799.5" ></text>
</g>
<g >
<title>clang::Sema::ActOnEndOfTranslationUnit (1 samples, 0.04%)</title><rect x="785.1" y="853" width="0.4" height="15.0" fill="rgb(209,56,42)" rx="2" ry="2" />
<text  x="788.06" y="863.5" ></text>
</g>
<g >
<title>TClingCallbacks::LookupObject (1 samples, 0.04%)</title><rect x="1137.6" y="661" width="0.4" height="15.0" fill="rgb(223,187,46)" rx="2" ry="2" />
<text  x="1140.57" y="671.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1097.5" y="597" width="0.4" height="15.0" fill="rgb(236,173,36)" rx="2" ry="2" />
<text  x="1100.47" y="607.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt;, llvm::DenseMapInfo&lt;llvm::BasicBlock*&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt; &gt; &gt;, llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt;, llvm::DenseMapInfo&lt;llvm::BasicBlock*&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt; &gt; &gt;::clear (1 samples, 0.04%)</title><rect x="1028.7" y="549" width="0.5" height="15.0" fill="rgb(219,173,45)" rx="2" ry="2" />
<text  x="1031.73" y="559.5" ></text>
</g>
<g >
<title>clang::LinkageComputer::getLVForNamespaceScopeDecl (1 samples, 0.04%)</title><rect x="1108.9" y="853" width="0.5" height="15.0" fill="rgb(242,126,18)" rx="2" ry="2" />
<text  x="1111.92" y="863.5" ></text>
</g>
<g >
<title>llvm::MachineRegisterInfo::freezeReservedRegs (1 samples, 0.04%)</title><rect x="700.5" y="741" width="0.4" height="15.0" fill="rgb(221,163,50)" rx="2" ry="2" />
<text  x="703.46" y="751.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddDecl (1 samples, 0.04%)</title><rect x="1135.8" y="597" width="0.4" height="15.0" fill="rgb(212,86,45)" rx="2" ry="2" />
<text  x="1138.80" y="607.5" ></text>
</g>
<g >
<title>[sed] (1 samples, 0.04%)</title><rect x="1168.8" y="933" width="0.5" height="15.0" fill="rgb(208,224,34)" rx="2" ry="2" />
<text  x="1171.85" y="943.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl (2 samples, 0.07%)</title><rect x="1142.0" y="853" width="0.9" height="15.0" fill="rgb(254,150,26)" rx="2" ry="2" />
<text  x="1144.97" y="863.5" ></text>
</g>
<g >
<title>llvm::TargetTransformInfoWrapperPass::getTTI (2 samples, 0.07%)</title><rect x="1045.9" y="629" width="0.9" height="15.0" fill="rgb(244,17,19)" rx="2" ry="2" />
<text  x="1048.91" y="639.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentScopeDeclRefExpr (1 samples, 0.04%)</title><rect x="1140.6" y="949" width="0.5" height="15.0" fill="rgb(231,26,49)" rx="2" ry="2" />
<text  x="1143.65" y="959.5" ></text>
</g>
<g >
<title>llvm::DenseMap&lt;llvm::PoisoningVH&lt;llvm::BasicBlock&gt;, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo&lt;llvm::PoisoningVH&lt;llvm::BasicBlock&gt; &gt;, llvm::detail::DenseSetPair&lt;llvm::PoisoningVH&lt;llvm::BasicBlock&gt; &gt; &gt;::grow (1 samples, 0.04%)</title><rect x="895.7" y="661" width="0.4" height="15.0" fill="rgb(254,117,9)" rx="2" ry="2" />
<text  x="898.66" y="671.5" ></text>
</g>
<g >
<title>llvm::AttributeList::removeAttribute (1 samples, 0.04%)</title><rect x="1113.8" y="805" width="0.4" height="15.0" fill="rgb(223,26,45)" rx="2" ry="2" />
<text  x="1116.77" y="815.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1164.0" y="949" width="0.4" height="15.0" fill="rgb(236,30,53)" rx="2" ry="2" />
<text  x="1167.00" y="959.5" ></text>
</g>
<g >
<title>llvm::InstructionCombiningPass::runOnFunction (2 samples, 0.07%)</title><rect x="1035.3" y="629" width="0.9" height="15.0" fill="rgb(223,72,3)" rx="2" ry="2" />
<text  x="1038.34" y="639.5" ></text>
</g>
<g >
<title>execute_command (4 samples, 0.15%)</title><rect x="22.3" y="933" width="1.8" height="15.0" fill="rgb(240,109,27)" rx="2" ry="2" />
<text  x="25.34" y="943.5" ></text>
</g>
<g >
<title>cling::MetaProcessor::process (160 samples, 5.97%)</title><rect x="830.0" y="901" width="70.5" height="15.0" fill="rgb(249,111,44)" rx="2" ry="2" />
<text  x="833.01" y="911.5" >cling::..</text>
</g>
<g >
<title>execute_command (15 samples, 0.56%)</title><rect x="12.6" y="501" width="6.7" height="15.0" fill="rgb(222,17,45)" rx="2" ry="2" />
<text  x="15.64" y="511.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass (1 samples, 0.04%)</title><rect x="1155.2" y="709" width="0.4" height="15.0" fill="rgb(214,141,26)" rx="2" ry="2" />
<text  x="1158.19" y="719.5" ></text>
</g>
<g >
<title>llvm::AttrBuilder::AttrBuilder (1 samples, 0.04%)</title><rect x="1112.4" y="741" width="0.5" height="15.0" fill="rgb(241,78,28)" rx="2" ry="2" />
<text  x="1115.45" y="751.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.04%)</title><rect x="1103.6" y="965" width="0.5" height="15.0" fill="rgb(245,218,30)" rx="2" ry="2" />
<text  x="1106.64" y="975.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateArgument (1 samples, 0.04%)</title><rect x="1143.3" y="789" width="0.4" height="15.0" fill="rgb(217,203,30)" rx="2" ry="2" />
<text  x="1146.29" y="799.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::PopCleanupBlocks (1 samples, 0.04%)</title><rect x="1108.0" y="741" width="0.5" height="15.0" fill="rgb(219,200,0)" rx="2" ry="2" />
<text  x="1111.04" y="751.5" ></text>
</g>
<g >
<title>clang::CXXRecordDecl::getFinalOverriders (1 samples, 0.04%)</title><rect x="1107.6" y="661" width="0.4" height="15.0" fill="rgb(244,149,5)" rx="2" ry="2" />
<text  x="1110.60" y="671.5" ></text>
</g>
<g >
<title>llvm::Value::getName (2 samples, 0.07%)</title><rect x="1046.8" y="629" width="0.9" height="15.0" fill="rgb(233,11,34)" rx="2" ry="2" />
<text  x="1049.80" y="639.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.04%)</title><rect x="1038.0" y="565" width="0.4" height="15.0" fill="rgb(226,132,9)" rx="2" ry="2" />
<text  x="1040.98" y="575.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="21.9" y="309" width="0.4" height="15.0" fill="rgb(250,60,53)" rx="2" ry="2" />
<text  x="24.90" y="319.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1139.3" y="709" width="0.5" height="15.0" fill="rgb(216,204,13)" rx="2" ry="2" />
<text  x="1142.33" y="719.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1132.3" y="773" width="0.4" height="15.0" fill="rgb(229,7,20)" rx="2" ry="2" />
<text  x="1135.28" y="783.5" ></text>
</g>
<g >
<title>TClingDataMemberInfo::Next (1 samples, 0.04%)</title><rect x="786.4" y="373" width="0.4" height="15.0" fill="rgb(228,186,28)" rx="2" ry="2" />
<text  x="789.39" y="383.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1188.2" y="773" width="0.5" height="15.0" fill="rgb(222,112,49)" rx="2" ry="2" />
<text  x="1191.24" y="783.5" ></text>
</g>
<g >
<title>llvm::object::ELFFile&lt;llvm::object::ELFType&lt;(llvm::support::endianness)1, true&gt; &gt;::getSection (1 samples, 0.04%)</title><rect x="868.3" y="533" width="0.5" height="15.0" fill="rgb(247,57,20)" rx="2" ry="2" />
<text  x="871.34" y="543.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="10.4" y="325" width="0.5" height="15.0" fill="rgb(229,145,22)" rx="2" ry="2" />
<text  x="13.44" y="335.5" ></text>
</g>
<g >
<title>llvm::PMTopLevelManager::findAnalysisPass (1 samples, 0.04%)</title><rect x="698.3" y="725" width="0.4" height="15.0" fill="rgb(215,120,41)" rx="2" ry="2" />
<text  x="701.26" y="735.5" ></text>
</g>
<g >
<title>clang::ASTReader::readTypeRecord (1 samples, 0.04%)</title><rect x="1100.6" y="789" width="0.4" height="15.0" fill="rgb(238,67,38)" rx="2" ry="2" />
<text  x="1103.55" y="799.5" ></text>
</g>
<g >
<title>clang::Redeclarable&lt;clang::TagDecl&gt;::DeclLink::getPrevious (1 samples, 0.04%)</title><rect x="1103.2" y="485" width="0.4" height="15.0" fill="rgb(213,40,43)" rx="2" ry="2" />
<text  x="1106.20" y="495.5" ></text>
</g>
<g >
<title>llvm::FoldingSetBase::FindNodeOrInsertPos (1 samples, 0.04%)</title><rect x="1108.0" y="565" width="0.5" height="15.0" fill="rgb(229,88,33)" rx="2" ry="2" />
<text  x="1111.04" y="575.5" ></text>
</g>
<g >
<title>clang::TemplateDeclInstantiator::VisitFieldDecl (1 samples, 0.04%)</title><rect x="1131.0" y="949" width="0.4" height="15.0" fill="rgb(239,119,54)" rx="2" ry="2" />
<text  x="1133.96" y="959.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.07%)</title><rect x="1175.5" y="677" width="0.8" height="15.0" fill="rgb(231,71,50)" rx="2" ry="2" />
<text  x="1178.46" y="687.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;std::add_pointer, (anonymous namespace)::ScalarExprEmitter, llvm::Value*&gt;::Visit (1 samples, 0.04%)</title><rect x="1105.4" y="773" width="0.4" height="15.0" fill="rgb(211,4,38)" rx="2" ry="2" />
<text  x="1108.40" y="783.5" ></text>
</g>
<g >
<title>llvm::object::ELFObjectFile&lt;llvm::object::ELFType&lt;(llvm::support::endianness)1, true&gt; &gt;::getRelocatedSection (14 samples, 0.52%)</title><rect x="872.7" y="549" width="6.2" height="15.0" fill="rgb(230,176,6)" rx="2" ry="2" />
<text  x="875.75" y="559.5" ></text>
</g>
<g >
<title>clang::Preprocessor::HandleDirective (1 samples, 0.04%)</title><rect x="1071.0" y="741" width="0.5" height="15.0" fill="rgb(212,1,34)" rx="2" ry="2" />
<text  x="1074.03" y="751.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::GetAddrOfFunction (1 samples, 0.04%)</title><rect x="1102.3" y="789" width="0.5" height="15.0" fill="rgb(217,18,13)" rx="2" ry="2" />
<text  x="1105.32" y="799.5" ></text>
</g>
<g >
<title>execute_command_internal (26 samples, 0.97%)</title><rect x="10.4" y="773" width="11.5" height="15.0" fill="rgb(205,83,45)" rx="2" ry="2" />
<text  x="13.44" y="783.5" ></text>
</g>
<g >
<title>clang::Sema::BuildOverloadedCallExpr (1 samples, 0.04%)</title><rect x="1121.3" y="949" width="0.4" height="15.0" fill="rgb(214,118,48)" rx="2" ry="2" />
<text  x="1124.26" y="959.5" ></text>
</g>
<g >
<title>check_match (1 samples, 0.04%)</title><rect x="1166.2" y="853" width="0.4" height="15.0" fill="rgb(253,60,54)" rx="2" ry="2" />
<text  x="1169.21" y="863.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentScopeDeclRefExpr (1 samples, 0.04%)</title><rect x="1123.9" y="869" width="0.4" height="15.0" fill="rgb(208,204,52)" rx="2" ry="2" />
<text  x="1126.91" y="879.5" ></text>
</g>
<g >
<title>execute_command_internal (16 samples, 0.60%)</title><rect x="12.6" y="549" width="7.1" height="15.0" fill="rgb(239,25,39)" rx="2" ry="2" />
<text  x="15.64" y="559.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl (1 samples, 0.04%)</title><rect x="1128.8" y="805" width="0.4" height="15.0" fill="rgb(213,3,41)" rx="2" ry="2" />
<text  x="1131.75" y="815.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (1 samples, 0.04%)</title><rect x="1103.6" y="437" width="0.5" height="15.0" fill="rgb(206,205,1)" rx="2" ry="2" />
<text  x="1106.64" y="447.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (1 samples, 0.04%)</title><rect x="1137.1" y="933" width="0.5" height="15.0" fill="rgb(218,99,31)" rx="2" ry="2" />
<text  x="1140.12" y="943.5" ></text>
</g>
<g >
<title>clang::Sema::SubstType (1 samples, 0.04%)</title><rect x="1138.4" y="725" width="0.5" height="15.0" fill="rgb(232,218,47)" rx="2" ry="2" />
<text  x="1141.45" y="735.5" ></text>
</g>
<g >
<title>llvm::Function::addAttribute (1 samples, 0.04%)</title><rect x="1105.0" y="901" width="0.4" height="15.0" fill="rgb(207,69,12)" rx="2" ry="2" />
<text  x="1107.96" y="911.5" ></text>
</g>
<g >
<title>cling::MetaProcessor::process (6 samples, 0.22%)</title><rect x="1148.1" y="965" width="2.7" height="15.0" fill="rgb(241,159,38)" rx="2" ry="2" />
<text  x="1151.14" y="975.5" ></text>
</g>
<g >
<title>TryImplicitConversion (1 samples, 0.04%)</title><rect x="1155.2" y="917" width="0.4" height="15.0" fill="rgb(239,49,17)" rx="2" ry="2" />
<text  x="1158.19" y="927.5" ></text>
</g>
<g >
<title>llvm::MachineFunction::getDataLayout (1 samples, 0.04%)</title><rect x="1156.5" y="805" width="0.5" height="15.0" fill="rgb(210,54,40)" rx="2" ry="2" />
<text  x="1159.51" y="815.5" ></text>
</g>
<g >
<title>TApplication::ProcessLine (85 samples, 3.17%)</title><rect x="1028.7" y="917" width="37.5" height="15.0" fill="rgb(212,75,40)" rx="2" ry="2" />
<text  x="1031.73" y="927.5" >TAp..</text>
</g>
<g >
<title>clang::Sema::SubstStmt (1 samples, 0.04%)</title><rect x="1134.9" y="821" width="0.5" height="15.0" fill="rgb(214,117,33)" rx="2" ry="2" />
<text  x="1137.92" y="831.5" ></text>
</g>
<g >
<title>ROOT::VecOps::RVec&lt;float&gt;::operator= (46 samples, 1.72%)</title><rect x="809.3" y="965" width="20.3" height="15.0" fill="rgb(209,160,3)" rx="2" ry="2" />
<text  x="812.30" y="975.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformNestedNameSpecifierLoc (1 samples, 0.04%)</title><rect x="1141.5" y="837" width="0.5" height="15.0" fill="rgb(207,48,34)" rx="2" ry="2" />
<text  x="1144.53" y="847.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (1 samples, 0.04%)</title><rect x="1149.5" y="421" width="0.4" height="15.0" fill="rgb(248,209,49)" rx="2" ry="2" />
<text  x="1152.46" y="431.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (18 samples, 0.67%)</title><rect x="699.6" y="773" width="7.9" height="15.0" fill="rgb(205,179,50)" rx="2" ry="2" />
<text  x="702.58" y="783.5" ></text>
</g>
<g >
<title>clang::DeclContext::lookup (1 samples, 0.04%)</title><rect x="1139.3" y="549" width="0.5" height="15.0" fill="rgb(249,138,51)" rx="2" ry="2" />
<text  x="1142.33" y="559.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1189.1" y="709" width="0.5" height="15.0" fill="rgb(215,176,34)" rx="2" ry="2" />
<text  x="1192.12" y="719.5" ></text>
</g>
<g >
<title>cling::Transaction::~Transaction (1 samples, 0.04%)</title><rect x="1028.3" y="757" width="0.4" height="15.0" fill="rgb(244,96,41)" rx="2" ry="2" />
<text  x="1031.29" y="767.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetType (1 samples, 0.04%)</title><rect x="1140.6" y="741" width="0.5" height="15.0" fill="rgb(223,115,41)" rx="2" ry="2" />
<text  x="1143.65" y="751.5" ></text>
</g>
<g >
<title>[bash] (15 samples, 0.56%)</title><rect x="12.6" y="389" width="6.7" height="15.0" fill="rgb(247,77,34)" rx="2" ry="2" />
<text  x="15.64" y="399.5" ></text>
</g>
<g >
<title>llvm::TargetTransformInfoWrapperPass::getTTI (3 samples, 0.11%)</title><rect x="864.4" y="581" width="1.3" height="15.0" fill="rgb(241,207,53)" rx="2" ry="2" />
<text  x="867.38" y="591.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::verifyPreservedAnalysis (12 samples, 0.45%)</title><rect x="1039.3" y="629" width="5.3" height="15.0" fill="rgb(219,103,22)" rx="2" ry="2" />
<text  x="1042.31" y="639.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (3 samples, 0.11%)</title><rect x="1142.0" y="949" width="1.3" height="15.0" fill="rgb(209,164,26)" rx="2" ry="2" />
<text  x="1144.97" y="959.5" ></text>
</g>
<g >
<title>clang::ASTContext::getCanonicalNestedNameSpecifier (1 samples, 0.04%)</title><rect x="1100.1" y="629" width="0.5" height="15.0" fill="rgb(215,46,49)" rx="2" ry="2" />
<text  x="1103.11" y="639.5" ></text>
</g>
<g >
<title>clang::LookupResult::isVisibleSlow (1 samples, 0.04%)</title><rect x="1133.6" y="629" width="0.4" height="15.0" fill="rgb(216,218,17)" rx="2" ry="2" />
<text  x="1136.60" y="639.5" ></text>
</g>
<g >
<title>clang::Sema::SubstBaseSpecifiers (1 samples, 0.04%)</title><rect x="1142.9" y="773" width="0.4" height="15.0" fill="rgb(219,84,37)" rx="2" ry="2" />
<text  x="1145.85" y="783.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (1 samples, 0.04%)</title><rect x="1149.5" y="373" width="0.4" height="15.0" fill="rgb(238,196,45)" rx="2" ry="2" />
<text  x="1152.46" y="383.5" ></text>
</g>
<g >
<title>llvm::LPPassManager::runOnFunction (1 samples, 0.04%)</title><rect x="909.8" y="725" width="0.4" height="15.0" fill="rgb(228,216,5)" rx="2" ry="2" />
<text  x="912.76" y="735.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentScopeDeclRefExpr (1 samples, 0.04%)</title><rect x="1142.9" y="885" width="0.4" height="15.0" fill="rgb(242,112,16)" rx="2" ry="2" />
<text  x="1145.85" y="895.5" ></text>
</g>
<g >
<title>llvm::DAGTypeLegalizer::AnalyzeNewNode (1 samples, 0.04%)</title><rect x="1152.1" y="725" width="0.4" height="15.0" fill="rgb(239,44,32)" rx="2" ry="2" />
<text  x="1155.11" y="735.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::getMangledName (1 samples, 0.04%)</title><rect x="1133.2" y="821" width="0.4" height="15.0" fill="rgb(229,178,37)" rx="2" ry="2" />
<text  x="1136.16" y="831.5" ></text>
</g>
<g >
<title>clang::Parser::ParseTopLevelDecl (1 samples, 0.04%)</title><rect x="908.9" y="789" width="0.4" height="15.0" fill="rgb(214,134,5)" rx="2" ry="2" />
<text  x="911.88" y="799.5" ></text>
</g>
<g >
<title>clang::ASTContext::getTypeInfo (1 samples, 0.04%)</title><rect x="1123.5" y="789" width="0.4" height="15.0" fill="rgb(223,212,37)" rx="2" ry="2" />
<text  x="1126.47" y="799.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadSLocEntry(int)::{lambda(llvm::BitstreamCursor&amp;, llvm::StringRef)#1}::operator() (1 samples, 0.04%)</title><rect x="1137.6" y="581" width="0.4" height="15.0" fill="rgb(207,134,43)" rx="2" ry="2" />
<text  x="1140.57" y="591.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentNameType (1 samples, 0.04%)</title><rect x="1123.0" y="805" width="0.5" height="15.0" fill="rgb(223,92,54)" rx="2" ry="2" />
<text  x="1126.02" y="815.5" ></text>
</g>
<g >
<title>llvm::AttributeSetNode::get (1 samples, 0.04%)</title><rect x="1105.0" y="837" width="0.4" height="15.0" fill="rgb(209,5,9)" rx="2" ry="2" />
<text  x="1107.96" y="847.5" ></text>
</g>
<g >
<title>clang::ASTContext::getSubstTemplateTypeParmType (1 samples, 0.04%)</title><rect x="1127.0" y="677" width="0.4" height="15.0" fill="rgb(220,29,35)" rx="2" ry="2" />
<text  x="1129.99" y="687.5" ></text>
</g>
<g >
<title>clang::ASTRecordReader::readRecord (1 samples, 0.04%)</title><rect x="783.7" y="565" width="0.5" height="15.0" fill="rgb(208,220,13)" rx="2" ry="2" />
<text  x="786.74" y="575.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::FindExternalLexicalDecls (1 samples, 0.04%)</title><rect x="1117.3" y="549" width="0.4" height="15.0" fill="rgb(254,15,49)" rx="2" ry="2" />
<text  x="1120.30" y="559.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="890.8" y="661" width="0.5" height="15.0" fill="rgb(247,63,40)" rx="2" ry="2" />
<text  x="893.81" y="671.5" ></text>
</g>
<g >
<title>llvm::KnownBits::~KnownBits (1 samples, 0.04%)</title><rect x="893.9" y="549" width="0.4" height="15.0" fill="rgb(239,46,23)" rx="2" ry="2" />
<text  x="896.90" y="559.5" ></text>
</g>
<g >
<title>TCling::InspectMembers (1 samples, 0.04%)</title><rect x="905.4" y="629" width="0.4" height="15.0" fill="rgb(251,182,45)" rx="2" ry="2" />
<text  x="908.35" y="639.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.07%)</title><rect x="20.1" y="517" width="0.9" height="15.0" fill="rgb(220,73,37)" rx="2" ry="2" />
<text  x="23.13" y="527.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.07%)</title><rect x="1187.8" y="789" width="0.9" height="15.0" fill="rgb(239,135,54)" rx="2" ry="2" />
<text  x="1190.80" y="799.5" ></text>
</g>
<g >
<title>clang::CXXRecordDecl::lookupInBases (1 samples, 0.04%)</title><rect x="1140.6" y="901" width="0.5" height="15.0" fill="rgb(230,201,15)" rx="2" ry="2" />
<text  x="1143.65" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (2 samples, 0.07%)</title><rect x="1077.6" y="805" width="0.9" height="15.0" fill="rgb(238,201,18)" rx="2" ry="2" />
<text  x="1080.64" y="815.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1165.8" y="917" width="0.4" height="15.0" fill="rgb(249,121,19)" rx="2" ry="2" />
<text  x="1168.77" y="927.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldELF::loadObject (2 samples, 0.07%)</title><rect x="707.5" y="789" width="0.9" height="15.0" fill="rgb(220,202,8)" rx="2" ry="2" />
<text  x="710.51" y="799.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformReturnStmt (1 samples, 0.04%)</title><rect x="1135.4" y="821" width="0.4" height="15.0" fill="rgb(245,178,11)" rx="2" ry="2" />
<text  x="1138.36" y="831.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1140.2" y="821" width="0.4" height="15.0" fill="rgb(235,71,16)" rx="2" ry="2" />
<text  x="1143.21" y="831.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (2 samples, 0.07%)</title><rect x="900.5" y="645" width="0.9" height="15.0" fill="rgb(237,196,37)" rx="2" ry="2" />
<text  x="903.51" y="655.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadTemplateArgument (1 samples, 0.04%)</title><rect x="1132.7" y="549" width="0.5" height="15.0" fill="rgb(226,201,31)" rx="2" ry="2" />
<text  x="1135.72" y="559.5" ></text>
</g>
<g >
<title>clang::Sema::DefaultLvalueConversion (1 samples, 0.04%)</title><rect x="1125.2" y="917" width="0.5" height="15.0" fill="rgb(214,122,20)" rx="2" ry="2" />
<text  x="1128.23" y="927.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::runOnMachineFunction (2 samples, 0.07%)</title><rect x="700.9" y="741" width="0.9" height="15.0" fill="rgb(238,115,29)" rx="2" ry="2" />
<text  x="703.90" y="751.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1124.8" y="805" width="0.4" height="15.0" fill="rgb(244,39,24)" rx="2" ry="2" />
<text  x="1127.79" y="815.5" ></text>
</g>
<g >
<title>clang::Sema::AddTemplateOverloadCandidate (1 samples, 0.04%)</title><rect x="1118.6" y="885" width="0.5" height="15.0" fill="rgb(211,47,43)" rx="2" ry="2" />
<text  x="1121.62" y="895.5" ></text>
</g>
<g >
<title>clang::CXXMethodDecl::isVirtual (1 samples, 0.04%)</title><rect x="1127.9" y="581" width="0.4" height="15.0" fill="rgb(220,192,35)" rx="2" ry="2" />
<text  x="1130.87" y="591.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl (1 samples, 0.04%)</title><rect x="1132.7" y="853" width="0.5" height="15.0" fill="rgb(248,19,1)" rx="2" ry="2" />
<text  x="1135.72" y="863.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::executeWrapper (136 samples, 5.08%)</title><rect x="830.0" y="805" width="59.9" height="15.0" fill="rgb(233,53,25)" rx="2" ry="2" />
<text  x="833.01" y="815.5" >cling:..</text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt;, llvm::DenseMapInfo&lt;llvm::BasicBlock*&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt; &gt; &gt;, llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt;, llvm::DenseMapInfo&lt;llvm::BasicBlock*&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt; &gt; &gt;::clear (1 samples, 0.04%)</title><rect x="1054.3" y="565" width="0.4" height="15.0" fill="rgb(214,116,53)" rx="2" ry="2" />
<text  x="1057.29" y="575.5" ></text>
</g>
<g >
<title>execute_command_internal (4 samples, 0.15%)</title><rect x="22.3" y="245" width="1.8" height="15.0" fill="rgb(254,148,28)" rx="2" ry="2" />
<text  x="25.34" y="255.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::emitSection (23 samples, 0.86%)</title><rect x="878.9" y="565" width="10.2" height="15.0" fill="rgb(239,74,42)" rx="2" ry="2" />
<text  x="881.92" y="575.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1171.9" y="757" width="0.5" height="15.0" fill="rgb(225,71,12)" rx="2" ry="2" />
<text  x="1174.93" y="767.5" ></text>
</g>
<g >
<title>clang::Sema::FindInstantiatedDecl (1 samples, 0.04%)</title><rect x="1098.3" y="821" width="0.5" height="15.0" fill="rgb(228,151,45)" rx="2" ry="2" />
<text  x="1101.35" y="831.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::CompleteRedeclChain (1 samples, 0.04%)</title><rect x="1139.3" y="597" width="0.5" height="15.0" fill="rgb(207,139,44)" rx="2" ry="2" />
<text  x="1142.33" y="607.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitFunctionDecl (1 samples, 0.04%)</title><rect x="1099.7" y="965" width="0.4" height="15.0" fill="rgb(253,57,0)" rx="2" ry="2" />
<text  x="1102.67" y="975.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1165.8" y="885" width="0.4" height="15.0" fill="rgb(251,213,41)" rx="2" ry="2" />
<text  x="1168.77" y="895.5" ></text>
</g>
<g >
<title>TCling::HandleNewDecl (1 samples, 0.04%)</title><rect x="1065.7" y="629" width="0.5" height="15.0" fill="rgb(231,11,7)" rx="2" ry="2" />
<text  x="1068.74" y="639.5" ></text>
</g>
<g >
<title>TApplication::ExecuteFile (1 samples, 0.04%)</title><rect x="1027.0" y="917" width="0.4" height="15.0" fill="rgb(212,37,4)" rx="2" ry="2" />
<text  x="1029.97" y="927.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="12.6" y="341" width="0.5" height="15.0" fill="rgb(206,51,38)" rx="2" ry="2" />
<text  x="15.64" y="351.5" ></text>
</g>
<g >
<title>cling::BackendPasses::runOnModule (2 samples, 0.07%)</title><rect x="889.9" y="725" width="0.9" height="15.0" fill="rgb(212,111,24)" rx="2" ry="2" />
<text  x="892.93" y="735.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition (3 samples, 0.11%)</title><rect x="1134.0" y="837" width="1.4" height="15.0" fill="rgb(252,14,16)" rx="2" ry="2" />
<text  x="1137.04" y="847.5" ></text>
</g>
<g >
<title>llvm::SelectionDAG::Combine (1 samples, 0.04%)</title><rect x="1154.3" y="933" width="0.4" height="15.0" fill="rgb(224,114,31)" rx="2" ry="2" />
<text  x="1157.31" y="943.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1164.0" y="869" width="0.4" height="15.0" fill="rgb(243,211,26)" rx="2" ry="2" />
<text  x="1167.00" y="879.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="12.6" y="293" width="0.5" height="15.0" fill="rgb(216,89,27)" rx="2" ry="2" />
<text  x="15.64" y="303.5" ></text>
</g>
<g >
<title>execute_command_internal (15 samples, 0.56%)</title><rect x="12.6" y="517" width="6.7" height="15.0" fill="rgb(207,190,54)" rx="2" ry="2" />
<text  x="15.64" y="527.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass (1 samples, 0.04%)</title><rect x="1127.9" y="661" width="0.4" height="15.0" fill="rgb(219,31,2)" rx="2" ry="2" />
<text  x="1130.87" y="671.5" ></text>
</g>
<g >
<title>llvm::MachineDominatorTree::runOnMachineFunction (1 samples, 0.04%)</title><rect x="841.9" y="565" width="0.4" height="15.0" fill="rgb(220,65,29)" rx="2" ry="2" />
<text  x="844.90" y="575.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveRelocations (2 samples, 0.07%)</title><rect x="1152.5" y="965" width="0.9" height="15.0" fill="rgb(219,44,47)" rx="2" ry="2" />
<text  x="1155.55" y="975.5" ></text>
</g>
<g >
<title>root (11 samples, 0.41%)</title><rect x="1164.0" y="981" width="4.8" height="15.0" fill="rgb(248,79,30)" rx="2" ry="2" />
<text  x="1167.00" y="991.5" ></text>
</g>
<g >
<title>clang::ASTContext::getTypeInfoInChars (1 samples, 0.04%)</title><rect x="1123.5" y="805" width="0.4" height="15.0" fill="rgb(222,64,13)" rx="2" ry="2" />
<text  x="1126.47" y="815.5" ></text>
</g>
<g >
<title>getCalledFunction (1 samples, 0.04%)</title><rect x="898.7" y="597" width="0.5" height="15.0" fill="rgb(244,177,45)" rx="2" ry="2" />
<text  x="901.75" y="607.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (1 samples, 0.04%)</title><rect x="1027.4" y="661" width="0.4" height="15.0" fill="rgb(229,49,49)" rx="2" ry="2" />
<text  x="1030.41" y="671.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="431.2" y="821" width="0.5" height="15.0" fill="rgb(239,188,30)" rx="2" ry="2" />
<text  x="434.24" y="831.5" ></text>
</g>
<g >
<title>clang::ASTReader::FindExternalLexicalDecls (1 samples, 0.04%)</title><rect x="1097.5" y="789" width="0.4" height="15.0" fill="rgb(246,222,48)" rx="2" ry="2" />
<text  x="1100.47" y="799.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="21.0" y="533" width="0.5" height="15.0" fill="rgb(253,92,8)" rx="2" ry="2" />
<text  x="24.02" y="543.5" ></text>
</g>
<g >
<title>intersect (1 samples, 0.04%)</title><rect x="902.3" y="629" width="0.4" height="15.0" fill="rgb(226,182,20)" rx="2" ry="2" />
<text  x="905.27" y="639.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1189.1" y="693" width="0.5" height="15.0" fill="rgb(229,68,15)" rx="2" ry="2" />
<text  x="1192.12" y="703.5" ></text>
</g>
<g >
<title>__mprotect (1 samples, 0.04%)</title><rect x="1171.1" y="869" width="0.4" height="15.0" fill="rgb(215,136,39)" rx="2" ry="2" />
<text  x="1174.05" y="879.5" ></text>
</g>
<g >
<title>TCling::ProcessLineSynch (7 samples, 0.26%)</title><rect x="900.5" y="917" width="3.1" height="15.0" fill="rgb(220,167,27)" rx="2" ry="2" />
<text  x="903.51" y="927.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitLValue (1 samples, 0.04%)</title><rect x="1101.4" y="885" width="0.5" height="15.0" fill="rgb(229,16,35)" rx="2" ry="2" />
<text  x="1104.43" y="895.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadStmtFromStream (1 samples, 0.04%)</title><rect x="786.4" y="133" width="0.4" height="15.0" fill="rgb(217,141,43)" rx="2" ry="2" />
<text  x="789.39" y="143.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::commitTransaction (1 samples, 0.04%)</title><rect x="1027.0" y="725" width="0.4" height="15.0" fill="rgb(242,81,8)" rx="2" ry="2" />
<text  x="1029.97" y="735.5" ></text>
</g>
<g >
<title>llvm::AssumptionCache::scanFunction (1 samples, 0.04%)</title><rect x="889.9" y="581" width="0.5" height="15.0" fill="rgb(252,172,18)" rx="2" ry="2" />
<text  x="892.93" y="591.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallArgs (1 samples, 0.04%)</title><rect x="1138.0" y="853" width="0.4" height="15.0" fill="rgb(228,189,6)" rx="2" ry="2" />
<text  x="1141.01" y="863.5" ></text>
</g>
<g >
<title>llvm::InstrEmitter::EmitMachineNode (1 samples, 0.04%)</title><rect x="1144.2" y="645" width="0.4" height="15.0" fill="rgb(217,74,14)" rx="2" ry="2" />
<text  x="1147.17" y="655.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="842.3" y="549" width="0.5" height="15.0" fill="rgb(236,125,42)" rx="2" ry="2" />
<text  x="845.35" y="559.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::ConstructAttributeList (1 samples, 0.04%)</title><rect x="1108.0" y="613" width="0.5" height="15.0" fill="rgb(242,137,10)" rx="2" ry="2" />
<text  x="1111.04" y="623.5" ></text>
</g>
<g >
<title>llvm::make_unique&lt;llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject&lt;std::shared_ptr&lt;llvm::RuntimeDyld::MemoryManager&gt; &gt;, llvm::orc::LegacyRTDyldObjectLinkingLayer&amp;, unsigned long, llvm::object::OwningBinary&lt;llvm::object::ObjectFile&gt;, std::shared_ptr&lt;llvm::RuntimeDyld::MemoryManager&gt;, std::shared_ptr&lt;llvm::orc::SymbolResolver&gt;, bool&amp;&gt; (1 samples, 0.04%)</title><rect x="830.0" y="645" width="0.4" height="15.0" fill="rgb(247,195,39)" rx="2" ry="2" />
<text  x="833.01" y="655.5" ></text>
</g>
<g >
<title>cling::Interpreter::EvaluateInternal (136 samples, 5.08%)</title><rect x="830.0" y="837" width="59.9" height="15.0" fill="rgb(228,104,54)" rx="2" ry="2" />
<text  x="833.01" y="847.5" >cling:..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.04%)</title><rect x="1111.1" y="549" width="0.5" height="15.0" fill="rgb(242,56,44)" rx="2" ry="2" />
<text  x="1114.13" y="559.5" ></text>
</g>
<g >
<title>_dl_init (1 samples, 0.04%)</title><rect x="904.9" y="709" width="0.5" height="15.0" fill="rgb(248,5,2)" rx="2" ry="2" />
<text  x="907.91" y="719.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="21.0" y="501" width="0.5" height="15.0" fill="rgb(242,161,35)" rx="2" ry="2" />
<text  x="24.02" y="511.5" ></text>
</g>
<g >
<title>TryConstructorInitialization (2 samples, 0.07%)</title><rect x="1119.5" y="933" width="0.9" height="15.0" fill="rgb(209,222,50)" rx="2" ry="2" />
<text  x="1122.50" y="943.5" ></text>
</g>
<g >
<title>clang::Sema::BuildDeclarationNameExpr (1 samples, 0.04%)</title><rect x="1130.1" y="709" width="0.4" height="15.0" fill="rgb(210,170,15)" rx="2" ry="2" />
<text  x="1133.07" y="719.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::computeSectionStubBufSize (1 samples, 0.04%)</title><rect x="707.5" y="741" width="0.5" height="15.0" fill="rgb(233,193,0)" rx="2" ry="2" />
<text  x="710.51" y="751.5" ></text>
</g>
<g >
<title>clang::LazyGenerationalUpdatePtr&lt;clang::Decl const*, clang::Decl*, &amp;clang::ExternalASTSource::CompleteRedeclChain&gt;::get (1 samples, 0.04%)</title><rect x="1122.6" y="773" width="0.4" height="15.0" fill="rgb(211,112,27)" rx="2" ry="2" />
<text  x="1125.58" y="783.5" ></text>
</g>
<g >
<title>llvm::TryToSimplifyUncondBranchFromEmptyBlock (1 samples, 0.04%)</title><rect x="900.1" y="629" width="0.4" height="15.0" fill="rgb(227,159,29)" rx="2" ry="2" />
<text  x="903.07" y="639.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl (1 samples, 0.04%)</title><rect x="904.5" y="533" width="0.4" height="15.0" fill="rgb(244,152,49)" rx="2" ry="2" />
<text  x="907.47" y="543.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (1 samples, 0.04%)</title><rect x="1147.3" y="869" width="0.4" height="15.0" fill="rgb(232,86,2)" rx="2" ry="2" />
<text  x="1150.26" y="879.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitVarDecl (1 samples, 0.04%)</title><rect x="1115.1" y="789" width="0.4" height="15.0" fill="rgb(243,227,28)" rx="2" ry="2" />
<text  x="1118.09" y="799.5" ></text>
</g>
<g >
<title>llvm::DomTreeUpdater::applyUpdatesPermissive (1 samples, 0.04%)</title><rect x="899.6" y="613" width="0.5" height="15.0" fill="rgb(254,201,4)" rx="2" ry="2" />
<text  x="902.63" y="623.5" ></text>
</g>
<g >
<title>llvm::AttributeSetNode::get (1 samples, 0.04%)</title><rect x="1112.9" y="725" width="0.4" height="15.0" fill="rgb(242,86,13)" rx="2" ry="2" />
<text  x="1115.89" y="735.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolutionWrapperPass::runOnFunction (1 samples, 0.04%)</title><rect x="1061.3" y="613" width="0.5" height="15.0" fill="rgb(235,2,54)" rx="2" ry="2" />
<text  x="1064.34" y="623.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateArgument (1 samples, 0.04%)</title><rect x="1124.8" y="741" width="0.4" height="15.0" fill="rgb(210,91,33)" rx="2" ry="2" />
<text  x="1127.79" y="751.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCompoundStmtWithoutScope (1 samples, 0.04%)</title><rect x="1102.3" y="965" width="0.5" height="15.0" fill="rgb(241,104,13)" rx="2" ry="2" />
<text  x="1105.32" y="975.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::DoInstructionSelection (1 samples, 0.04%)</title><rect x="1151.7" y="885" width="0.4" height="15.0" fill="rgb(251,77,16)" rx="2" ry="2" />
<text  x="1154.67" y="895.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitForStmt (1 samples, 0.04%)</title><rect x="1105.4" y="885" width="0.4" height="15.0" fill="rgb(217,177,16)" rx="2" ry="2" />
<text  x="1108.40" y="895.5" ></text>
</g>
<g >
<title>TCling::LoadPCMImpl (1 samples, 0.04%)</title><rect x="905.4" y="949" width="0.4" height="15.0" fill="rgb(245,163,46)" rx="2" ry="2" />
<text  x="908.35" y="959.5" ></text>
</g>
<g >
<title>TLeafI::GetValue (6 samples, 0.22%)</title><rect x="682.0" y="901" width="2.6" height="15.0" fill="rgb(244,218,7)" rx="2" ry="2" />
<text  x="684.96" y="911.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertRecordDeclType (1 samples, 0.04%)</title><rect x="1117.7" y="805" width="0.5" height="15.0" fill="rgb(219,145,21)" rx="2" ry="2" />
<text  x="1120.74" y="815.5" ></text>
</g>
<g >
<title>llvm::BasicAAResult::pointsToConstantMemory (1 samples, 0.04%)</title><rect x="894.8" y="613" width="0.4" height="15.0" fill="rgb(239,72,52)" rx="2" ry="2" />
<text  x="897.78" y="623.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTypenameType (1 samples, 0.04%)</title><rect x="1137.1" y="773" width="0.5" height="15.0" fill="rgb(226,183,8)" rx="2" ry="2" />
<text  x="1140.12" y="783.5" ></text>
</g>
<g >
<title>clang::ASTReader::FindExternalLexicalDecls (1 samples, 0.04%)</title><rect x="783.7" y="613" width="0.5" height="15.0" fill="rgb(208,115,27)" rx="2" ry="2" />
<text  x="786.74" y="623.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.04%)</title><rect x="1128.3" y="789" width="0.5" height="15.0" fill="rgb(225,152,17)" rx="2" ry="2" />
<text  x="1131.31" y="799.5" ></text>
</g>
<g >
<title>__GI___read (2 samples, 0.07%)</title><rect x="18.4" y="309" width="0.9" height="15.0" fill="rgb(250,31,11)" rx="2" ry="2" />
<text  x="21.37" y="319.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitAggExpr (2 samples, 0.07%)</title><rect x="1107.6" y="773" width="0.9" height="15.0" fill="rgb(207,180,44)" rx="2" ry="2" />
<text  x="1110.60" y="783.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.11%)</title><rect x="1066.6" y="709" width="1.3" height="15.0" fill="rgb(220,105,47)" rx="2" ry="2" />
<text  x="1069.62" y="719.5" ></text>
</g>
<g >
<title>llvm::AttributeList::getAttribute (1 samples, 0.04%)</title><rect x="1046.4" y="565" width="0.4" height="15.0" fill="rgb(217,190,49)" rx="2" ry="2" />
<text  x="1049.36" y="575.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (1 samples, 0.04%)</title><rect x="1094.8" y="837" width="0.5" height="15.0" fill="rgb(222,194,27)" rx="2" ry="2" />
<text  x="1097.82" y="847.5" ></text>
</g>
<g >
<title>clang::Sema::BuildDeclRefExpr (1 samples, 0.04%)</title><rect x="1141.1" y="757" width="0.4" height="15.0" fill="rgb(252,78,18)" rx="2" ry="2" />
<text  x="1144.09" y="767.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitLValue (1 samples, 0.04%)</title><rect x="1103.2" y="965" width="0.4" height="15.0" fill="rgb(230,26,43)" rx="2" ry="2" />
<text  x="1106.20" y="975.5" ></text>
</g>
<g >
<title>llvm::PMTopLevelManager::findAnalysisPass (23 samples, 0.86%)</title><rect x="854.2" y="549" width="10.2" height="15.0" fill="rgb(249,73,8)" rx="2" ry="2" />
<text  x="857.24" y="559.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddTemplateArgument (1 samples, 0.04%)</title><rect x="1123.0" y="549" width="0.5" height="15.0" fill="rgb(245,6,5)" rx="2" ry="2" />
<text  x="1126.02" y="559.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord (2 samples, 0.07%)</title><rect x="1100.1" y="965" width="0.9" height="15.0" fill="rgb(220,75,40)" rx="2" ry="2" />
<text  x="1103.11" y="975.5" ></text>
</g>
<g >
<title>make_child (5 samples, 0.19%)</title><rect x="14.0" y="325" width="2.2" height="15.0" fill="rgb(245,61,40)" rx="2" ry="2" />
<text  x="16.97" y="335.5" ></text>
</g>
<g >
<title>clang::ASTContext::getAsArrayType (1 samples, 0.04%)</title><rect x="1142.4" y="725" width="0.5" height="15.0" fill="rgb(253,68,27)" rx="2" ry="2" />
<text  x="1145.41" y="735.5" ></text>
</g>
<g >
<title>llvm::ExecutionDomainFix::processBasicBlock (1 samples, 0.04%)</title><rect x="841.5" y="533" width="0.4" height="15.0" fill="rgb(223,152,2)" rx="2" ry="2" />
<text  x="844.46" y="543.5" ></text>
</g>
<g >
<title>[bash] (21 samples, 0.78%)</title><rect x="12.6" y="629" width="9.3" height="15.0" fill="rgb(248,8,7)" rx="2" ry="2" />
<text  x="15.64" y="639.5" ></text>
</g>
<g >
<title>llvm::upward_defs_iterator::fillInCurrentPair (1 samples, 0.04%)</title><rect x="1151.2" y="725" width="0.5" height="15.0" fill="rgb(208,45,38)" rx="2" ry="2" />
<text  x="1154.22" y="735.5" ></text>
</g>
<g >
<title>__GI__IO_file_underflow (6 samples, 0.22%)</title><rect x="1090.4" y="805" width="2.7" height="15.0" fill="rgb(237,158,18)" rx="2" ry="2" />
<text  x="1093.42" y="815.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitSimpleStmt (2 samples, 0.07%)</title><rect x="1107.6" y="885" width="0.9" height="15.0" fill="rgb(233,2,50)" rx="2" ry="2" />
<text  x="1110.60" y="895.5" ></text>
</g>
<g >
<title>clang::ASTReader::readTypeRecord (1 samples, 0.04%)</title><rect x="1100.6" y="837" width="0.4" height="15.0" fill="rgb(230,156,34)" rx="2" ry="2" />
<text  x="1103.55" y="847.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobal (2 samples, 0.07%)</title><rect x="1108.9" y="949" width="0.9" height="15.0" fill="rgb(251,93,31)" rx="2" ry="2" />
<text  x="1111.92" y="959.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;std::add_pointer, (anonymous namespace)::SequenceChecker, void&gt;::Visit (1 samples, 0.04%)</title><rect x="1134.5" y="693" width="0.4" height="15.0" fill="rgb(225,23,24)" rx="2" ry="2" />
<text  x="1137.48" y="703.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization (2 samples, 0.07%)</title><rect x="1139.8" y="885" width="0.8" height="15.0" fill="rgb(235,136,1)" rx="2" ry="2" />
<text  x="1142.77" y="895.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.04%)</title><rect x="1112.0" y="533" width="0.4" height="15.0" fill="rgb(217,30,11)" rx="2" ry="2" />
<text  x="1115.01" y="543.5" ></text>
</g>
<g >
<title>execute_command_internal (4 samples, 0.15%)</title><rect x="22.3" y="757" width="1.8" height="15.0" fill="rgb(240,171,29)" rx="2" ry="2" />
<text  x="25.34" y="767.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="1115.5" y="661" width="0.5" height="15.0" fill="rgb(229,161,51)" rx="2" ry="2" />
<text  x="1118.53" y="671.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="10.4" y="277" width="0.5" height="15.0" fill="rgb(205,222,22)" rx="2" ry="2" />
<text  x="13.44" y="287.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::GenerateCode (1 samples, 0.04%)</title><rect x="1115.1" y="901" width="0.4" height="15.0" fill="rgb(253,30,3)" rx="2" ry="2" />
<text  x="1118.09" y="911.5" ></text>
</g>
<g >
<title>cling::MetaSema::actOnxCommand (2 samples, 0.07%)</title><rect x="684.6" y="901" width="0.9" height="15.0" fill="rgb(211,196,8)" rx="2" ry="2" />
<text  x="687.60" y="911.5" ></text>
</g>
<g >
<title>llvm::DAGTypeLegalizer::SetPromotedInteger (1 samples, 0.04%)</title><rect x="1157.8" y="757" width="0.5" height="15.0" fill="rgb(212,49,7)" rx="2" ry="2" />
<text  x="1160.83" y="767.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit (1 samples, 0.04%)</title><rect x="904.5" y="581" width="0.4" height="15.0" fill="rgb(253,4,46)" rx="2" ry="2" />
<text  x="907.47" y="591.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.07%)</title><rect x="1187.8" y="821" width="0.9" height="15.0" fill="rgb(242,140,8)" rx="2" ry="2" />
<text  x="1190.80" y="831.5" ></text>
</g>
<g >
<title>llvm::X86TargetLowering::getRegisterTypeForCallingConv (1 samples, 0.04%)</title><rect x="1146.4" y="645" width="0.4" height="15.0" fill="rgb(223,95,16)" rx="2" ry="2" />
<text  x="1149.38" y="655.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord (1 samples, 0.04%)</title><rect x="1099.2" y="901" width="0.5" height="15.0" fill="rgb(236,134,21)" rx="2" ry="2" />
<text  x="1102.23" y="911.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.11%)</title><rect x="14.8" y="261" width="1.4" height="15.0" fill="rgb(228,161,7)" rx="2" ry="2" />
<text  x="17.85" y="271.5" ></text>
</g>
<g >
<title>llvm::Attribute::hasAttribute (1 samples, 0.04%)</title><rect x="1062.2" y="533" width="0.5" height="15.0" fill="rgb(225,187,39)" rx="2" ry="2" />
<text  x="1065.22" y="543.5" ></text>
</g>
<g >
<title>inflate (446 samples, 16.65%)</title><rect x="447.5" y="853" width="196.6" height="15.0" fill="rgb(240,153,52)" rx="2" ry="2" />
<text  x="450.54" y="863.5" >inflate</text>
</g>
<g >
<title>ls (5 samples, 0.19%)</title><rect x="24.1" y="981" width="2.2" height="15.0" fill="rgb(254,184,48)" rx="2" ry="2" />
<text  x="27.10" y="991.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.04%)</title><rect x="1138.4" y="821" width="0.5" height="15.0" fill="rgb(222,68,1)" rx="2" ry="2" />
<text  x="1141.45" y="831.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTBAA::getBaseTypeInfoHelper (1 samples, 0.04%)</title><rect x="1103.2" y="789" width="0.4" height="15.0" fill="rgb(249,17,27)" rx="2" ry="2" />
<text  x="1106.20" y="799.5" ></text>
</g>
<g >
<title>clang::TemplateDeclInstantiator::VisitCXXRecordDecl (1 samples, 0.04%)</title><rect x="1132.3" y="629" width="0.4" height="15.0" fill="rgb(218,27,27)" rx="2" ry="2" />
<text  x="1135.28" y="639.5" ></text>
</g>
<g >
<title>TCling::LoadLibraryMap (11 samples, 0.41%)</title><rect x="1071.5" y="869" width="4.8" height="15.0" fill="rgb(219,110,46)" rx="2" ry="2" />
<text  x="1074.47" y="879.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1078.1" y="741" width="0.4" height="15.0" fill="rgb(247,188,1)" rx="2" ry="2" />
<text  x="1081.08" y="751.5" ></text>
</g>
<g >
<title>llvm::PHINode::addIncoming (1 samples, 0.04%)</title><rect x="900.1" y="613" width="0.4" height="15.0" fill="rgb(250,179,20)" rx="2" ry="2" />
<text  x="903.07" y="623.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateArgument (1 samples, 0.04%)</title><rect x="1138.4" y="853" width="0.5" height="15.0" fill="rgb(241,93,22)" rx="2" ry="2" />
<text  x="1141.45" y="863.5" ></text>
</g>
<g >
<title>clang::Module::~Module (1 samples, 0.04%)</title><rect x="1027.8" y="677" width="0.5" height="15.0" fill="rgb(229,178,2)" rx="2" ry="2" />
<text  x="1030.85" y="687.5" ></text>
</g>
<g >
<title>CheckConvertedConstantExpression (1 samples, 0.04%)</title><rect x="1138.9" y="757" width="0.4" height="15.0" fill="rgb(210,110,51)" rx="2" ry="2" />
<text  x="1141.89" y="767.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (3 samples, 0.11%)</title><rect x="901.4" y="677" width="1.3" height="15.0" fill="rgb(211,48,41)" rx="2" ry="2" />
<text  x="904.39" y="687.5" ></text>
</g>
<g >
<title>__GI__IO_file_underflow (1 samples, 0.04%)</title><rect x="1075.0" y="789" width="0.4" height="15.0" fill="rgb(206,72,20)" rx="2" ry="2" />
<text  x="1078.00" y="799.5" ></text>
</g>
<g >
<title>llvm::hashing::detail::hash_combine_range_impl&lt;unsigned int const&gt; (1 samples, 0.04%)</title><rect x="1112.9" y="693" width="0.4" height="15.0" fill="rgb(243,138,2)" rx="2" ry="2" />
<text  x="1115.89" y="703.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (22 samples, 0.82%)</title><rect x="890.8" y="725" width="9.7" height="15.0" fill="rgb(209,195,30)" rx="2" ry="2" />
<text  x="893.81" y="735.5" ></text>
</g>
<g >
<title>TClass::CallShowMembers (1 samples, 0.04%)</title><rect x="783.3" y="805" width="0.4" height="15.0" fill="rgb(231,66,50)" rx="2" ry="2" />
<text  x="786.30" y="815.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateArgument (2 samples, 0.07%)</title><rect x="1131.8" y="805" width="0.9" height="15.0" fill="rgb(248,53,53)" rx="2" ry="2" />
<text  x="1134.84" y="815.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::runStaticInitializersOnce (7 samples, 0.26%)</title><rect x="900.5" y="709" width="3.1" height="15.0" fill="rgb(218,138,18)" rx="2" ry="2" />
<text  x="903.51" y="719.5" ></text>
</g>
<g >
<title>clang::TemplateDeclInstantiator::VisitCXXMethodDecl (1 samples, 0.04%)</title><rect x="1136.2" y="885" width="0.5" height="15.0" fill="rgb(253,26,5)" rx="2" ry="2" />
<text  x="1139.24" y="895.5" ></text>
</g>
<g >
<title>llvm::SelectionDAG::Combine (1 samples, 0.04%)</title><rect x="785.5" y="725" width="0.4" height="15.0" fill="rgb(249,128,14)" rx="2" ry="2" />
<text  x="788.50" y="735.5" ></text>
</g>
<g >
<title>_dl_start_user (1 samples, 0.04%)</title><rect x="1171.9" y="965" width="0.5" height="15.0" fill="rgb(230,207,44)" rx="2" ry="2" />
<text  x="1174.93" y="975.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTBAA::getTypeInfo (1 samples, 0.04%)</title><rect x="1103.2" y="853" width="0.4" height="15.0" fill="rgb(216,228,50)" rx="2" ry="2" />
<text  x="1106.20" y="863.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (1 samples, 0.04%)</title><rect x="1064.9" y="613" width="0.4" height="15.0" fill="rgb(227,190,24)" rx="2" ry="2" />
<text  x="1067.86" y="623.5" ></text>
</g>
<g >
<title>clang::Sema::CreateOverloadedBinOp (1 samples, 0.04%)</title><rect x="1118.6" y="917" width="0.5" height="15.0" fill="rgb(220,63,41)" rx="2" ry="2" />
<text  x="1121.62" y="927.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="1072.4" y="757" width="0.4" height="15.0" fill="rgb(232,29,49)" rx="2" ry="2" />
<text  x="1075.35" y="767.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitRedeclarableTemplateDecl (1 samples, 0.04%)</title><rect x="1099.2" y="661" width="0.5" height="15.0" fill="rgb(205,228,33)" rx="2" ry="2" />
<text  x="1102.23" y="671.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke (2 samples, 0.07%)</title><rect x="1158.7" y="965" width="0.9" height="15.0" fill="rgb(214,148,41)" rx="2" ry="2" />
<text  x="1161.72" y="975.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertRecordDeclType (1 samples, 0.04%)</title><rect x="1117.7" y="869" width="0.5" height="15.0" fill="rgb(211,61,44)" rx="2" ry="2" />
<text  x="1120.74" y="879.5" ></text>
</g>
<g >
<title>llvm::AttributeSetNode::hasAttribute (2 samples, 0.07%)</title><rect x="845.0" y="533" width="0.9" height="15.0" fill="rgb(237,205,20)" rx="2" ry="2" />
<text  x="847.99" y="543.5" ></text>
</g>
<g >
<title>llvm::SelectionDAG::Legalize (1 samples, 0.04%)</title><rect x="1145.9" y="645" width="0.5" height="15.0" fill="rgb(220,157,33)" rx="2" ry="2" />
<text  x="1148.94" y="655.5" ></text>
</g>
<g >
<title>clang::ASTStmtReader::VisitUnresolvedLookupExpr (1 samples, 0.04%)</title><rect x="1132.7" y="885" width="0.5" height="15.0" fill="rgb(241,36,5)" rx="2" ry="2" />
<text  x="1135.72" y="895.5" ></text>
</g>
<g >
<title>cling::Interpreter::EvaluateInternal (44 samples, 1.64%)</title><rect x="689.0" y="885" width="19.4" height="15.0" fill="rgb(240,77,52)" rx="2" ry="2" />
<text  x="692.01" y="895.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitPointerWithAlignment (1 samples, 0.04%)</title><rect x="1103.2" y="917" width="0.4" height="15.0" fill="rgb(241,53,12)" rx="2" ry="2" />
<text  x="1106.20" y="927.5" ></text>
</g>
<g >
<title>clang::ASTReader::CompleteRedeclChain (1 samples, 0.04%)</title><rect x="1131.0" y="613" width="0.4" height="15.0" fill="rgb(212,170,28)" rx="2" ry="2" />
<text  x="1133.96" y="623.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (2 samples, 0.07%)</title><rect x="1152.5" y="853" width="0.9" height="15.0" fill="rgb(215,149,48)" rx="2" ry="2" />
<text  x="1155.55" y="863.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;std::add_pointer, (anonymous namespace)::ScalarExprEmitter, llvm::Value*&gt;::Visit (1 samples, 0.04%)</title><rect x="1102.8" y="789" width="0.4" height="15.0" fill="rgb(218,76,36)" rx="2" ry="2" />
<text  x="1105.76" y="799.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="895.7" y="645" width="0.4" height="15.0" fill="rgb(241,21,42)" rx="2" ry="2" />
<text  x="898.66" y="655.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::runStaticInitializersOnce (84 samples, 3.14%)</title><rect x="1028.7" y="677" width="37.0" height="15.0" fill="rgb(238,90,50)" rx="2" ry="2" />
<text  x="1031.73" y="687.5" >cli..</text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1138.9" y="917" width="0.4" height="15.0" fill="rgb(212,135,24)" rx="2" ry="2" />
<text  x="1141.89" y="927.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertTypeForMem (1 samples, 0.04%)</title><rect x="1117.7" y="773" width="0.5" height="15.0" fill="rgb(230,23,9)" rx="2" ry="2" />
<text  x="1120.74" y="783.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ComputeRecordLayout (1 samples, 0.04%)</title><rect x="1117.3" y="789" width="0.4" height="15.0" fill="rgb(247,120,12)" rx="2" ry="2" />
<text  x="1120.30" y="799.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (1 samples, 0.04%)</title><rect x="1124.8" y="933" width="0.4" height="15.0" fill="rgb(215,117,51)" rx="2" ry="2" />
<text  x="1127.79" y="943.5" ></text>
</g>
<g >
<title>llvm::orc::LambdaSymbolResolver&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt; const&amp;)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}&gt;::lookup (2 samples, 0.07%)</title><rect x="867.5" y="565" width="0.8" height="15.0" fill="rgb(252,144,18)" rx="2" ry="2" />
<text  x="870.46" y="575.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnModule (2 samples, 0.07%)</title><rect x="1152.5" y="837" width="0.9" height="15.0" fill="rgb(207,74,28)" rx="2" ry="2" />
<text  x="1155.55" y="847.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::createSCEV (1 samples, 0.04%)</title><rect x="1159.2" y="485" width="0.4" height="15.0" fill="rgb(231,156,17)" rx="2" ry="2" />
<text  x="1162.16" y="495.5" ></text>
</g>
<g >
<title>llvm::legacy::FunctionPassManagerImpl::run (3 samples, 0.11%)</title><rect x="1028.7" y="629" width="1.4" height="15.0" fill="rgb(217,92,48)" rx="2" ry="2" />
<text  x="1031.73" y="639.5" ></text>
</g>
<g >
<title>clang::CXXRecordDecl::DefinitionData::getBasesSlowCase (1 samples, 0.04%)</title><rect x="1123.5" y="677" width="0.4" height="15.0" fill="rgb(205,94,20)" rx="2" ry="2" />
<text  x="1126.47" y="687.5" ></text>
</g>
<g >
<title>llvm::object::ELFFile&lt;llvm::object::ELFType&lt;(llvm::support::endianness)1, true&gt; &gt;::sections (1 samples, 0.04%)</title><rect x="878.5" y="517" width="0.4" height="15.0" fill="rgb(226,130,0)" rx="2" ry="2" />
<text  x="881.48" y="527.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveExternalSymbols (4 samples, 0.15%)</title><rect x="1148.1" y="789" width="1.8" height="15.0" fill="rgb(216,225,51)" rx="2" ry="2" />
<text  x="1151.14" y="799.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.11%)</title><rect x="1066.6" y="677" width="1.3" height="15.0" fill="rgb(218,32,53)" rx="2" ry="2" />
<text  x="1069.62" y="687.5" ></text>
</g>
<g >
<title>TUnixSystem::FindDynamicLibrary (40 samples, 1.49%)</title><rect x="1076.3" y="885" width="17.6" height="15.0" fill="rgb(218,115,48)" rx="2" ry="2" />
<text  x="1079.32" y="895.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit (1 samples, 0.04%)</title><rect x="1099.2" y="789" width="0.5" height="15.0" fill="rgb(217,197,44)" rx="2" ry="2" />
<text  x="1102.23" y="799.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitRedeclarable&lt;clang::RedeclarableTemplateDecl&gt; (1 samples, 0.04%)</title><rect x="1099.2" y="645" width="0.5" height="15.0" fill="rgb(210,190,52)" rx="2" ry="2" />
<text  x="1102.23" y="655.5" ></text>
</g>
<g >
<title>default_tty_job_signals (1 samples, 0.04%)</title><rect x="21.9" y="197" width="0.4" height="15.0" fill="rgb(226,177,8)" rx="2" ry="2" />
<text  x="24.90" y="207.5" ></text>
</g>
<g >
<title>cling::Interpreter::DeclareInternal (1 samples, 0.04%)</title><rect x="903.6" y="677" width="0.4" height="15.0" fill="rgb(238,158,4)" rx="2" ry="2" />
<text  x="906.59" y="687.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTSIInObjectScope (2 samples, 0.07%)</title><rect x="1141.1" y="965" width="0.9" height="15.0" fill="rgb(251,217,40)" rx="2" ry="2" />
<text  x="1144.09" y="975.5" ></text>
</g>
<g >
<title>llvm::MachineBasicBlock::addSuccessor (1 samples, 0.04%)</title><rect x="907.1" y="501" width="0.5" height="15.0" fill="rgb(242,125,54)" rx="2" ry="2" />
<text  x="910.12" y="511.5" ></text>
</g>
<g >
<title>do_lookup_x (3 samples, 0.11%)</title><rect x="24.5" y="869" width="1.4" height="15.0" fill="rgb(227,66,5)" rx="2" ry="2" />
<text  x="27.54" y="879.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="19.3" y="517" width="0.4" height="15.0" fill="rgb(213,7,54)" rx="2" ry="2" />
<text  x="22.25" y="527.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::~PMDataManager (1 samples, 0.04%)</title><rect x="904.0" y="565" width="0.5" height="15.0" fill="rgb(253,215,32)" rx="2" ry="2" />
<text  x="907.03" y="575.5" ></text>
</g>
<g >
<title>llvm::X86TargetMachine::getSubtargetImpl (2 samples, 0.07%)</title><rect x="865.7" y="581" width="0.9" height="15.0" fill="rgb(234,57,24)" rx="2" ry="2" />
<text  x="868.70" y="591.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitTemplateDecl (1 samples, 0.04%)</title><rect x="1099.7" y="725" width="0.4" height="15.0" fill="rgb(221,70,53)" rx="2" ry="2" />
<text  x="1102.67" y="735.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCompoundStmt (1 samples, 0.04%)</title><rect x="1116.0" y="885" width="0.4" height="15.0" fill="rgb(205,69,28)" rx="2" ry="2" />
<text  x="1118.97" y="895.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;, void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;::LookupBucketFor&lt;void const*&gt; (1 samples, 0.04%)</title><rect x="1064.4" y="581" width="0.5" height="15.0" fill="rgb(224,168,4)" rx="2" ry="2" />
<text  x="1067.42" y="591.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1093.9" y="629" width="0.5" height="15.0" fill="rgb(238,97,26)" rx="2" ry="2" />
<text  x="1096.94" y="639.5" ></text>
</g>
<g >
<title>__GI___qsort_r (1 samples, 0.04%)</title><rect x="25.9" y="853" width="0.4" height="15.0" fill="rgb(241,13,49)" rx="2" ry="2" />
<text  x="28.86" y="863.5" ></text>
</g>
<g >
<title>isInstantiationOf (1 samples, 0.04%)</title><rect x="1129.2" y="661" width="0.4" height="15.0" fill="rgb(218,143,53)" rx="2" ry="2" />
<text  x="1132.19" y="671.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (1 samples, 0.04%)</title><rect x="1150.8" y="709" width="0.4" height="15.0" fill="rgb(235,3,27)" rx="2" ry="2" />
<text  x="1153.78" y="719.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType (1 samples, 0.04%)</title><rect x="1127.0" y="741" width="0.4" height="15.0" fill="rgb(249,12,17)" rx="2" ry="2" />
<text  x="1129.99" y="751.5" ></text>
</g>
<g >
<title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::MachineBasicBlock, true&gt; &gt;::~SemiNCAInfo (1 samples, 0.04%)</title><rect x="842.8" y="533" width="0.4" height="15.0" fill="rgb(212,46,16)" rx="2" ry="2" />
<text  x="845.79" y="543.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitSimpleStmt (1 samples, 0.04%)</title><rect x="1116.0" y="901" width="0.4" height="15.0" fill="rgb(220,203,34)" rx="2" ry="2" />
<text  x="1118.97" y="911.5" ></text>
</g>
<g >
<title>clang::RedeclarableTemplateDecl::loadLazySpecializationsImpl (1 samples, 0.04%)</title><rect x="1135.8" y="709" width="0.4" height="15.0" fill="rgb(225,34,53)" rx="2" ry="2" />
<text  x="1138.80" y="719.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1169.3" y="885" width="0.4" height="15.0" fill="rgb(207,169,22)" rx="2" ry="2" />
<text  x="1172.29" y="895.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (1 samples, 0.04%)</title><rect x="1032.7" y="597" width="0.4" height="15.0" fill="rgb(218,114,23)" rx="2" ry="2" />
<text  x="1035.70" y="607.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTSIInObjectScope (1 samples, 0.04%)</title><rect x="1141.5" y="821" width="0.5" height="15.0" fill="rgb(220,151,38)" rx="2" ry="2" />
<text  x="1144.53" y="831.5" ></text>
</g>
<g >
<title>clang::CXXRecordDecl::isDerivedFrom (1 samples, 0.04%)</title><rect x="1119.5" y="837" width="0.4" height="15.0" fill="rgb(207,2,21)" rx="2" ry="2" />
<text  x="1122.50" y="847.5" ></text>
</g>
<g >
<title>clang::ASTReader::CompleteRedeclChain (1 samples, 0.04%)</title><rect x="1103.2" y="437" width="0.4" height="15.0" fill="rgb(205,55,4)" rx="2" ry="2" />
<text  x="1106.20" y="447.5" ></text>
</g>
<g >
<title>llvm::runIPSCCP (1 samples, 0.04%)</title><rect x="1145.1" y="933" width="0.4" height="15.0" fill="rgb(239,125,48)" rx="2" ry="2" />
<text  x="1148.06" y="943.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl (2 samples, 0.07%)</title><rect x="1128.8" y="901" width="0.8" height="15.0" fill="rgb(215,127,29)" rx="2" ry="2" />
<text  x="1131.75" y="911.5" ></text>
</g>
<g >
<title>llvm::PMTopLevelManager::findAnalysisPassInfo (1 samples, 0.04%)</title><rect x="850.3" y="549" width="0.4" height="15.0" fill="rgb(216,155,3)" rx="2" ry="2" />
<text  x="853.28" y="559.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.04%)</title><rect x="786.4" y="773" width="0.4" height="15.0" fill="rgb(220,155,31)" rx="2" ry="2" />
<text  x="789.39" y="783.5" ></text>
</g>
<g >
<title>clang::ClassTemplateDecl::getPartialSpecializations (1 samples, 0.04%)</title><rect x="1142.0" y="597" width="0.4" height="15.0" fill="rgb(235,104,22)" rx="2" ry="2" />
<text  x="1144.97" y="607.5" ></text>
</g>
<g >
<title>llvm::PHITransAddr::Verify (1 samples, 0.04%)</title><rect x="1151.2" y="693" width="0.5" height="15.0" fill="rgb(246,89,34)" rx="2" ry="2" />
<text  x="1154.22" y="703.5" ></text>
</g>
<g >
<title>llvm::CallGraph::CallGraph (1 samples, 0.04%)</title><rect x="1030.1" y="629" width="0.4" height="15.0" fill="rgb(206,127,8)" rx="2" ry="2" />
<text  x="1033.05" y="639.5" ></text>
</g>
<g >
<title>clang::Decl::isInAnonymousNamespace (1 samples, 0.04%)</title><rect x="1105.4" y="469" width="0.4" height="15.0" fill="rgb(254,191,4)" rx="2" ry="2" />
<text  x="1108.40" y="479.5" ></text>
</g>
<g >
<title>clang::Sema::CompareReferenceRelationship (1 samples, 0.04%)</title><rect x="1119.5" y="853" width="0.4" height="15.0" fill="rgb(206,48,42)" rx="2" ry="2" />
<text  x="1122.50" y="863.5" ></text>
</g>
<g >
<title>clang::Sema::SubstType (1 samples, 0.04%)</title><rect x="1143.3" y="869" width="0.4" height="15.0" fill="rgb(219,52,31)" rx="2" ry="2" />
<text  x="1146.29" y="879.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::MachineBasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::MachineBasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::MachineBasicBlock&gt; &gt; &gt;, llvm::DenseMapInfo&lt;llvm::MachineBasicBlock*&gt;, llvm::detail::DenseMapPair&lt;llvm::MachineBasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::MachineBasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::MachineBasicBlock&gt; &gt; &gt; &gt; &gt;, llvm::MachineBasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::MachineBasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::MachineBasicBlock&gt; &gt; &gt;, llvm::DenseMapInfo&lt;llvm::MachineBasicBlock*&gt;, llvm::detail::DenseMapPair&lt;llvm::MachineBasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::MachineBasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::MachineBasicBlock&gt; &gt; &gt; &gt; &gt;::FindAndConstruct (1 samples, 0.04%)</title><rect x="841.9" y="533" width="0.4" height="15.0" fill="rgb(205,42,5)" rx="2" ry="2" />
<text  x="844.90" y="543.5" ></text>
</g>
<g >
<title>__GI___fork (5 samples, 0.19%)</title><rect x="1166.6" y="949" width="2.2" height="15.0" fill="rgb(238,52,10)" rx="2" ry="2" />
<text  x="1169.65" y="959.5" ></text>
</g>
<g >
<title>runImpl (1 samples, 0.04%)</title><rect x="902.3" y="661" width="0.4" height="15.0" fill="rgb(250,126,36)" rx="2" ry="2" />
<text  x="905.27" y="671.5" ></text>
</g>
<g >
<title>fgets (15 samples, 0.56%)</title><rect x="1087.3" y="853" width="6.6" height="15.0" fill="rgb(225,221,40)" rx="2" ry="2" />
<text  x="1090.33" y="863.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1172.4" y="709" width="0.4" height="15.0" fill="rgb(223,140,26)" rx="2" ry="2" />
<text  x="1175.37" y="719.5" ></text>
</g>
<g >
<title>getAllocationData (1 samples, 0.04%)</title><rect x="1150.3" y="613" width="0.5" height="15.0" fill="rgb(215,171,39)" rx="2" ry="2" />
<text  x="1153.34" y="623.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::freePass (3 samples, 0.11%)</title><rect x="1037.5" y="613" width="1.4" height="15.0" fill="rgb(222,209,45)" rx="2" ry="2" />
<text  x="1040.54" y="623.5" ></text>
</g>
<g >
<title>ROOT::Internal::RDF::InterpreterCalc (2 samples, 0.07%)</title><rect x="785.1" y="965" width="0.8" height="15.0" fill="rgb(239,174,53)" rx="2" ry="2" />
<text  x="788.06" y="975.5" ></text>
</g>
<g >
<title>llvm::orc::JITSymbolResolverAdapter::lookup (136 samples, 5.08%)</title><rect x="830.0" y="709" width="59.9" height="15.0" fill="rgb(216,99,47)" rx="2" ry="2" />
<text  x="833.01" y="719.5" >llvm::..</text>
</g>
<g >
<title>clang::Sema::BuildCXXForRangeStmt (1 samples, 0.04%)</title><rect x="1120.4" y="965" width="0.4" height="15.0" fill="rgb(251,168,14)" rx="2" ry="2" />
<text  x="1123.38" y="975.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::runOnMachineFunction (3 samples, 0.11%)</title><rect x="1157.0" y="853" width="1.3" height="15.0" fill="rgb(227,150,24)" rx="2" ry="2" />
<text  x="1159.95" y="863.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitConstructorBody (1 samples, 0.04%)</title><rect x="1115.5" y="933" width="0.5" height="15.0" fill="rgb(232,114,22)" rx="2" ry="2" />
<text  x="1118.53" y="943.5" ></text>
</g>
<g >
<title>clang::Decl::setInvalidDecl (1 samples, 0.04%)</title><rect x="1117.3" y="389" width="0.4" height="15.0" fill="rgb(223,33,14)" rx="2" ry="2" />
<text  x="1120.30" y="399.5" ></text>
</g>
<g >
<title>clang::ASTReader::FindExternalLexicalDecls (1 samples, 0.04%)</title><rect x="904.5" y="821" width="0.4" height="15.0" fill="rgb(234,90,37)" rx="2" ry="2" />
<text  x="907.47" y="831.5" ></text>
</g>
<g >
<title>llvm::object::ELFFile&lt;llvm::object::ELFType&lt;(llvm::support::endianness)1, true&gt; &gt;::sections (1 samples, 0.04%)</title><rect x="830.0" y="581" width="0.4" height="15.0" fill="rgb(253,113,23)" rx="2" ry="2" />
<text  x="833.01" y="591.5" ></text>
</g>
<g >
<title>TApplication::ExecuteFile (1 samples, 0.04%)</title><rect x="904.0" y="853" width="0.5" height="15.0" fill="rgb(242,201,43)" rx="2" ry="2" />
<text  x="907.03" y="863.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallExpr (1 samples, 0.04%)</title><rect x="1116.0" y="629" width="0.4" height="15.0" fill="rgb(219,145,1)" rx="2" ry="2" />
<text  x="1118.97" y="639.5" ></text>
</g>
<g >
<title>parse_and_execute (39 samples, 1.46%)</title><rect x="1172.4" y="901" width="17.2" height="15.0" fill="rgb(215,151,52)" rx="2" ry="2" />
<text  x="1175.37" y="911.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::executeWrapper (2 samples, 0.07%)</title><rect x="1144.2" y="965" width="0.9" height="15.0" fill="rgb(237,59,32)" rx="2" ry="2" />
<text  x="1147.17" y="975.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit (1 samples, 0.04%)</title><rect x="1099.2" y="693" width="0.5" height="15.0" fill="rgb(228,120,48)" rx="2" ry="2" />
<text  x="1102.23" y="703.5" ></text>
</g>
<g >
<title>clang::CompilerInstance::~CompilerInstance (1 samples, 0.04%)</title><rect x="1027.8" y="773" width="0.5" height="15.0" fill="rgb(211,168,49)" rx="2" ry="2" />
<text  x="1030.85" y="783.5" ></text>
</g>
<g >
<title>IsStandardConversion (1 samples, 0.04%)</title><rect x="1134.0" y="581" width="0.5" height="15.0" fill="rgb(234,72,45)" rx="2" ry="2" />
<text  x="1137.04" y="591.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (1 samples, 0.04%)</title><rect x="1151.7" y="965" width="0.4" height="15.0" fill="rgb(229,162,53)" rx="2" ry="2" />
<text  x="1154.67" y="975.5" ></text>
</g>
<g >
<title>llvm::X86RegisterInfo::getFrameRegister (1 samples, 0.04%)</title><rect x="908.4" y="565" width="0.5" height="15.0" fill="rgb(245,200,32)" rx="2" ry="2" />
<text  x="911.44" y="575.5" ></text>
</g>
<g >
<title>llvm::NamedMDNode::getNumOperands (1 samples, 0.04%)</title><rect x="1035.8" y="565" width="0.4" height="15.0" fill="rgb(229,141,48)" rx="2" ry="2" />
<text  x="1038.78" y="575.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddType (1 samples, 0.04%)</title><rect x="1131.0" y="437" width="0.4" height="15.0" fill="rgb(215,103,41)" rx="2" ry="2" />
<text  x="1133.96" y="447.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1095.3" y="773" width="0.4" height="15.0" fill="rgb(227,205,41)" rx="2" ry="2" />
<text  x="1098.27" y="783.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallExprLValue (1 samples, 0.04%)</title><rect x="1101.9" y="901" width="0.4" height="15.0" fill="rgb(231,26,25)" rx="2" ry="2" />
<text  x="1104.87" y="911.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1137.6" y="949" width="0.4" height="15.0" fill="rgb(244,229,49)" rx="2" ry="2" />
<text  x="1140.57" y="959.5" ></text>
</g>
<g >
<title>llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt;::dominates (1 samples, 0.04%)</title><rect x="1051.6" y="581" width="0.5" height="15.0" fill="rgb(233,40,6)" rx="2" ry="2" />
<text  x="1054.64" y="591.5" ></text>
</g>
<g >
<title>clang::Sema::PerformPendingInstantiations (1 samples, 0.04%)</title><rect x="785.1" y="757" width="0.4" height="15.0" fill="rgb(235,201,21)" rx="2" ry="2" />
<text  x="788.06" y="767.5" ></text>
</g>
<g >
<title>clang::Sema::DeduceTemplateArguments (1 samples, 0.04%)</title><rect x="1142.4" y="805" width="0.5" height="15.0" fill="rgb(252,121,26)" rx="2" ry="2" />
<text  x="1145.41" y="815.5" ></text>
</g>
<g >
<title>cling::MetaSema::actOnxCommand (7 samples, 0.26%)</title><rect x="900.5" y="821" width="3.1" height="15.0" fill="rgb(230,135,3)" rx="2" ry="2" />
<text  x="903.51" y="831.5" ></text>
</g>
<g >
<title>R__unzipZLIB (446 samples, 16.65%)</title><rect x="447.5" y="869" width="196.6" height="15.0" fill="rgb(232,93,2)" rx="2" ry="2" />
<text  x="450.54" y="879.5" >R__unzipZLIB</text>
</g>
<g >
<title>llvm::AttributeList::getAttribute (1 samples, 0.04%)</title><rect x="865.7" y="565" width="0.4" height="15.0" fill="rgb(219,124,17)" rx="2" ry="2" />
<text  x="868.70" y="575.5" ></text>
</g>
<g >
<title>llvm::Function::addAttributes (1 samples, 0.04%)</title><rect x="1112.0" y="661" width="0.4" height="15.0" fill="rgb(230,4,5)" rx="2" ry="2" />
<text  x="1115.01" y="671.5" ></text>
</g>
<g >
<title>execute_command_internal (5 samples, 0.19%)</title><rect x="10.4" y="597" width="2.2" height="15.0" fill="rgb(237,125,42)" rx="2" ry="2" />
<text  x="13.44" y="607.5" ></text>
</g>
<g >
<title>llvm::AttrBuilder::addAttribute (1 samples, 0.04%)</title><rect x="1103.6" y="485" width="0.5" height="15.0" fill="rgb(205,215,34)" rx="2" ry="2" />
<text  x="1106.64" y="495.5" ></text>
</g>
<g >
<title>llvm::DAGTypeLegalizer::run (2 samples, 0.07%)</title><rect x="1163.1" y="693" width="0.9" height="15.0" fill="rgb(226,26,43)" rx="2" ry="2" />
<text  x="1166.12" y="703.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::getAddExpr (1 samples, 0.04%)</title><rect x="1159.2" y="549" width="0.4" height="15.0" fill="rgb(224,87,0)" rx="2" ry="2" />
<text  x="1162.16" y="559.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::runOnMachineFunction (1 samples, 0.04%)</title><rect x="785.5" y="773" width="0.4" height="15.0" fill="rgb(241,128,1)" rx="2" ry="2" />
<text  x="788.50" y="783.5" ></text>
</g>
<g >
<title>Evaluate (1 samples, 0.04%)</title><rect x="1138.9" y="725" width="0.4" height="15.0" fill="rgb(249,98,30)" rx="2" ry="2" />
<text  x="1141.89" y="735.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitLValue (1 samples, 0.04%)</title><rect x="1101.9" y="837" width="0.4" height="15.0" fill="rgb(250,182,27)" rx="2" ry="2" />
<text  x="1104.87" y="847.5" ></text>
</g>
<g >
<title>clang::Sema::AddBuiltinOperatorCandidates (1 samples, 0.04%)</title><rect x="1126.5" y="949" width="0.5" height="15.0" fill="rgb(214,209,31)" rx="2" ry="2" />
<text  x="1129.55" y="959.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (1 samples, 0.04%)</title><rect x="1094.8" y="741" width="0.5" height="15.0" fill="rgb(205,52,53)" rx="2" ry="2" />
<text  x="1097.82" y="751.5" ></text>
</g>
<g >
<title>TApplication::ExecuteFile (85 samples, 3.17%)</title><rect x="1028.7" y="901" width="37.5" height="15.0" fill="rgb(235,88,30)" rx="2" ry="2" />
<text  x="1031.73" y="911.5" >TAp..</text>
</g>
<g >
<title>llvm::Pass::getAnalysisIfAvailable&lt;llvm::ScopedNoAliasAAWrapperPass&gt; (1 samples, 0.04%)</title><rect x="831.8" y="565" width="0.4" height="15.0" fill="rgb(236,177,29)" rx="2" ry="2" />
<text  x="834.77" y="575.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl (1 samples, 0.04%)</title><rect x="1099.2" y="917" width="0.5" height="15.0" fill="rgb(243,150,20)" rx="2" ry="2" />
<text  x="1102.23" y="927.5" ></text>
</g>
<g >
<title>llvm::X86TargetMachine::getTargetTransformInfo (1 samples, 0.04%)</title><rect x="906.7" y="517" width="0.4" height="15.0" fill="rgb(228,115,1)" rx="2" ry="2" />
<text  x="909.68" y="527.5" ></text>
</g>
<g >
<title>combineInstructionsOverFunction (1 samples, 0.04%)</title><rect x="1027.0" y="629" width="0.4" height="15.0" fill="rgb(230,164,44)" rx="2" ry="2" />
<text  x="1029.97" y="639.5" ></text>
</g>
<g >
<title>cling::Interpreter::executeTransaction (1 samples, 0.04%)</title><rect x="1150.3" y="821" width="0.5" height="15.0" fill="rgb(213,46,23)" rx="2" ry="2" />
<text  x="1153.34" y="831.5" ></text>
</g>
<g >
<title>clang::TemplateArgumentList::ComputeODRHash (1 samples, 0.04%)</title><rect x="1131.0" y="581" width="0.4" height="15.0" fill="rgb(247,115,35)" rx="2" ry="2" />
<text  x="1133.96" y="591.5" ></text>
</g>
<g >
<title>llvm::MCStreamer::EmitInstruction (1 samples, 0.04%)</title><rect x="908.0" y="501" width="0.4" height="15.0" fill="rgb(221,12,22)" rx="2" ry="2" />
<text  x="911.00" y="511.5" ></text>
</g>
<g >
<title>TCling::Calc (2 samples, 0.07%)</title><rect x="785.1" y="933" width="0.8" height="15.0" fill="rgb(220,146,51)" rx="2" ry="2" />
<text  x="788.06" y="943.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::runOnMachineFunction (3 samples, 0.11%)</title><rect x="1148.1" y="629" width="1.4" height="15.0" fill="rgb(233,212,19)" rx="2" ry="2" />
<text  x="1151.14" y="639.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (2 samples, 0.07%)</title><rect x="1131.8" y="901" width="0.9" height="15.0" fill="rgb(230,111,3)" rx="2" ry="2" />
<text  x="1134.84" y="911.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::CodeGenAndEmitDAG (1 samples, 0.04%)</title><rect x="1150.8" y="645" width="0.4" height="15.0" fill="rgb(247,207,42)" rx="2" ry="2" />
<text  x="1153.78" y="655.5" ></text>
</g>
<g >
<title>adler32_z (8 samples, 0.30%)</title><rect x="411.0" y="741" width="3.5" height="15.0" fill="rgb(253,87,18)" rx="2" ry="2" />
<text  x="413.97" y="751.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1164.0" y="885" width="0.4" height="15.0" fill="rgb(225,217,31)" rx="2" ry="2" />
<text  x="1167.00" y="895.5" ></text>
</g>
<g >
<title>clang::DeclContext::LoadLexicalDeclsFromExternalStorage (1 samples, 0.04%)</title><rect x="1155.2" y="677" width="0.4" height="15.0" fill="rgb(213,182,21)" rx="2" ry="2" />
<text  x="1158.19" y="687.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1135.8" y="773" width="0.4" height="15.0" fill="rgb(233,129,34)" rx="2" ry="2" />
<text  x="1138.80" y="783.5" ></text>
</g>
<g >
<title>TBufferFile::ReadFastArray (18 samples, 0.67%)</title><rect x="661.2" y="933" width="8.0" height="15.0" fill="rgb(231,216,48)" rx="2" ry="2" />
<text  x="664.25" y="943.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::initializeAnalysisImpl (2 samples, 0.07%)</title><rect x="1052.1" y="613" width="0.9" height="15.0" fill="rgb(234,175,42)" rx="2" ry="2" />
<text  x="1055.08" y="623.5" ></text>
</g>
<g >
<title>clang::Decl::getOwningModuleSlow (1 samples, 0.04%)</title><rect x="1133.6" y="613" width="0.4" height="15.0" fill="rgb(224,1,16)" rx="2" ry="2" />
<text  x="1136.60" y="623.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnModule (1 samples, 0.04%)</title><rect x="910.6" y="741" width="0.5" height="15.0" fill="rgb(242,158,9)" rx="2" ry="2" />
<text  x="913.64" y="751.5" ></text>
</g>
<g >
<title>__GI__IO_getline_info (12 samples, 0.45%)</title><rect x="1088.7" y="837" width="5.2" height="15.0" fill="rgb(246,141,19)" rx="2" ry="2" />
<text  x="1091.66" y="847.5" ></text>
</g>
<g >
<title>clang::TypeLoc::getFullDataSizeForType (1 samples, 0.04%)</title><rect x="1097.9" y="821" width="0.4" height="15.0" fill="rgb(224,161,35)" rx="2" ry="2" />
<text  x="1100.91" y="831.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1020.4" y="757" width="0.4" height="15.0" fill="rgb(205,216,47)" rx="2" ry="2" />
<text  x="1023.36" y="767.5" ></text>
</g>
<g >
<title>clang::Sema::BuildQualifiedDeclarationNameExpr (1 samples, 0.04%)</title><rect x="1142.9" y="869" width="0.4" height="15.0" fill="rgb(236,63,51)" rx="2" ry="2" />
<text  x="1145.85" y="879.5" ></text>
</g>
<g >
<title>execute_command_internal (4 samples, 0.15%)</title><rect x="22.3" y="309" width="1.8" height="15.0" fill="rgb(244,170,54)" rx="2" ry="2" />
<text  x="25.34" y="319.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentScopeDeclRefExpr (1 samples, 0.04%)</title><rect x="1138.4" y="805" width="0.5" height="15.0" fill="rgb(241,190,13)" rx="2" ry="2" />
<text  x="1141.45" y="815.5" ></text>
</g>
<g >
<title>llvm::Attribute::get (1 samples, 0.04%)</title><rect x="1102.3" y="677" width="0.5" height="15.0" fill="rgb(247,192,5)" rx="2" ry="2" />
<text  x="1105.32" y="687.5" ></text>
</g>
<g >
<title>clang::Redeclarable&lt;clang::RedeclarableTemplateDecl&gt;::DeclLink::getPrevious (1 samples, 0.04%)</title><rect x="1122.6" y="789" width="0.4" height="15.0" fill="rgb(214,117,48)" rx="2" ry="2" />
<text  x="1125.58" y="799.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.04%)</title><rect x="1135.4" y="757" width="0.4" height="15.0" fill="rgb(207,11,32)" rx="2" ry="2" />
<text  x="1138.36" y="767.5" ></text>
</g>
<g >
<title>llvm::AttributeList::addAttributes (1 samples, 0.04%)</title><rect x="1103.6" y="517" width="0.5" height="15.0" fill="rgb(223,21,42)" rx="2" ry="2" />
<text  x="1106.64" y="527.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitIfStmt (2 samples, 0.07%)</title><rect x="1105.8" y="885" width="0.9" height="15.0" fill="rgb(249,136,43)" rx="2" ry="2" />
<text  x="1108.84" y="895.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnModule (1 samples, 0.04%)</title><rect x="1147.7" y="709" width="0.4" height="15.0" fill="rgb(238,16,46)" rx="2" ry="2" />
<text  x="1150.70" y="719.5" ></text>
</g>
<g >
<title>llvm::SimpleBitstreamCursor::ReadVBR64 (1 samples, 0.04%)</title><rect x="1140.6" y="645" width="0.5" height="15.0" fill="rgb(249,175,31)" rx="2" ry="2" />
<text  x="1143.65" y="655.5" ></text>
</g>
<g >
<title>msort_with_tmp.part.0 (1 samples, 0.04%)</title><rect x="25.9" y="789" width="0.4" height="15.0" fill="rgb(252,213,7)" rx="2" ry="2" />
<text  x="28.86" y="799.5" ></text>
</g>
<g >
<title>analyzeGlobalAux (1 samples, 0.04%)</title><rect x="1065.3" y="597" width="0.4" height="15.0" fill="rgb(250,20,29)" rx="2" ry="2" />
<text  x="1068.30" y="607.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::~IncrementalParser (1 samples, 0.04%)</title><rect x="1028.3" y="773" width="0.4" height="15.0" fill="rgb(241,56,49)" rx="2" ry="2" />
<text  x="1031.29" y="783.5" ></text>
</g>
<g >
<title>clang::LinkageComputer::getLVForDecl (1 samples, 0.04%)</title><rect x="1103.2" y="501" width="0.4" height="15.0" fill="rgb(222,152,34)" rx="2" ry="2" />
<text  x="1106.20" y="511.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType (1 samples, 0.04%)</title><rect x="1123.0" y="757" width="0.5" height="15.0" fill="rgb(211,208,31)" rx="2" ry="2" />
<text  x="1126.02" y="767.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (2 samples, 0.07%)</title><rect x="1109.8" y="661" width="0.9" height="15.0" fill="rgb(245,78,19)" rx="2" ry="2" />
<text  x="1112.81" y="671.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::runOnMachineFunction (1 samples, 0.04%)</title><rect x="1150.8" y="677" width="0.4" height="15.0" fill="rgb(240,59,52)" rx="2" ry="2" />
<text  x="1153.78" y="687.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformParenExpr (1 samples, 0.04%)</title><rect x="1141.5" y="885" width="0.5" height="15.0" fill="rgb(248,181,32)" rx="2" ry="2" />
<text  x="1144.53" y="895.5" ></text>
</g>
<g >
<title>llvm::SelectionDAG::Combine (1 samples, 0.04%)</title><rect x="1157.0" y="805" width="0.4" height="15.0" fill="rgb(250,145,38)" rx="2" ry="2" />
<text  x="1159.95" y="815.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (2 samples, 0.07%)</title><rect x="1145.9" y="725" width="0.9" height="15.0" fill="rgb(236,172,4)" rx="2" ry="2" />
<text  x="1148.94" y="735.5" ></text>
</g>
<g >
<title>llvm::Pass::getAdjustedAnalysisPointer (1 samples, 0.04%)</title><rect x="1036.7" y="613" width="0.4" height="15.0" fill="rgb(236,224,9)" rx="2" ry="2" />
<text  x="1039.66" y="623.5" ></text>
</g>
<g >
<title>TCling::Initialize (11 samples, 0.41%)</title><rect x="1071.5" y="901" width="4.8" height="15.0" fill="rgb(210,217,8)" rx="2" ry="2" />
<text  x="1074.47" y="911.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::Compile (2 samples, 0.07%)</title><rect x="1149.9" y="853" width="0.9" height="15.0" fill="rgb(228,133,49)" rx="2" ry="2" />
<text  x="1152.90" y="863.5" ></text>
</g>
<g >
<title>?? (7 samples, 0.26%)</title><rect x="779.3" y="885" width="3.1" height="15.0" fill="rgb(219,228,19)" rx="2" ry="2" />
<text  x="782.34" y="895.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl (1 samples, 0.04%)</title><rect x="1117.3" y="517" width="0.4" height="15.0" fill="rgb(243,216,42)" rx="2" ry="2" />
<text  x="1120.30" y="527.5" ></text>
</g>
<g >
<title>TClass::LoadClass (1 samples, 0.04%)</title><rect x="786.4" y="517" width="0.4" height="15.0" fill="rgb(213,167,12)" rx="2" ry="2" />
<text  x="789.39" y="527.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiatingTemplate::InstantiatingTemplate (1 samples, 0.04%)</title><rect x="1124.8" y="613" width="0.4" height="15.0" fill="rgb(213,25,24)" rx="2" ry="2" />
<text  x="1127.79" y="623.5" ></text>
</g>
<g >
<title>cling::MetaParser::isXCommand (85 samples, 3.17%)</title><rect x="1028.7" y="805" width="37.5" height="15.0" fill="rgb(220,127,48)" rx="2" ry="2" />
<text  x="1031.73" y="815.5" >cli..</text>
</g>
<g >
<title>_int_malloc (1 samples, 0.04%)</title><rect x="849.8" y="485" width="0.5" height="15.0" fill="rgb(228,223,23)" rx="2" ry="2" />
<text  x="852.84" y="495.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::freePass (1 samples, 0.04%)</title><rect x="1028.7" y="581" width="0.5" height="15.0" fill="rgb(232,217,6)" rx="2" ry="2" />
<text  x="1031.73" y="591.5" ></text>
</g>
<g >
<title>_dl_relocate_object (1 samples, 0.04%)</title><rect x="10.0" y="901" width="0.4" height="15.0" fill="rgb(231,60,42)" rx="2" ry="2" />
<text  x="13.00" y="911.5" ></text>
</g>
<g >
<title>R__unzip (50 samples, 1.87%)</title><rect x="392.5" y="789" width="22.0" height="15.0" fill="rgb(219,211,3)" rx="2" ry="2" />
<text  x="395.46" y="799.5" >R..</text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::codegenCXXStructor (1 samples, 0.04%)</title><rect x="1113.3" y="821" width="0.5" height="15.0" fill="rgb(216,153,52)" rx="2" ry="2" />
<text  x="1116.33" y="831.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (1 samples, 0.04%)</title><rect x="1152.1" y="837" width="0.4" height="15.0" fill="rgb(225,156,4)" rx="2" ry="2" />
<text  x="1155.11" y="847.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::isLoopEntryGuardedByCond (1 samples, 0.04%)</title><rect x="692.1" y="693" width="0.4" height="15.0" fill="rgb(249,15,21)" rx="2" ry="2" />
<text  x="695.09" y="703.5" ></text>
</g>
<g >
<title>clang::ItaniumVTableContext::computeVTableRelatedInformation (1 samples, 0.04%)</title><rect x="1107.6" y="677" width="0.4" height="15.0" fill="rgb(222,187,49)" rx="2" ry="2" />
<text  x="1110.60" y="687.5" ></text>
</g>
<g >
<title>ROOT::RDataFrame::RDataFrame (1 samples, 0.04%)</title><rect x="786.4" y="965" width="0.4" height="15.0" fill="rgb(214,13,4)" rx="2" ry="2" />
<text  x="789.39" y="975.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.04%)</title><rect x="1103.6" y="949" width="0.5" height="15.0" fill="rgb(252,51,42)" rx="2" ry="2" />
<text  x="1106.64" y="959.5" ></text>
</g>
<g >
<title>clang::RedeclarableTemplateDecl::loadLazySpecializationsImpl (1 samples, 0.04%)</title><rect x="1131.0" y="597" width="0.4" height="15.0" fill="rgb(236,22,14)" rx="2" ry="2" />
<text  x="1133.96" y="607.5" ></text>
</g>
<g >
<title>cling::Interpreter::loadHeader (85 samples, 3.17%)</title><rect x="1028.7" y="757" width="37.5" height="15.0" fill="rgb(238,88,39)" rx="2" ry="2" />
<text  x="1031.73" y="767.5" >cli..</text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (3 samples, 0.11%)</title><rect x="909.8" y="757" width="1.3" height="15.0" fill="rgb(219,121,52)" rx="2" ry="2" />
<text  x="912.76" y="767.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::runOnMachineFunction (4 samples, 0.15%)</title><rect x="844.1" y="565" width="1.8" height="15.0" fill="rgb(210,202,31)" rx="2" ry="2" />
<text  x="847.11" y="575.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateVariableDefinition (1 samples, 0.04%)</title><rect x="1141.1" y="709" width="0.4" height="15.0" fill="rgb(251,60,0)" rx="2" ry="2" />
<text  x="1144.09" y="719.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddDecl (1 samples, 0.04%)</title><rect x="1131.0" y="517" width="0.4" height="15.0" fill="rgb(247,159,37)" rx="2" ry="2" />
<text  x="1133.96" y="527.5" ></text>
</g>
<g >
<title>clang::Sema::SubstType (1 samples, 0.04%)</title><rect x="1143.7" y="901" width="0.5" height="15.0" fill="rgb(226,118,31)" rx="2" ry="2" />
<text  x="1146.73" y="911.5" ></text>
</g>
<g >
<title>clang::Sema::CppLookupName (1 samples, 0.04%)</title><rect x="784.2" y="421" width="0.4" height="15.0" fill="rgb(230,205,39)" rx="2" ry="2" />
<text  x="787.18" y="431.5" ></text>
</g>
<g >
<title>getInterestingTagDecl (1 samples, 0.04%)</title><rect x="1098.3" y="805" width="0.5" height="15.0" fill="rgb(251,206,30)" rx="2" ry="2" />
<text  x="1101.35" y="815.5" ></text>
</g>
<g >
<title>clang::Sema::MarkFunctionReferenced (2 samples, 0.07%)</title><rect x="1121.7" y="885" width="0.9" height="15.0" fill="rgb(220,24,26)" rx="2" ry="2" />
<text  x="1124.70" y="895.5" ></text>
</g>
<g >
<title>clang::LinkageComputer::computeLVForDecl (1 samples, 0.04%)</title><rect x="1105.8" y="629" width="0.5" height="15.0" fill="rgb(228,162,22)" rx="2" ry="2" />
<text  x="1108.84" y="639.5" ></text>
</g>
<g >
<title>llvm::computeKnownBits (1 samples, 0.04%)</title><rect x="893.9" y="613" width="0.4" height="15.0" fill="rgb(205,142,3)" rx="2" ry="2" />
<text  x="896.90" y="623.5" ></text>
</g>
<g >
<title>clang::NestedNameSpecifierLocBuilder::Extend (1 samples, 0.04%)</title><rect x="1134.9" y="645" width="0.5" height="15.0" fill="rgb(239,23,5)" rx="2" ry="2" />
<text  x="1137.92" y="655.5" ></text>
</g>
<g >
<title>llvm::MCStreamer::SwitchSection (1 samples, 0.04%)</title><rect x="702.2" y="693" width="0.5" height="15.0" fill="rgb(206,90,43)" rx="2" ry="2" />
<text  x="705.23" y="703.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="900.1" y="565" width="0.4" height="15.0" fill="rgb(248,192,2)" rx="2" ry="2" />
<text  x="903.07" y="575.5" ></text>
</g>
<g >
<title>cling::Interpreter::DeclareInternal (1 samples, 0.04%)</title><rect x="1027.0" y="757" width="0.4" height="15.0" fill="rgb(223,147,45)" rx="2" ry="2" />
<text  x="1029.97" y="767.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization (1 samples, 0.04%)</title><rect x="1131.8" y="677" width="0.5" height="15.0" fill="rgb(241,204,20)" rx="2" ry="2" />
<text  x="1134.84" y="687.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTBAA::getBaseTypeInfoHelper (1 samples, 0.04%)</title><rect x="1103.2" y="725" width="0.4" height="15.0" fill="rgb(229,121,51)" rx="2" ry="2" />
<text  x="1106.20" y="735.5" ></text>
</g>
<g >
<title>cling::quickFindDecl (1 samples, 0.04%)</title><rect x="784.2" y="565" width="0.4" height="15.0" fill="rgb(207,44,5)" rx="2" ry="2" />
<text  x="787.18" y="575.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::runStaticInitializersOnce (1 samples, 0.04%)</title><rect x="1150.3" y="805" width="0.5" height="15.0" fill="rgb(242,141,31)" rx="2" ry="2" />
<text  x="1153.34" y="815.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1143.7" y="853" width="0.5" height="15.0" fill="rgb(247,111,29)" rx="2" ry="2" />
<text  x="1146.73" y="863.5" ></text>
</g>
<g >
<title>TPluginManager::LoadHandlersFromPluginDirs (1 samples, 0.04%)</title><rect x="904.0" y="917" width="0.5" height="15.0" fill="rgb(247,117,30)" rx="2" ry="2" />
<text  x="907.03" y="927.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1095.3" y="853" width="0.4" height="15.0" fill="rgb(239,229,40)" rx="2" ry="2" />
<text  x="1098.27" y="863.5" ></text>
</g>
<g >
<title>THashList::AddLast (1 samples, 0.04%)</title><rect x="786.4" y="805" width="0.4" height="15.0" fill="rgb(232,178,21)" rx="2" ry="2" />
<text  x="789.39" y="815.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveRelocations (1 samples, 0.04%)</title><rect x="1150.8" y="853" width="0.4" height="15.0" fill="rgb(206,123,32)" rx="2" ry="2" />
<text  x="1153.78" y="863.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::computeTotalAllocSize (23 samples, 0.86%)</title><rect x="868.8" y="581" width="10.1" height="15.0" fill="rgb(224,90,11)" rx="2" ry="2" />
<text  x="871.78" y="591.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;, void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;::LookupBucketFor&lt;void const*&gt; (7 samples, 0.26%)</title><rect x="1041.1" y="565" width="3.1" height="15.0" fill="rgb(248,122,39)" rx="2" ry="2" />
<text  x="1044.07" y="575.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (1 samples, 0.04%)</title><rect x="1132.3" y="693" width="0.4" height="15.0" fill="rgb(229,186,48)" rx="2" ry="2" />
<text  x="1135.28" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_hook (1 samples, 0.04%)</title><rect x="1143.7" y="645" width="0.5" height="15.0" fill="rgb(235,204,40)" rx="2" ry="2" />
<text  x="1146.73" y="655.5" ></text>
</g>
<g >
<title>_IO_new_proc_open (5 samples, 0.19%)</title><rect x="1095.3" y="869" width="2.2" height="15.0" fill="rgb(238,99,42)" rx="2" ry="2" />
<text  x="1098.27" y="879.5" ></text>
</g>
<g >
<title>llvm::hashing::detail::hash_combine_range_impl&lt;unsigned int const&gt; (1 samples, 0.04%)</title><rect x="1105.0" y="805" width="0.4" height="15.0" fill="rgb(240,95,6)" rx="2" ry="2" />
<text  x="1107.96" y="815.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.04%)</title><rect x="1109.8" y="581" width="0.4" height="15.0" fill="rgb(226,90,21)" rx="2" ry="2" />
<text  x="1112.81" y="591.5" ></text>
</g>
<g >
<title>ROOT::Detail::TSchemaRuleSet::AddRule (1 samples, 0.04%)</title><rect x="786.4" y="437" width="0.4" height="15.0" fill="rgb(229,207,9)" rx="2" ry="2" />
<text  x="789.39" y="447.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.04%)</title><rect x="21.9" y="869" width="0.4" height="15.0" fill="rgb(250,30,14)" rx="2" ry="2" />
<text  x="24.90" y="879.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalDefinition (2 samples, 0.07%)</title><rect x="1110.7" y="677" width="0.9" height="15.0" fill="rgb(215,152,1)" rx="2" ry="2" />
<text  x="1113.69" y="687.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveExternalSymbols (2 samples, 0.07%)</title><rect x="684.6" y="773" width="0.9" height="15.0" fill="rgb(226,214,17)" rx="2" ry="2" />
<text  x="687.60" y="783.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke (21 samples, 0.78%)</title><rect x="699.1" y="837" width="9.3" height="15.0" fill="rgb(229,115,21)" rx="2" ry="2" />
<text  x="702.14" y="847.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnModule (1 samples, 0.04%)</title><rect x="1159.2" y="789" width="0.4" height="15.0" fill="rgb(236,10,0)" rx="2" ry="2" />
<text  x="1162.16" y="799.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl (1 samples, 0.04%)</title><rect x="1123.9" y="805" width="0.4" height="15.0" fill="rgb(206,141,26)" rx="2" ry="2" />
<text  x="1126.91" y="815.5" ></text>
</g>
<g >
<title>operator() (1 samples, 0.04%)</title><rect x="904.5" y="933" width="0.4" height="15.0" fill="rgb(252,228,37)" rx="2" ry="2" />
<text  x="907.47" y="943.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::SelectAllBasicBlocks (3 samples, 0.11%)</title><rect x="1148.1" y="613" width="1.4" height="15.0" fill="rgb(207,77,35)" rx="2" ry="2" />
<text  x="1151.14" y="623.5" ></text>
</g>
<g >
<title>DeduceTemplateArgumentsByTypeMatch (1 samples, 0.04%)</title><rect x="1142.4" y="757" width="0.5" height="15.0" fill="rgb(249,63,19)" rx="2" ry="2" />
<text  x="1145.41" y="767.5" ></text>
</g>
<g >
<title>?? (5 samples, 0.19%)</title><rect x="1076.3" y="853" width="2.2" height="15.0" fill="rgb(233,129,28)" rx="2" ry="2" />
<text  x="1079.32" y="863.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::visitCallBase (1 samples, 0.04%)</title><rect x="892.1" y="645" width="0.5" height="15.0" fill="rgb(228,19,3)" rx="2" ry="2" />
<text  x="895.14" y="655.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="1172.4" y="853" width="0.4" height="15.0" fill="rgb(217,178,42)" rx="2" ry="2" />
<text  x="1175.37" y="863.5" ></text>
</g>
<g >
<title>isDeclExternC&lt;clang::FunctionDecl&gt; (1 samples, 0.04%)</title><rect x="1109.4" y="901" width="0.4" height="15.0" fill="rgb(242,121,50)" rx="2" ry="2" />
<text  x="1112.37" y="911.5" ></text>
</g>
<g >
<title>llvm::orc::SimpleCompiler::operator() (1 samples, 0.04%)</title><rect x="785.5" y="853" width="0.4" height="15.0" fill="rgb(232,101,47)" rx="2" ry="2" />
<text  x="788.50" y="863.5" ></text>
</g>
<g >
<title>llvm::BranchFolder::OptimizeFunction (1 samples, 0.04%)</title><rect x="841.0" y="565" width="0.5" height="15.0" fill="rgb(241,41,19)" rx="2" ry="2" />
<text  x="844.02" y="575.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass (1 samples, 0.04%)</title><rect x="1142.9" y="789" width="0.4" height="15.0" fill="rgb(233,139,11)" rx="2" ry="2" />
<text  x="1145.85" y="799.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddDecl (1 samples, 0.04%)</title><rect x="1124.3" y="597" width="0.5" height="15.0" fill="rgb(219,186,12)" rx="2" ry="2" />
<text  x="1127.35" y="607.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateArgument (1 samples, 0.04%)</title><rect x="1127.0" y="725" width="0.4" height="15.0" fill="rgb(244,211,16)" rx="2" ry="2" />
<text  x="1129.99" y="735.5" ></text>
</g>
<g >
<title>cling::MetaSema::actOnLCommand (2 samples, 0.07%)</title><rect x="1149.9" y="901" width="0.9" height="15.0" fill="rgb(241,3,28)" rx="2" ry="2" />
<text  x="1152.90" y="911.5" ></text>
</g>
<g >
<title>llvm::AsmPrinter::doFinalization (1 samples, 0.04%)</title><rect x="699.1" y="773" width="0.5" height="15.0" fill="rgb(220,141,36)" rx="2" ry="2" />
<text  x="702.14" y="783.5" ></text>
</g>
<g >
<title>clang::TemplateArgumentList::ComputeODRHash (1 samples, 0.04%)</title><rect x="1135.8" y="693" width="0.4" height="15.0" fill="rgb(246,208,22)" rx="2" ry="2" />
<text  x="1138.80" y="703.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1172.4" y="805" width="0.4" height="15.0" fill="rgb(205,35,10)" rx="2" ry="2" />
<text  x="1175.37" y="815.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitAnyExpr (1 samples, 0.04%)</title><rect x="1138.0" y="805" width="0.4" height="15.0" fill="rgb(213,116,28)" rx="2" ry="2" />
<text  x="1141.01" y="815.5" ></text>
</g>
<g >
<title>llvm::LazyValueInfo::getPredicateAt (1 samples, 0.04%)</title><rect x="897.0" y="661" width="0.4" height="15.0" fill="rgb(242,209,11)" rx="2" ry="2" />
<text  x="899.98" y="671.5" ></text>
</g>
<g >
<title>execute_command_internal (26 samples, 0.97%)</title><rect x="10.4" y="805" width="11.5" height="15.0" fill="rgb(235,186,29)" rx="2" ry="2" />
<text  x="13.44" y="815.5" ></text>
</g>
<g >
<title>clang::IdentifierTable::get (1 samples, 0.04%)</title><rect x="1071.0" y="613" width="0.5" height="15.0" fill="rgb(222,59,53)" rx="2" ry="2" />
<text  x="1074.03" y="623.5" ></text>
</g>
<g >
<title>clang::RedeclarableTemplateDecl::findSpecializationImpl&lt;clang::FunctionTemplateSpecializationInfo&gt; (1 samples, 0.04%)</title><rect x="1136.2" y="869" width="0.5" height="15.0" fill="rgb(242,195,25)" rx="2" ry="2" />
<text  x="1139.24" y="879.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1074.6" y="741" width="0.4" height="15.0" fill="rgb(251,228,4)" rx="2" ry="2" />
<text  x="1077.56" y="751.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::visitBitCast (1 samples, 0.04%)</title><rect x="1049.4" y="565" width="0.5" height="15.0" fill="rgb(235,60,14)" rx="2" ry="2" />
<text  x="1052.44" y="575.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitScalarExpr (1 samples, 0.04%)</title><rect x="1102.3" y="885" width="0.5" height="15.0" fill="rgb(233,187,4)" rx="2" ry="2" />
<text  x="1105.32" y="895.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;, void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;::LookupBucketFor&lt;void const*&gt; (1 samples, 0.04%)</title><rect x="1056.5" y="581" width="0.4" height="15.0" fill="rgb(232,211,38)" rx="2" ry="2" />
<text  x="1059.49" y="591.5" ></text>
</g>
<g >
<title>clang::ASTReader::readTypeRecord (1 samples, 0.04%)</title><rect x="1100.1" y="853" width="0.5" height="15.0" fill="rgb(228,93,9)" rx="2" ry="2" />
<text  x="1103.11" y="863.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl (1 samples, 0.04%)</title><rect x="1137.6" y="725" width="0.4" height="15.0" fill="rgb(239,212,19)" rx="2" ry="2" />
<text  x="1140.57" y="735.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitBinaryOperatorLValue (1 samples, 0.04%)</title><rect x="1102.8" y="837" width="0.4" height="15.0" fill="rgb(214,193,12)" rx="2" ry="2" />
<text  x="1105.76" y="847.5" ></text>
</g>
<g >
<title>TCling::DataMemberInfo_Factory (1 samples, 0.04%)</title><rect x="783.7" y="741" width="0.5" height="15.0" fill="rgb(224,168,48)" rx="2" ry="2" />
<text  x="786.74" y="751.5" ></text>
</g>
<g >
<title>llvm::SelectionDAG::RemoveDeadNodes (1 samples, 0.04%)</title><rect x="1145.9" y="629" width="0.5" height="15.0" fill="rgb(245,84,46)" rx="2" ry="2" />
<text  x="1148.94" y="639.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (6 samples, 0.22%)</title><rect x="1109.8" y="773" width="2.6" height="15.0" fill="rgb(227,52,10)" rx="2" ry="2" />
<text  x="1112.81" y="783.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.04%)</title><rect x="1149.9" y="709" width="0.4" height="15.0" fill="rgb(254,81,53)" rx="2" ry="2" />
<text  x="1152.90" y="719.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitFunctionProlog (1 samples, 0.04%)</title><rect x="1108.5" y="917" width="0.4" height="15.0" fill="rgb(238,7,14)" rx="2" ry="2" />
<text  x="1111.48" y="927.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject&lt;std::shared_ptr&lt;llvm::RuntimeDyld::MemoryManager&gt; &gt;::getSymbolMaterializer(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda()#1}&gt;::_M_invoke (2 samples, 0.07%)</title><rect x="707.5" y="821" width="0.9" height="15.0" fill="rgb(215,48,15)" rx="2" ry="2" />
<text  x="710.51" y="831.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="21.9" y="133" width="0.4" height="15.0" fill="rgb(231,125,36)" rx="2" ry="2" />
<text  x="24.90" y="143.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1176.8" y="757" width="0.4" height="15.0" fill="rgb(232,61,6)" rx="2" ry="2" />
<text  x="1179.78" y="767.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::visitCallInst (1 samples, 0.04%)</title><rect x="695.6" y="709" width="0.5" height="15.0" fill="rgb(232,9,41)" rx="2" ry="2" />
<text  x="698.62" y="719.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization (1 samples, 0.04%)</title><rect x="1139.8" y="693" width="0.4" height="15.0" fill="rgb(225,224,29)" rx="2" ry="2" />
<text  x="1142.77" y="703.5" ></text>
</g>
<g >
<title>clang::Sema::CheckCXXBooleanCondition (1 samples, 0.04%)</title><rect x="1134.0" y="645" width="0.5" height="15.0" fill="rgb(233,24,7)" rx="2" ry="2" />
<text  x="1137.04" y="655.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTemplateArgument (1 samples, 0.04%)</title><rect x="1123.5" y="933" width="0.4" height="15.0" fill="rgb(207,71,23)" rx="2" ry="2" />
<text  x="1126.47" y="943.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformInitializer (1 samples, 0.04%)</title><rect x="1133.6" y="853" width="0.4" height="15.0" fill="rgb(246,198,28)" rx="2" ry="2" />
<text  x="1136.60" y="863.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCompoundStmtWithoutScope (1 samples, 0.04%)</title><rect x="1115.1" y="869" width="0.4" height="15.0" fill="rgb(230,214,11)" rx="2" ry="2" />
<text  x="1118.09" y="879.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="844.1" y="517" width="0.4" height="15.0" fill="rgb(228,80,23)" rx="2" ry="2" />
<text  x="847.11" y="527.5" ></text>
</g>
<g >
<title>llvm::Module::dropAllReferences (1 samples, 0.04%)</title><rect x="1028.3" y="725" width="0.4" height="15.0" fill="rgb(219,30,24)" rx="2" ry="2" />
<text  x="1031.29" y="735.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformCompoundStmt (1 samples, 0.04%)</title><rect x="1122.1" y="837" width="0.5" height="15.0" fill="rgb(208,177,47)" rx="2" ry="2" />
<text  x="1125.14" y="847.5" ></text>
</g>
<g >
<title>execute_command (4 samples, 0.15%)</title><rect x="22.3" y="853" width="1.8" height="15.0" fill="rgb(209,121,4)" rx="2" ry="2" />
<text  x="25.34" y="863.5" ></text>
</g>
<g >
<title>TClass::GetClass (1 samples, 0.04%)</title><rect x="786.4" y="533" width="0.4" height="15.0" fill="rgb(230,109,54)" rx="2" ry="2" />
<text  x="789.39" y="543.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::computeSectionStubBufSize (1 samples, 0.04%)</title><rect x="708.0" y="725" width="0.4" height="15.0" fill="rgb(244,115,36)" rx="2" ry="2" />
<text  x="710.95" y="735.5" ></text>
</g>
<g >
<title>llvm::SelectionDAG::FindNodeOrInsertPos (1 samples, 0.04%)</title><rect x="1154.7" y="869" width="0.5" height="15.0" fill="rgb(245,186,26)" rx="2" ry="2" />
<text  x="1157.75" y="879.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::CompleteRedeclChain (1 samples, 0.04%)</title><rect x="1131.0" y="629" width="0.4" height="15.0" fill="rgb(231,14,1)" rx="2" ry="2" />
<text  x="1133.96" y="639.5" ></text>
</g>
<g >
<title>ROOT::Detail::RDF::RLoopManager::CheckFilters (8 samples, 0.30%)</title><rect x="685.5" y="965" width="3.5" height="15.0" fill="rgb(205,194,34)" rx="2" ry="2" />
<text  x="688.48" y="975.5" ></text>
</g>
<g >
<title>llvm::BranchProbabilityInfo::updatePostDominatedByColdCall (1 samples, 0.04%)</title><rect x="833.1" y="549" width="0.4" height="15.0" fill="rgb(223,12,16)" rx="2" ry="2" />
<text  x="836.09" y="559.5" ></text>
</g>
<g >
<title>clang::Sema::IsDerivedFrom (1 samples, 0.04%)</title><rect x="1127.9" y="821" width="0.4" height="15.0" fill="rgb(220,0,27)" rx="2" ry="2" />
<text  x="1130.87" y="831.5" ></text>
</g>
<g >
<title>clang::Sema::MarkFunctionReferenced (1 samples, 0.04%)</title><rect x="1128.3" y="917" width="0.5" height="15.0" fill="rgb(234,98,4)" rx="2" ry="2" />
<text  x="1131.31" y="927.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;, void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;::LookupBucketFor&lt;void const*&gt; (1 samples, 0.04%)</title><rect x="1053.0" y="597" width="0.4" height="15.0" fill="rgb(215,129,5)" rx="2" ry="2" />
<text  x="1055.96" y="607.5" ></text>
</g>
<g >
<title>clang::TemplateDeclInstantiator::VisitTypeAliasDecl (1 samples, 0.04%)</title><rect x="1131.0" y="837" width="0.4" height="15.0" fill="rgb(237,9,6)" rx="2" ry="2" />
<text  x="1133.96" y="847.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::eraseInstFromFunction (1 samples, 0.04%)</title><rect x="1050.3" y="549" width="0.5" height="15.0" fill="rgb(253,17,44)" rx="2" ry="2" />
<text  x="1053.32" y="559.5" ></text>
</g>
<g >
<title>clang::DeclContext::lookup (1 samples, 0.04%)</title><rect x="1118.2" y="821" width="0.4" height="15.0" fill="rgb(249,138,32)" rx="2" ry="2" />
<text  x="1121.18" y="831.5" ></text>
</g>
<g >
<title>clang::ASTRecordReader::readRecord (1 samples, 0.04%)</title><rect x="1140.6" y="677" width="0.5" height="15.0" fill="rgb(217,39,0)" rx="2" ry="2" />
<text  x="1143.65" y="687.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;, void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;::LookupBucketFor&lt;void const*&gt; (1 samples, 0.04%)</title><rect x="693.4" y="741" width="0.5" height="15.0" fill="rgb(249,57,23)" rx="2" ry="2" />
<text  x="696.41" y="751.5" ></text>
</g>
<g >
<title>llvm::hashing::detail::hash_combine_range_impl&lt;unsigned int const&gt; (1 samples, 0.04%)</title><rect x="1154.7" y="837" width="0.5" height="15.0" fill="rgb(210,128,11)" rx="2" ry="2" />
<text  x="1157.75" y="847.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::runStaticInitializersOnce (1 samples, 0.04%)</title><rect x="1145.1" y="965" width="0.4" height="15.0" fill="rgb(242,23,6)" rx="2" ry="2" />
<text  x="1148.06" y="975.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalDefinition (2 samples, 0.07%)</title><rect x="1112.4" y="821" width="0.9" height="15.0" fill="rgb(244,187,10)" rx="2" ry="2" />
<text  x="1115.45" y="831.5" ></text>
</g>
<g >
<title>llvm::LPPassManager::runOnFunction (1 samples, 0.04%)</title><rect x="1051.2" y="613" width="0.4" height="15.0" fill="rgb(215,181,33)" rx="2" ry="2" />
<text  x="1054.20" y="623.5" ></text>
</g>
<g >
<title>llvm::orc::SimpleCompiler::operator() (1 samples, 0.04%)</title><rect x="1158.7" y="949" width="0.5" height="15.0" fill="rgb(220,29,41)" rx="2" ry="2" />
<text  x="1161.72" y="959.5" ></text>
</g>
<g >
<title>llvm::AttributeSetNode::getAttribute (1 samples, 0.04%)</title><rect x="864.4" y="501" width="0.4" height="15.0" fill="rgb(249,104,52)" rx="2" ry="2" />
<text  x="867.38" y="511.5" ></text>
</g>
<g >
<title>llvm::MemorySSAWrapperPass::releaseMemory (1 samples, 0.04%)</title><rect x="1038.0" y="597" width="0.4" height="15.0" fill="rgb(205,197,18)" rx="2" ry="2" />
<text  x="1040.98" y="607.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddDecl (1 samples, 0.04%)</title><rect x="1123.0" y="629" width="0.5" height="15.0" fill="rgb(247,82,14)" rx="2" ry="2" />
<text  x="1126.02" y="639.5" ></text>
</g>
<g >
<title>clang::Sema::SubstBaseSpecifiers (1 samples, 0.04%)</title><rect x="1123.9" y="757" width="0.4" height="15.0" fill="rgb(216,104,45)" rx="2" ry="2" />
<text  x="1126.91" y="767.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="1045.5" y="597" width="0.4" height="15.0" fill="rgb(249,122,50)" rx="2" ry="2" />
<text  x="1048.47" y="607.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::getMinusSCEV (1 samples, 0.04%)</title><rect x="692.1" y="597" width="0.4" height="15.0" fill="rgb(220,58,31)" rx="2" ry="2" />
<text  x="695.09" y="607.5" ></text>
</g>
<g >
<title>llvm::LoopBlocksDFS::perform (1 samples, 0.04%)</title><rect x="696.9" y="725" width="0.5" height="15.0" fill="rgb(209,208,19)" rx="2" ry="2" />
<text  x="699.94" y="735.5" ></text>
</g>
<g >
<title>llvm::MachineFunctionPass::runOnFunction (1 samples, 0.04%)</title><rect x="1150.8" y="693" width="0.4" height="15.0" fill="rgb(228,125,2)" rx="2" ry="2" />
<text  x="1153.78" y="703.5" ></text>
</g>
<g >
<title>clang::CodeGen::LValue::MakeAddr (1 samples, 0.04%)</title><rect x="1116.9" y="853" width="0.4" height="15.0" fill="rgb(239,46,35)" rx="2" ry="2" />
<text  x="1119.86" y="863.5" ></text>
</g>
<g >
<title>TCling::Calc (44 samples, 1.64%)</title><rect x="689.0" y="901" width="19.4" height="15.0" fill="rgb(254,182,21)" rx="2" ry="2" />
<text  x="692.01" y="911.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (3 samples, 0.11%)</title><rect x="1142.0" y="933" width="1.3" height="15.0" fill="rgb(236,72,20)" rx="2" ry="2" />
<text  x="1144.97" y="943.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType (1 samples, 0.04%)</title><rect x="1137.6" y="853" width="0.4" height="15.0" fill="rgb(223,27,36)" rx="2" ry="2" />
<text  x="1140.57" y="863.5" ></text>
</g>
<g >
<title>llvm::BlockFrequencyInfoImpl&lt;llvm::BasicBlock&gt;::propagateMassToSuccessors (1 samples, 0.04%)</title><rect x="1034.0" y="565" width="0.5" height="15.0" fill="rgb(236,98,39)" rx="2" ry="2" />
<text  x="1037.02" y="575.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit (1 samples, 0.04%)</title><rect x="905.4" y="373" width="0.4" height="15.0" fill="rgb(224,227,10)" rx="2" ry="2" />
<text  x="908.35" y="383.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXNewExpr (1 samples, 0.04%)</title><rect x="1102.8" y="773" width="0.4" height="15.0" fill="rgb(244,57,21)" rx="2" ry="2" />
<text  x="1105.76" y="783.5" ></text>
</g>
<g >
<title>llvm::AttributeList::getAttribute (1 samples, 0.04%)</title><rect x="864.4" y="517" width="0.4" height="15.0" fill="rgb(253,201,18)" rx="2" ry="2" />
<text  x="867.38" y="527.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (3 samples, 0.11%)</title><rect x="1148.1" y="693" width="1.4" height="15.0" fill="rgb(240,206,39)" rx="2" ry="2" />
<text  x="1151.14" y="703.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::runOnMachineFunction (1 samples, 0.04%)</title><rect x="1154.7" y="965" width="0.5" height="15.0" fill="rgb(250,144,14)" rx="2" ry="2" />
<text  x="1157.75" y="975.5" ></text>
</g>
<g >
<title>clang::TemplateTypeParmDecl::CreateDeserialized (1 samples, 0.04%)</title><rect x="1097.5" y="629" width="0.4" height="15.0" fill="rgb(230,39,33)" rx="2" ry="2" />
<text  x="1100.47" y="639.5" ></text>
</g>
<g >
<title>clang::FunctionDecl::getBody (1 samples, 0.04%)</title><rect x="1121.3" y="853" width="0.4" height="15.0" fill="rgb(252,221,39)" rx="2" ry="2" />
<text  x="1124.26" y="863.5" ></text>
</g>
<g >
<title>clang::Sema::LookupQualifiedName (1 samples, 0.04%)</title><rect x="1129.6" y="725" width="0.5" height="15.0" fill="rgb(216,0,10)" rx="2" ry="2" />
<text  x="1132.63" y="735.5" ></text>
</g>
<g >
<title>cling::MetaSema::actOnxCommand (6 samples, 0.22%)</title><rect x="1148.1" y="917" width="2.7" height="15.0" fill="rgb(217,30,9)" rx="2" ry="2" />
<text  x="1151.14" y="927.5" ></text>
</g>
<g >
<title>clang::Sema::IsDerivedFrom (1 samples, 0.04%)</title><rect x="1155.2" y="869" width="0.4" height="15.0" fill="rgb(222,116,4)" rx="2" ry="2" />
<text  x="1158.19" y="879.5" ></text>
</g>
<g >
<title>TClass::IsTObject (1 samples, 0.04%)</title><rect x="786.4" y="629" width="0.4" height="15.0" fill="rgb(205,84,46)" rx="2" ry="2" />
<text  x="789.39" y="639.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::GenerateCode (1 samples, 0.04%)</title><rect x="1105.0" y="933" width="0.4" height="15.0" fill="rgb(222,109,13)" rx="2" ry="2" />
<text  x="1107.96" y="943.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord (1 samples, 0.04%)</title><rect x="1099.2" y="805" width="0.5" height="15.0" fill="rgb(247,8,26)" rx="2" ry="2" />
<text  x="1102.23" y="815.5" ></text>
</g>
<g >
<title>TAxis::FindBin (119 samples, 4.44%)</title><rect x="940.2" y="933" width="52.4" height="15.0" fill="rgb(243,76,18)" rx="2" ry="2" />
<text  x="943.16" y="943.5" >TAxis..</text>
</g>
<g >
<title>ROOT::RDataFrame::RDataFrame (1 samples, 0.04%)</title><rect x="786.4" y="837" width="0.4" height="15.0" fill="rgb(242,133,27)" rx="2" ry="2" />
<text  x="789.39" y="847.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="1176.8" y="837" width="0.4" height="15.0" fill="rgb(242,138,41)" rx="2" ry="2" />
<text  x="1179.78" y="847.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitNamedDecl (1 samples, 0.04%)</title><rect x="1117.3" y="421" width="0.4" height="15.0" fill="rgb(208,205,2)" rx="2" ry="2" />
<text  x="1120.30" y="431.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::getMinusSCEV (1 samples, 0.04%)</title><rect x="909.8" y="645" width="0.4" height="15.0" fill="rgb(233,71,7)" rx="2" ry="2" />
<text  x="912.76" y="655.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="830.4" y="501" width="0.5" height="15.0" fill="rgb(205,177,37)" rx="2" ry="2" />
<text  x="833.45" y="511.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::Compile (1 samples, 0.04%)</title><rect x="785.1" y="901" width="0.4" height="15.0" fill="rgb(244,120,45)" rx="2" ry="2" />
<text  x="788.06" y="911.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="11.8" y="261" width="0.4" height="15.0" fill="rgb(205,36,0)" rx="2" ry="2" />
<text  x="14.76" y="271.5" ></text>
</g>
<g >
<title>ROOT::Internal::VecOps::SmallVectorBase::set_size@plt (1 samples, 0.04%)</title><rect x="828.2" y="917" width="0.5" height="15.0" fill="rgb(215,6,25)" rx="2" ry="2" />
<text  x="831.24" y="927.5" ></text>
</g>
<g >
<title>llvm::X86TargetMachine::getTargetTransformInfo (2 samples, 0.07%)</title><rect x="1045.9" y="597" width="0.9" height="15.0" fill="rgb(206,135,10)" rx="2" ry="2" />
<text  x="1048.91" y="607.5" ></text>
</g>
<g >
<title>cling::Interpreter::RunFunction (1 samples, 0.04%)</title><rect x="1146.8" y="965" width="0.5" height="15.0" fill="rgb(206,184,13)" rx="2" ry="2" />
<text  x="1149.82" y="975.5" ></text>
</g>
<g >
<title>llvm::DAGTypeLegalizer::getTableId (1 samples, 0.04%)</title><rect x="1157.8" y="693" width="0.5" height="15.0" fill="rgb(254,12,0)" rx="2" ry="2" />
<text  x="1160.83" y="703.5" ></text>
</g>
<g >
<title>expand_string_assignment (15 samples, 0.56%)</title><rect x="12.6" y="405" width="6.7" height="15.0" fill="rgb(231,48,18)" rx="2" ry="2" />
<text  x="15.64" y="415.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::SCEV const*, llvm::SmallVector&lt;llvm::PointerIntPair&lt;llvm::Loop const*, 2u, llvm::ScalarEvolution::LoopDisposition, llvm::PointerLikeTypeTraits&lt;llvm::Loop const*&gt;, llvm::PointerIntPairInfo&lt;llvm::Loop const*, 2u, llvm::PointerLikeTypeTraits&lt;llvm::Loop const*&gt; &gt; &gt;, 2u&gt;, llvm::DenseMapInfo&lt;llvm::SCEV const*&gt;, llvm::detail::DenseMapPair&lt;llvm::SCEV const*, llvm::SmallVector&lt;llvm::PointerIntPair&lt;llvm::Loop const*, 2u, llvm::ScalarEvolution::LoopDisposition, llvm::PointerLikeTypeTraits&lt;llvm::Loop const*&gt;, llvm::PointerIntPairInfo&lt;llvm::Loop const*, 2u, llvm::PointerLikeTypeTraits&lt;llvm::Loop const*&gt; &gt; &gt;, 2u&gt; &gt; &gt;, llvm::SCEV const*, llvm::SmallVector&lt;llvm::PointerIntPair&lt;llvm::Loop const*, 2u, llvm::ScalarEvolution::LoopDisposition, llvm::PointerLikeTypeTraits&lt;llvm::Loop const*&gt;, llvm::PointerIntPairInfo&lt;llvm::Loop const*, 2u, llvm::PointerLikeTypeTraits&lt;llvm::Loop const*&gt; &gt; &gt;, 2u&gt;, llvm::DenseMapInfo&lt;llvm::SCEV const*&gt;, llvm::detail::DenseMapPair&lt;llvm::SCEV const*, llvm::SmallVector&lt;llvm::PointerIntPair&lt;llvm::Loop const*, 2u, llvm::ScalarEvolution::LoopDisposition, llvm::PointerLikeTypeTraits&lt;llvm::Loop const*&gt;, llvm::PointerIntPairInfo&lt;llvm::Loop const*, 2u, llvm::PointerLikeTypeTraits&lt;llvm::Loop const*&gt; &gt; &gt;, 2u&gt; &gt; &gt;::initEmpty (1 samples, 0.04%)</title><rect x="1045.0" y="597" width="0.5" height="15.0" fill="rgb(236,172,36)" rx="2" ry="2" />
<text  x="1048.03" y="607.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.07%)</title><rect x="1070.1" y="693" width="0.9" height="15.0" fill="rgb(254,201,8)" rx="2" ry="2" />
<text  x="1073.15" y="703.5" ></text>
</g>
<g >
<title>simplifyFunctionCFG (1 samples, 0.04%)</title><rect x="1063.1" y="613" width="0.4" height="15.0" fill="rgb(213,29,2)" rx="2" ry="2" />
<text  x="1066.10" y="623.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType (1 samples, 0.04%)</title><rect x="1124.8" y="757" width="0.4" height="15.0" fill="rgb(224,23,46)" rx="2" ry="2" />
<text  x="1127.79" y="767.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::ConstructDefaultFnAttrList (1 samples, 0.04%)</title><rect x="1115.5" y="725" width="0.5" height="15.0" fill="rgb(215,219,43)" rx="2" ry="2" />
<text  x="1118.53" y="735.5" ></text>
</g>
<g >
<title>llvm::X86AsmPrinter::EmitInstruction (1 samples, 0.04%)</title><rect x="908.0" y="565" width="0.4" height="15.0" fill="rgb(248,196,36)" rx="2" ry="2" />
<text  x="911.00" y="575.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1169.3" y="869" width="0.4" height="15.0" fill="rgb(219,76,39)" rx="2" ry="2" />
<text  x="1172.29" y="879.5" ></text>
</g>
<g >
<title>LazyFunctionCreatorAutoloadForModule (2 samples, 0.07%)</title><rect x="867.5" y="501" width="0.8" height="15.0" fill="rgb(232,73,35)" rx="2" ry="2" />
<text  x="870.46" y="511.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::getAddExpr (1 samples, 0.04%)</title><rect x="1159.2" y="437" width="0.4" height="15.0" fill="rgb(207,36,53)" rx="2" ry="2" />
<text  x="1162.16" y="447.5" ></text>
</g>
<g >
<title>evalstring (1 samples, 0.04%)</title><rect x="21.9" y="277" width="0.4" height="15.0" fill="rgb(232,148,47)" rx="2" ry="2" />
<text  x="24.90" y="287.5" ></text>
</g>
<g >
<title>iterativelySimplifyCFG (1 samples, 0.04%)</title><rect x="1063.1" y="597" width="0.4" height="15.0" fill="rgb(254,89,34)" rx="2" ry="2" />
<text  x="1066.10" y="607.5" ></text>
</g>
<g >
<title>clang::Sema::BuildDeclRefExpr (1 samples, 0.04%)</title><rect x="1130.1" y="693" width="0.4" height="15.0" fill="rgb(254,172,37)" rx="2" ry="2" />
<text  x="1133.07" y="703.5" ></text>
</g>
<g >
<title>clang::TemplateArgument::Profile (1 samples, 0.04%)</title><rect x="1100.1" y="693" width="0.5" height="15.0" fill="rgb(252,143,46)" rx="2" ry="2" />
<text  x="1103.11" y="703.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolutionWrapperPass::releaseMemory (1 samples, 0.04%)</title><rect x="1038.4" y="597" width="0.5" height="15.0" fill="rgb(232,180,16)" rx="2" ry="2" />
<text  x="1041.42" y="607.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitMaterializeTemporaryExpr (1 samples, 0.04%)</title><rect x="1101.4" y="853" width="0.5" height="15.0" fill="rgb(239,79,44)" rx="2" ry="2" />
<text  x="1104.43" y="863.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1093.9" y="693" width="0.5" height="15.0" fill="rgb(249,57,54)" rx="2" ry="2" />
<text  x="1096.94" y="703.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnModule (10 samples, 0.37%)</title><rect x="1159.6" y="805" width="4.4" height="15.0" fill="rgb(252,187,48)" rx="2" ry="2" />
<text  x="1162.60" y="815.5" ></text>
</g>
<g >
<title>clang::RedeclarableTemplateDecl::loadLazySpecializationsImpl (1 samples, 0.04%)</title><rect x="1103.2" y="421" width="0.4" height="15.0" fill="rgb(232,228,51)" rx="2" ry="2" />
<text  x="1106.20" y="431.5" ></text>
</g>
<g >
<title>llvm::zlib::uncompress (1 samples, 0.04%)</title><rect x="1137.6" y="549" width="0.4" height="15.0" fill="rgb(239,168,34)" rx="2" ry="2" />
<text  x="1140.57" y="559.5" ></text>
</g>
<g >
<title>dl_main (1 samples, 0.04%)</title><rect x="334.7" y="917" width="0.5" height="15.0" fill="rgb(237,153,54)" rx="2" ry="2" />
<text  x="337.74" y="927.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::verifyPreservedAnalysis (1 samples, 0.04%)</title><rect x="698.3" y="757" width="0.4" height="15.0" fill="rgb(207,79,43)" rx="2" ry="2" />
<text  x="701.26" y="767.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass (1 samples, 0.04%)</title><rect x="1137.1" y="885" width="0.5" height="15.0" fill="rgb(249,112,42)" rx="2" ry="2" />
<text  x="1140.12" y="895.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveExternalSymbols (3 samples, 0.11%)</title><rect x="867.0" y="597" width="1.3" height="15.0" fill="rgb(238,139,46)" rx="2" ry="2" />
<text  x="870.02" y="607.5" ></text>
</g>
<g >
<title>TCling::ProcessLine (1 samples, 0.04%)</title><rect x="1027.4" y="885" width="0.4" height="15.0" fill="rgb(215,128,31)" rx="2" ry="2" />
<text  x="1030.41" y="895.5" ></text>
</g>
<g >
<title>ROOT::Detail::VecOps::RVecImpl&lt;float&gt;::operator= (39 samples, 1.46%)</title><rect x="811.5" y="933" width="17.2" height="15.0" fill="rgb(238,85,12)" rx="2" ry="2" />
<text  x="814.50" y="943.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteDeclContext (1 samples, 0.04%)</title><rect x="1142.9" y="853" width="0.4" height="15.0" fill="rgb(254,221,42)" rx="2" ry="2" />
<text  x="1145.85" y="863.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::RebuildDependentNameType (1 samples, 0.04%)</title><rect x="1139.3" y="661" width="0.5" height="15.0" fill="rgb(236,84,51)" rx="2" ry="2" />
<text  x="1142.33" y="671.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::FindExternalLexicalDecls (1 samples, 0.04%)</title><rect x="1097.5" y="805" width="0.4" height="15.0" fill="rgb(238,15,49)" rx="2" ry="2" />
<text  x="1100.47" y="815.5" ></text>
</g>
<g >
<title>TCling::ExecuteMacro (1 samples, 0.04%)</title><rect x="1027.0" y="933" width="0.4" height="15.0" fill="rgb(214,137,46)" rx="2" ry="2" />
<text  x="1029.97" y="943.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1164.0" y="933" width="0.4" height="15.0" fill="rgb(226,127,12)" rx="2" ry="2" />
<text  x="1167.00" y="943.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddType (1 samples, 0.04%)</title><rect x="1128.3" y="533" width="0.5" height="15.0" fill="rgb(245,43,15)" rx="2" ry="2" />
<text  x="1131.31" y="543.5" ></text>
</g>
<g >
<title>clang::Sema::BuildExpressionFromIntegralTemplateArgument (1 samples, 0.04%)</title><rect x="1135.4" y="645" width="0.4" height="15.0" fill="rgb(253,20,2)" rx="2" ry="2" />
<text  x="1138.36" y="655.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::getAddExpr (1 samples, 0.04%)</title><rect x="1159.2" y="453" width="0.4" height="15.0" fill="rgb(232,96,48)" rx="2" ry="2" />
<text  x="1162.16" y="463.5" ></text>
</g>
<g >
<title>llvm::PopulateLoopsDFS&lt;llvm::BasicBlock, llvm::Loop&gt;::traverse (1 samples, 0.04%)</title><rect x="901.8" y="629" width="0.5" height="15.0" fill="rgb(235,84,21)" rx="2" ry="2" />
<text  x="904.83" y="639.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl (1 samples, 0.04%)</title><rect x="904.5" y="709" width="0.4" height="15.0" fill="rgb(243,94,41)" rx="2" ry="2" />
<text  x="907.47" y="719.5" ></text>
</g>
<g >
<title>_IO_new_file_xsputn (1 samples, 0.04%)</title><rect x="19.3" y="437" width="0.4" height="15.0" fill="rgb(245,49,48)" rx="2" ry="2" />
<text  x="22.25" y="447.5" ></text>
</g>
<g >
<title>[bash] (5 samples, 0.19%)</title><rect x="10.4" y="469" width="2.2" height="15.0" fill="rgb(214,203,24)" rx="2" ry="2" />
<text  x="13.44" y="479.5" ></text>
</g>
<g >
<title>TApplication::ProcessLine (7 samples, 0.26%)</title><rect x="900.5" y="965" width="3.1" height="15.0" fill="rgb(235,141,29)" rx="2" ry="2" />
<text  x="903.51" y="975.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentNameType (1 samples, 0.04%)</title><rect x="1137.6" y="901" width="0.4" height="15.0" fill="rgb(225,210,34)" rx="2" ry="2" />
<text  x="1140.57" y="911.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTBAA::getTypeInfo (1 samples, 0.04%)</title><rect x="1101.4" y="789" width="0.5" height="15.0" fill="rgb(222,128,31)" rx="2" ry="2" />
<text  x="1104.43" y="799.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformCompoundStmt (1 samples, 0.04%)</title><rect x="1128.3" y="869" width="0.5" height="15.0" fill="rgb(243,32,50)" rx="2" ry="2" />
<text  x="1131.31" y="879.5" ></text>
</g>
<g >
<title>clang::Sema::SubstStmt (1 samples, 0.04%)</title><rect x="1122.1" y="853" width="0.5" height="15.0" fill="rgb(244,163,36)" rx="2" ry="2" />
<text  x="1125.14" y="863.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1072.4" y="725" width="0.4" height="15.0" fill="rgb(237,31,35)" rx="2" ry="2" />
<text  x="1075.35" y="735.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;llvm::make_const_ptr, (anonymous namespace)::StmtProfiler, void&gt;::Visit (1 samples, 0.04%)</title><rect x="1100.1" y="645" width="0.5" height="15.0" fill="rgb(242,149,14)" rx="2" ry="2" />
<text  x="1103.11" y="655.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass (1 samples, 0.04%)</title><rect x="1127.9" y="773" width="0.4" height="15.0" fill="rgb(208,219,6)" rx="2" ry="2" />
<text  x="1130.87" y="783.5" ></text>
</g>
<g >
<title>llvm::SelectionDAG::LegalizeTypes (1 samples, 0.04%)</title><rect x="1152.1" y="757" width="0.4" height="15.0" fill="rgb(223,64,34)" rx="2" ry="2" />
<text  x="1155.11" y="767.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.04%)</title><rect x="1103.6" y="917" width="0.5" height="15.0" fill="rgb(219,192,13)" rx="2" ry="2" />
<text  x="1106.64" y="927.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::computeSectionStubBufSize (23 samples, 0.86%)</title><rect x="878.9" y="549" width="10.2" height="15.0" fill="rgb(243,109,31)" rx="2" ry="2" />
<text  x="881.92" y="559.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveRelocations (10 samples, 0.37%)</title><rect x="1159.6" y="933" width="4.4" height="15.0" fill="rgb(215,121,11)" rx="2" ry="2" />
<text  x="1162.60" y="943.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteDeclContext (1 samples, 0.04%)</title><rect x="1127.4" y="677" width="0.5" height="15.0" fill="rgb(227,144,31)" rx="2" ry="2" />
<text  x="1130.43" y="687.5" ></text>
</g>
<g >
<title>llvm::BranchProbabilityInfoWrapperPass::runOnFunction (1 samples, 0.04%)</title><rect x="1034.5" y="629" width="0.4" height="15.0" fill="rgb(225,27,16)" rx="2" ry="2" />
<text  x="1037.46" y="639.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteDeclContext (1 samples, 0.04%)</title><rect x="1130.5" y="741" width="0.5" height="15.0" fill="rgb(222,174,10)" rx="2" ry="2" />
<text  x="1133.52" y="751.5" ></text>
</g>
<g >
<title>[unknown] (18 samples, 0.67%)</title><rect x="1179.9" y="805" width="7.9" height="15.0" fill="rgb(218,188,16)" rx="2" ry="2" />
<text  x="1182.87" y="815.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord (1 samples, 0.04%)</title><rect x="904.5" y="597" width="0.4" height="15.0" fill="rgb(221,171,0)" rx="2" ry="2" />
<text  x="907.47" y="607.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::setNonAliasAttributes (1 samples, 0.04%)</title><rect x="1110.2" y="581" width="0.5" height="15.0" fill="rgb(229,174,35)" rx="2" ry="2" />
<text  x="1113.25" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;llvm::StringRef, llvm::StringRef, std::_Identity&lt;llvm::StringRef&gt;, std::less&lt;llvm::StringRef&gt;, std::allocator&lt;llvm::StringRef&gt; &gt;::_M_insert_unique&lt;llvm::StringRef const&amp;&gt; (1 samples, 0.04%)</title><rect x="889.1" y="581" width="0.4" height="15.0" fill="rgb(251,180,49)" rx="2" ry="2" />
<text  x="892.05" y="591.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ComputeRecordLayout (1 samples, 0.04%)</title><rect x="1117.3" y="965" width="0.4" height="15.0" fill="rgb(237,133,32)" rx="2" ry="2" />
<text  x="1120.30" y="975.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="431.2" y="869" width="0.5" height="15.0" fill="rgb(248,84,3)" rx="2" ry="2" />
<text  x="434.24" y="879.5" ></text>
</g>
<g >
<title>clang::CXXBasePaths::lookupInBases (1 samples, 0.04%)</title><rect x="1119.5" y="789" width="0.4" height="15.0" fill="rgb(244,18,30)" rx="2" ry="2" />
<text  x="1122.50" y="799.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke (2 samples, 0.07%)</title><rect x="1152.5" y="885" width="0.9" height="15.0" fill="rgb(238,119,40)" rx="2" ry="2" />
<text  x="1155.55" y="895.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXMemberCallExpr (1 samples, 0.04%)</title><rect x="1102.3" y="821" width="0.5" height="15.0" fill="rgb(247,19,14)" rx="2" ry="2" />
<text  x="1105.32" y="831.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (1 samples, 0.04%)</title><rect x="1149.5" y="325" width="0.4" height="15.0" fill="rgb(212,68,29)" rx="2" ry="2" />
<text  x="1152.46" y="335.5" ></text>
</g>
<g >
<title>clang::Sema::SubstStmt (1 samples, 0.04%)</title><rect x="1135.8" y="949" width="0.4" height="15.0" fill="rgb(250,12,28)" rx="2" ry="2" />
<text  x="1138.80" y="959.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::executeWrapper (4 samples, 0.15%)</title><rect x="1148.1" y="869" width="1.8" height="15.0" fill="rgb(209,193,48)" rx="2" ry="2" />
<text  x="1151.14" y="879.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="21.5" y="421" width="0.4" height="15.0" fill="rgb(222,176,31)" rx="2" ry="2" />
<text  x="24.46" y="431.5" ></text>
</g>
<g >
<title>_IO_new_popen (5 samples, 0.19%)</title><rect x="1072.8" y="837" width="2.2" height="15.0" fill="rgb(234,46,51)" rx="2" ry="2" />
<text  x="1075.79" y="847.5" ></text>
</g>
<g >
<title>[bash] (16 samples, 0.60%)</title><rect x="12.6" y="597" width="7.1" height="15.0" fill="rgb(213,151,24)" rx="2" ry="2" />
<text  x="15.64" y="607.5" ></text>
</g>
<g >
<title>llvm::matchDecomposedSelectPattern (1 samples, 0.04%)</title><rect x="829.6" y="773" width="0.4" height="15.0" fill="rgb(254,1,38)" rx="2" ry="2" />
<text  x="832.57" y="783.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord (1 samples, 0.04%)</title><rect x="1099.2" y="613" width="0.5" height="15.0" fill="rgb(213,154,5)" rx="2" ry="2" />
<text  x="1102.23" y="623.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentNameType (1 samples, 0.04%)</title><rect x="1142.0" y="741" width="0.4" height="15.0" fill="rgb(209,224,1)" rx="2" ry="2" />
<text  x="1144.97" y="751.5" ></text>
</g>
<g >
<title>clang::ASTReader::loadDeclUpdateRecords (1 samples, 0.04%)</title><rect x="1142.9" y="613" width="0.4" height="15.0" fill="rgb(253,185,20)" rx="2" ry="2" />
<text  x="1145.85" y="623.5" ></text>
</g>
<g >
<title>llvm::Function::addAttributes (1 samples, 0.04%)</title><rect x="1103.6" y="533" width="0.5" height="15.0" fill="rgb(250,5,6)" rx="2" ry="2" />
<text  x="1106.64" y="543.5" ></text>
</g>
<g >
<title>llvm::FoldingSetNodeID::AddInteger (1 samples, 0.04%)</title><rect x="1113.8" y="741" width="0.4" height="15.0" fill="rgb(218,136,21)" rx="2" ry="2" />
<text  x="1116.77" y="751.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1176.8" y="725" width="0.4" height="15.0" fill="rgb(254,162,13)" rx="2" ry="2" />
<text  x="1179.78" y="735.5" ></text>
</g>
<g >
<title>cling::MultiplexInterpreterCallbacks::TransactionCommitted (1 samples, 0.04%)</title><rect x="1065.7" y="693" width="0.5" height="15.0" fill="rgb(249,174,39)" rx="2" ry="2" />
<text  x="1068.74" y="703.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnModule (3 samples, 0.11%)</title><rect x="1155.6" y="933" width="1.4" height="15.0" fill="rgb(228,198,7)" rx="2" ry="2" />
<text  x="1158.63" y="943.5" ></text>
</g>
<g >
<title>llvm::InstrEmitter::EmitMachineNode (1 samples, 0.04%)</title><rect x="1150.8" y="613" width="0.4" height="15.0" fill="rgb(210,139,27)" rx="2" ry="2" />
<text  x="1153.78" y="623.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformInitListExpr (1 samples, 0.04%)</title><rect x="1133.6" y="821" width="0.4" height="15.0" fill="rgb(239,169,21)" rx="2" ry="2" />
<text  x="1136.60" y="831.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::ScalarEvolution (2 samples, 0.07%)</title><rect x="1045.0" y="613" width="0.9" height="15.0" fill="rgb(212,79,20)" rx="2" ry="2" />
<text  x="1048.03" y="623.5" ></text>
</g>
<g >
<title>clang::DeclContext::decls_begin (1 samples, 0.04%)</title><rect x="904.5" y="869" width="0.4" height="15.0" fill="rgb(207,9,36)" rx="2" ry="2" />
<text  x="907.47" y="879.5" ></text>
</g>
<g >
<title>llvm::MachineFunctionPass::runOnFunction (3 samples, 0.11%)</title><rect x="1155.6" y="901" width="1.4" height="15.0" fill="rgb(247,54,23)" rx="2" ry="2" />
<text  x="1158.63" y="911.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::SmallDenseMap&lt;void const*, llvm::ImmutablePass*, 8u, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::ImmutablePass*&gt; &gt;, void const*, llvm::ImmutablePass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::ImmutablePass*&gt; &gt;::LookupBucketFor&lt;void const*&gt; (3 samples, 0.11%)</title><rect x="855.1" y="533" width="1.3" height="15.0" fill="rgb(251,6,10)" rx="2" ry="2" />
<text  x="858.12" y="543.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::runOnMachineFunction (2 samples, 0.07%)</title><rect x="1145.9" y="693" width="0.9" height="15.0" fill="rgb(226,46,3)" rx="2" ry="2" />
<text  x="1148.94" y="703.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::runOnMachineFunction (1 samples, 0.04%)</title><rect x="1147.7" y="661" width="0.4" height="15.0" fill="rgb(214,57,24)" rx="2" ry="2" />
<text  x="1150.70" y="671.5" ></text>
</g>
<g >
<title>ROOT::Detail::RDF::RLoopManager::RunTreeReader (108 samples, 4.03%)</title><rect x="713.2" y="917" width="47.6" height="15.0" fill="rgb(210,113,52)" rx="2" ry="2" />
<text  x="716.24" y="927.5" >ROOT..</text>
</g>
<g >
<title>llvm::BranchProbabilityInfo::calculate (1 samples, 0.04%)</title><rect x="833.1" y="565" width="0.4" height="15.0" fill="rgb(253,84,31)" rx="2" ry="2" />
<text  x="836.09" y="575.5" ></text>
</g>
<g >
<title>llvm::PMTopLevelManager::findAnalysisPass (1 samples, 0.04%)</title><rect x="1033.6" y="597" width="0.4" height="15.0" fill="rgb(242,208,39)" rx="2" ry="2" />
<text  x="1036.58" y="607.5" ></text>
</g>
<g >
<title>clang::Sema::BuildQualifiedDeclarationNameExpr (2 samples, 0.07%)</title><rect x="1142.0" y="901" width="0.9" height="15.0" fill="rgb(212,226,40)" rx="2" ry="2" />
<text  x="1144.97" y="911.5" ></text>
</g>
<g >
<title>clang::RecordDecl::LoadFieldsFromExternalStorage (1 samples, 0.04%)</title><rect x="1117.3" y="565" width="0.4" height="15.0" fill="rgb(253,202,16)" rx="2" ry="2" />
<text  x="1120.30" y="575.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.07%)</title><rect x="20.1" y="549" width="0.9" height="15.0" fill="rgb(236,85,33)" rx="2" ry="2" />
<text  x="23.13" y="559.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::Compile (24 samples, 0.90%)</title><rect x="889.9" y="789" width="10.6" height="15.0" fill="rgb(208,110,22)" rx="2" ry="2" />
<text  x="892.93" y="799.5" ></text>
</g>
<g >
<title>StrengthenNoWrapFlags (1 samples, 0.04%)</title><rect x="1159.2" y="421" width="0.4" height="15.0" fill="rgb(240,163,22)" rx="2" ry="2" />
<text  x="1162.16" y="431.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord (1 samples, 0.04%)</title><rect x="1132.7" y="837" width="0.5" height="15.0" fill="rgb(222,22,52)" rx="2" ry="2" />
<text  x="1135.72" y="847.5" ></text>
</g>
<g >
<title>clang::ASTRecordReader::readRecord (1 samples, 0.04%)</title><rect x="1132.7" y="453" width="0.5" height="15.0" fill="rgb(234,106,52)" rx="2" ry="2" />
<text  x="1135.72" y="463.5" ></text>
</g>
<g >
<title>operator() (2 samples, 0.07%)</title><rect x="785.1" y="949" width="0.8" height="15.0" fill="rgb(253,167,19)" rx="2" ry="2" />
<text  x="788.06" y="959.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentNameType (1 samples, 0.04%)</title><rect x="1143.7" y="837" width="0.5" height="15.0" fill="rgb(241,120,11)" rx="2" ry="2" />
<text  x="1146.73" y="847.5" ></text>
</g>
<g >
<title>llvm::ReversePostOrderTraversal&lt;llvm::MachineBasicBlock*, llvm::GraphTraits&lt;llvm::MachineBasicBlock*&gt; &gt;::Initialize (1 samples, 0.04%)</title><rect x="843.7" y="565" width="0.4" height="15.0" fill="rgb(233,178,21)" rx="2" ry="2" />
<text  x="846.67" y="575.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="11.8" y="309" width="0.4" height="15.0" fill="rgb(227,4,44)" rx="2" ry="2" />
<text  x="14.76" y="319.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (13 samples, 0.49%)</title><rect x="1109.8" y="949" width="5.7" height="15.0" fill="rgb(224,66,49)" rx="2" ry="2" />
<text  x="1112.81" y="959.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::runOnMachineFunction (2 samples, 0.07%)</title><rect x="684.6" y="613" width="0.9" height="15.0" fill="rgb(228,48,44)" rx="2" ry="2" />
<text  x="687.60" y="623.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.07%)</title><rect x="1188.7" y="757" width="0.9" height="15.0" fill="rgb(221,92,35)" rx="2" ry="2" />
<text  x="1191.68" y="767.5" ></text>
</g>
<g >
<title>TryContextuallyConvertToBool (1 samples, 0.04%)</title><rect x="1134.0" y="613" width="0.5" height="15.0" fill="rgb(227,148,37)" rx="2" ry="2" />
<text  x="1137.04" y="623.5" ></text>
</g>
<g >
<title>__mempcpy_avx_unaligned (1 samples, 0.04%)</title><rect x="1068.8" y="725" width="0.5" height="15.0" fill="rgb(231,48,4)" rx="2" ry="2" />
<text  x="1071.83" y="735.5" ></text>
</g>
<g >
<title>llvm::AAResultsWrapperPass::runOnFunction (1 samples, 0.04%)</title><rect x="831.8" y="581" width="0.4" height="15.0" fill="rgb(237,215,51)" rx="2" ry="2" />
<text  x="834.77" y="591.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.04%)</title><rect x="1103.6" y="821" width="0.5" height="15.0" fill="rgb(247,189,30)" rx="2" ry="2" />
<text  x="1106.64" y="831.5" ></text>
</g>
<g >
<title>clang::Sema::SubstDecl (1 samples, 0.04%)</title><rect x="1136.2" y="901" width="0.5" height="15.0" fill="rgb(206,47,49)" rx="2" ry="2" />
<text  x="1139.24" y="911.5" ></text>
</g>
<g >
<title>clang::TemplateDeclInstantiator::VisitCXXMethodDecl (1 samples, 0.04%)</title><rect x="1127.0" y="917" width="0.4" height="15.0" fill="rgb(219,30,31)" rx="2" ry="2" />
<text  x="1129.99" y="927.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadTemplateArgument (1 samples, 0.04%)</title><rect x="1100.6" y="725" width="0.4" height="15.0" fill="rgb(243,1,44)" rx="2" ry="2" />
<text  x="1103.55" y="735.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::Compile (1 samples, 0.04%)</title><rect x="1145.5" y="949" width="0.4" height="15.0" fill="rgb(231,153,29)" rx="2" ry="2" />
<text  x="1148.50" y="959.5" ></text>
</g>
<g >
<title>DynamicPath (5 samples, 0.19%)</title><rect x="1076.3" y="837" width="2.2" height="15.0" fill="rgb(230,24,37)" rx="2" ry="2" />
<text  x="1079.32" y="847.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (6 samples, 0.22%)</title><rect x="1109.8" y="741" width="2.6" height="15.0" fill="rgb(231,55,25)" rx="2" ry="2" />
<text  x="1112.81" y="751.5" ></text>
</g>
<g >
<title>llvm::CallBase::hasFnAttrOnCalledFunction (1 samples, 0.04%)</title><rect x="898.7" y="581" width="0.5" height="15.0" fill="rgb(254,109,41)" rx="2" ry="2" />
<text  x="901.75" y="591.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.04%)</title><rect x="786.4" y="901" width="0.4" height="15.0" fill="rgb(235,30,44)" rx="2" ry="2" />
<text  x="789.39" y="911.5" ></text>
</g>
<g >
<title>llvm::Function::nullPointerIsDefined (1 samples, 0.04%)</title><rect x="901.4" y="581" width="0.4" height="15.0" fill="rgb(232,50,21)" rx="2" ry="2" />
<text  x="904.39" y="591.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1164.0" y="789" width="0.4" height="15.0" fill="rgb(251,215,42)" rx="2" ry="2" />
<text  x="1167.00" y="799.5" ></text>
</g>
<g >
<title>llvm::isSafeToDestroyConstant (1 samples, 0.04%)</title><rect x="1065.3" y="549" width="0.4" height="15.0" fill="rgb(238,21,32)" rx="2" ry="2" />
<text  x="1068.30" y="559.5" ></text>
</g>
<g >
<title>clang::Sema::DiagnoseUnusedNestedTypedefs (1 samples, 0.04%)</title><rect x="1132.3" y="613" width="0.4" height="15.0" fill="rgb(217,22,42)" rx="2" ry="2" />
<text  x="1135.28" y="623.5" ></text>
</g>
<g >
<title>TChain::CheckTObjectHashConsistency (1 samples, 0.04%)</title><rect x="786.4" y="725" width="0.4" height="15.0" fill="rgb(237,116,47)" rx="2" ry="2" />
<text  x="789.39" y="735.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::RebuildDependentNameType (1 samples, 0.04%)</title><rect x="1142.0" y="725" width="0.4" height="15.0" fill="rgb(234,130,30)" rx="2" ry="2" />
<text  x="1144.97" y="735.5" ></text>
</g>
<g >
<title>make_child (29 samples, 1.08%)</title><rect x="1176.8" y="853" width="12.8" height="15.0" fill="rgb(212,107,43)" rx="2" ry="2" />
<text  x="1179.78" y="863.5" ></text>
</g>
<g >
<title>clang::DeclContext::lookup (1 samples, 0.04%)</title><rect x="1126.1" y="917" width="0.4" height="15.0" fill="rgb(237,207,29)" rx="2" ry="2" />
<text  x="1129.11" y="927.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetType (1 samples, 0.04%)</title><rect x="1100.1" y="821" width="0.5" height="15.0" fill="rgb(247,9,41)" rx="2" ry="2" />
<text  x="1103.11" y="831.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXConstructorCall (1 samples, 0.04%)</title><rect x="1107.6" y="725" width="0.4" height="15.0" fill="rgb(223,0,39)" rx="2" ry="2" />
<text  x="1110.60" y="735.5" ></text>
</g>
<g >
<title>cling::MetaParser::isXCommand (1 samples, 0.04%)</title><rect x="903.6" y="741" width="0.4" height="15.0" fill="rgb(210,8,1)" rx="2" ry="2" />
<text  x="906.59" y="751.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="21.9" y="357" width="0.4" height="15.0" fill="rgb(236,11,37)" rx="2" ry="2" />
<text  x="24.90" y="367.5" ></text>
</g>
<g >
<title>llvm::isa_impl_cl&lt;llvm::DbgInfoIntrinsic, llvm::Instruction*&gt;::doit (1 samples, 0.04%)</title><rect x="696.5" y="693" width="0.4" height="15.0" fill="rgb(210,227,21)" rx="2" ry="2" />
<text  x="699.50" y="703.5" ></text>
</g>
<g >
<title>SubstDefaultTemplateArgument (1 samples, 0.04%)</title><rect x="1127.4" y="917" width="0.5" height="15.0" fill="rgb(236,87,6)" rx="2" ry="2" />
<text  x="1130.43" y="927.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.04%)</title><rect x="1103.6" y="709" width="0.5" height="15.0" fill="rgb(244,117,39)" rx="2" ry="2" />
<text  x="1106.64" y="719.5" ></text>
</g>
<g >
<title>llvm::MCStreamer::Finish (1 samples, 0.04%)</title><rect x="699.1" y="757" width="0.5" height="15.0" fill="rgb(228,191,0)" rx="2" ry="2" />
<text  x="702.14" y="767.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::SelectAllBasicBlocks (1 samples, 0.04%)</title><rect x="1152.1" y="789" width="0.4" height="15.0" fill="rgb(205,202,11)" rx="2" ry="2" />
<text  x="1155.11" y="799.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::foldICmpUsingKnownBits (1 samples, 0.04%)</title><rect x="893.5" y="629" width="0.4" height="15.0" fill="rgb(218,161,30)" rx="2" ry="2" />
<text  x="896.46" y="639.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1097.0" y="821" width="0.5" height="15.0" fill="rgb(245,87,47)" rx="2" ry="2" />
<text  x="1100.03" y="831.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveExternalSymbols (1 samples, 0.04%)</title><rect x="1159.2" y="901" width="0.4" height="15.0" fill="rgb(222,6,39)" rx="2" ry="2" />
<text  x="1162.16" y="911.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::getMangledName (2 samples, 0.07%)</title><rect x="1108.9" y="933" width="0.9" height="15.0" fill="rgb(227,225,36)" rx="2" ry="2" />
<text  x="1111.92" y="943.5" ></text>
</g>
<g >
<title>std::__find_if&lt;llvm::SCEV const* const*, __gnu_cxx::__ops::_Iter_pred&lt;bool (*)(llvm::SCEV const*)&gt; &gt; (1 samples, 0.04%)</title><rect x="909.8" y="597" width="0.4" height="15.0" fill="rgb(207,162,14)" rx="2" ry="2" />
<text  x="912.76" y="607.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXConstructExpr (1 samples, 0.04%)</title><rect x="1106.7" y="837" width="0.5" height="15.0" fill="rgb(234,153,32)" rx="2" ry="2" />
<text  x="1109.72" y="847.5" ></text>
</g>
<g >
<title>llvm::AttributeSetNode::hasAttribute (2 samples, 0.07%)</title><rect x="864.8" y="517" width="0.9" height="15.0" fill="rgb(228,106,47)" rx="2" ry="2" />
<text  x="867.82" y="527.5" ></text>
</g>
<g >
<title>TH1::Fill (249 samples, 9.30%)</title><rect x="911.1" y="965" width="109.7" height="15.0" fill="rgb(228,158,1)" rx="2" ry="2" />
<text  x="914.08" y="975.5" >TH1::Fill</text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.04%)</title><rect x="1102.3" y="629" width="0.5" height="15.0" fill="rgb(245,155,35)" rx="2" ry="2" />
<text  x="1105.32" y="639.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.07%)</title><rect x="20.1" y="533" width="0.9" height="15.0" fill="rgb(218,66,10)" rx="2" ry="2" />
<text  x="23.13" y="543.5" ></text>
</g>
<g >
<title>llvm::orc::lookupWithLegacyFn&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}::operator()(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;) const::{lambda(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)#1}&gt; (1 samples, 0.04%)</title><rect x="1150.8" y="789" width="0.4" height="15.0" fill="rgb(244,31,33)" rx="2" ry="2" />
<text  x="1153.78" y="799.5" ></text>
</g>
<g >
<title>llvm::ExecutionDomainFix::runOnMachineFunction (1 samples, 0.04%)</title><rect x="841.5" y="549" width="0.4" height="15.0" fill="rgb(245,33,11)" rx="2" ry="2" />
<text  x="844.46" y="559.5" ></text>
</g>
<g >
<title>?? (9 samples, 0.34%)</title><rect x="794.8" y="901" width="3.9" height="15.0" fill="rgb(226,39,25)" rx="2" ry="2" />
<text  x="797.76" y="911.5" ></text>
</g>
<g >
<title>llvm::Value::setName (1 samples, 0.04%)</title><rect x="1108.5" y="853" width="0.4" height="15.0" fill="rgb(219,218,18)" rx="2" ry="2" />
<text  x="1111.48" y="863.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.07%)</title><rect x="1175.5" y="645" width="0.8" height="15.0" fill="rgb(236,149,22)" rx="2" ry="2" />
<text  x="1178.46" y="655.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1165.8" y="805" width="0.4" height="15.0" fill="rgb(252,209,40)" rx="2" ry="2" />
<text  x="1168.77" y="815.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertTypeForMem (1 samples, 0.04%)</title><rect x="1117.7" y="709" width="0.5" height="15.0" fill="rgb(243,211,37)" rx="2" ry="2" />
<text  x="1120.74" y="719.5" ></text>
</g>
<g >
<title>llvm::FoldingSetBase::FindNodeOrInsertPos (1 samples, 0.04%)</title><rect x="1154.7" y="853" width="0.5" height="15.0" fill="rgb(240,19,8)" rx="2" ry="2" />
<text  x="1157.75" y="863.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitTemplateDecl (1 samples, 0.04%)</title><rect x="904.5" y="629" width="0.4" height="15.0" fill="rgb(233,72,17)" rx="2" ry="2" />
<text  x="907.47" y="639.5" ></text>
</g>
<g >
<title>TClingCallbacks::LookupObject (1 samples, 0.04%)</title><rect x="784.2" y="469" width="0.4" height="15.0" fill="rgb(216,158,49)" rx="2" ry="2" />
<text  x="787.18" y="479.5" ></text>
</g>
<g >
<title>EmitCleanup (1 samples, 0.04%)</title><rect x="1116.4" y="853" width="0.5" height="15.0" fill="rgb(237,197,11)" rx="2" ry="2" />
<text  x="1119.42" y="863.5" ></text>
</g>
<g >
<title>analyzeGlobalAux (1 samples, 0.04%)</title><rect x="1065.3" y="581" width="0.4" height="15.0" fill="rgb(246,55,13)" rx="2" ry="2" />
<text  x="1068.30" y="591.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization (1 samples, 0.04%)</title><rect x="1137.1" y="901" width="0.5" height="15.0" fill="rgb(249,229,5)" rx="2" ry="2" />
<text  x="1140.12" y="911.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTemplateIdType (1 samples, 0.04%)</title><rect x="1124.3" y="709" width="0.5" height="15.0" fill="rgb(221,60,34)" rx="2" ry="2" />
<text  x="1127.35" y="719.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="1072.4" y="773" width="0.4" height="15.0" fill="rgb(248,39,21)" rx="2" ry="2" />
<text  x="1075.35" y="783.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::run (2 samples, 0.07%)</title><rect x="898.7" y="645" width="0.9" height="15.0" fill="rgb(220,15,36)" rx="2" ry="2" />
<text  x="901.75" y="655.5" ></text>
</g>
<g >
<title>llvm::raw_ostream::operator&lt;&lt; (1 samples, 0.04%)</title><rect x="1101.4" y="741" width="0.5" height="15.0" fill="rgb(239,26,35)" rx="2" ry="2" />
<text  x="1104.43" y="751.5" ></text>
</g>
<g >
<title>TBufferFile::ReadClassBuffer (1 samples, 0.04%)</title><rect x="905.4" y="837" width="0.4" height="15.0" fill="rgb(217,190,30)" rx="2" ry="2" />
<text  x="908.35" y="847.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertType (1 samples, 0.04%)</title><rect x="1117.7" y="629" width="0.5" height="15.0" fill="rgb(240,133,52)" rx="2" ry="2" />
<text  x="1120.74" y="639.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitStmt (1 samples, 0.04%)</title><rect x="1116.0" y="917" width="0.4" height="15.0" fill="rgb(247,177,0)" rx="2" ry="2" />
<text  x="1118.97" y="927.5" ></text>
</g>
<g >
<title>llvm::BasicAAWrapperPass::runOnFunction (2 samples, 0.07%)</title><rect x="1033.1" y="629" width="0.9" height="15.0" fill="rgb(213,225,3)" rx="2" ry="2" />
<text  x="1036.14" y="639.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTypenameType (1 samples, 0.04%)</title><rect x="1124.8" y="965" width="0.4" height="15.0" fill="rgb(219,99,51)" rx="2" ry="2" />
<text  x="1127.79" y="975.5" ></text>
</g>
<g >
<title>clang::Sema::getFunctionLevelDeclContext (1 samples, 0.04%)</title><rect x="785.1" y="597" width="0.4" height="15.0" fill="rgb(234,95,33)" rx="2" ry="2" />
<text  x="788.06" y="607.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord (1 samples, 0.04%)</title><rect x="905.4" y="389" width="0.4" height="15.0" fill="rgb(235,105,28)" rx="2" ry="2" />
<text  x="908.35" y="399.5" ></text>
</g>
<g >
<title>cling::Interpreter::EvaluateInternal (3 samples, 0.11%)</title><rect x="1145.5" y="965" width="1.3" height="15.0" fill="rgb(222,165,14)" rx="2" ry="2" />
<text  x="1148.50" y="975.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::RunCleanupsScope::ForceCleanup (1 samples, 0.04%)</title><rect x="1115.5" y="917" width="0.5" height="15.0" fill="rgb(205,4,43)" rx="2" ry="2" />
<text  x="1118.53" y="927.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitFunctionTemplateDecl (1 samples, 0.04%)</title><rect x="1132.7" y="709" width="0.5" height="15.0" fill="rgb(239,174,38)" rx="2" ry="2" />
<text  x="1135.72" y="719.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;, void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;::LookupBucketFor&lt;void const*&gt; (1 samples, 0.04%)</title><rect x="1032.7" y="549" width="0.4" height="15.0" fill="rgb(251,100,36)" rx="2" ry="2" />
<text  x="1035.70" y="559.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::isKnownViaNonRecursiveReasoning (1 samples, 0.04%)</title><rect x="909.8" y="677" width="0.4" height="15.0" fill="rgb(235,50,34)" rx="2" ry="2" />
<text  x="912.76" y="687.5" ></text>
</g>
<g >
<title>clang::Sema::SubstStmt (1 samples, 0.04%)</title><rect x="1134.5" y="789" width="0.4" height="15.0" fill="rgb(207,46,4)" rx="2" ry="2" />
<text  x="1137.48" y="799.5" ></text>
</g>
<g >
<title>fgets (1 samples, 0.04%)</title><rect x="1076.3" y="821" width="0.5" height="15.0" fill="rgb(227,208,22)" rx="2" ry="2" />
<text  x="1079.32" y="831.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::SelectAllBasicBlocks (1 samples, 0.04%)</title><rect x="1158.7" y="853" width="0.5" height="15.0" fill="rgb(213,139,42)" rx="2" ry="2" />
<text  x="1161.72" y="863.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (12 samples, 0.45%)</title><rect x="1109.8" y="933" width="5.3" height="15.0" fill="rgb(237,138,5)" rx="2" ry="2" />
<text  x="1112.81" y="943.5" ></text>
</g>
<g >
<title>llvm::TargetLibraryInfoImpl::getLibFunc (1 samples, 0.04%)</title><rect x="892.6" y="565" width="0.4" height="15.0" fill="rgb(217,34,6)" rx="2" ry="2" />
<text  x="895.58" y="575.5" ></text>
</g>
<g >
<title>llvm::DemandedBits::performAnalysis (1 samples, 0.04%)</title><rect x="691.2" y="741" width="0.5" height="15.0" fill="rgb(237,95,5)" rx="2" ry="2" />
<text  x="694.21" y="751.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitIgnoredExpr (1 samples, 0.04%)</title><rect x="1105.4" y="853" width="0.4" height="15.0" fill="rgb(240,172,16)" rx="2" ry="2" />
<text  x="1108.40" y="863.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl (1 samples, 0.04%)</title><rect x="1128.8" y="709" width="0.4" height="15.0" fill="rgb(232,131,34)" rx="2" ry="2" />
<text  x="1131.75" y="719.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1137.6" y="917" width="0.4" height="15.0" fill="rgb(227,87,32)" rx="2" ry="2" />
<text  x="1140.57" y="927.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1067.5" y="645" width="0.4" height="15.0" fill="rgb(251,88,15)" rx="2" ry="2" />
<text  x="1070.51" y="655.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::FinishFunction (1 samples, 0.04%)</title><rect x="1114.2" y="853" width="0.5" height="15.0" fill="rgb(222,91,12)" rx="2" ry="2" />
<text  x="1117.21" y="863.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit (1 samples, 0.04%)</title><rect x="904.5" y="773" width="0.4" height="15.0" fill="rgb(212,30,3)" rx="2" ry="2" />
<text  x="907.47" y="783.5" ></text>
</g>
<g >
<title>llvm::MachineBasicBlock::addSuccessor (1 samples, 0.04%)</title><rect x="907.6" y="517" width="0.4" height="15.0" fill="rgb(224,110,3)" rx="2" ry="2" />
<text  x="910.56" y="527.5" ></text>
</g>
<g >
<title>llvm::MachineInstr::addOperand (1 samples, 0.04%)</title><rect x="700.9" y="629" width="0.4" height="15.0" fill="rgb(231,61,33)" rx="2" ry="2" />
<text  x="703.90" y="639.5" ></text>
</g>
<g >
<title>llvm::GlobalsAAResult::analyzeModule (1 samples, 0.04%)</title><rect x="1063.5" y="629" width="0.5" height="15.0" fill="rgb(241,181,48)" rx="2" ry="2" />
<text  x="1066.54" y="639.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentScopeDeclRefExpr (1 samples, 0.04%)</title><rect x="1131.0" y="693" width="0.4" height="15.0" fill="rgb(211,136,43)" rx="2" ry="2" />
<text  x="1133.96" y="703.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.11%)</title><rect x="1073.2" y="773" width="1.4" height="15.0" fill="rgb(215,123,3)" rx="2" ry="2" />
<text  x="1076.23" y="783.5" ></text>
</g>
<g >
<title>clang::CXXBasePaths::lookupInBases (1 samples, 0.04%)</title><rect x="1140.6" y="885" width="0.5" height="15.0" fill="rgb(207,49,35)" rx="2" ry="2" />
<text  x="1143.65" y="895.5" ></text>
</g>
<g >
<title>_dl_relocate_object (1 samples, 0.04%)</title><rect x="1166.2" y="901" width="0.4" height="15.0" fill="rgb(219,100,51)" rx="2" ry="2" />
<text  x="1169.21" y="911.5" ></text>
</g>
<g >
<title>getPatternForClassTemplateSpecialization (1 samples, 0.04%)</title><rect x="1142.4" y="821" width="0.5" height="15.0" fill="rgb(216,119,24)" rx="2" ry="2" />
<text  x="1145.41" y="831.5" ></text>
</g>
<g >
<title>llvm::function_ref&lt;bool ()&gt;::callback_fn&lt;clang::Sema::DeduceTemplateArguments(clang::FunctionTemplateDecl*, clang::TemplateArgumentListInfo*, llvm::ArrayRef&lt;clang::Expr*&gt;, clang::FunctionDecl*&amp;, clang::sema::TemplateDeductionInfo&amp;, bool, llvm::function_ref&lt;bool (llvm::ArrayRef&lt;clang::QualType&gt;)&gt;)::{lambda()#2}&gt; (1 samples, 0.04%)</title><rect x="1127.9" y="933" width="0.4" height="15.0" fill="rgb(240,182,27)" rx="2" ry="2" />
<text  x="1130.87" y="943.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::SelectAllBasicBlocks (2 samples, 0.07%)</title><rect x="1152.5" y="773" width="0.9" height="15.0" fill="rgb(217,5,49)" rx="2" ry="2" />
<text  x="1155.55" y="783.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (10 samples, 0.37%)</title><rect x="1109.8" y="885" width="4.4" height="15.0" fill="rgb(239,92,20)" rx="2" ry="2" />
<text  x="1112.81" y="895.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (2 samples, 0.07%)</title><rect x="1130.1" y="805" width="0.9" height="15.0" fill="rgb(224,68,54)" rx="2" ry="2" />
<text  x="1133.07" y="815.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::HandleCXXStaticMemberVarInstantiation (1 samples, 0.04%)</title><rect x="1130.1" y="597" width="0.4" height="15.0" fill="rgb(229,92,1)" rx="2" ry="2" />
<text  x="1133.07" y="607.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1072.4" y="677" width="0.4" height="15.0" fill="rgb(214,73,34)" rx="2" ry="2" />
<text  x="1075.35" y="687.5" ></text>
</g>
<g >
<title>__GI___fork (4 samples, 0.15%)</title><rect x="14.4" y="309" width="1.8" height="15.0" fill="rgb(226,15,6)" rx="2" ry="2" />
<text  x="17.41" y="319.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitClassTemplateDecl (1 samples, 0.04%)</title><rect x="1099.2" y="677" width="0.5" height="15.0" fill="rgb(205,119,27)" rx="2" ry="2" />
<text  x="1102.23" y="687.5" ></text>
</g>
<g >
<title>TClass::GetStreamerInfoImpl (1 samples, 0.04%)</title><rect x="784.2" y="789" width="0.4" height="15.0" fill="rgb(209,171,30)" rx="2" ry="2" />
<text  x="787.18" y="799.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetType (1 samples, 0.04%)</title><rect x="905.4" y="357" width="0.4" height="15.0" fill="rgb(208,8,49)" rx="2" ry="2" />
<text  x="908.35" y="367.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddType (1 samples, 0.04%)</title><rect x="1123.0" y="581" width="0.5" height="15.0" fill="rgb(224,6,6)" rx="2" ry="2" />
<text  x="1126.02" y="591.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.04%)</title><rect x="786.4" y="917" width="0.4" height="15.0" fill="rgb(219,38,39)" rx="2" ry="2" />
<text  x="789.39" y="927.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization (1 samples, 0.04%)</title><rect x="1098.3" y="917" width="0.5" height="15.0" fill="rgb(205,55,8)" rx="2" ry="2" />
<text  x="1101.35" y="927.5" ></text>
</g>
<g >
<title>cling::Interpreter::EvaluateInternal (1 samples, 0.04%)</title><rect x="1150.8" y="949" width="0.4" height="15.0" fill="rgb(243,101,13)" rx="2" ry="2" />
<text  x="1153.78" y="959.5" ></text>
</g>
<g >
<title>dlopen_doit (1 samples, 0.04%)</title><rect x="904.9" y="789" width="0.5" height="15.0" fill="rgb(221,36,51)" rx="2" ry="2" />
<text  x="907.91" y="799.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;std::pair&lt;clang::Decl*, unsigned int&gt;, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo&lt;std::pair&lt;clang::Decl*, unsigned int&gt; &gt;, llvm::detail::DenseSetPair&lt;std::pair&lt;clang::Decl*, unsigned int&gt; &gt; &gt;, std::pair&lt;clang::Decl*, unsigned int&gt;, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo&lt;std::pair&lt;clang::Decl*, unsigned int&gt; &gt;, llvm::detail::DenseSetPair&lt;std::pair&lt;clang::Decl*, unsigned int&gt; &gt; &gt;::LookupBucketFor&lt;std::pair&lt;clang::Decl*, unsigned int&gt; &gt; (1 samples, 0.04%)</title><rect x="1131.8" y="629" width="0.5" height="15.0" fill="rgb(211,125,52)" rx="2" ry="2" />
<text  x="1134.84" y="639.5" ></text>
</g>
<g >
<title>AddReachableCodeToWorklist (3 samples, 0.11%)</title><rect x="897.4" y="645" width="1.3" height="15.0" fill="rgb(250,198,38)" rx="2" ry="2" />
<text  x="900.42" y="655.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitClassTemplateDecl (1 samples, 0.04%)</title><rect x="1099.2" y="965" width="0.5" height="15.0" fill="rgb(225,79,29)" rx="2" ry="2" />
<text  x="1102.23" y="975.5" ></text>
</g>
<g >
<title>unlink_chunk.isra.2 (1 samples, 0.04%)</title><rect x="895.7" y="597" width="0.4" height="15.0" fill="rgb(227,168,17)" rx="2" ry="2" />
<text  x="898.66" y="607.5" ></text>
</g>
<g >
<title>execute_command (4 samples, 0.15%)</title><rect x="22.3" y="565" width="1.8" height="15.0" fill="rgb(214,13,22)" rx="2" ry="2" />
<text  x="25.34" y="575.5" ></text>
</g>
<g >
<title>[bash] (5 samples, 0.19%)</title><rect x="10.4" y="533" width="2.2" height="15.0" fill="rgb(206,103,50)" rx="2" ry="2" />
<text  x="13.44" y="543.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit (1 samples, 0.04%)</title><rect x="1117.3" y="485" width="0.4" height="15.0" fill="rgb(253,18,34)" rx="2" ry="2" />
<text  x="1120.30" y="495.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ComputeRecordLayout (1 samples, 0.04%)</title><rect x="1117.7" y="789" width="0.5" height="15.0" fill="rgb(252,109,7)" rx="2" ry="2" />
<text  x="1120.74" y="799.5" ></text>
</g>
<g >
<title>clang::ASTReader::readTypeRecord (1 samples, 0.04%)</title><rect x="1100.1" y="773" width="0.5" height="15.0" fill="rgb(207,42,45)" rx="2" ry="2" />
<text  x="1103.11" y="783.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::GetOrCreateLLVMFunction (1 samples, 0.04%)</title><rect x="1115.5" y="789" width="0.5" height="15.0" fill="rgb(228,53,4)" rx="2" ry="2" />
<text  x="1118.53" y="799.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1169.3" y="837" width="0.4" height="15.0" fill="rgb(223,206,1)" rx="2" ry="2" />
<text  x="1172.29" y="847.5" ></text>
</g>
<g >
<title>__GI___fork (4 samples, 0.15%)</title><rect x="1066.6" y="725" width="1.8" height="15.0" fill="rgb(232,156,8)" rx="2" ry="2" />
<text  x="1069.62" y="735.5" ></text>
</g>
<g >
<title>clang::NamedDecl::getLinkageAndVisibility (1 samples, 0.04%)</title><rect x="1102.8" y="661" width="0.4" height="15.0" fill="rgb(206,177,5)" rx="2" ry="2" />
<text  x="1105.76" y="671.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="831.3" y="517" width="0.5" height="15.0" fill="rgb(220,185,6)" rx="2" ry="2" />
<text  x="834.33" y="527.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::RebuildDependentNameType (1 samples, 0.04%)</title><rect x="1137.1" y="789" width="0.5" height="15.0" fill="rgb(253,198,52)" rx="2" ry="2" />
<text  x="1140.12" y="799.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitAggExpr (1 samples, 0.04%)</title><rect x="1106.7" y="821" width="0.5" height="15.0" fill="rgb(236,12,13)" rx="2" ry="2" />
<text  x="1109.72" y="831.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (2 samples, 0.07%)</title><rect x="684.6" y="677" width="0.9" height="15.0" fill="rgb(222,75,3)" rx="2" ry="2" />
<text  x="687.60" y="687.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveExternalSymbols (1 samples, 0.04%)</title><rect x="1150.8" y="837" width="0.4" height="15.0" fill="rgb(250,85,43)" rx="2" ry="2" />
<text  x="1153.78" y="847.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="10.4" y="373" width="0.5" height="15.0" fill="rgb(225,37,0)" rx="2" ry="2" />
<text  x="13.44" y="383.5" ></text>
</g>
<g >
<title>dlopen_doit (1 samples, 0.04%)</title><rect x="904.9" y="581" width="0.5" height="15.0" fill="rgb(218,206,48)" rx="2" ry="2" />
<text  x="907.91" y="591.5" ></text>
</g>
<g >
<title>llvm::PMTopLevelManager::findAnalysisPassInfo (1 samples, 0.04%)</title><rect x="849.0" y="565" width="0.4" height="15.0" fill="rgb(214,209,33)" rx="2" ry="2" />
<text  x="851.95" y="575.5" ></text>
</g>
<g >
<title>getInterestingTagDecl (1 samples, 0.04%)</title><rect x="1140.2" y="501" width="0.4" height="15.0" fill="rgb(214,206,3)" rx="2" ry="2" />
<text  x="1143.21" y="511.5" ></text>
</g>
<g >
<title>operator() (1 samples, 0.04%)</title><rect x="785.9" y="917" width="0.5" height="15.0" fill="rgb(208,125,22)" rx="2" ry="2" />
<text  x="788.94" y="927.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType (1 samples, 0.04%)</title><rect x="1128.3" y="693" width="0.5" height="15.0" fill="rgb(222,222,22)" rx="2" ry="2" />
<text  x="1131.31" y="703.5" ></text>
</g>
<g >
<title>llvm::SimplifyCall (1 samples, 0.04%)</title><rect x="689.4" y="725" width="0.5" height="15.0" fill="rgb(233,188,47)" rx="2" ry="2" />
<text  x="692.45" y="735.5" ></text>
</g>
<g >
<title>HandleInterpreterException (1 samples, 0.04%)</title><rect x="903.6" y="789" width="0.4" height="15.0" fill="rgb(214,31,21)" rx="2" ry="2" />
<text  x="906.59" y="799.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.04%)</title><rect x="1103.6" y="661" width="0.5" height="15.0" fill="rgb(231,229,29)" rx="2" ry="2" />
<text  x="1106.64" y="671.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::SelectAllBasicBlocks (1 samples, 0.04%)</title><rect x="1147.7" y="645" width="0.4" height="15.0" fill="rgb(247,43,33)" rx="2" ry="2" />
<text  x="1150.70" y="655.5" ></text>
</g>
<g >
<title>llvm::orc::lookupWithLegacyFn&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}::operator()(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;) const::{lambda(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)#1}&gt; (4 samples, 0.15%)</title><rect x="1148.1" y="741" width="1.8" height="15.0" fill="rgb(216,3,35)" rx="2" ry="2" />
<text  x="1151.14" y="751.5" ></text>
</g>
<g >
<title>clang::Sema::AddTemplateOverloadCandidate (1 samples, 0.04%)</title><rect x="1097.9" y="933" width="0.4" height="15.0" fill="rgb(232,71,23)" rx="2" ry="2" />
<text  x="1100.91" y="943.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit (1 samples, 0.04%)</title><rect x="904.5" y="677" width="0.4" height="15.0" fill="rgb(224,224,21)" rx="2" ry="2" />
<text  x="907.47" y="687.5" ></text>
</g>
<g >
<title>llvm::hashing::detail::hash_combine_range_impl&lt;unsigned int const&gt; (1 samples, 0.04%)</title><rect x="1108.0" y="549" width="0.5" height="15.0" fill="rgb(207,18,36)" rx="2" ry="2" />
<text  x="1111.04" y="559.5" ></text>
</g>
<g >
<title>_dl_start (6 samples, 0.22%)</title><rect x="1169.3" y="949" width="2.6" height="15.0" fill="rgb(231,214,53)" rx="2" ry="2" />
<text  x="1172.29" y="959.5" ></text>
</g>
<g >
<title>TBufferFile::ReadClassBuffer (1 samples, 0.04%)</title><rect x="783.3" y="837" width="0.4" height="15.0" fill="rgb(250,226,20)" rx="2" ry="2" />
<text  x="786.30" y="847.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition (6 samples, 0.22%)</title><rect x="1133.2" y="933" width="2.6" height="15.0" fill="rgb(234,139,0)" rx="2" ry="2" />
<text  x="1136.16" y="943.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::recordAvailableAnalysis (1 samples, 0.04%)</title><rect x="1037.1" y="629" width="0.4" height="15.0" fill="rgb(245,65,11)" rx="2" ry="2" />
<text  x="1040.10" y="639.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (1 samples, 0.04%)</title><rect x="1159.2" y="805" width="0.4" height="15.0" fill="rgb(246,6,44)" rx="2" ry="2" />
<text  x="1162.16" y="815.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitAnyExprToTemp (1 samples, 0.04%)</title><rect x="1101.0" y="965" width="0.4" height="15.0" fill="rgb(243,2,23)" rx="2" ry="2" />
<text  x="1103.99" y="975.5" ></text>
</g>
<g >
<title>llvm::PointerType::get (1 samples, 0.04%)</title><rect x="1115.1" y="661" width="0.4" height="15.0" fill="rgb(250,108,31)" rx="2" ry="2" />
<text  x="1118.09" y="671.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddDeclarationNameImpl (1 samples, 0.04%)</title><rect x="1135.8" y="533" width="0.4" height="15.0" fill="rgb(237,211,42)" rx="2" ry="2" />
<text  x="1138.80" y="543.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.22%)</title><rect x="1081.2" y="757" width="2.6" height="15.0" fill="rgb(237,169,6)" rx="2" ry="2" />
<text  x="1084.17" y="767.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (28 samples, 1.05%)</title><rect x="852.0" y="565" width="12.4" height="15.0" fill="rgb(241,73,38)" rx="2" ry="2" />
<text  x="855.04" y="575.5" ></text>
</g>
<g >
<title>clang::Sema::CheckBaseSpecifier (2 samples, 0.07%)</title><rect x="1128.8" y="933" width="0.8" height="15.0" fill="rgb(209,176,24)" rx="2" ry="2" />
<text  x="1131.75" y="943.5" ></text>
</g>
<g >
<title>llvm::FoldingSetBase::FindNodeOrInsertPos (1 samples, 0.04%)</title><rect x="1105.0" y="821" width="0.4" height="15.0" fill="rgb(205,136,0)" rx="2" ry="2" />
<text  x="1107.96" y="831.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTemplateArgumentList (1 samples, 0.04%)</title><rect x="1138.9" y="821" width="0.4" height="15.0" fill="rgb(231,139,25)" rx="2" ry="2" />
<text  x="1141.89" y="831.5" ></text>
</g>
<g >
<title>llvm::InstructionCombiningPass::runOnFunction (5 samples, 0.19%)</title><rect x="897.4" y="677" width="2.2" height="15.0" fill="rgb(237,149,10)" rx="2" ry="2" />
<text  x="900.42" y="687.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass (1 samples, 0.04%)</title><rect x="1128.8" y="677" width="0.4" height="15.0" fill="rgb(226,202,46)" rx="2" ry="2" />
<text  x="1131.75" y="687.5" ></text>
</g>
<g >
<title>llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt;::compare (1 samples, 0.04%)</title><rect x="1047.7" y="597" width="0.4" height="15.0" fill="rgb(226,27,28)" rx="2" ry="2" />
<text  x="1050.68" y="607.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (1 samples, 0.04%)</title><rect x="1147.7" y="725" width="0.4" height="15.0" fill="rgb(217,27,23)" rx="2" ry="2" />
<text  x="1150.70" y="735.5" ></text>
</g>
<g >
<title>cling::MetaProcessor::process (7 samples, 0.26%)</title><rect x="900.5" y="869" width="3.1" height="15.0" fill="rgb(218,199,34)" rx="2" ry="2" />
<text  x="903.51" y="879.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1176.8" y="805" width="0.4" height="15.0" fill="rgb(211,57,12)" rx="2" ry="2" />
<text  x="1179.78" y="815.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;, void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;::LookupBucketFor&lt;void const*&gt; (1 samples, 0.04%)</title><rect x="1048.1" y="581" width="0.5" height="15.0" fill="rgb(252,149,34)" rx="2" ry="2" />
<text  x="1051.12" y="591.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddDecl (1 samples, 0.04%)</title><rect x="1135.8" y="645" width="0.4" height="15.0" fill="rgb(224,30,33)" rx="2" ry="2" />
<text  x="1138.80" y="655.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitAnyExpr (1 samples, 0.04%)</title><rect x="1105.4" y="805" width="0.4" height="15.0" fill="rgb(227,19,35)" rx="2" ry="2" />
<text  x="1108.40" y="815.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1076.3" y="805" width="0.5" height="15.0" fill="rgb(237,92,25)" rx="2" ry="2" />
<text  x="1079.32" y="815.5" ></text>
</g>
<g >
<title>llvm::MemorySSA::MemorySSA (1 samples, 0.04%)</title><rect x="1150.3" y="741" width="0.5" height="15.0" fill="rgb(217,34,52)" rx="2" ry="2" />
<text  x="1153.34" y="751.5" ></text>
</g>
<g >
<title>clang::LinkageComputer::computeLVForDecl (1 samples, 0.04%)</title><rect x="1105.8" y="581" width="0.5" height="15.0" fill="rgb(245,38,22)" rx="2" ry="2" />
<text  x="1108.84" y="591.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1127.0" y="693" width="0.4" height="15.0" fill="rgb(228,107,1)" rx="2" ry="2" />
<text  x="1129.99" y="703.5" ></text>
</g>
<g >
<title>CalcNodeSethiUllmanNumber (2 samples, 0.07%)</title><rect x="684.6" y="565" width="0.9" height="15.0" fill="rgb(248,65,36)" rx="2" ry="2" />
<text  x="687.60" y="575.5" ></text>
</g>
<g >
<title>clang::Sema::SubstExpr (1 samples, 0.04%)</title><rect x="1128.3" y="805" width="0.5" height="15.0" fill="rgb(208,26,1)" rx="2" ry="2" />
<text  x="1131.31" y="815.5" ></text>
</g>
<g >
<title>clang::Sema::FinishTemplateArgumentDeduction (1 samples, 0.04%)</title><rect x="1122.6" y="869" width="0.4" height="15.0" fill="rgb(205,207,21)" rx="2" ry="2" />
<text  x="1125.58" y="879.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXOperatorMemberCallExpr (1 samples, 0.04%)</title><rect x="1116.0" y="725" width="0.4" height="15.0" fill="rgb(209,160,28)" rx="2" ry="2" />
<text  x="1118.97" y="735.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (1 samples, 0.04%)</title><rect x="1139.8" y="821" width="0.4" height="15.0" fill="rgb(215,176,16)" rx="2" ry="2" />
<text  x="1142.77" y="831.5" ></text>
</g>
<g >
<title>llvm::orc::SimpleCompiler::operator() (2 samples, 0.07%)</title><rect x="1144.2" y="805" width="0.9" height="15.0" fill="rgb(221,159,25)" rx="2" ry="2" />
<text  x="1147.17" y="815.5" ></text>
</g>
<g >
<title>clang::Sema::BuildDeclarationNameExpr (1 samples, 0.04%)</title><rect x="1141.1" y="789" width="0.4" height="15.0" fill="rgb(213,95,30)" rx="2" ry="2" />
<text  x="1144.09" y="799.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.11%)</title><rect x="19.7" y="565" width="1.3" height="15.0" fill="rgb(254,201,15)" rx="2" ry="2" />
<text  x="22.69" y="575.5" ></text>
</g>
<g >
<title>clang::RedeclarableTemplateDecl::loadLazySpecializationsImpl (1 samples, 0.04%)</title><rect x="1124.3" y="677" width="0.5" height="15.0" fill="rgb(228,91,41)" rx="2" ry="2" />
<text  x="1127.35" y="687.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (1 samples, 0.04%)</title><rect x="1032.7" y="565" width="0.4" height="15.0" fill="rgb(230,59,5)" rx="2" ry="2" />
<text  x="1035.70" y="575.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::run (7 samples, 0.26%)</title><rect x="892.1" y="661" width="3.1" height="15.0" fill="rgb(253,98,23)" rx="2" ry="2" />
<text  x="895.14" y="671.5" ></text>
</g>
<g >
<title>DoMarkVarDeclReferenced (1 samples, 0.04%)</title><rect x="1130.1" y="661" width="0.4" height="15.0" fill="rgb(230,155,45)" rx="2" ry="2" />
<text  x="1133.07" y="671.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl (1 samples, 0.04%)</title><rect x="1123.9" y="709" width="0.4" height="15.0" fill="rgb(220,188,19)" rx="2" ry="2" />
<text  x="1126.91" y="719.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.04%)</title><rect x="1045.5" y="565" width="0.4" height="15.0" fill="rgb(235,164,22)" rx="2" ry="2" />
<text  x="1048.47" y="575.5" ></text>
</g>
<g >
<title>llvm::wouldInstructionBeTriviallyDead (1 samples, 0.04%)</title><rect x="898.3" y="629" width="0.4" height="15.0" fill="rgb(248,154,31)" rx="2" ry="2" />
<text  x="901.30" y="639.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (6 samples, 0.22%)</title><rect x="1109.8" y="757" width="2.6" height="15.0" fill="rgb(246,90,15)" rx="2" ry="2" />
<text  x="1112.81" y="767.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyld::finalizeWithMemoryManagerLocking (3 samples, 0.11%)</title><rect x="867.0" y="629" width="1.3" height="15.0" fill="rgb(249,149,18)" rx="2" ry="2" />
<text  x="870.02" y="639.5" ></text>
</g>
<g >
<title>do_lookup_x (1 samples, 0.04%)</title><rect x="1094.4" y="741" width="0.4" height="15.0" fill="rgb(210,33,38)" rx="2" ry="2" />
<text  x="1097.38" y="751.5" ></text>
</g>
<g >
<title>LazyFunctionCreatorAutoloadForModule (1 samples, 0.04%)</title><rect x="904.9" y="949" width="0.5" height="15.0" fill="rgb(227,177,45)" rx="2" ry="2" />
<text  x="907.91" y="959.5" ></text>
</g>
<g >
<title>TryCopyInitialization (1 samples, 0.04%)</title><rect x="1155.2" y="933" width="0.4" height="15.0" fill="rgb(222,120,28)" rx="2" ry="2" />
<text  x="1158.19" y="943.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitStmt (1 samples, 0.04%)</title><rect x="1116.0" y="853" width="0.4" height="15.0" fill="rgb(231,190,42)" rx="2" ry="2" />
<text  x="1118.97" y="863.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.04%)</title><rect x="1131.8" y="789" width="0.5" height="15.0" fill="rgb(212,90,27)" rx="2" ry="2" />
<text  x="1134.84" y="799.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (1 samples, 0.04%)</title><rect x="1128.8" y="725" width="0.4" height="15.0" fill="rgb(215,31,11)" rx="2" ry="2" />
<text  x="1131.75" y="735.5" ></text>
</g>
<g >
<title>cling::MetaParser::isXCommand (1 samples, 0.04%)</title><rect x="904.0" y="757" width="0.5" height="15.0" fill="rgb(216,105,21)" rx="2" ry="2" />
<text  x="907.03" y="767.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ComputeRecordLayout (1 samples, 0.04%)</title><rect x="1117.3" y="709" width="0.4" height="15.0" fill="rgb(232,67,25)" rx="2" ry="2" />
<text  x="1120.30" y="719.5" ></text>
</g>
<g >
<title>resolveAllocationOverload (1 samples, 0.04%)</title><rect x="1120.8" y="933" width="0.5" height="15.0" fill="rgb(205,46,10)" rx="2" ry="2" />
<text  x="1123.82" y="943.5" ></text>
</g>
<g >
<title>execute_command (4 samples, 0.15%)</title><rect x="22.3" y="789" width="1.8" height="15.0" fill="rgb(245,56,35)" rx="2" ry="2" />
<text  x="25.34" y="799.5" ></text>
</g>
<g >
<title>clang::ASTReader::FindExternalVisibleDeclsByName (1 samples, 0.04%)</title><rect x="1118.2" y="773" width="0.4" height="15.0" fill="rgb(221,149,33)" rx="2" ry="2" />
<text  x="1121.18" y="783.5" ></text>
</g>
<g >
<title>llvm::AttributeSetNode::getAttribute (1 samples, 0.04%)</title><rect x="865.7" y="549" width="0.4" height="15.0" fill="rgb(239,210,31)" rx="2" ry="2" />
<text  x="868.70" y="559.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1169.3" y="901" width="0.4" height="15.0" fill="rgb(239,38,41)" rx="2" ry="2" />
<text  x="1172.29" y="911.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitForStmt (1 samples, 0.04%)</title><rect x="1102.8" y="965" width="0.4" height="15.0" fill="rgb(254,197,16)" rx="2" ry="2" />
<text  x="1105.76" y="975.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization (1 samples, 0.04%)</title><rect x="1142.9" y="805" width="0.4" height="15.0" fill="rgb(221,95,49)" rx="2" ry="2" />
<text  x="1145.85" y="815.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTemplateArgument (1 samples, 0.04%)</title><rect x="1138.9" y="805" width="0.4" height="15.0" fill="rgb(248,84,47)" rx="2" ry="2" />
<text  x="1141.89" y="815.5" ></text>
</g>
<g >
<title>llvm::FoldingSetBase::FindNodeOrInsertPos (1 samples, 0.04%)</title><rect x="1127.0" y="661" width="0.4" height="15.0" fill="rgb(239,122,3)" rx="2" ry="2" />
<text  x="1129.99" y="671.5" ></text>
</g>
<g >
<title>llvm::SmallVectorBase::grow_pod (1 samples, 0.04%)</title><rect x="1128.3" y="485" width="0.5" height="15.0" fill="rgb(244,37,49)" rx="2" ry="2" />
<text  x="1131.31" y="495.5" ></text>
</g>
<g >
<title>llvm::orc::JITSymbolResolverAdapter::lookup (10 samples, 0.37%)</title><rect x="1159.6" y="901" width="4.4" height="15.0" fill="rgb(244,228,29)" rx="2" ry="2" />
<text  x="1162.60" y="911.5" ></text>
</g>
<g >
<title>TClass::GetClass (1 samples, 0.04%)</title><rect x="784.2" y="661" width="0.4" height="15.0" fill="rgb(240,6,7)" rx="2" ry="2" />
<text  x="787.18" y="671.5" ></text>
</g>
<g >
<title>_init (1 samples, 0.04%)</title><rect x="1171.9" y="917" width="0.5" height="15.0" fill="rgb(244,173,34)" rx="2" ry="2" />
<text  x="1174.93" y="927.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::visitLoadInst (1 samples, 0.04%)</title><rect x="696.1" y="709" width="0.4" height="15.0" fill="rgb(206,175,19)" rx="2" ry="2" />
<text  x="699.06" y="719.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1074.6" y="757" width="0.4" height="15.0" fill="rgb(251,200,12)" rx="2" ry="2" />
<text  x="1077.56" y="767.5" ></text>
</g>
<g >
<title>getAllocationDataForFunction (1 samples, 0.04%)</title><rect x="1150.3" y="597" width="0.5" height="15.0" fill="rgb(209,106,8)" rx="2" ry="2" />
<text  x="1153.34" y="607.5" ></text>
</g>
<g >
<title>TApplication::ExecuteFile (1 samples, 0.04%)</title><rect x="1027.4" y="917" width="0.4" height="15.0" fill="rgb(226,86,51)" rx="2" ry="2" />
<text  x="1030.41" y="927.5" ></text>
</g>
<g >
<title>clang::Sema::SubstBaseSpecifiers (1 samples, 0.04%)</title><rect x="1123.0" y="869" width="0.5" height="15.0" fill="rgb(234,204,53)" rx="2" ry="2" />
<text  x="1126.02" y="879.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass (1 samples, 0.04%)</title><rect x="1155.2" y="821" width="0.4" height="15.0" fill="rgb(253,227,20)" rx="2" ry="2" />
<text  x="1158.19" y="831.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition (8 samples, 0.30%)</title><rect x="1132.7" y="965" width="3.5" height="15.0" fill="rgb(233,130,3)" rx="2" ry="2" />
<text  x="1135.72" y="975.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformCompoundStmt (1 samples, 0.04%)</title><rect x="1134.9" y="805" width="0.5" height="15.0" fill="rgb(223,109,21)" rx="2" ry="2" />
<text  x="1137.92" y="815.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="1152.5" y="693" width="0.5" height="15.0" fill="rgb(254,20,11)" rx="2" ry="2" />
<text  x="1155.55" y="703.5" ></text>
</g>
<g >
<title>clang::Sema::CheckBaseSpecifier (1 samples, 0.04%)</title><rect x="1139.8" y="741" width="0.4" height="15.0" fill="rgb(240,41,17)" rx="2" ry="2" />
<text  x="1142.77" y="751.5" ></text>
</g>
<g >
<title>clang::DeclContext::LoadLexicalDeclsFromExternalStorage (1 samples, 0.04%)</title><rect x="905.4" y="453" width="0.4" height="15.0" fill="rgb(222,214,5)" rx="2" ry="2" />
<text  x="908.35" y="463.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::emitSection (1 samples, 0.04%)</title><rect x="708.0" y="741" width="0.4" height="15.0" fill="rgb(246,27,12)" rx="2" ry="2" />
<text  x="710.95" y="751.5" ></text>
</g>
<g >
<title>AddNodeIDNode (1 samples, 0.04%)</title><rect x="1153.4" y="853" width="0.5" height="15.0" fill="rgb(223,205,40)" rx="2" ry="2" />
<text  x="1156.43" y="863.5" ></text>
</g>
<g >
<title>TBufferFile::ReadFastArray (1 samples, 0.04%)</title><rect x="905.4" y="741" width="0.4" height="15.0" fill="rgb(231,86,26)" rx="2" ry="2" />
<text  x="908.35" y="751.5" ></text>
</g>
<g >
<title>clang::Sema::CheckBaseSpecifier (1 samples, 0.04%)</title><rect x="1137.1" y="949" width="0.5" height="15.0" fill="rgb(212,124,1)" rx="2" ry="2" />
<text  x="1140.12" y="959.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformNestedNameSpecifierLoc (1 samples, 0.04%)</title><rect x="1137.6" y="885" width="0.4" height="15.0" fill="rgb(217,77,26)" rx="2" ry="2" />
<text  x="1140.57" y="895.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::Compile (23 samples, 0.86%)</title><rect x="689.0" y="869" width="10.1" height="15.0" fill="rgb(231,84,10)" rx="2" ry="2" />
<text  x="692.01" y="879.5" ></text>
</g>
<g >
<title>clang::VarDecl::getMemberSpecializationInfo (1 samples, 0.04%)</title><rect x="1130.1" y="517" width="0.4" height="15.0" fill="rgb(244,159,17)" rx="2" ry="2" />
<text  x="1133.07" y="527.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (3 samples, 0.11%)</title><rect x="1028.7" y="613" width="1.4" height="15.0" fill="rgb(229,92,23)" rx="2" ry="2" />
<text  x="1031.73" y="623.5" ></text>
</g>
<g >
<title>llvm::AAResults::Model&lt;llvm::BasicAAResult&gt;::pointsToConstantMemory (1 samples, 0.04%)</title><rect x="894.3" y="613" width="0.5" height="15.0" fill="rgb(216,164,16)" rx="2" ry="2" />
<text  x="897.34" y="623.5" ></text>
</g>
<g >
<title>clang::Sema::SubstDecl (1 samples, 0.04%)</title><rect x="1127.0" y="933" width="0.4" height="15.0" fill="rgb(214,90,23)" rx="2" ry="2" />
<text  x="1129.99" y="943.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (3 samples, 0.11%)</title><rect x="24.5" y="885" width="1.4" height="15.0" fill="rgb(215,143,23)" rx="2" ry="2" />
<text  x="27.54" y="895.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::Compile (7 samples, 0.26%)</title><rect x="900.5" y="757" width="3.1" height="15.0" fill="rgb(238,113,2)" rx="2" ry="2" />
<text  x="903.51" y="767.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::SelectAllBasicBlocks (1 samples, 0.04%)</title><rect x="785.5" y="757" width="0.4" height="15.0" fill="rgb(243,24,25)" rx="2" ry="2" />
<text  x="788.50" y="767.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::getTBAAAccessInfo (1 samples, 0.04%)</title><rect x="1101.4" y="821" width="0.5" height="15.0" fill="rgb(246,198,36)" rx="2" ry="2" />
<text  x="1104.43" y="831.5" ></text>
</g>
<g >
<title>llvm::ExecutionDomainFix::enterBasicBlock (1 samples, 0.04%)</title><rect x="841.5" y="517" width="0.4" height="15.0" fill="rgb(231,90,48)" rx="2" ry="2" />
<text  x="844.46" y="527.5" ></text>
</g>
<g >
<title>ROOT::Detail::RDF::RLoopManager::RunAndCheckFilters (2 samples, 0.07%)</title><rect x="777.6" y="917" width="0.9" height="15.0" fill="rgb(227,4,50)" rx="2" ry="2" />
<text  x="780.57" y="927.5" ></text>
</g>
<g >
<title>llvm::User::allocHungoffUses (1 samples, 0.04%)</title><rect x="900.1" y="581" width="0.4" height="15.0" fill="rgb(215,215,50)" rx="2" ry="2" />
<text  x="903.07" y="591.5" ></text>
</g>
<g >
<title>clang::Sema::CheckBaseSpecifier (1 samples, 0.04%)</title><rect x="1123.9" y="741" width="0.4" height="15.0" fill="rgb(236,148,22)" rx="2" ry="2" />
<text  x="1126.91" y="751.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddDecl (1 samples, 0.04%)</title><rect x="1135.8" y="549" width="0.4" height="15.0" fill="rgb(243,172,0)" rx="2" ry="2" />
<text  x="1138.80" y="559.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.07%)</title><rect x="1175.5" y="693" width="0.8" height="15.0" fill="rgb(250,199,38)" rx="2" ry="2" />
<text  x="1178.46" y="703.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.04%)</title><rect x="889.1" y="565" width="0.4" height="15.0" fill="rgb(209,62,38)" rx="2" ry="2" />
<text  x="892.05" y="575.5" ></text>
</g>
<g >
<title>execute_command_internal (4 samples, 0.15%)</title><rect x="22.3" y="725" width="1.8" height="15.0" fill="rgb(213,225,12)" rx="2" ry="2" />
<text  x="25.34" y="735.5" ></text>
</g>
<g >
<title>clang::TemplateDeclInstantiator::VisitCXXMethodDecl (1 samples, 0.04%)</title><rect x="1127.9" y="645" width="0.4" height="15.0" fill="rgb(208,169,25)" rx="2" ry="2" />
<text  x="1130.87" y="655.5" ></text>
</g>
<g >
<title>unset_bash_input (1 samples, 0.04%)</title><rect x="21.5" y="581" width="0.4" height="15.0" fill="rgb(214,50,5)" rx="2" ry="2" />
<text  x="24.46" y="591.5" ></text>
</g>
<g >
<title>clang::Sema::SubstBaseSpecifiers (1 samples, 0.04%)</title><rect x="1137.1" y="965" width="0.5" height="15.0" fill="rgb(207,156,28)" rx="2" ry="2" />
<text  x="1140.12" y="975.5" ></text>
</g>
<g >
<title>llvm::DominatorTreeWrapperPass::releaseMemory (1 samples, 0.04%)</title><rect x="1028.7" y="565" width="0.5" height="15.0" fill="rgb(205,51,47)" rx="2" ry="2" />
<text  x="1031.73" y="575.5" ></text>
</g>
<g >
<title>llvm::SmallVectorBase::grow_pod (1 samples, 0.04%)</title><rect x="1069.3" y="757" width="0.4" height="15.0" fill="rgb(217,161,23)" rx="2" ry="2" />
<text  x="1072.27" y="767.5" ></text>
</g>
<g >
<title>llvm::orc::SimpleCompiler::operator() (1 samples, 0.04%)</title><rect x="1150.8" y="757" width="0.4" height="15.0" fill="rgb(230,141,30)" rx="2" ry="2" />
<text  x="1153.78" y="767.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::TargetTransformInfo (llvm::Function const&amp;), llvm::TargetMachine::getTargetIRAnalysis()::{lambda(llvm::Function const&amp;)#1}&gt;::_M_invoke (3 samples, 0.11%)</title><rect x="864.4" y="565" width="1.3" height="15.0" fill="rgb(251,10,22)" rx="2" ry="2" />
<text  x="867.38" y="575.5" ></text>
</g>
<g >
<title>clang::LinkageComputer::computeLVForDecl (1 samples, 0.04%)</title><rect x="1108.9" y="869" width="0.5" height="15.0" fill="rgb(222,218,50)" rx="2" ry="2" />
<text  x="1111.92" y="879.5" ></text>
</g>
<g >
<title>execute_command_internal (4 samples, 0.15%)</title><rect x="22.3" y="613" width="1.8" height="15.0" fill="rgb(239,61,41)" rx="2" ry="2" />
<text  x="25.34" y="623.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord (1 samples, 0.04%)</title><rect x="1155.2" y="613" width="0.4" height="15.0" fill="rgb(246,10,1)" rx="2" ry="2" />
<text  x="1158.19" y="623.5" ></text>
</g>
<g >
<title>cling::utils::Lookup::Named (1 samples, 0.04%)</title><rect x="784.2" y="549" width="0.4" height="15.0" fill="rgb(211,126,49)" rx="2" ry="2" />
<text  x="787.18" y="559.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (2 samples, 0.07%)</title><rect x="1109.8" y="645" width="0.9" height="15.0" fill="rgb(217,32,43)" rx="2" ry="2" />
<text  x="1112.81" y="655.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (1 samples, 0.04%)</title><rect x="1139.3" y="805" width="0.5" height="15.0" fill="rgb(243,69,17)" rx="2" ry="2" />
<text  x="1142.33" y="815.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization (1 samples, 0.04%)</title><rect x="1128.8" y="693" width="0.4" height="15.0" fill="rgb(241,193,36)" rx="2" ry="2" />
<text  x="1131.75" y="703.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.04%)</title><rect x="907.6" y="453" width="0.4" height="15.0" fill="rgb(228,113,46)" rx="2" ry="2" />
<text  x="910.56" y="463.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::Initialize (1 samples, 0.04%)</title><rect x="1071.0" y="821" width="0.5" height="15.0" fill="rgb(234,16,31)" rx="2" ry="2" />
<text  x="1074.03" y="831.5" ></text>
</g>
<g >
<title>TString::Index (1 samples, 0.04%)</title><rect x="784.6" y="837" width="0.5" height="15.0" fill="rgb(251,182,33)" rx="2" ry="2" />
<text  x="787.62" y="847.5" ></text>
</g>
<g >
<title>execute_command_internal (9 samples, 0.34%)</title><rect x="1172.8" y="853" width="4.0" height="15.0" fill="rgb(224,19,35)" rx="2" ry="2" />
<text  x="1175.82" y="863.5" ></text>
</g>
<g >
<title>llvm::Value::getName (1 samples, 0.04%)</title><rect x="1107.2" y="773" width="0.4" height="15.0" fill="rgb(211,45,49)" rx="2" ry="2" />
<text  x="1110.16" y="783.5" ></text>
</g>
<g >
<title>TClingCallbacks::tryAutoParseInternal (1 samples, 0.04%)</title><rect x="784.2" y="453" width="0.4" height="15.0" fill="rgb(210,20,24)" rx="2" ry="2" />
<text  x="787.18" y="463.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXMemberCallExpr (1 samples, 0.04%)</title><rect x="1105.8" y="773" width="0.5" height="15.0" fill="rgb(230,8,14)" rx="2" ry="2" />
<text  x="1108.84" y="783.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnModule (8 samples, 0.30%)</title><rect x="695.2" y="789" width="3.5" height="15.0" fill="rgb(243,34,9)" rx="2" ry="2" />
<text  x="698.18" y="799.5" ></text>
</g>
<g >
<title>clang::TemplateArgumentList::ComputeODRHash (1 samples, 0.04%)</title><rect x="1128.3" y="613" width="0.5" height="15.0" fill="rgb(220,165,45)" rx="2" ry="2" />
<text  x="1131.31" y="623.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization (2 samples, 0.07%)</title><rect x="1131.8" y="965" width="0.9" height="15.0" fill="rgb(220,137,31)" rx="2" ry="2" />
<text  x="1134.84" y="975.5" ></text>
</g>
<g >
<title>llvm::DAGTypeLegalizer::RemapValue (1 samples, 0.04%)</title><rect x="1157.8" y="709" width="0.5" height="15.0" fill="rgb(206,157,47)" rx="2" ry="2" />
<text  x="1160.83" y="719.5" ></text>
</g>
<g >
<title>TCling::ExecuteMacro (1 samples, 0.04%)</title><rect x="904.0" y="869" width="0.5" height="15.0" fill="rgb(233,4,46)" rx="2" ry="2" />
<text  x="907.03" y="879.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTSIInObjectScope (1 samples, 0.04%)</title><rect x="1139.3" y="933" width="0.5" height="15.0" fill="rgb(212,90,54)" rx="2" ry="2" />
<text  x="1142.33" y="943.5" ></text>
</g>
<g >
<title>llvm::AttrBuilder::addAttribute (1 samples, 0.04%)</title><rect x="1111.1" y="565" width="0.5" height="15.0" fill="rgb(232,224,7)" rx="2" ry="2" />
<text  x="1114.13" y="575.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition (1 samples, 0.04%)</title><rect x="785.1" y="773" width="0.4" height="15.0" fill="rgb(231,209,33)" rx="2" ry="2" />
<text  x="788.06" y="783.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (1 samples, 0.04%)</title><rect x="1166.2" y="885" width="0.4" height="15.0" fill="rgb(223,31,25)" rx="2" ry="2" />
<text  x="1169.21" y="895.5" ></text>
</g>
<g >
<title>llvm::MachineFunctionPass::runOnFunction (7 samples, 0.26%)</title><rect x="700.0" y="757" width="3.1" height="15.0" fill="rgb(207,89,19)" rx="2" ry="2" />
<text  x="703.02" y="767.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="12.2" y="277" width="0.4" height="15.0" fill="rgb(212,139,52)" rx="2" ry="2" />
<text  x="15.20" y="287.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyld::finalizeWithMemoryManagerLocking (1 samples, 0.04%)</title><rect x="1159.2" y="933" width="0.4" height="15.0" fill="rgb(229,183,27)" rx="2" ry="2" />
<text  x="1162.16" y="943.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::SmallDenseMap&lt;unsigned int, llvm::SDValue, 8u, llvm::DenseMapInfo&lt;unsigned int&gt;, llvm::detail::DenseMapPair&lt;unsigned int, llvm::SDValue&gt; &gt;, unsigned int, llvm::SDValue, llvm::DenseMapInfo&lt;unsigned int&gt;, llvm::detail::DenseMapPair&lt;unsigned int, llvm::SDValue&gt; &gt;::InsertIntoBucketImpl&lt;unsigned int&gt; (1 samples, 0.04%)</title><rect x="1152.1" y="677" width="0.4" height="15.0" fill="rgb(233,121,23)" rx="2" ry="2" />
<text  x="1155.11" y="687.5" ></text>
</g>
<g >
<title>execute_command_internal (16 samples, 0.60%)</title><rect x="12.6" y="581" width="7.1" height="15.0" fill="rgb(211,91,48)" rx="2" ry="2" />
<text  x="15.64" y="591.5" ></text>
</g>
<g >
<title>dl_main (4 samples, 0.15%)</title><rect x="24.1" y="917" width="1.8" height="15.0" fill="rgb(220,85,49)" rx="2" ry="2" />
<text  x="27.10" y="927.5" ></text>
</g>
<g >
<title>inferAttrsFromFunctionBodies (2 samples, 0.07%)</title><rect x="690.3" y="789" width="0.9" height="15.0" fill="rgb(233,155,23)" rx="2" ry="2" />
<text  x="693.33" y="799.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.04%)</title><rect x="1138.4" y="613" width="0.5" height="15.0" fill="rgb(218,208,12)" rx="2" ry="2" />
<text  x="1141.45" y="623.5" ></text>
</g>
<g >
<title>__GI__IO_default_xsputn (1 samples, 0.04%)</title><rect x="19.3" y="421" width="0.4" height="15.0" fill="rgb(208,14,19)" rx="2" ry="2" />
<text  x="22.25" y="431.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::getMinusSCEV (1 samples, 0.04%)</title><rect x="829.6" y="949" width="0.4" height="15.0" fill="rgb(231,66,34)" rx="2" ry="2" />
<text  x="832.57" y="959.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallArg (1 samples, 0.04%)</title><rect x="1106.7" y="693" width="0.5" height="15.0" fill="rgb(249,95,11)" rx="2" ry="2" />
<text  x="1109.72" y="703.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.04%)</title><rect x="1103.6" y="741" width="0.5" height="15.0" fill="rgb(229,200,51)" rx="2" ry="2" />
<text  x="1106.64" y="751.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (1 samples, 0.04%)</title><rect x="1048.6" y="597" width="0.4" height="15.0" fill="rgb(227,36,24)" rx="2" ry="2" />
<text  x="1051.56" y="607.5" ></text>
</g>
<g >
<title>check_match (1 samples, 0.04%)</title><rect x="1094.8" y="709" width="0.5" height="15.0" fill="rgb(254,138,26)" rx="2" ry="2" />
<text  x="1097.82" y="719.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1129.2" y="693" width="0.4" height="15.0" fill="rgb(229,129,27)" rx="2" ry="2" />
<text  x="1132.19" y="703.5" ></text>
</g>
<g >
<title>llvm::AttrBuilder::AttrBuilder (1 samples, 0.04%)</title><rect x="1103.6" y="501" width="0.5" height="15.0" fill="rgb(253,214,17)" rx="2" ry="2" />
<text  x="1106.64" y="511.5" ></text>
</g>
<g >
<title>clang::CompilerInstance::~CompilerInstance (1 samples, 0.04%)</title><rect x="1027.8" y="757" width="0.5" height="15.0" fill="rgb(223,161,36)" rx="2" ry="2" />
<text  x="1030.85" y="767.5" ></text>
</g>
<g >
<title>do_lookup_x (1 samples, 0.04%)</title><rect x="1166.2" y="869" width="0.4" height="15.0" fill="rgb(207,56,12)" rx="2" ry="2" />
<text  x="1169.21" y="879.5" ></text>
</g>
<g >
<title>TFileCacheRead::ReadBufferExtNormal (3 samples, 0.11%)</title><rect x="647.1" y="853" width="1.4" height="15.0" fill="rgb(229,100,33)" rx="2" ry="2" />
<text  x="650.15" y="863.5" ></text>
</g>
<g >
<title>BuildOverloadedBinOp (1 samples, 0.04%)</title><rect x="1118.6" y="933" width="0.5" height="15.0" fill="rgb(224,210,3)" rx="2" ry="2" />
<text  x="1121.62" y="943.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (1 samples, 0.04%)</title><rect x="904.9" y="549" width="0.5" height="15.0" fill="rgb(207,220,7)" rx="2" ry="2" />
<text  x="907.91" y="559.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1097.5" y="613" width="0.4" height="15.0" fill="rgb(226,210,40)" rx="2" ry="2" />
<text  x="1100.47" y="623.5" ></text>
</g>
<g >
<title>clang::ASTStmtReader::VisitUnresolvedLookupExpr (1 samples, 0.04%)</title><rect x="1099.7" y="837" width="0.4" height="15.0" fill="rgb(214,201,13)" rx="2" ry="2" />
<text  x="1102.67" y="847.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::createNodeForGEP (1 samples, 0.04%)</title><rect x="1159.2" y="469" width="0.4" height="15.0" fill="rgb(212,195,11)" rx="2" ry="2" />
<text  x="1162.16" y="479.5" ></text>
</g>
<g >
<title>llvm::ReassociatePass::BuildRankMap (1 samples, 0.04%)</title><rect x="895.2" y="677" width="0.5" height="15.0" fill="rgb(211,62,36)" rx="2" ry="2" />
<text  x="898.22" y="687.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;std::add_pointer, (anonymous namespace)::AggExprEmitter, void&gt;::Visit (1 samples, 0.04%)</title><rect x="1106.7" y="789" width="0.5" height="15.0" fill="rgb(238,216,18)" rx="2" ry="2" />
<text  x="1109.72" y="799.5" ></text>
</g>
<g >
<title>HandleInterpreterException (12 samples, 0.45%)</title><rect x="905.8" y="949" width="5.3" height="15.0" fill="rgb(209,190,44)" rx="2" ry="2" />
<text  x="908.80" y="959.5" ></text>
</g>
<g >
<title>llvm::DominatorTreeWrapperPass::runOnFunction (1 samples, 0.04%)</title><rect x="1034.9" y="629" width="0.4" height="15.0" fill="rgb(243,162,6)" rx="2" ry="2" />
<text  x="1037.90" y="639.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformInitializer (1 samples, 0.04%)</title><rect x="1134.0" y="725" width="0.5" height="15.0" fill="rgb(228,114,49)" rx="2" ry="2" />
<text  x="1137.04" y="735.5" ></text>
</g>
<g >
<title>SubstDefaultTemplateArgument (1 samples, 0.04%)</title><rect x="1141.1" y="901" width="0.4" height="15.0" fill="rgb(218,90,53)" rx="2" ry="2" />
<text  x="1144.09" y="911.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXMemberCallExpr (1 samples, 0.04%)</title><rect x="1101.9" y="869" width="0.4" height="15.0" fill="rgb(216,95,40)" rx="2" ry="2" />
<text  x="1104.87" y="879.5" ></text>
</g>
<g >
<title>HandleInterpreterException (2 samples, 0.07%)</title><rect x="684.6" y="965" width="0.9" height="15.0" fill="rgb(254,184,54)" rx="2" ry="2" />
<text  x="687.60" y="975.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddDecl (1 samples, 0.04%)</title><rect x="1140.2" y="549" width="0.4" height="15.0" fill="rgb(217,179,21)" rx="2" ry="2" />
<text  x="1143.21" y="559.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="21.9" y="469" width="0.4" height="15.0" fill="rgb(205,167,33)" rx="2" ry="2" />
<text  x="24.90" y="479.5" ></text>
</g>
<g >
<title>runCVP (1 samples, 0.04%)</title><rect x="903.2" y="677" width="0.4" height="15.0" fill="rgb(228,43,50)" rx="2" ry="2" />
<text  x="906.15" y="687.5" ></text>
</g>
<g >
<title>clang::LinkageComputer::getLVForClassMember (1 samples, 0.04%)</title><rect x="1103.2" y="661" width="0.4" height="15.0" fill="rgb(222,155,42)" rx="2" ry="2" />
<text  x="1106.20" y="671.5" ></text>
</g>
<g >
<title>clang::NestedNameSpecifierLocBuilder::MakeTrivial (1 samples, 0.04%)</title><rect x="1138.4" y="645" width="0.5" height="15.0" fill="rgb(217,197,20)" rx="2" ry="2" />
<text  x="1141.45" y="655.5" ></text>
</g>
<g >
<title>isHugeExpression (1 samples, 0.04%)</title><rect x="909.8" y="581" width="0.4" height="15.0" fill="rgb(210,35,48)" rx="2" ry="2" />
<text  x="912.76" y="591.5" ></text>
</g>
<g >
<title>[bash] (5 samples, 0.19%)</title><rect x="10.4" y="501" width="2.2" height="15.0" fill="rgb(233,189,44)" rx="2" ry="2" />
<text  x="13.44" y="511.5" ></text>
</g>
<g >
<title>cling::Interpreter::DeclareInternal (1 samples, 0.04%)</title><rect x="1147.3" y="949" width="0.4" height="15.0" fill="rgb(219,205,10)" rx="2" ry="2" />
<text  x="1150.26" y="959.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;std::add_pointer, (anonymous namespace)::AggExprEmitter, void&gt;::Visit (1 samples, 0.04%)</title><rect x="1106.7" y="773" width="0.5" height="15.0" fill="rgb(225,214,50)" rx="2" ry="2" />
<text  x="1109.72" y="783.5" ></text>
</g>
<g >
<title>clang::OverloadCandidateSet::addCandidate (1 samples, 0.04%)</title><rect x="1120.8" y="901" width="0.5" height="15.0" fill="rgb(235,111,44)" rx="2" ry="2" />
<text  x="1123.82" y="911.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::doFinalization (1 samples, 0.04%)</title><rect x="699.1" y="789" width="0.5" height="15.0" fill="rgb(252,214,12)" rx="2" ry="2" />
<text  x="702.14" y="799.5" ></text>
</g>
<g >
<title>llvm::MCStreamer::Finish (1 samples, 0.04%)</title><rect x="905.8" y="613" width="0.4" height="15.0" fill="rgb(230,168,13)" rx="2" ry="2" />
<text  x="908.80" y="623.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::isImpliedCond (1 samples, 0.04%)</title><rect x="692.1" y="645" width="0.4" height="15.0" fill="rgb(231,156,15)" rx="2" ry="2" />
<text  x="695.09" y="655.5" ></text>
</g>
<g >
<title>cling::Interpreter::executeTransaction (3 samples, 0.11%)</title><rect x="909.8" y="789" width="1.3" height="15.0" fill="rgb(243,203,34)" rx="2" ry="2" />
<text  x="912.76" y="799.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadTemplateParameterList (1 samples, 0.04%)</title><rect x="1097.5" y="677" width="0.4" height="15.0" fill="rgb(245,151,29)" rx="2" ry="2" />
<text  x="1100.47" y="687.5" ></text>
</g>
<g >
<title>clang::Sema::FindAllocationFunctions (1 samples, 0.04%)</title><rect x="1120.8" y="949" width="0.5" height="15.0" fill="rgb(251,19,18)" rx="2" ry="2" />
<text  x="1123.82" y="959.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass (1 samples, 0.04%)</title><rect x="1129.6" y="773" width="0.5" height="15.0" fill="rgb(214,138,21)" rx="2" ry="2" />
<text  x="1132.63" y="783.5" ></text>
</g>
<g >
<title>isLinkageSpecContext (1 samples, 0.04%)</title><rect x="1109.4" y="869" width="0.4" height="15.0" fill="rgb(214,119,41)" rx="2" ry="2" />
<text  x="1112.37" y="879.5" ></text>
</g>
<g >
<title>llvm::MachinePostDominatorTree::runOnMachineFunction (1 samples, 0.04%)</title><rect x="842.8" y="565" width="0.4" height="15.0" fill="rgb(250,88,20)" rx="2" ry="2" />
<text  x="845.79" y="575.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentScopeDeclRefExpr (1 samples, 0.04%)</title><rect x="1141.5" y="853" width="0.5" height="15.0" fill="rgb(205,29,5)" rx="2" ry="2" />
<text  x="1144.53" y="863.5" ></text>
</g>
<g >
<title>llvm::BitstreamCursor::readRecord (1 samples, 0.04%)</title><rect x="904.5" y="485" width="0.4" height="15.0" fill="rgb(251,188,46)" rx="2" ry="2" />
<text  x="907.47" y="495.5" ></text>
</g>
<g >
<title>__GI___fork (5 samples, 0.19%)</title><rect x="1072.8" y="805" width="2.2" height="15.0" fill="rgb(245,177,4)" rx="2" ry="2" />
<text  x="1075.79" y="815.5" ></text>
</g>
<g >
<title>llvm::DataLayout::getPointerABIAlignment (1 samples, 0.04%)</title><rect x="900.5" y="565" width="0.4" height="15.0" fill="rgb(243,214,20)" rx="2" ry="2" />
<text  x="903.51" y="575.5" ></text>
</g>
<g >
<title>dl_main (5 samples, 0.19%)</title><rect x="1169.7" y="917" width="2.2" height="15.0" fill="rgb(251,104,31)" rx="2" ry="2" />
<text  x="1172.73" y="927.5" ></text>
</g>
<g >
<title>llvm::object::ELFFile&lt;llvm::object::ELFType&lt;(llvm::support::endianness)1, true&gt; &gt;::getSection (1 samples, 0.04%)</title><rect x="885.5" y="517" width="0.5" height="15.0" fill="rgb(241,125,11)" rx="2" ry="2" />
<text  x="888.53" y="527.5" ></text>
</g>
<g >
<title>llvm::SmallPtrSetImplBase::FindBucketFor (1 samples, 0.04%)</title><rect x="1147.3" y="837" width="0.4" height="15.0" fill="rgb(210,36,1)" rx="2" ry="2" />
<text  x="1150.26" y="847.5" ></text>
</g>
<g >
<title>llvm::MCAssembler::Finish (1 samples, 0.04%)</title><rect x="905.8" y="597" width="0.4" height="15.0" fill="rgb(216,180,30)" rx="2" ry="2" />
<text  x="908.80" y="607.5" ></text>
</g>
<g >
<title>llvm::Value::getValueName (2 samples, 0.07%)</title><rect x="1046.8" y="613" width="0.9" height="15.0" fill="rgb(231,172,19)" rx="2" ry="2" />
<text  x="1049.80" y="623.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1127.4" y="885" width="0.5" height="15.0" fill="rgb(205,211,16)" rx="2" ry="2" />
<text  x="1130.43" y="895.5" ></text>
</g>
<g >
<title>frombuf (4 samples, 0.15%)</title><rect x="425.5" y="821" width="1.8" height="15.0" fill="rgb(229,117,29)" rx="2" ry="2" />
<text  x="428.51" y="831.5" ></text>
</g>
<g >
<title>clang::Sema::DeduceTemplateArguments (1 samples, 0.04%)</title><rect x="1097.9" y="917" width="0.4" height="15.0" fill="rgb(208,114,47)" rx="2" ry="2" />
<text  x="1100.91" y="927.5" ></text>
</g>
<g >
<title>llvm::MachineFunctionPass::runOnFunction (2 samples, 0.07%)</title><rect x="1152.5" y="805" width="0.9" height="15.0" fill="rgb(243,55,27)" rx="2" ry="2" />
<text  x="1155.55" y="815.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition (1 samples, 0.04%)</title><rect x="785.1" y="709" width="0.4" height="15.0" fill="rgb(213,30,10)" rx="2" ry="2" />
<text  x="788.06" y="719.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1092.6" y="725" width="0.5" height="15.0" fill="rgb(230,36,23)" rx="2" ry="2" />
<text  x="1095.62" y="735.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1095.3" y="837" width="0.4" height="15.0" fill="rgb(229,173,10)" rx="2" ry="2" />
<text  x="1098.27" y="847.5" ></text>
</g>
<g >
<title>llvm::AsmPrinter::EmitFunctionBody (1 samples, 0.04%)</title><rect x="702.2" y="725" width="0.5" height="15.0" fill="rgb(218,219,27)" rx="2" ry="2" />
<text  x="705.23" y="735.5" ></text>
</g>
<g >
<title>llvm::Function::addAttributes (1 samples, 0.04%)</title><rect x="1112.4" y="773" width="0.5" height="15.0" fill="rgb(230,195,51)" rx="2" ry="2" />
<text  x="1115.45" y="783.5" ></text>
</g>
<g >
<title>llvm::SelectionDAG::computeKnownBits (1 samples, 0.04%)</title><rect x="1154.3" y="901" width="0.4" height="15.0" fill="rgb(213,100,24)" rx="2" ry="2" />
<text  x="1157.31" y="911.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.15%)</title><rect x="1072.8" y="789" width="1.8" height="15.0" fill="rgb(240,148,23)" rx="2" ry="2" />
<text  x="1075.79" y="799.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (1 samples, 0.04%)</title><rect x="1027.0" y="661" width="0.4" height="15.0" fill="rgb(245,73,18)" rx="2" ry="2" />
<text  x="1029.97" y="671.5" ></text>
</g>
<g >
<title>clang::Sema::SubstDecl (1 samples, 0.04%)</title><rect x="1122.6" y="853" width="0.4" height="15.0" fill="rgb(230,166,49)" rx="2" ry="2" />
<text  x="1125.58" y="863.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::commitTransaction (1 samples, 0.04%)</title><rect x="1145.5" y="933" width="0.4" height="15.0" fill="rgb(238,28,36)" rx="2" ry="2" />
<text  x="1148.50" y="943.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitFunctionBody (7 samples, 0.26%)</title><rect x="1105.4" y="933" width="3.1" height="15.0" fill="rgb(210,113,2)" rx="2" ry="2" />
<text  x="1108.40" y="943.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="1168.8" y="837" width="0.5" height="15.0" fill="rgb(254,95,44)" rx="2" ry="2" />
<text  x="1171.85" y="847.5" ></text>
</g>
<g >
<title>ROOT::Detail::VecOps::RVecImpl&lt;float&gt;::operator= (15 samples, 0.56%)</title><rect x="802.7" y="933" width="6.6" height="15.0" fill="rgb(237,119,20)" rx="2" ry="2" />
<text  x="805.69" y="943.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::~PMDataManager (1 samples, 0.04%)</title><rect x="904.0" y="597" width="0.5" height="15.0" fill="rgb(236,111,0)" rx="2" ry="2" />
<text  x="907.03" y="607.5" ></text>
</g>
<g >
<title>__sigprocmask (2 samples, 0.07%)</title><rect x="1188.7" y="837" width="0.9" height="15.0" fill="rgb(226,179,31)" rx="2" ry="2" />
<text  x="1191.68" y="847.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetExternalCXXBaseSpecifiers (1 samples, 0.04%)</title><rect x="1142.9" y="725" width="0.4" height="15.0" fill="rgb(253,223,29)" rx="2" ry="2" />
<text  x="1145.85" y="735.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldELF::loadObject (49 samples, 1.83%)</title><rect x="868.3" y="613" width="21.6" height="15.0" fill="rgb(253,217,35)" rx="2" ry="2" />
<text  x="871.34" y="623.5" >l..</text>
</g>
<g >
<title>clang::Sema::CheckTypenameType (1 samples, 0.04%)</title><rect x="1127.4" y="693" width="0.5" height="15.0" fill="rgb(211,3,17)" rx="2" ry="2" />
<text  x="1130.43" y="703.5" ></text>
</g>
<g >
<title>patcmp (1 samples, 0.04%)</title><rect x="784.6" y="789" width="0.5" height="15.0" fill="rgb(231,120,16)" rx="2" ry="2" />
<text  x="787.62" y="799.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::run (1 samples, 0.04%)</title><rect x="1027.4" y="613" width="0.4" height="15.0" fill="rgb(245,144,6)" rx="2" ry="2" />
<text  x="1030.41" y="623.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTSIInObjectScope (1 samples, 0.04%)</title><rect x="1140.2" y="757" width="0.4" height="15.0" fill="rgb(246,120,3)" rx="2" ry="2" />
<text  x="1143.21" y="767.5" ></text>
</g>
<g >
<title>execute_command (26 samples, 0.97%)</title><rect x="10.4" y="869" width="11.5" height="15.0" fill="rgb(238,67,24)" rx="2" ry="2" />
<text  x="13.44" y="879.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord (1 samples, 0.04%)</title><rect x="1097.5" y="757" width="0.4" height="15.0" fill="rgb(209,209,44)" rx="2" ry="2" />
<text  x="1100.47" y="767.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::PopCleanupBlocks (1 samples, 0.04%)</title><rect x="1116.4" y="885" width="0.5" height="15.0" fill="rgb(234,170,38)" rx="2" ry="2" />
<text  x="1119.42" y="895.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTBAA::getAccessInfo (1 samples, 0.04%)</title><rect x="1103.2" y="869" width="0.4" height="15.0" fill="rgb(248,115,49)" rx="2" ry="2" />
<text  x="1106.20" y="879.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::recordAvailableAnalysis (1 samples, 0.04%)</title><rect x="697.8" y="757" width="0.5" height="15.0" fill="rgb(244,12,8)" rx="2" ry="2" />
<text  x="700.82" y="767.5" ></text>
</g>
<g >
<title>cling::Interpreter::RunFunction (1 samples, 0.04%)</title><rect x="1147.7" y="917" width="0.4" height="15.0" fill="rgb(229,85,3)" rx="2" ry="2" />
<text  x="1150.70" y="927.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.04%)</title><rect x="21.9" y="373" width="0.4" height="15.0" fill="rgb(208,177,17)" rx="2" ry="2" />
<text  x="24.90" y="383.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.11%)</title><rect x="1086.0" y="741" width="1.3" height="15.0" fill="rgb(209,15,6)" rx="2" ry="2" />
<text  x="1089.01" y="751.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::removeNotPreservedAnalysis (3 samples, 0.11%)</title><rect x="850.7" y="581" width="1.3" height="15.0" fill="rgb(253,150,18)" rx="2" ry="2" />
<text  x="853.72" y="591.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::SelectAllBasicBlocks (1 samples, 0.04%)</title><rect x="1146.8" y="693" width="0.5" height="15.0" fill="rgb(230,53,35)" rx="2" ry="2" />
<text  x="1149.82" y="703.5" ></text>
</g>
<g >
<title>clang::ASTReader::readTypeRecord (1 samples, 0.04%)</title><rect x="1100.1" y="805" width="0.5" height="15.0" fill="rgb(219,14,50)" rx="2" ry="2" />
<text  x="1103.11" y="815.5" ></text>
</g>
<g >
<title>llvm::PMTopLevelManager::collectLastUses (1 samples, 0.04%)</title><rect x="1038.9" y="613" width="0.4" height="15.0" fill="rgb(211,40,18)" rx="2" ry="2" />
<text  x="1041.86" y="623.5" ></text>
</g>
<g >
<title>llvm::MemorySSA::ClobberWalkerBase&lt;llvm::BatchAAResults&gt;::getClobberingMemoryAccessBase (1 samples, 0.04%)</title><rect x="1151.2" y="741" width="0.5" height="15.0" fill="rgb(244,72,19)" rx="2" ry="2" />
<text  x="1154.22" y="751.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="21.9" y="389" width="0.4" height="15.0" fill="rgb(229,21,27)" rx="2" ry="2" />
<text  x="24.90" y="399.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentNameType (1 samples, 0.04%)</title><rect x="1124.3" y="885" width="0.5" height="15.0" fill="rgb(212,103,47)" rx="2" ry="2" />
<text  x="1127.35" y="895.5" ></text>
</g>
<g >
<title>llvm::BitstreamCursor::readRecord (1 samples, 0.04%)</title><rect x="1155.2" y="517" width="0.4" height="15.0" fill="rgb(205,1,7)" rx="2" ry="2" />
<text  x="1158.19" y="527.5" ></text>
</g>
<g >
<title>llvm::BasicBlock::eraseFromParent (1 samples, 0.04%)</title><rect x="1028.3" y="693" width="0.4" height="15.0" fill="rgb(216,45,43)" rx="2" ry="2" />
<text  x="1031.29" y="703.5" ></text>
</g>
<g >
<title>HandleSizeof (1 samples, 0.04%)</title><rect x="1123.5" y="837" width="0.4" height="15.0" fill="rgb(222,200,42)" rx="2" ry="2" />
<text  x="1126.47" y="847.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::executeWrapper (2 samples, 0.07%)</title><rect x="1145.9" y="933" width="0.9" height="15.0" fill="rgb(219,204,46)" rx="2" ry="2" />
<text  x="1148.94" y="943.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.07%)</title><rect x="1188.7" y="789" width="0.9" height="15.0" fill="rgb(252,120,1)" rx="2" ry="2" />
<text  x="1191.68" y="799.5" ></text>
</g>
<g >
<title>clang::InitializationSequence::InitializeFrom (1 samples, 0.04%)</title><rect x="1119.1" y="949" width="0.4" height="15.0" fill="rgb(231,206,26)" rx="2" ry="2" />
<text  x="1122.06" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (1 samples, 0.04%)</title><rect x="1111.1" y="533" width="0.5" height="15.0" fill="rgb(226,9,39)" rx="2" ry="2" />
<text  x="1114.13" y="543.5" ></text>
</g>
<g >
<title>clang::ASTRecordReader::readRecord (1 samples, 0.04%)</title><rect x="904.5" y="501" width="0.4" height="15.0" fill="rgb(211,159,9)" rx="2" ry="2" />
<text  x="907.47" y="511.5" ></text>
</g>
<g >
<title>clang::CXXRecordDecl::lookupInBases (1 samples, 0.04%)</title><rect x="1119.5" y="805" width="0.4" height="15.0" fill="rgb(221,67,3)" rx="2" ry="2" />
<text  x="1122.50" y="815.5" ></text>
</g>
<g >
<title>[libc-2.28.so] (2 samples, 0.07%)</title><rect x="1089.5" y="821" width="0.9" height="15.0" fill="rgb(235,97,32)" rx="2" ry="2" />
<text  x="1092.54" y="831.5" ></text>
</g>
<g >
<title>cling::Interpreter::RunFunction (1 samples, 0.04%)</title><rect x="785.5" y="901" width="0.4" height="15.0" fill="rgb(206,60,15)" rx="2" ry="2" />
<text  x="788.50" y="911.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord (1 samples, 0.04%)</title><rect x="1132.7" y="741" width="0.5" height="15.0" fill="rgb(208,66,21)" rx="2" ry="2" />
<text  x="1135.72" y="751.5" ></text>
</g>
<g >
<title>execute_command (4 samples, 0.15%)</title><rect x="22.3" y="533" width="1.8" height="15.0" fill="rgb(215,47,42)" rx="2" ry="2" />
<text  x="25.34" y="543.5" ></text>
</g>
<g >
<title>?? (793 samples, 29.61%)</title><rect x="335.2" y="965" width="349.4" height="15.0" fill="rgb(228,146,30)" rx="2" ry="2" />
<text  x="338.18" y="975.5" >??</text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (2 samples, 0.07%)</title><rect x="1144.2" y="757" width="0.9" height="15.0" fill="rgb(236,181,19)" rx="2" ry="2" />
<text  x="1147.17" y="767.5" ></text>
</g>
<g >
<title>llvm::BasicBlock::getTerminator (1 samples, 0.04%)</title><rect x="1063.1" y="565" width="0.4" height="15.0" fill="rgb(238,207,21)" rx="2" ry="2" />
<text  x="1066.10" y="575.5" ></text>
</g>
<g >
<title>cling::MetaParser::isXCommand (1 samples, 0.04%)</title><rect x="1147.7" y="965" width="0.4" height="15.0" fill="rgb(223,213,52)" rx="2" ry="2" />
<text  x="1150.70" y="975.5" ></text>
</g>
<g >
<title>_IO_new_proc_open (5 samples, 0.19%)</title><rect x="1072.8" y="821" width="2.2" height="15.0" fill="rgb(220,213,40)" rx="2" ry="2" />
<text  x="1075.79" y="831.5" ></text>
</g>
<g >
<title>clang::TypePropertyCache&lt;(anonymous namespace)::Private&gt;::ensure (1 samples, 0.04%)</title><rect x="1103.2" y="533" width="0.4" height="15.0" fill="rgb(226,98,30)" rx="2" ry="2" />
<text  x="1106.20" y="543.5" ></text>
</g>
<g >
<title>clang::NestedNameSpecifier::FindOrInsert (1 samples, 0.04%)</title><rect x="1134.9" y="613" width="0.5" height="15.0" fill="rgb(250,12,1)" rx="2" ry="2" />
<text  x="1137.92" y="623.5" ></text>
</g>
<g >
<title>ClingMemberIterInternal::DCIter::Next (1 samples, 0.04%)</title><rect x="786.4" y="309" width="0.4" height="15.0" fill="rgb(242,35,24)" rx="2" ry="2" />
<text  x="789.39" y="319.5" ></text>
</g>
<g >
<title>llvm::LoopVectorizePass::runImpl (1 samples, 0.04%)</title><rect x="696.9" y="757" width="0.5" height="15.0" fill="rgb(228,228,40)" rx="2" ry="2" />
<text  x="699.94" y="767.5" ></text>
</g>
<g >
<title>frombuf (1 samples, 0.04%)</title><rect x="646.7" y="853" width="0.4" height="15.0" fill="rgb(225,105,34)" rx="2" ry="2" />
<text  x="649.71" y="863.5" ></text>
</g>
<g >
<title>llvm::legacy::FunctionPassManager::run (2 samples, 0.07%)</title><rect x="889.9" y="709" width="0.9" height="15.0" fill="rgb(211,46,6)" rx="2" ry="2" />
<text  x="892.93" y="719.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnModule (3 samples, 0.11%)</title><rect x="1148.1" y="677" width="1.4" height="15.0" fill="rgb(220,84,30)" rx="2" ry="2" />
<text  x="1151.14" y="687.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::CompleteRedeclChain (1 samples, 0.04%)</title><rect x="1130.5" y="597" width="0.5" height="15.0" fill="rgb(211,35,54)" rx="2" ry="2" />
<text  x="1133.52" y="607.5" ></text>
</g>
<g >
<title>clang::Parser::isCXXDeclarationSpecifier (1 samples, 0.04%)</title><rect x="1118.2" y="917" width="0.4" height="15.0" fill="rgb(237,175,5)" rx="2" ry="2" />
<text  x="1121.18" y="927.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ComputeRecordLayout (1 samples, 0.04%)</title><rect x="1117.7" y="853" width="0.5" height="15.0" fill="rgb(220,194,50)" rx="2" ry="2" />
<text  x="1120.74" y="863.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.04%)</title><rect x="1103.6" y="933" width="0.5" height="15.0" fill="rgb(233,167,29)" rx="2" ry="2" />
<text  x="1106.64" y="943.5" ></text>
</g>
<g >
<title>__nptl_set_robust (1 samples, 0.04%)</title><rect x="1168.0" y="933" width="0.4" height="15.0" fill="rgb(217,68,13)" rx="2" ry="2" />
<text  x="1170.97" y="943.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1067.9" y="645" width="0.5" height="15.0" fill="rgb(242,59,37)" rx="2" ry="2" />
<text  x="1070.95" y="655.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.04%)</title><rect x="1037.5" y="581" width="0.5" height="15.0" fill="rgb(227,111,16)" rx="2" ry="2" />
<text  x="1040.54" y="591.5" ></text>
</g>
<g >
<title>llvm::Expected&lt;llvm::ArrayRef&lt;llvm::object::Elf_Shdr_Impl&lt;llvm::object::ELFType&lt;(llvm::support::endianness)1, true&gt; &gt; &gt; &gt;::~Expected (1 samples, 0.04%)</title><rect x="876.3" y="517" width="0.4" height="15.0" fill="rgb(245,147,23)" rx="2" ry="2" />
<text  x="879.27" y="527.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl (1 samples, 0.04%)</title><rect x="1155.2" y="741" width="0.4" height="15.0" fill="rgb(236,209,33)" rx="2" ry="2" />
<text  x="1158.19" y="751.5" ></text>
</g>
<g >
<title>execute_command (4 samples, 0.15%)</title><rect x="22.3" y="261" width="1.8" height="15.0" fill="rgb(247,150,46)" rx="2" ry="2" />
<text  x="25.34" y="271.5" ></text>
</g>
<g >
<title>ROOT::Internal::RDF::GetBranchOrLeafTypeName (1 samples, 0.04%)</title><rect x="785.9" y="885" width="0.5" height="15.0" fill="rgb(226,54,25)" rx="2" ry="2" />
<text  x="788.94" y="895.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitAggExpr (1 samples, 0.04%)</title><rect x="1102.8" y="741" width="0.4" height="15.0" fill="rgb(223,152,30)" rx="2" ry="2" />
<text  x="1105.76" y="751.5" ></text>
</g>
<g >
<title>llvm::SelectionDAG::FindNodeOrInsertPos (1 samples, 0.04%)</title><rect x="1153.9" y="853" width="0.4" height="15.0" fill="rgb(245,24,47)" rx="2" ry="2" />
<text  x="1156.87" y="863.5" ></text>
</g>
<g >
<title>clang::LinkageComputer::computeLVForDecl (1 samples, 0.04%)</title><rect x="1105.4" y="501" width="0.4" height="15.0" fill="rgb(234,43,35)" rx="2" ry="2" />
<text  x="1108.40" y="511.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddType (1 samples, 0.04%)</title><rect x="1140.2" y="517" width="0.4" height="15.0" fill="rgb(253,209,29)" rx="2" ry="2" />
<text  x="1143.21" y="527.5" ></text>
</g>
<g >
<title>clang::Stmt::Profile (1 samples, 0.04%)</title><rect x="1100.1" y="677" width="0.5" height="15.0" fill="rgb(216,166,39)" rx="2" ry="2" />
<text  x="1103.11" y="687.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="849.8" y="517" width="0.5" height="15.0" fill="rgb(252,135,5)" rx="2" ry="2" />
<text  x="852.84" y="527.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="10.4" y="261" width="0.5" height="15.0" fill="rgb(235,109,30)" rx="2" ry="2" />
<text  x="13.44" y="271.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.04%)</title><rect x="1143.7" y="741" width="0.5" height="15.0" fill="rgb(208,12,46)" rx="2" ry="2" />
<text  x="1146.73" y="751.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition (1 samples, 0.04%)</title><rect x="1112.0" y="693" width="0.4" height="15.0" fill="rgb(232,224,44)" rx="2" ry="2" />
<text  x="1115.01" y="703.5" ></text>
</g>
<g >
<title>llvm::Value::~Value (1 samples, 0.04%)</title><rect x="1028.3" y="677" width="0.4" height="15.0" fill="rgb(240,65,5)" rx="2" ry="2" />
<text  x="1031.29" y="687.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (10 samples, 0.37%)</title><rect x="1109.8" y="869" width="4.4" height="15.0" fill="rgb(208,113,9)" rx="2" ry="2" />
<text  x="1112.81" y="879.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyld::loadObject (2 samples, 0.07%)</title><rect x="707.5" y="805" width="0.9" height="15.0" fill="rgb(211,76,31)" rx="2" ry="2" />
<text  x="710.51" y="815.5" ></text>
</g>
<g >
<title>cling::MetaParser::isCommand (1 samples, 0.04%)</title><rect x="1027.0" y="837" width="0.4" height="15.0" fill="rgb(243,93,37)" rx="2" ry="2" />
<text  x="1029.97" y="847.5" ></text>
</g>
<g >
<title>clang::TemplateDeclInstantiator::InstantiateTypedefNameDecl (1 samples, 0.04%)</title><rect x="1124.8" y="853" width="0.4" height="15.0" fill="rgb(227,15,49)" rx="2" ry="2" />
<text  x="1127.79" y="863.5" ></text>
</g>
<g >
<title>combineInstructionsOverFunction (1 samples, 0.04%)</title><rect x="1027.4" y="629" width="0.4" height="15.0" fill="rgb(233,70,32)" rx="2" ry="2" />
<text  x="1030.41" y="639.5" ></text>
</g>
<g >
<title>llvm::BitstreamCursor::readRecord (1 samples, 0.04%)</title><rect x="1142.9" y="581" width="0.4" height="15.0" fill="rgb(217,3,29)" rx="2" ry="2" />
<text  x="1145.85" y="591.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1097.5" y="565" width="0.4" height="15.0" fill="rgb(251,20,32)" rx="2" ry="2" />
<text  x="1100.47" y="575.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetTypeSourceInfo (1 samples, 0.04%)</title><rect x="1100.1" y="917" width="0.5" height="15.0" fill="rgb(220,55,27)" rx="2" ry="2" />
<text  x="1103.11" y="927.5" ></text>
</g>
<g >
<title>clang::ASTContext::getTemplateSpecializationType (1 samples, 0.04%)</title><rect x="783.3" y="661" width="0.4" height="15.0" fill="rgb(228,101,15)" rx="2" ry="2" />
<text  x="786.30" y="671.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::recordAvailableAnalysis (1 samples, 0.04%)</title><rect x="1053.0" y="613" width="0.4" height="15.0" fill="rgb(215,217,53)" rx="2" ry="2" />
<text  x="1055.96" y="623.5" ></text>
</g>
<g >
<title>cling::DynamicLibraryManager::searchLibrariesForSymbol[abi:cxx11] (2 samples, 0.07%)</title><rect x="867.5" y="485" width="0.8" height="15.0" fill="rgb(229,153,27)" rx="2" ry="2" />
<text  x="870.46" y="495.5" ></text>
</g>
<g >
<title>llvm::MachineFunction::clear (1 samples, 0.04%)</title><rect x="834.0" y="565" width="0.4" height="15.0" fill="rgb(228,39,46)" rx="2" ry="2" />
<text  x="836.97" y="575.5" ></text>
</g>
<g >
<title>TTree::LoadTree (19 samples, 0.71%)</title><rect x="752.0" y="869" width="8.4" height="15.0" fill="rgb(226,167,11)" rx="2" ry="2" />
<text  x="755.02" y="879.5" ></text>
</g>
<g >
<title>__libc_start_main (40 samples, 1.49%)</title><rect x="1172.4" y="949" width="17.6" height="15.0" fill="rgb(251,92,26)" rx="2" ry="2" />
<text  x="1175.37" y="959.5" ></text>
</g>
<g >
<title>llvm::AttributeList::addAttributes (1 samples, 0.04%)</title><rect x="1114.2" y="805" width="0.5" height="15.0" fill="rgb(206,78,50)" rx="2" ry="2" />
<text  x="1117.21" y="815.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.04%)</title><rect x="1133.6" y="837" width="0.4" height="15.0" fill="rgb(250,150,29)" rx="2" ry="2" />
<text  x="1136.60" y="847.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTBAA::getBaseTypeInfo (1 samples, 0.04%)</title><rect x="1103.2" y="741" width="0.4" height="15.0" fill="rgb(207,131,44)" rx="2" ry="2" />
<text  x="1106.20" y="751.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::setNonAliasAttributes (1 samples, 0.04%)</title><rect x="1110.7" y="645" width="0.4" height="15.0" fill="rgb(239,38,9)" rx="2" ry="2" />
<text  x="1113.69" y="655.5" ></text>
</g>
<g >
<title>clang::CXXBasePaths::lookupInBases (1 samples, 0.04%)</title><rect x="1140.6" y="869" width="0.5" height="15.0" fill="rgb(218,139,2)" rx="2" ry="2" />
<text  x="1143.65" y="879.5" ></text>
</g>
<g >
<title>clang::TemplateDeclInstantiator::VisitFunctionDecl (1 samples, 0.04%)</title><rect x="1138.9" y="965" width="0.4" height="15.0" fill="rgb(217,202,51)" rx="2" ry="2" />
<text  x="1141.89" y="975.5" ></text>
</g>
<g >
<title>llvm::orc::LambdaSymbolResolver&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt; const&amp;)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}&gt;::lookup (4 samples, 0.15%)</title><rect x="1148.1" y="757" width="1.8" height="15.0" fill="rgb(224,194,38)" rx="2" ry="2" />
<text  x="1151.14" y="767.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTBAA::getAccessInfo (1 samples, 0.04%)</title><rect x="1101.9" y="773" width="0.4" height="15.0" fill="rgb(212,181,18)" rx="2" ry="2" />
<text  x="1104.87" y="783.5" ></text>
</g>
<g >
<title>TCling::ProcessLine (1 samples, 0.04%)</title><rect x="1027.0" y="885" width="0.4" height="15.0" fill="rgb(217,96,25)" rx="2" ry="2" />
<text  x="1029.97" y="895.5" ></text>
</g>
<g >
<title>clang::NestedNameSpecifier::Create (1 samples, 0.04%)</title><rect x="1122.1" y="709" width="0.5" height="15.0" fill="rgb(252,39,8)" rx="2" ry="2" />
<text  x="1125.14" y="719.5" ></text>
</g>
<g >
<title>TFile::Open (1 samples, 0.04%)</title><rect x="904.0" y="949" width="0.5" height="15.0" fill="rgb(235,142,22)" rx="2" ry="2" />
<text  x="907.03" y="959.5" ></text>
</g>
<g >
<title>llvm::StringMapImpl::LookupBucketFor (1 samples, 0.04%)</title><rect x="1148.1" y="517" width="0.5" height="15.0" fill="rgb(224,28,8)" rx="2" ry="2" />
<text  x="1151.14" y="527.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::SetLLVMFunctionAttributesForDefinition (1 samples, 0.04%)</title><rect x="1112.9" y="789" width="0.4" height="15.0" fill="rgb(241,93,16)" rx="2" ry="2" />
<text  x="1115.89" y="799.5" ></text>
</g>
<g >
<title>clang::Sema::computeDeclContext (1 samples, 0.04%)</title><rect x="1131.0" y="661" width="0.4" height="15.0" fill="rgb(217,91,7)" rx="2" ry="2" />
<text  x="1133.96" y="671.5" ></text>
</g>
<g >
<title>EmitCleanup (1 samples, 0.04%)</title><rect x="1108.0" y="693" width="0.5" height="15.0" fill="rgb(217,157,31)" rx="2" ry="2" />
<text  x="1111.04" y="703.5" ></text>
</g>
<g >
<title>_dl_relocate_object (1 samples, 0.04%)</title><rect x="1149.5" y="341" width="0.4" height="15.0" fill="rgb(219,33,29)" rx="2" ry="2" />
<text  x="1152.46" y="351.5" ></text>
</g>
<g >
<title>?? (219 samples, 8.18%)</title><rect x="335.2" y="933" width="96.5" height="15.0" fill="rgb(212,156,8)" rx="2" ry="2" />
<text  x="338.18" y="943.5" >??</text>
</g>
<g >
<title>llvm::orc::LambdaSymbolResolver&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt; const&amp;)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}&gt;::lookup (7 samples, 0.26%)</title><rect x="905.8" y="725" width="3.1" height="15.0" fill="rgb(206,127,11)" rx="2" ry="2" />
<text  x="908.80" y="735.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitReturnStmt (2 samples, 0.07%)</title><rect x="1106.7" y="885" width="0.9" height="15.0" fill="rgb(239,126,36)" rx="2" ry="2" />
<text  x="1109.72" y="895.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.04%)</title><rect x="785.9" y="757" width="0.5" height="15.0" fill="rgb(218,101,23)" rx="2" ry="2" />
<text  x="788.94" y="767.5" ></text>
</g>
<g >
<title>clang::CXXRecordDecl::FindBaseClass (1 samples, 0.04%)</title><rect x="1119.5" y="773" width="0.4" height="15.0" fill="rgb(242,1,46)" rx="2" ry="2" />
<text  x="1122.50" y="783.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.11%)</title><rect x="1174.1" y="773" width="1.4" height="15.0" fill="rgb(251,198,15)" rx="2" ry="2" />
<text  x="1177.14" y="783.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="700.5" y="693" width="0.4" height="15.0" fill="rgb(213,167,30)" rx="2" ry="2" />
<text  x="703.46" y="703.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteDeclContext (1 samples, 0.04%)</title><rect x="1142.0" y="693" width="0.4" height="15.0" fill="rgb(241,198,33)" rx="2" ry="2" />
<text  x="1144.97" y="703.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.15%)</title><rect x="1173.7" y="789" width="1.8" height="15.0" fill="rgb(254,41,49)" rx="2" ry="2" />
<text  x="1176.70" y="799.5" ></text>
</g>
<g >
<title>TryReferenceInit (1 samples, 0.04%)</title><rect x="1119.5" y="869" width="0.4" height="15.0" fill="rgb(238,19,13)" rx="2" ry="2" />
<text  x="1122.50" y="879.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTemplateIdType (1 samples, 0.04%)</title><rect x="1140.2" y="725" width="0.4" height="15.0" fill="rgb(211,108,14)" rx="2" ry="2" />
<text  x="1143.21" y="735.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformIfStmt (1 samples, 0.04%)</title><rect x="1134.9" y="789" width="0.5" height="15.0" fill="rgb(239,74,2)" rx="2" ry="2" />
<text  x="1137.92" y="799.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl (1 samples, 0.04%)</title><rect x="904.5" y="805" width="0.4" height="15.0" fill="rgb(240,51,42)" rx="2" ry="2" />
<text  x="907.47" y="815.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::SmallDenseMap&lt;unsigned int, llvm::SDValue, 8u, llvm::DenseMapInfo&lt;unsigned int&gt;, llvm::detail::DenseMapPair&lt;unsigned int, llvm::SDValue&gt; &gt;, unsigned int, llvm::SDValue, llvm::DenseMapInfo&lt;unsigned int&gt;, llvm::detail::DenseMapPair&lt;unsigned int, llvm::SDValue&gt; &gt;::InsertIntoBucketImpl&lt;unsigned int&gt; (1 samples, 0.04%)</title><rect x="1157.4" y="725" width="0.4" height="15.0" fill="rgb(229,116,31)" rx="2" ry="2" />
<text  x="1160.39" y="735.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::run (1 samples, 0.04%)</title><rect x="902.7" y="613" width="0.5" height="15.0" fill="rgb(205,94,39)" rx="2" ry="2" />
<text  x="905.71" y="623.5" ></text>
</g>
<g >
<title>llvm::canConstantFoldCallTo (1 samples, 0.04%)</title><rect x="689.4" y="709" width="0.5" height="15.0" fill="rgb(207,225,29)" rx="2" ry="2" />
<text  x="692.45" y="719.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition (1 samples, 0.04%)</title><rect x="1110.2" y="597" width="0.5" height="15.0" fill="rgb(239,221,27)" rx="2" ry="2" />
<text  x="1113.25" y="607.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl (1 samples, 0.04%)</title><rect x="1132.7" y="757" width="0.5" height="15.0" fill="rgb(205,75,40)" rx="2" ry="2" />
<text  x="1135.72" y="767.5" ></text>
</g>
<g >
<title>llvm::orc::lookupWithLegacyFn&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}::operator()(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;) const::{lambda(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)#1}&gt; (2 samples, 0.07%)</title><rect x="867.5" y="549" width="0.8" height="15.0" fill="rgb(222,31,19)" rx="2" ry="2" />
<text  x="870.46" y="559.5" ></text>
</g>
<g >
<title>clang::Sema::getCurFunctionDecl (1 samples, 0.04%)</title><rect x="785.1" y="613" width="0.4" height="15.0" fill="rgb(214,159,20)" rx="2" ry="2" />
<text  x="788.06" y="623.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.11%)</title><rect x="1164.4" y="869" width="1.4" height="15.0" fill="rgb(207,144,15)" rx="2" ry="2" />
<text  x="1167.44" y="879.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="21.9" y="501" width="0.4" height="15.0" fill="rgb(215,205,5)" rx="2" ry="2" />
<text  x="24.90" y="511.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (3 samples, 0.11%)</title><rect x="1155.6" y="917" width="1.4" height="15.0" fill="rgb(245,204,37)" rx="2" ry="2" />
<text  x="1158.63" y="927.5" ></text>
</g>
<g >
<title>execute_command_internal (21 samples, 0.78%)</title><rect x="12.6" y="725" width="9.3" height="15.0" fill="rgb(205,214,34)" rx="2" ry="2" />
<text  x="15.64" y="735.5" ></text>
</g>
<g >
<title>llvm::BitstreamCursor::readRecord (1 samples, 0.04%)</title><rect x="1099.7" y="661" width="0.4" height="15.0" fill="rgb(212,140,20)" rx="2" ry="2" />
<text  x="1102.67" y="671.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1127.4" y="757" width="0.5" height="15.0" fill="rgb(245,178,26)" rx="2" ry="2" />
<text  x="1130.43" y="767.5" ></text>
</g>
<g >
<title>clang::Sema::CheckCompareOperands (1 samples, 0.04%)</title><rect x="1125.2" y="949" width="0.5" height="15.0" fill="rgb(219,8,4)" rx="2" ry="2" />
<text  x="1128.23" y="959.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertTypeForMem (1 samples, 0.04%)</title><rect x="1117.3" y="837" width="0.4" height="15.0" fill="rgb(246,48,28)" rx="2" ry="2" />
<text  x="1120.30" y="847.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::InfoRec, llvm::DenseMapInfo&lt;llvm::BasicBlock*&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::InfoRec&gt; &gt;, llvm::BasicBlock*, llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::InfoRec, llvm::DenseMapInfo&lt;llvm::BasicBlock*&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::InfoRec&gt; &gt;::FindAndConstruct (1 samples, 0.04%)</title><rect x="1034.9" y="597" width="0.4" height="15.0" fill="rgb(233,214,34)" rx="2" ry="2" />
<text  x="1037.90" y="607.5" ></text>
</g>
<g >
<title>llvm::TargetOptions::DisableFramePointerElim (1 samples, 0.04%)</title><rect x="908.4" y="533" width="0.5" height="15.0" fill="rgb(226,36,24)" rx="2" ry="2" />
<text  x="911.44" y="543.5" ></text>
</g>
<g >
<title>llvm::orc::LambdaSymbolResolver&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt; const&amp;)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}&gt;::lookup (2 samples, 0.07%)</title><rect x="684.6" y="741" width="0.9" height="15.0" fill="rgb(208,82,37)" rx="2" ry="2" />
<text  x="687.60" y="751.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::commitTransaction (4 samples, 0.15%)</title><rect x="909.3" y="805" width="1.8" height="15.0" fill="rgb(249,132,36)" rx="2" ry="2" />
<text  x="912.32" y="815.5" ></text>
</g>
<g >
<title>combineInstructionsOverFunction (1 samples, 0.04%)</title><rect x="1035.3" y="613" width="0.5" height="15.0" fill="rgb(209,24,25)" rx="2" ry="2" />
<text  x="1038.34" y="623.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.07%)</title><rect x="1167.1" y="901" width="0.9" height="15.0" fill="rgb(253,73,0)" rx="2" ry="2" />
<text  x="1170.09" y="911.5" ></text>
</g>
<g >
<title>_nl_normalize_codeset (1 samples, 0.04%)</title><rect x="1189.6" y="853" width="0.4" height="15.0" fill="rgb(223,19,39)" rx="2" ry="2" />
<text  x="1192.56" y="863.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit (1 samples, 0.04%)</title><rect x="1099.7" y="773" width="0.4" height="15.0" fill="rgb(242,122,17)" rx="2" ry="2" />
<text  x="1102.67" y="783.5" ></text>
</g>
<g >
<title>llvm::orc::lookupWithLegacyFn&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}::operator()(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;) const::{lambda(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)#1}&gt; (1 samples, 0.04%)</title><rect x="1149.5" y="613" width="0.4" height="15.0" fill="rgb(217,190,48)" rx="2" ry="2" />
<text  x="1152.46" y="623.5" ></text>
</g>
<g >
<title>isSafeToConvert (1 samples, 0.04%)</title><rect x="1117.3" y="613" width="0.4" height="15.0" fill="rgb(242,39,11)" rx="2" ry="2" />
<text  x="1120.30" y="623.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;std::add_pointer, (anonymous namespace)::AggExprEmitter, void&gt;::Visit (2 samples, 0.07%)</title><rect x="1107.6" y="757" width="0.9" height="15.0" fill="rgb(254,159,38)" rx="2" ry="2" />
<text  x="1110.60" y="767.5" ></text>
</g>
<g >
<title>clang::NestedNameSpecifier::FindOrInsert (1 samples, 0.04%)</title><rect x="1100.1" y="597" width="0.5" height="15.0" fill="rgb(222,203,22)" rx="2" ry="2" />
<text  x="1103.11" y="607.5" ></text>
</g>
<g >
<title>TClass::CallShowMembers (1 samples, 0.04%)</title><rect x="784.2" y="725" width="0.4" height="15.0" fill="rgb(250,221,15)" rx="2" ry="2" />
<text  x="787.18" y="735.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitDeclRefLValue (1 samples, 0.04%)</title><rect x="1106.3" y="741" width="0.4" height="15.0" fill="rgb(243,68,39)" rx="2" ry="2" />
<text  x="1109.28" y="751.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitAnyExprToTemp (1 samples, 0.04%)</title><rect x="1138.0" y="821" width="0.4" height="15.0" fill="rgb(222,227,38)" rx="2" ry="2" />
<text  x="1141.01" y="831.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1172.4" y="837" width="0.4" height="15.0" fill="rgb(225,186,46)" rx="2" ry="2" />
<text  x="1175.37" y="847.5" ></text>
</g>
<g >
<title>TFile::Open (1 samples, 0.04%)</title><rect x="903.6" y="933" width="0.4" height="15.0" fill="rgb(226,193,38)" rx="2" ry="2" />
<text  x="906.59" y="943.5" ></text>
</g>
<g >
<title>llvm::AttributeImpl::hasAttribute (1 samples, 0.04%)</title><rect x="908.4" y="501" width="0.5" height="15.0" fill="rgb(225,213,0)" rx="2" ry="2" />
<text  x="911.44" y="511.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadTemplateArgument (1 samples, 0.04%)</title><rect x="1132.7" y="533" width="0.5" height="15.0" fill="rgb(249,22,28)" rx="2" ry="2" />
<text  x="1135.72" y="543.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::commitTransaction (2 samples, 0.07%)</title><rect x="1149.9" y="837" width="0.9" height="15.0" fill="rgb(213,217,2)" rx="2" ry="2" />
<text  x="1152.90" y="847.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl (1 samples, 0.04%)</title><rect x="1097.5" y="773" width="0.4" height="15.0" fill="rgb(231,37,50)" rx="2" ry="2" />
<text  x="1100.47" y="783.5" ></text>
</g>
<g >
<title>ROOT::VecOps::RVec&lt;float&gt;::RVec (9 samples, 0.34%)</title><rect x="794.8" y="885" width="3.9" height="15.0" fill="rgb(210,72,18)" rx="2" ry="2" />
<text  x="797.76" y="895.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentScopeDeclRefExpr (1 samples, 0.04%)</title><rect x="1135.8" y="869" width="0.4" height="15.0" fill="rgb(247,97,41)" rx="2" ry="2" />
<text  x="1138.80" y="879.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitLoadOfReferenceLValue (1 samples, 0.04%)</title><rect x="1101.9" y="805" width="0.4" height="15.0" fill="rgb(238,165,24)" rx="2" ry="2" />
<text  x="1104.87" y="815.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord (1 samples, 0.04%)</title><rect x="904.5" y="789" width="0.4" height="15.0" fill="rgb(236,136,18)" rx="2" ry="2" />
<text  x="907.47" y="799.5" ></text>
</g>
<g >
<title>cling::CIFactory::createCI (3 samples, 0.11%)</title><rect x="1069.7" y="805" width="1.3" height="15.0" fill="rgb(249,181,37)" rx="2" ry="2" />
<text  x="1072.71" y="815.5" ></text>
</g>
<g >
<title>strcmp (1 samples, 0.04%)</title><rect x="904.9" y="453" width="0.5" height="15.0" fill="rgb(209,171,26)" rx="2" ry="2" />
<text  x="907.91" y="463.5" ></text>
</g>
<g >
<title>clang::Sema::SubstType (1 samples, 0.04%)</title><rect x="1140.2" y="837" width="0.4" height="15.0" fill="rgb(246,17,30)" rx="2" ry="2" />
<text  x="1143.21" y="847.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (7 samples, 0.26%)</title><rect x="905.8" y="661" width="3.1" height="15.0" fill="rgb(217,147,4)" rx="2" ry="2" />
<text  x="908.80" y="671.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::CodeGenAndEmitDAG (1 samples, 0.04%)</title><rect x="1151.7" y="901" width="0.4" height="15.0" fill="rgb(211,5,14)" rx="2" ry="2" />
<text  x="1154.67" y="911.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="890.8" y="677" width="0.5" height="15.0" fill="rgb(233,27,46)" rx="2" ry="2" />
<text  x="893.81" y="687.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType (2 samples, 0.07%)</title><rect x="1130.1" y="837" width="0.9" height="15.0" fill="rgb(210,136,49)" rx="2" ry="2" />
<text  x="1133.07" y="847.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;, void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;::LookupBucketFor&lt;void const*&gt; (4 samples, 0.15%)</title><rect x="704.9" y="693" width="1.7" height="15.0" fill="rgb(218,202,33)" rx="2" ry="2" />
<text  x="707.87" y="703.5" ></text>
</g>
<g >
<title>clang::Sema::CheckBaseSpecifier (1 samples, 0.04%)</title><rect x="1139.8" y="645" width="0.4" height="15.0" fill="rgb(239,165,52)" rx="2" ry="2" />
<text  x="1142.77" y="655.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;std::add_pointer, (anonymous namespace)::ScalarExprEmitter, llvm::Value*&gt;::Visit (1 samples, 0.04%)</title><rect x="1116.0" y="757" width="0.4" height="15.0" fill="rgb(228,98,27)" rx="2" ry="2" />
<text  x="1118.97" y="767.5" ></text>
</g>
<g >
<title>llvm::LPPassManager::runOnFunction (1 samples, 0.04%)</title><rect x="899.6" y="677" width="0.5" height="15.0" fill="rgb(248,219,10)" rx="2" ry="2" />
<text  x="902.63" y="687.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="21.0" y="549" width="0.5" height="15.0" fill="rgb(215,41,30)" rx="2" ry="2" />
<text  x="24.02" y="559.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.07%)</title><rect x="1175.5" y="773" width="0.8" height="15.0" fill="rgb(224,187,47)" rx="2" ry="2" />
<text  x="1178.46" y="783.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalDefinition (2 samples, 0.07%)</title><rect x="1114.2" y="901" width="0.9" height="15.0" fill="rgb(240,216,19)" rx="2" ry="2" />
<text  x="1117.21" y="911.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::PopCleanupBlocks (1 samples, 0.04%)</title><rect x="1115.5" y="885" width="0.5" height="15.0" fill="rgb(214,57,45)" rx="2" ry="2" />
<text  x="1118.53" y="895.5" ></text>
</g>
<g >
<title>clang::ASTReader::CompleteRedeclChain (1 samples, 0.04%)</title><rect x="1130.5" y="581" width="0.5" height="15.0" fill="rgb(240,35,42)" rx="2" ry="2" />
<text  x="1133.52" y="591.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="21.9" y="485" width="0.4" height="15.0" fill="rgb(226,21,5)" rx="2" ry="2" />
<text  x="24.90" y="495.5" ></text>
</g>
<g >
<title>llvm::MVT::getSizeInBits (1 samples, 0.04%)</title><rect x="1162.7" y="693" width="0.4" height="15.0" fill="rgb(232,77,23)" rx="2" ry="2" />
<text  x="1165.68" y="703.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::setGlobalVisibility (1 samples, 0.04%)</title><rect x="1105.4" y="645" width="0.4" height="15.0" fill="rgb(214,98,21)" rx="2" ry="2" />
<text  x="1108.40" y="655.5" ></text>
</g>
<g >
<title>cling::utils::platform::DLOpen (1 samples, 0.04%)</title><rect x="1094.8" y="901" width="0.5" height="15.0" fill="rgb(251,46,42)" rx="2" ry="2" />
<text  x="1097.82" y="911.5" ></text>
</g>
<g >
<title>llvm::AsmPrinter::doFinalization (2 samples, 0.07%)</title><rect x="830.9" y="597" width="0.9" height="15.0" fill="rgb(221,99,20)" rx="2" ry="2" />
<text  x="833.89" y="607.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitIfStmt (1 samples, 0.04%)</title><rect x="1102.3" y="933" width="0.5" height="15.0" fill="rgb(246,225,18)" rx="2" ry="2" />
<text  x="1105.32" y="943.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::visitCallBase (1 samples, 0.04%)</title><rect x="695.2" y="709" width="0.4" height="15.0" fill="rgb(219,11,44)" rx="2" ry="2" />
<text  x="698.18" y="719.5" ></text>
</g>
<g >
<title>TChain::GetListOfBranches (4 samples, 0.15%)</title><rect x="783.3" y="917" width="1.8" height="15.0" fill="rgb(254,136,31)" rx="2" ry="2" />
<text  x="786.30" y="927.5" ></text>
</g>
<g >
<title>clang::NamedDecl::getLinkageAndVisibility (1 samples, 0.04%)</title><rect x="1105.4" y="629" width="0.4" height="15.0" fill="rgb(227,112,15)" rx="2" ry="2" />
<text  x="1108.40" y="639.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformCallExpr (1 samples, 0.04%)</title><rect x="1135.4" y="773" width="0.4" height="15.0" fill="rgb(218,29,48)" rx="2" ry="2" />
<text  x="1138.36" y="783.5" ></text>
</g>
<g >
<title>llvm::DAGTypeLegalizer::run (2 samples, 0.07%)</title><rect x="1157.4" y="789" width="0.9" height="15.0" fill="rgb(238,100,7)" rx="2" ry="2" />
<text  x="1160.39" y="799.5" ></text>
</g>
<g >
<title>__GI___fork (3 samples, 0.11%)</title><rect x="1069.7" y="757" width="1.3" height="15.0" fill="rgb(251,92,38)" rx="2" ry="2" />
<text  x="1072.71" y="767.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitIfStmt (1 samples, 0.04%)</title><rect x="1116.0" y="837" width="0.4" height="15.0" fill="rgb(219,114,25)" rx="2" ry="2" />
<text  x="1118.97" y="847.5" ></text>
</g>
<g >
<title>llvm::LazyBlockFrequencyInfoPass::runOnFunction (2 samples, 0.07%)</title><rect x="1036.2" y="629" width="0.9" height="15.0" fill="rgb(226,130,22)" rx="2" ry="2" />
<text  x="1039.22" y="639.5" ></text>
</g>
<g >
<title>do_lookup_x (1 samples, 0.04%)</title><rect x="334.7" y="869" width="0.5" height="15.0" fill="rgb(209,105,37)" rx="2" ry="2" />
<text  x="337.74" y="879.5" ></text>
</g>
<g >
<title>clang::Sema::DeduceTemplateArguments (1 samples, 0.04%)</title><rect x="1136.7" y="933" width="0.4" height="15.0" fill="rgb(215,93,25)" rx="2" ry="2" />
<text  x="1139.68" y="943.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.04%)</title><rect x="21.9" y="821" width="0.4" height="15.0" fill="rgb(237,90,41)" rx="2" ry="2" />
<text  x="24.90" y="831.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1020.4" y="789" width="0.4" height="15.0" fill="rgb(205,103,36)" rx="2" ry="2" />
<text  x="1023.36" y="799.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalDefinition (3 samples, 0.11%)</title><rect x="1104.1" y="965" width="1.3" height="15.0" fill="rgb(233,3,18)" rx="2" ry="2" />
<text  x="1107.08" y="975.5" ></text>
</g>
<g >
<title>clang::Sema::CheckBaseSpecifier (1 samples, 0.04%)</title><rect x="1130.5" y="645" width="0.5" height="15.0" fill="rgb(228,102,41)" rx="2" ry="2" />
<text  x="1133.52" y="655.5" ></text>
</g>
<g >
<title>TFile::TFile (2 samples, 0.07%)</title><rect x="783.7" y="869" width="0.9" height="15.0" fill="rgb(231,46,11)" rx="2" ry="2" />
<text  x="786.74" y="879.5" ></text>
</g>
<g >
<title>llvm::Instruction::getNumSuccessors (1 samples, 0.04%)</title><rect x="833.1" y="533" width="0.4" height="15.0" fill="rgb(229,229,2)" rx="2" ry="2" />
<text  x="836.09" y="543.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteDeclContext (1 samples, 0.04%)</title><rect x="1137.1" y="757" width="0.5" height="15.0" fill="rgb(209,215,37)" rx="2" ry="2" />
<text  x="1140.12" y="767.5" ></text>
</g>
<g >
<title>clang::Sema::SubstFunctionDeclType (1 samples, 0.04%)</title><rect x="1138.4" y="949" width="0.5" height="15.0" fill="rgb(233,36,17)" rx="2" ry="2" />
<text  x="1141.45" y="959.5" ></text>
</g>
<g >
<title>processGlobal (1 samples, 0.04%)</title><rect x="1065.3" y="629" width="0.4" height="15.0" fill="rgb(223,193,0)" rx="2" ry="2" />
<text  x="1068.30" y="639.5" ></text>
</g>
<g >
<title>execute_command (5 samples, 0.19%)</title><rect x="10.4" y="613" width="2.2" height="15.0" fill="rgb(224,7,52)" rx="2" ry="2" />
<text  x="13.44" y="623.5" ></text>
</g>
<g >
<title>llvm::AttributeSetNode::get (1 samples, 0.04%)</title><rect x="1111.6" y="613" width="0.4" height="15.0" fill="rgb(238,164,42)" rx="2" ry="2" />
<text  x="1114.57" y="623.5" ></text>
</g>
<g >
<title>clang::TemplateDeclInstantiator::SubstFunctionType (1 samples, 0.04%)</title><rect x="1127.0" y="901" width="0.4" height="15.0" fill="rgb(225,141,17)" rx="2" ry="2" />
<text  x="1129.99" y="911.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTemplateIdType (1 samples, 0.04%)</title><rect x="1138.4" y="741" width="0.5" height="15.0" fill="rgb(218,140,19)" rx="2" ry="2" />
<text  x="1141.45" y="751.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitDecl (1 samples, 0.04%)</title><rect x="1117.3" y="405" width="0.4" height="15.0" fill="rgb(225,134,49)" rx="2" ry="2" />
<text  x="1120.30" y="415.5" ></text>
</g>
<g >
<title>clang::Preprocessor::LookUpIdentifierInfo (1 samples, 0.04%)</title><rect x="1071.0" y="629" width="0.5" height="15.0" fill="rgb(254,120,9)" rx="2" ry="2" />
<text  x="1074.03" y="639.5" ></text>
</g>
<g >
<title>clang::Preprocessor::ReadMacroName (1 samples, 0.04%)</title><rect x="1071.0" y="709" width="0.5" height="15.0" fill="rgb(225,188,51)" rx="2" ry="2" />
<text  x="1074.03" y="719.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::StartFunction (1 samples, 0.04%)</title><rect x="1104.1" y="917" width="0.4" height="15.0" fill="rgb(233,153,33)" rx="2" ry="2" />
<text  x="1107.08" y="927.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (2 samples, 0.07%)</title><rect x="1109.8" y="677" width="0.9" height="15.0" fill="rgb(232,128,9)" rx="2" ry="2" />
<text  x="1112.81" y="687.5" ></text>
</g>
<g >
<title>llvm::SmallVectorBase::grow_pod (1 samples, 0.04%)</title><rect x="830.4" y="517" width="0.5" height="15.0" fill="rgb(237,5,31)" rx="2" ry="2" />
<text  x="833.45" y="527.5" ></text>
</g>
<g >
<title>llvm::Attribute::hasAttribute (1 samples, 0.04%)</title><rect x="865.3" y="501" width="0.4" height="15.0" fill="rgb(234,25,42)" rx="2" ry="2" />
<text  x="868.26" y="511.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1165.8" y="821" width="0.4" height="15.0" fill="rgb(221,85,36)" rx="2" ry="2" />
<text  x="1168.77" y="831.5" ></text>
</g>
<g >
<title>clang::Decl::isOutOfLine (1 samples, 0.04%)</title><rect x="1125.2" y="757" width="0.5" height="15.0" fill="rgb(227,123,26)" rx="2" ry="2" />
<text  x="1128.23" y="767.5" ></text>
</g>
<g >
<title>clang::CXXRecordDecl::DefinitionData::getBasesSlowCase (1 samples, 0.04%)</title><rect x="1140.6" y="853" width="0.5" height="15.0" fill="rgb(214,149,15)" rx="2" ry="2" />
<text  x="1143.65" y="863.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformNestedNameSpecifierLoc (1 samples, 0.04%)</title><rect x="1140.2" y="773" width="0.4" height="15.0" fill="rgb(254,153,21)" rx="2" ry="2" />
<text  x="1143.21" y="783.5" ></text>
</g>
<g >
<title>llvm::TargetFrameLowering::determineCalleeSaves (1 samples, 0.04%)</title><rect x="702.7" y="725" width="0.4" height="15.0" fill="rgb(245,84,46)" rx="2" ry="2" />
<text  x="705.67" y="735.5" ></text>
</g>
<g >
<title>clang::Sema::BuildQualifiedDeclarationNameExpr (2 samples, 0.07%)</title><rect x="1130.1" y="757" width="0.9" height="15.0" fill="rgb(216,39,31)" rx="2" ry="2" />
<text  x="1133.07" y="767.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType (1 samples, 0.04%)</title><rect x="1131.0" y="757" width="0.4" height="15.0" fill="rgb(226,116,44)" rx="2" ry="2" />
<text  x="1133.96" y="767.5" ></text>
</g>
<g >
<title>llvm::MachineFunctionPass::runOnFunction (10 samples, 0.37%)</title><rect x="1159.6" y="773" width="4.4" height="15.0" fill="rgb(213,198,23)" rx="2" ry="2" />
<text  x="1162.60" y="783.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExprs (1 samples, 0.04%)</title><rect x="1133.6" y="805" width="0.4" height="15.0" fill="rgb(254,36,3)" rx="2" ry="2" />
<text  x="1136.60" y="815.5" ></text>
</g>
<g >
<title>llvm::InstructionCombiningPass::runOnFunction (7 samples, 0.26%)</title><rect x="892.1" y="693" width="3.1" height="15.0" fill="rgb(237,176,27)" rx="2" ry="2" />
<text  x="895.14" y="703.5" ></text>
</g>
<g >
<title>clang::Sema::PerformPendingInstantiations (4 samples, 0.15%)</title><rect x="1134.0" y="885" width="1.8" height="15.0" fill="rgb(222,205,35)" rx="2" ry="2" />
<text  x="1137.04" y="895.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::SelectAllBasicBlocks (3 samples, 0.11%)</title><rect x="1155.6" y="869" width="1.4" height="15.0" fill="rgb(219,170,43)" rx="2" ry="2" />
<text  x="1158.63" y="879.5" ></text>
</g>
<g >
<title>clang::TemplateDeclInstantiator::VisitTypeAliasDecl (1 samples, 0.04%)</title><rect x="1124.8" y="869" width="0.4" height="15.0" fill="rgb(252,76,38)" rx="2" ry="2" />
<text  x="1127.79" y="879.5" ></text>
</g>
<g >
<title>clang::Sema::SubstType (1 samples, 0.04%)</title><rect x="1137.6" y="965" width="0.4" height="15.0" fill="rgb(219,160,1)" rx="2" ry="2" />
<text  x="1140.57" y="975.5" ></text>
</g>
<g >
<title>llvm::DAGTypeLegalizer::RemapValue (1 samples, 0.04%)</title><rect x="1152.1" y="709" width="0.4" height="15.0" fill="rgb(222,40,29)" rx="2" ry="2" />
<text  x="1155.11" y="719.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization (1 samples, 0.04%)</title><rect x="1130.5" y="693" width="0.5" height="15.0" fill="rgb(207,203,40)" rx="2" ry="2" />
<text  x="1133.52" y="703.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::Compile (1 samples, 0.04%)</title><rect x="903.6" y="661" width="0.4" height="15.0" fill="rgb(227,134,41)" rx="2" ry="2" />
<text  x="906.59" y="671.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization (1 samples, 0.04%)</title><rect x="1131.4" y="773" width="0.4" height="15.0" fill="rgb(215,171,25)" rx="2" ry="2" />
<text  x="1134.40" y="783.5" ></text>
</g>
<g >
<title>[bash] (39 samples, 1.46%)</title><rect x="1172.4" y="869" width="17.2" height="15.0" fill="rgb(222,95,3)" rx="2" ry="2" />
<text  x="1175.37" y="879.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.04%)</title><rect x="1103.6" y="597" width="0.5" height="15.0" fill="rgb(230,55,47)" rx="2" ry="2" />
<text  x="1106.64" y="607.5" ></text>
</g>
<g >
<title>llvm::cfg::LegalizeUpdates&lt;llvm::BasicBlock*&gt; (1 samples, 0.04%)</title><rect x="899.6" y="581" width="0.5" height="15.0" fill="rgb(232,197,5)" rx="2" ry="2" />
<text  x="902.63" y="591.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddType (1 samples, 0.04%)</title><rect x="1135.8" y="613" width="0.4" height="15.0" fill="rgb(215,41,27)" rx="2" ry="2" />
<text  x="1138.80" y="623.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnModule (2 samples, 0.07%)</title><rect x="684.6" y="661" width="0.9" height="15.0" fill="rgb(223,119,2)" rx="2" ry="2" />
<text  x="687.60" y="671.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformFunctionTypeParams (1 samples, 0.04%)</title><rect x="1129.2" y="805" width="0.4" height="15.0" fill="rgb(206,182,30)" rx="2" ry="2" />
<text  x="1132.19" y="815.5" ></text>
</g>
<g >
<title>llvm::Module::getModuleFlag (1 samples, 0.04%)</title><rect x="1035.8" y="597" width="0.4" height="15.0" fill="rgb(254,14,20)" rx="2" ry="2" />
<text  x="1038.78" y="607.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::createNodeForPHI (1 samples, 0.04%)</title><rect x="1159.2" y="645" width="0.4" height="15.0" fill="rgb(226,209,33)" rx="2" ry="2" />
<text  x="1162.16" y="655.5" ></text>
</g>
<g >
<title>_dlerror_run (1 samples, 0.04%)</title><rect x="1149.5" y="453" width="0.4" height="15.0" fill="rgb(219,109,38)" rx="2" ry="2" />
<text  x="1152.46" y="463.5" ></text>
</g>
<g >
<title>clang::LinkageInfo::merge (1 samples, 0.04%)</title><rect x="1105.8" y="517" width="0.5" height="15.0" fill="rgb(220,70,28)" rx="2" ry="2" />
<text  x="1108.84" y="527.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1143.3" y="821" width="0.4" height="15.0" fill="rgb(242,45,13)" rx="2" ry="2" />
<text  x="1146.29" y="831.5" ></text>
</g>
<g >
<title>llvm::MCObjectStreamer::changeSectionImpl (1 samples, 0.04%)</title><rect x="702.2" y="661" width="0.5" height="15.0" fill="rgb(241,110,46)" rx="2" ry="2" />
<text  x="705.23" y="671.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::GenerateCode (1 samples, 0.04%)</title><rect x="1113.3" y="805" width="0.5" height="15.0" fill="rgb(231,24,44)" rx="2" ry="2" />
<text  x="1116.33" y="815.5" ></text>
</g>
<g >
<title>llvm::LoopInfoWrapperPass::runOnFunction (1 samples, 0.04%)</title><rect x="833.5" y="581" width="0.5" height="15.0" fill="rgb(249,178,32)" rx="2" ry="2" />
<text  x="836.53" y="591.5" ></text>
</g>
<g >
<title>llvm::Attribute::hasAttribute (1 samples, 0.04%)</title><rect x="707.1" y="709" width="0.4" height="15.0" fill="rgb(232,178,22)" rx="2" ry="2" />
<text  x="710.07" y="719.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="11.8" y="357" width="0.4" height="15.0" fill="rgb(244,37,53)" rx="2" ry="2" />
<text  x="14.76" y="367.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (2 samples, 0.07%)</title><rect x="1131.8" y="885" width="0.9" height="15.0" fill="rgb(249,62,42)" rx="2" ry="2" />
<text  x="1134.84" y="895.5" ></text>
</g>
<g >
<title>_dl_relocate_object (4 samples, 0.15%)</title><rect x="1169.7" y="901" width="1.8" height="15.0" fill="rgb(205,191,29)" rx="2" ry="2" />
<text  x="1172.73" y="911.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::StartModule (1 samples, 0.04%)</title><rect x="903.6" y="613" width="0.4" height="15.0" fill="rgb(220,159,1)" rx="2" ry="2" />
<text  x="906.59" y="623.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnModule (1 samples, 0.04%)</title><rect x="1146.8" y="757" width="0.5" height="15.0" fill="rgb(205,43,43)" rx="2" ry="2" />
<text  x="1149.82" y="767.5" ></text>
</g>
<g >
<title>llvm::AttributeList::addAttribute (1 samples, 0.04%)</title><rect x="1105.0" y="885" width="0.4" height="15.0" fill="rgb(240,47,29)" rx="2" ry="2" />
<text  x="1107.96" y="895.5" ></text>
</g>
<g >
<title>_dl_relocate_object (4 samples, 0.15%)</title><rect x="24.1" y="901" width="1.8" height="15.0" fill="rgb(206,75,30)" rx="2" ry="2" />
<text  x="27.10" y="911.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (1 samples, 0.04%)</title><rect x="1158.7" y="901" width="0.5" height="15.0" fill="rgb(251,168,41)" rx="2" ry="2" />
<text  x="1161.72" y="911.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveExternalSymbols (2 samples, 0.07%)</title><rect x="1152.5" y="949" width="0.9" height="15.0" fill="rgb(206,79,46)" rx="2" ry="2" />
<text  x="1155.55" y="959.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::recordAvailableAnalysis (1 samples, 0.04%)</title><rect x="703.1" y="757" width="0.4" height="15.0" fill="rgb(223,157,35)" rx="2" ry="2" />
<text  x="706.11" y="767.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1131.4" y="613" width="0.4" height="15.0" fill="rgb(239,81,27)" rx="2" ry="2" />
<text  x="1134.40" y="623.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTemplateIdType (1 samples, 0.04%)</title><rect x="1138.9" y="837" width="0.4" height="15.0" fill="rgb(211,52,35)" rx="2" ry="2" />
<text  x="1141.89" y="847.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::emitDestroy (1 samples, 0.04%)</title><rect x="1108.0" y="677" width="0.5" height="15.0" fill="rgb(253,16,36)" rx="2" ry="2" />
<text  x="1111.04" y="687.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertRecordDeclType (1 samples, 0.04%)</title><rect x="1117.3" y="741" width="0.4" height="15.0" fill="rgb(253,42,14)" rx="2" ry="2" />
<text  x="1120.30" y="751.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord (1 samples, 0.04%)</title><rect x="1140.6" y="693" width="0.5" height="15.0" fill="rgb(228,11,12)" rx="2" ry="2" />
<text  x="1143.65" y="703.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (3 samples, 0.11%)</title><rect x="1129.6" y="917" width="1.4" height="15.0" fill="rgb(237,184,6)" rx="2" ry="2" />
<text  x="1132.63" y="927.5" ></text>
</g>
<g >
<title>?? (7 samples, 0.26%)</title><rect x="779.3" y="901" width="3.1" height="15.0" fill="rgb(234,92,18)" rx="2" ry="2" />
<text  x="782.34" y="911.5" ></text>
</g>
<g >
<title>llvm::StringMapImpl::LookupBucketFor (1 samples, 0.04%)</title><rect x="1062.7" y="549" width="0.4" height="15.0" fill="rgb(236,229,33)" rx="2" ry="2" />
<text  x="1065.66" y="559.5" ></text>
</g>
<g >
<title>TApplication::ExecuteFile (7 samples, 0.26%)</title><rect x="900.5" y="933" width="3.1" height="15.0" fill="rgb(245,163,5)" rx="2" ry="2" />
<text  x="903.51" y="943.5" ></text>
</g>
<g >
<title>ROOT::Detail::RDF::RLoopManager::GetBranchNames[abi:cxx11] (4 samples, 0.15%)</title><rect x="783.3" y="949" width="1.8" height="15.0" fill="rgb(250,17,0)" rx="2" ry="2" />
<text  x="786.30" y="959.5" ></text>
</g>
<g >
<title>ROOT::VecOps::RVec&lt;float&gt;::operator= (42 samples, 1.57%)</title><rect x="811.1" y="949" width="18.5" height="15.0" fill="rgb(227,206,22)" rx="2" ry="2" />
<text  x="814.06" y="959.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::setNonAliasAttributes (1 samples, 0.04%)</title><rect x="1111.1" y="645" width="0.5" height="15.0" fill="rgb(234,101,34)" rx="2" ry="2" />
<text  x="1114.13" y="655.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteDeclContext (1 samples, 0.04%)</title><rect x="1129.6" y="837" width="0.5" height="15.0" fill="rgb(243,114,8)" rx="2" ry="2" />
<text  x="1132.63" y="847.5" ></text>
</g>
<g >
<title>willNotOverflow (1 samples, 0.04%)</title><rect x="692.1" y="741" width="0.4" height="15.0" fill="rgb(216,158,44)" rx="2" ry="2" />
<text  x="695.09" y="751.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1168.0" y="869" width="0.4" height="15.0" fill="rgb(234,95,21)" rx="2" ry="2" />
<text  x="1170.97" y="879.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="21.9" y="837" width="0.4" height="15.0" fill="rgb(220,153,13)" rx="2" ry="2" />
<text  x="24.90" y="847.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.04%)</title><rect x="786.4" y="853" width="0.4" height="15.0" fill="rgb(249,19,33)" rx="2" ry="2" />
<text  x="789.39" y="863.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTemplateIdType (2 samples, 0.07%)</title><rect x="1123.9" y="965" width="0.9" height="15.0" fill="rgb(244,157,12)" rx="2" ry="2" />
<text  x="1126.91" y="975.5" ></text>
</g>
<g >
<title>ResolveConstructorOverload (2 samples, 0.07%)</title><rect x="1119.5" y="917" width="0.9" height="15.0" fill="rgb(233,63,29)" rx="2" ry="2" />
<text  x="1122.50" y="927.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTemplateArgument (1 samples, 0.04%)</title><rect x="1141.5" y="725" width="0.5" height="15.0" fill="rgb(220,191,44)" rx="2" ry="2" />
<text  x="1144.53" y="735.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.04%)</title><rect x="1131.0" y="725" width="0.4" height="15.0" fill="rgb(241,56,34)" rx="2" ry="2" />
<text  x="1133.96" y="735.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1165.8" y="901" width="0.4" height="15.0" fill="rgb(215,180,26)" rx="2" ry="2" />
<text  x="1168.77" y="911.5" ></text>
</g>
<g >
<title>execute_command_internal (4 samples, 0.15%)</title><rect x="22.3" y="645" width="1.8" height="15.0" fill="rgb(236,88,22)" rx="2" ry="2" />
<text  x="25.34" y="655.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitUnaryOpLValue (1 samples, 0.04%)</title><rect x="1103.2" y="933" width="0.4" height="15.0" fill="rgb(229,115,36)" rx="2" ry="2" />
<text  x="1106.20" y="943.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition (1 samples, 0.04%)</title><rect x="908.9" y="725" width="0.4" height="15.0" fill="rgb(218,229,40)" rx="2" ry="2" />
<text  x="911.88" y="735.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCompoundStmtWithoutScope (1 samples, 0.04%)</title><rect x="1116.0" y="869" width="0.4" height="15.0" fill="rgb(238,205,24)" rx="2" ry="2" />
<text  x="1118.97" y="879.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="831.3" y="533" width="0.5" height="15.0" fill="rgb(209,141,43)" rx="2" ry="2" />
<text  x="834.33" y="543.5" ></text>
</g>
<g >
<title>llvm::sroa::SROALegacyPass::runOnFunction (1 samples, 0.04%)</title><rect x="689.9" y="741" width="0.4" height="15.0" fill="rgb(239,42,27)" rx="2" ry="2" />
<text  x="692.89" y="751.5" ></text>
</g>
<g >
<title>clang::NestedNameSpecifierLocBuilder::Extend (1 samples, 0.04%)</title><rect x="1122.1" y="725" width="0.5" height="15.0" fill="rgb(228,135,9)" rx="2" ry="2" />
<text  x="1125.14" y="735.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;llvm::make_const_ptr, (anonymous namespace)::IntExprEvaluator, bool&gt;::Visit (1 samples, 0.04%)</title><rect x="1123.5" y="853" width="0.4" height="15.0" fill="rgb(237,43,13)" rx="2" ry="2" />
<text  x="1126.47" y="863.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord (1 samples, 0.04%)</title><rect x="1132.7" y="613" width="0.5" height="15.0" fill="rgb(246,220,40)" rx="2" ry="2" />
<text  x="1135.72" y="623.5" ></text>
</g>
<g >
<title>[libz.so.1.2.11] (42 samples, 1.57%)</title><rect x="392.5" y="741" width="18.5" height="15.0" fill="rgb(245,49,38)" rx="2" ry="2" />
<text  x="395.46" y="751.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;llvm::StringRef, std::pair&lt;llvm::StringRef const, clang::GlobalDecl&gt;, std::_Select1st&lt;std::pair&lt;llvm::StringRef const, clang::GlobalDecl&gt; &gt;, std::less&lt;llvm::StringRef&gt;, std::allocator&lt;std::pair&lt;llvm::StringRef const, clang::GlobalDecl&gt; &gt; &gt;::_M_insert_unique&lt;std::_Rb_tree_iterator&lt;std::pair&lt;llvm::StringRef const, clang::GlobalDecl&gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="909.3" y="741" width="0.5" height="15.0" fill="rgb(210,77,26)" rx="2" ry="2" />
<text  x="912.32" y="751.5" ></text>
</g>
<g >
<title>clang::Sema::SubstType (1 samples, 0.04%)</title><rect x="1131.0" y="805" width="0.4" height="15.0" fill="rgb(237,176,23)" rx="2" ry="2" />
<text  x="1133.96" y="815.5" ></text>
</g>
<g >
<title>clang::Sema::BuildCXXNew (1 samples, 0.04%)</title><rect x="1120.8" y="965" width="0.5" height="15.0" fill="rgb(224,68,35)" rx="2" ry="2" />
<text  x="1123.82" y="975.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyld::finalizeWithMemoryManagerLocking (7 samples, 0.26%)</title><rect x="905.8" y="789" width="3.1" height="15.0" fill="rgb(228,70,45)" rx="2" ry="2" />
<text  x="908.80" y="799.5" ></text>
</g>
<g >
<title>ROOT::Internal::VecOps::SmallVectorBase::set_size (7 samples, 0.26%)</title><rect x="825.2" y="901" width="3.0" height="15.0" fill="rgb(253,1,14)" rx="2" ry="2" />
<text  x="828.16" y="911.5" ></text>
</g>
<g >
<title>llvm::MCAsmLayout::ensureValid (1 samples, 0.04%)</title><rect x="905.8" y="549" width="0.4" height="15.0" fill="rgb(227,68,36)" rx="2" ry="2" />
<text  x="908.80" y="559.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke (10 samples, 0.37%)</title><rect x="1159.6" y="853" width="4.4" height="15.0" fill="rgb(242,0,13)" rx="2" ry="2" />
<text  x="1162.60" y="863.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXConstructExpr (1 samples, 0.04%)</title><rect x="1102.8" y="709" width="0.4" height="15.0" fill="rgb(232,64,2)" rx="2" ry="2" />
<text  x="1105.76" y="719.5" ></text>
</g>
<g >
<title>clang::RedeclarableTemplateDecl::loadLazySpecializationsImpl (1 samples, 0.04%)</title><rect x="1142.0" y="581" width="0.4" height="15.0" fill="rgb(240,171,15)" rx="2" ry="2" />
<text  x="1144.97" y="591.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke (4 samples, 0.15%)</title><rect x="1148.1" y="853" width="1.8" height="15.0" fill="rgb(211,93,22)" rx="2" ry="2" />
<text  x="1151.14" y="863.5" ></text>
</g>
<g >
<title>clang::DeclContext::decls_begin (1 samples, 0.04%)</title><rect x="1097.5" y="837" width="0.4" height="15.0" fill="rgb(207,76,54)" rx="2" ry="2" />
<text  x="1100.47" y="847.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="10.9" y="357" width="0.4" height="15.0" fill="rgb(252,71,15)" rx="2" ry="2" />
<text  x="13.88" y="367.5" ></text>
</g>
<g >
<title>IsUserDefinedConversion (2 samples, 0.07%)</title><rect x="1097.9" y="949" width="0.9" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="1100.91" y="959.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformInitializer (1 samples, 0.04%)</title><rect x="1135.4" y="805" width="0.4" height="15.0" fill="rgb(227,226,18)" rx="2" ry="2" />
<text  x="1138.36" y="815.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteDeclContext (1 samples, 0.04%)</title><rect x="1123.9" y="837" width="0.4" height="15.0" fill="rgb(211,71,48)" rx="2" ry="2" />
<text  x="1126.91" y="847.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXMemberOrOperatorMemberCallExpr (1 samples, 0.04%)</title><rect x="1116.0" y="709" width="0.4" height="15.0" fill="rgb(212,74,28)" rx="2" ry="2" />
<text  x="1118.97" y="719.5" ></text>
</g>
<g >
<title>llvm::DominatorTreeWrapperPass::releaseMemory (1 samples, 0.04%)</title><rect x="849.8" y="549" width="0.5" height="15.0" fill="rgb(231,161,53)" rx="2" ry="2" />
<text  x="852.84" y="559.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl (1 samples, 0.04%)</title><rect x="1132.7" y="629" width="0.5" height="15.0" fill="rgb(208,207,36)" rx="2" ry="2" />
<text  x="1135.72" y="639.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyld::finalizeWithMemoryManagerLocking (1 samples, 0.04%)</title><rect x="1147.7" y="853" width="0.4" height="15.0" fill="rgb(221,176,45)" rx="2" ry="2" />
<text  x="1150.70" y="863.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (10 samples, 0.37%)</title><rect x="1159.6" y="789" width="4.4" height="15.0" fill="rgb(219,113,16)" rx="2" ry="2" />
<text  x="1162.60" y="799.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddType (1 samples, 0.04%)</title><rect x="1123.0" y="533" width="0.5" height="15.0" fill="rgb(231,176,37)" rx="2" ry="2" />
<text  x="1126.02" y="543.5" ></text>
</g>
<g >
<title>llvm::MachineFunctionPass::runOnFunction (1 samples, 0.04%)</title><rect x="1146.8" y="725" width="0.5" height="15.0" fill="rgb(231,130,33)" rx="2" ry="2" />
<text  x="1149.82" y="735.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType (1 samples, 0.04%)</title><rect x="1124.3" y="837" width="0.5" height="15.0" fill="rgb(229,20,19)" rx="2" ry="2" />
<text  x="1127.35" y="847.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1092.6" y="757" width="0.5" height="15.0" fill="rgb(236,2,2)" rx="2" ry="2" />
<text  x="1095.62" y="767.5" ></text>
</g>
<g >
<title>[ls] (1 samples, 0.04%)</title><rect x="25.9" y="965" width="0.4" height="15.0" fill="rgb(241,97,46)" rx="2" ry="2" />
<text  x="28.86" y="975.5" ></text>
</g>
<g >
<title>TApplication::ProcessLine (85 samples, 3.17%)</title><rect x="1028.7" y="933" width="37.5" height="15.0" fill="rgb(229,4,48)" rx="2" ry="2" />
<text  x="1031.73" y="943.5" >TAp..</text>
</g>
<g >
<title>__GI__dl_catch_exception (1 samples, 0.04%)</title><rect x="904.9" y="725" width="0.5" height="15.0" fill="rgb(235,59,27)" rx="2" ry="2" />
<text  x="907.91" y="735.5" ></text>
</g>
<g >
<title>all (2,678 samples, 100%)</title><rect x="10.0" y="997" width="1180.0" height="15.0" fill="rgb(254,48,45)" rx="2" ry="2" />
<text  x="13.00" y="1007.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::doFinalization (2 samples, 0.07%)</title><rect x="830.9" y="613" width="0.9" height="15.0" fill="rgb(230,220,26)" rx="2" ry="2" />
<text  x="833.89" y="623.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::SetLLVMFunctionAttributesForDefinition (1 samples, 0.04%)</title><rect x="1112.4" y="789" width="0.5" height="15.0" fill="rgb(206,150,26)" rx="2" ry="2" />
<text  x="1115.45" y="799.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="843.7" y="501" width="0.4" height="15.0" fill="rgb(218,97,44)" rx="2" ry="2" />
<text  x="846.67" y="511.5" ></text>
</g>
<g >
<title>ROOT::Internal::RDF::RJittedAction::Run (9 samples, 0.34%)</title><rect x="778.5" y="917" width="3.9" height="15.0" fill="rgb(220,69,22)" rx="2" ry="2" />
<text  x="781.45" y="927.5" ></text>
</g>
<g >
<title>main (5 samples, 0.19%)</title><rect x="1166.6" y="965" width="2.2" height="15.0" fill="rgb(213,206,27)" rx="2" ry="2" />
<text  x="1169.65" y="975.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddType (1 samples, 0.04%)</title><rect x="1103.2" y="277" width="0.4" height="15.0" fill="rgb(250,37,4)" rx="2" ry="2" />
<text  x="1106.20" y="287.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization (1 samples, 0.04%)</title><rect x="1127.9" y="789" width="0.4" height="15.0" fill="rgb(212,26,23)" rx="2" ry="2" />
<text  x="1130.87" y="799.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit (1 samples, 0.04%)</title><rect x="1132.7" y="821" width="0.5" height="15.0" fill="rgb(254,48,12)" rx="2" ry="2" />
<text  x="1135.72" y="831.5" ></text>
</g>
<g >
<title>llvm::orc::lookupWithLegacyFn&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}::operator()(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;) const::{lambda(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)#1}&gt; (2 samples, 0.07%)</title><rect x="1152.5" y="901" width="0.9" height="15.0" fill="rgb(226,102,41)" rx="2" ry="2" />
<text  x="1155.55" y="911.5" ></text>
</g>
<g >
<title>TBufferFile::ReadObjectAny (1 samples, 0.04%)</title><rect x="905.4" y="853" width="0.4" height="15.0" fill="rgb(244,78,52)" rx="2" ry="2" />
<text  x="908.35" y="863.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1169.3" y="741" width="0.4" height="15.0" fill="rgb(217,31,46)" rx="2" ry="2" />
<text  x="1172.29" y="751.5" ></text>
</g>
<g >
<title>clang::FunctionDecl::getOverloadedOperator (1 samples, 0.04%)</title><rect x="785.1" y="581" width="0.4" height="15.0" fill="rgb(249,79,2)" rx="2" ry="2" />
<text  x="788.06" y="591.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="10.4" y="357" width="0.5" height="15.0" fill="rgb(205,201,24)" rx="2" ry="2" />
<text  x="13.44" y="367.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1143.3" y="773" width="0.4" height="15.0" fill="rgb(227,183,45)" rx="2" ry="2" />
<text  x="1146.29" y="783.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.04%)</title><rect x="1032.3" y="597" width="0.4" height="15.0" fill="rgb(239,66,0)" rx="2" ry="2" />
<text  x="1035.26" y="607.5" ></text>
</g>
<g >
<title>llvm::FoldingSetNodeID::AddString (1 samples, 0.04%)</title><rect x="1123.0" y="485" width="0.5" height="15.0" fill="rgb(216,189,4)" rx="2" ry="2" />
<text  x="1126.02" y="495.5" ></text>
</g>
<g >
<title>llvm::AttrBuilder::addAttribute (1 samples, 0.04%)</title><rect x="1103.6" y="469" width="0.5" height="15.0" fill="rgb(242,114,44)" rx="2" ry="2" />
<text  x="1106.64" y="479.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitUnaryOpLValue (1 samples, 0.04%)</title><rect x="1103.2" y="949" width="0.4" height="15.0" fill="rgb(208,43,49)" rx="2" ry="2" />
<text  x="1106.20" y="959.5" ></text>
</g>
<g >
<title>cling::utils::platform::Popen (8 samples, 0.30%)</title><rect x="1066.2" y="773" width="3.5" height="15.0" fill="rgb(239,225,42)" rx="2" ry="2" />
<text  x="1069.18" y="783.5" ></text>
</g>
<g >
<title>TClass::SetRuntimeProperties (1 samples, 0.04%)</title><rect x="786.4" y="677" width="0.4" height="15.0" fill="rgb(237,212,24)" rx="2" ry="2" />
<text  x="789.39" y="687.5" ></text>
</g>
<g >
<title>cling::Interpreter::DeclareInternal (85 samples, 3.17%)</title><rect x="1028.7" y="741" width="37.5" height="15.0" fill="rgb(250,21,38)" rx="2" ry="2" />
<text  x="1031.73" y="751.5" >cli..</text>
</g>
<g >
<title>clang::ODRHash::AddDecl (1 samples, 0.04%)</title><rect x="1103.2" y="309" width="0.4" height="15.0" fill="rgb(224,141,1)" rx="2" ry="2" />
<text  x="1106.20" y="319.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1124.8" y="821" width="0.4" height="15.0" fill="rgb(206,96,24)" rx="2" ry="2" />
<text  x="1127.79" y="831.5" ></text>
</g>
<g >
<title>llvm::MemorySSAWrapperPass::runOnFunction (1 samples, 0.04%)</title><rect x="1151.2" y="805" width="0.5" height="15.0" fill="rgb(246,5,40)" rx="2" ry="2" />
<text  x="1154.22" y="815.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCompoundStmt (1 samples, 0.04%)</title><rect x="1102.8" y="917" width="0.4" height="15.0" fill="rgb(205,172,51)" rx="2" ry="2" />
<text  x="1105.76" y="927.5" ></text>
</g>
<g >
<title>_dl_map_object_deps (1 samples, 0.04%)</title><rect x="904.9" y="517" width="0.5" height="15.0" fill="rgb(219,37,34)" rx="2" ry="2" />
<text  x="907.91" y="527.5" ></text>
</g>
<g >
<title>clang::Sema::CheckFieldDecl (1 samples, 0.04%)</title><rect x="1131.0" y="933" width="0.4" height="15.0" fill="rgb(221,35,43)" rx="2" ry="2" />
<text  x="1133.96" y="943.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.07%)</title><rect x="1175.5" y="757" width="0.8" height="15.0" fill="rgb(217,112,9)" rx="2" ry="2" />
<text  x="1178.46" y="767.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::SmallDenseMap&lt;unsigned int, llvm::SDValue, 8u, llvm::DenseMapInfo&lt;unsigned int&gt;, llvm::detail::DenseMapPair&lt;unsigned int, llvm::SDValue&gt; &gt;, unsigned int, llvm::SDValue, llvm::DenseMapInfo&lt;unsigned int&gt;, llvm::detail::DenseMapPair&lt;unsigned int, llvm::SDValue&gt; &gt;::moveFromOldBuckets (1 samples, 0.04%)</title><rect x="1157.4" y="693" width="0.4" height="15.0" fill="rgb(252,226,7)" rx="2" ry="2" />
<text  x="1160.39" y="703.5" ></text>
</g>
<g >
<title>llvm::X86RegisterInfo::getFrameRegister (1 samples, 0.04%)</title><rect x="845.9" y="549" width="0.4" height="15.0" fill="rgb(249,138,54)" rx="2" ry="2" />
<text  x="848.87" y="559.5" ></text>
</g>
<g >
<title>main (26 samples, 0.97%)</title><rect x="10.4" y="933" width="11.5" height="15.0" fill="rgb(220,86,43)" rx="2" ry="2" />
<text  x="13.44" y="943.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::LowerArguments (1 samples, 0.04%)</title><rect x="1146.4" y="661" width="0.4" height="15.0" fill="rgb(205,47,16)" rx="2" ry="2" />
<text  x="1149.38" y="671.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1169.3" y="805" width="0.4" height="15.0" fill="rgb(254,57,0)" rx="2" ry="2" />
<text  x="1172.29" y="815.5" ></text>
</g>
<g >
<title>TBufferFile::ReadClassBuffer (1 samples, 0.04%)</title><rect x="905.4" y="693" width="0.4" height="15.0" fill="rgb(237,161,10)" rx="2" ry="2" />
<text  x="908.35" y="703.5" ></text>
</g>
<g >
<title>clang::DeclContext::decls_begin (1 samples, 0.04%)</title><rect x="783.7" y="661" width="0.5" height="15.0" fill="rgb(211,168,52)" rx="2" ry="2" />
<text  x="786.74" y="671.5" ></text>
</g>
<g >
<title>llvm::X86TargetMachine::getSubtargetImpl (2 samples, 0.07%)</title><rect x="1062.2" y="565" width="0.9" height="15.0" fill="rgb(225,14,18)" rx="2" ry="2" />
<text  x="1065.22" y="575.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveRelocations (1 samples, 0.04%)</title><rect x="1146.8" y="885" width="0.5" height="15.0" fill="rgb(206,22,46)" rx="2" ry="2" />
<text  x="1149.82" y="895.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (9 samples, 0.34%)</title><rect x="1109.8" y="853" width="4.0" height="15.0" fill="rgb(228,109,51)" rx="2" ry="2" />
<text  x="1112.81" y="863.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass (1 samples, 0.04%)</title><rect x="1139.8" y="773" width="0.4" height="15.0" fill="rgb(246,52,54)" rx="2" ry="2" />
<text  x="1142.77" y="783.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1172.4" y="725" width="0.4" height="15.0" fill="rgb(253,139,3)" rx="2" ry="2" />
<text  x="1175.37" y="735.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (2 samples, 0.07%)</title><rect x="1093.9" y="805" width="0.9" height="15.0" fill="rgb(245,177,43)" rx="2" ry="2" />
<text  x="1096.94" y="815.5" ></text>
</g>
<g >
<title>clang::Sema::DeduceTemplateArguments (1 samples, 0.04%)</title><rect x="1136.2" y="933" width="0.5" height="15.0" fill="rgb(251,21,3)" rx="2" ry="2" />
<text  x="1139.24" y="943.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition (8 samples, 0.30%)</title><rect x="1105.4" y="965" width="3.5" height="15.0" fill="rgb(221,120,35)" rx="2" ry="2" />
<text  x="1108.40" y="975.5" ></text>
</g>
<g >
<title>clang::Parser::ParseTopLevelDecl (1 samples, 0.04%)</title><rect x="785.1" y="869" width="0.4" height="15.0" fill="rgb(212,34,4)" rx="2" ry="2" />
<text  x="788.06" y="879.5" ></text>
</g>
<g >
<title>llvm::DominatorTreeWrapperPass::releaseMemory (1 samples, 0.04%)</title><rect x="692.5" y="741" width="0.5" height="15.0" fill="rgb(247,159,41)" rx="2" ry="2" />
<text  x="695.53" y="751.5" ></text>
</g>
<g >
<title>llvm::BlockFrequencyInfoImpl&lt;llvm::BasicBlock&gt;::calculate (1 samples, 0.04%)</title><rect x="832.7" y="565" width="0.4" height="15.0" fill="rgb(205,201,9)" rx="2" ry="2" />
<text  x="835.65" y="575.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass (1 samples, 0.04%)</title><rect x="1123.9" y="677" width="0.4" height="15.0" fill="rgb(226,173,10)" rx="2" ry="2" />
<text  x="1126.91" y="687.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.04%)</title><rect x="1140.6" y="965" width="0.5" height="15.0" fill="rgb(209,196,35)" rx="2" ry="2" />
<text  x="1143.65" y="975.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (1 samples, 0.04%)</title><rect x="1131.0" y="917" width="0.4" height="15.0" fill="rgb(228,223,46)" rx="2" ry="2" />
<text  x="1133.96" y="927.5" ></text>
</g>
<g >
<title>operator() (44 samples, 1.64%)</title><rect x="689.0" y="917" width="19.4" height="15.0" fill="rgb(206,113,13)" rx="2" ry="2" />
<text  x="692.01" y="927.5" ></text>
</g>
<g >
<title>clang::Sema::SubstType (1 samples, 0.04%)</title><rect x="1124.3" y="949" width="0.5" height="15.0" fill="rgb(214,85,19)" rx="2" ry="2" />
<text  x="1127.35" y="959.5" ></text>
</g>
<g >
<title>reader_loop (4 samples, 0.15%)</title><rect x="22.3" y="949" width="1.8" height="15.0" fill="rgb(242,165,21)" rx="2" ry="2" />
<text  x="25.34" y="959.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::SetFunctionAttributes (1 samples, 0.04%)</title><rect x="1102.3" y="757" width="0.5" height="15.0" fill="rgb(252,145,26)" rx="2" ry="2" />
<text  x="1105.32" y="767.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1132.3" y="789" width="0.4" height="15.0" fill="rgb(253,91,49)" rx="2" ry="2" />
<text  x="1135.28" y="799.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformNestedNameSpecifierLoc (1 samples, 0.04%)</title><rect x="1138.4" y="789" width="0.5" height="15.0" fill="rgb(238,26,26)" rx="2" ry="2" />
<text  x="1141.45" y="799.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.07%)</title><rect x="1188.7" y="773" width="0.9" height="15.0" fill="rgb(231,27,15)" rx="2" ry="2" />
<text  x="1191.68" y="783.5" ></text>
</g>
<g >
<title>clang::TemplateDeclInstantiator::VisitFieldDecl (1 samples, 0.04%)</title><rect x="1127.9" y="757" width="0.4" height="15.0" fill="rgb(224,200,6)" rx="2" ry="2" />
<text  x="1130.87" y="767.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1020.4" y="821" width="0.4" height="15.0" fill="rgb(220,41,39)" rx="2" ry="2" />
<text  x="1023.36" y="831.5" ></text>
</g>
<g >
<title>cling::MetaSema::actOnxCommand (1 samples, 0.04%)</title><rect x="1027.0" y="805" width="0.4" height="15.0" fill="rgb(209,195,35)" rx="2" ry="2" />
<text  x="1029.97" y="815.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord (1 samples, 0.04%)</title><rect x="1099.2" y="517" width="0.5" height="15.0" fill="rgb(222,202,48)" rx="2" ry="2" />
<text  x="1102.23" y="527.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1172.8" y="725" width="0.5" height="15.0" fill="rgb(232,27,8)" rx="2" ry="2" />
<text  x="1175.82" y="735.5" ></text>
</g>
<g >
<title>llvm::PMTopLevelManager::findAnalysisPass (1 samples, 0.04%)</title><rect x="1032.7" y="581" width="0.4" height="15.0" fill="rgb(240,116,32)" rx="2" ry="2" />
<text  x="1035.70" y="591.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1142.0" y="757" width="0.4" height="15.0" fill="rgb(250,112,40)" rx="2" ry="2" />
<text  x="1144.97" y="767.5" ></text>
</g>
<g >
<title>cling::MetaSema::actOnLCommand (24 samples, 0.90%)</title><rect x="889.9" y="837" width="10.6" height="15.0" fill="rgb(219,57,3)" rx="2" ry="2" />
<text  x="892.93" y="847.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.04%)</title><rect x="1103.6" y="805" width="0.5" height="15.0" fill="rgb(234,208,37)" rx="2" ry="2" />
<text  x="1106.64" y="815.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1124.3" y="901" width="0.5" height="15.0" fill="rgb(251,192,13)" rx="2" ry="2" />
<text  x="1127.35" y="911.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.04%)</title><rect x="1141.1" y="869" width="0.4" height="15.0" fill="rgb(247,155,6)" rx="2" ry="2" />
<text  x="1144.09" y="879.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::PopCleanupBlocks (1 samples, 0.04%)</title><rect x="1116.4" y="901" width="0.5" height="15.0" fill="rgb(244,107,17)" rx="2" ry="2" />
<text  x="1119.42" y="911.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::visitICmpInst (1 samples, 0.04%)</title><rect x="1027.0" y="597" width="0.4" height="15.0" fill="rgb(230,18,16)" rx="2" ry="2" />
<text  x="1029.97" y="607.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass (2 samples, 0.07%)</title><rect x="1131.8" y="949" width="0.9" height="15.0" fill="rgb(210,72,6)" rx="2" ry="2" />
<text  x="1134.84" y="959.5" ></text>
</g>
<g >
<title>llvm::PassRegistry::getPassInfo (1 samples, 0.04%)</title><rect x="850.3" y="533" width="0.4" height="15.0" fill="rgb(244,187,27)" rx="2" ry="2" />
<text  x="853.28" y="543.5" ></text>
</g>
<g >
<title>llvm::DAGTypeLegalizer::AnalyzeNewValue (1 samples, 0.04%)</title><rect x="1157.8" y="741" width="0.5" height="15.0" fill="rgb(229,44,21)" rx="2" ry="2" />
<text  x="1160.83" y="751.5" ></text>
</g>
<g >
<title>clang::VarDecl::isUsableInConstantExpressions (1 samples, 0.04%)</title><rect x="1125.2" y="853" width="0.5" height="15.0" fill="rgb(249,30,0)" rx="2" ry="2" />
<text  x="1128.23" y="863.5" ></text>
</g>
<g >
<title>TRint::ProcessLineNr (85 samples, 3.17%)</title><rect x="1028.7" y="949" width="37.5" height="15.0" fill="rgb(247,58,31)" rx="2" ry="2" />
<text  x="1031.73" y="959.5" >TRi..</text>
</g>
<g >
<title>clang::ASTDeclReader::Visit (1 samples, 0.04%)</title><rect x="1097.5" y="741" width="0.4" height="15.0" fill="rgb(237,21,25)" rx="2" ry="2" />
<text  x="1100.47" y="751.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.04%)</title><rect x="1123.9" y="901" width="0.4" height="15.0" fill="rgb(240,224,26)" rx="2" ry="2" />
<text  x="1126.91" y="911.5" ></text>
</g>
<g >
<title>combineInstructionsOverFunction (4 samples, 0.15%)</title><rect x="695.2" y="741" width="1.7" height="15.0" fill="rgb(232,198,28)" rx="2" ry="2" />
<text  x="698.18" y="751.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl (1 samples, 0.04%)</title><rect x="1123.0" y="917" width="0.5" height="15.0" fill="rgb(215,82,23)" rx="2" ry="2" />
<text  x="1126.02" y="927.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1097.0" y="773" width="0.5" height="15.0" fill="rgb(230,196,32)" rx="2" ry="2" />
<text  x="1100.03" y="783.5" ></text>
</g>
<g >
<title>llvm::Instruction::eraseFromParent (1 samples, 0.04%)</title><rect x="1029.2" y="549" width="0.4" height="15.0" fill="rgb(226,117,11)" rx="2" ry="2" />
<text  x="1032.17" y="559.5" ></text>
</g>
<g >
<title>clang::Sema::MarkFunctionReferenced (1 samples, 0.04%)</title><rect x="1121.3" y="869" width="0.4" height="15.0" fill="rgb(220,85,21)" rx="2" ry="2" />
<text  x="1124.26" y="879.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetExternalCXXBaseSpecifiers (1 samples, 0.04%)</title><rect x="1140.6" y="821" width="0.5" height="15.0" fill="rgb(218,40,1)" rx="2" ry="2" />
<text  x="1143.65" y="831.5" ></text>
</g>
<g >
<title>clang::RedeclarableTemplateDecl::addSpecializationImpl&lt;clang::ClassTemplateDecl, clang::ClassTemplateSpecializationDecl&gt; (1 samples, 0.04%)</title><rect x="1140.2" y="709" width="0.4" height="15.0" fill="rgb(213,174,16)" rx="2" ry="2" />
<text  x="1143.21" y="719.5" ></text>
</g>
<g >
<title>TClingDataMemberInfo::TClingDataMemberInfo (1 samples, 0.04%)</title><rect x="905.4" y="501" width="0.4" height="15.0" fill="rgb(209,152,21)" rx="2" ry="2" />
<text  x="908.35" y="511.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTemplateIdType (1 samples, 0.04%)</title><rect x="1141.5" y="789" width="0.5" height="15.0" fill="rgb(238,100,36)" rx="2" ry="2" />
<text  x="1144.53" y="799.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1168.0" y="901" width="0.4" height="15.0" fill="rgb(244,137,1)" rx="2" ry="2" />
<text  x="1170.97" y="911.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (11 samples, 0.41%)</title><rect x="1056.5" y="597" width="4.8" height="15.0" fill="rgb(228,68,44)" rx="2" ry="2" />
<text  x="1059.49" y="607.5" ></text>
</g>
<g >
<title>TKey::ReadObjectAny (1 samples, 0.04%)</title><rect x="905.4" y="917" width="0.4" height="15.0" fill="rgb(228,98,18)" rx="2" ry="2" />
<text  x="908.35" y="927.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitStoreOfScalar (1 samples, 0.04%)</title><rect x="1116.9" y="869" width="0.4" height="15.0" fill="rgb(225,196,15)" rx="2" ry="2" />
<text  x="1119.86" y="879.5" ></text>
</g>
<g >
<title>llvm::X86TargetLowering::LowerCall (2 samples, 0.07%)</title><rect x="1153.4" y="917" width="0.9" height="15.0" fill="rgb(205,174,9)" rx="2" ry="2" />
<text  x="1156.43" y="927.5" ></text>
</g>
<g >
<title>combineInstructionsOverFunction (1 samples, 0.04%)</title><rect x="901.4" y="645" width="0.4" height="15.0" fill="rgb(234,115,28)" rx="2" ry="2" />
<text  x="904.39" y="655.5" ></text>
</g>
<g >
<title>clang::Sema::SubstExpr (1 samples, 0.04%)</title><rect x="1123.9" y="917" width="0.4" height="15.0" fill="rgb(254,90,42)" rx="2" ry="2" />
<text  x="1126.91" y="927.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass (1 samples, 0.04%)</title><rect x="1123.0" y="885" width="0.5" height="15.0" fill="rgb(220,189,13)" rx="2" ry="2" />
<text  x="1126.02" y="895.5" ></text>
</g>
<g >
<title>non-virtual thunk to (anonymous namespace)::MPPassManager::~MPPassManager() (1 samples, 0.04%)</title><rect x="904.0" y="613" width="0.5" height="15.0" fill="rgb(229,62,39)" rx="2" ry="2" />
<text  x="907.03" y="623.5" ></text>
</g>
<g >
<title>TCling::ProcessLineSynch (1 samples, 0.04%)</title><rect x="1027.4" y="901" width="0.4" height="15.0" fill="rgb(211,89,24)" rx="2" ry="2" />
<text  x="1030.41" y="911.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1172.8" y="757" width="0.5" height="15.0" fill="rgb(227,4,54)" rx="2" ry="2" />
<text  x="1175.82" y="767.5" ></text>
</g>
<g >
<title>rebuildPotentialResultsAsNonOdrUsed (1 samples, 0.04%)</title><rect x="1125.2" y="885" width="0.5" height="15.0" fill="rgb(246,136,37)" rx="2" ry="2" />
<text  x="1128.23" y="895.5" ></text>
</g>
<g >
<title>llvm::AttrBuilder::removeAttribute (1 samples, 0.04%)</title><rect x="1110.7" y="597" width="0.4" height="15.0" fill="rgb(214,153,29)" rx="2" ry="2" />
<text  x="1113.69" y="607.5" ></text>
</g>
<g >
<title>clang::MultiplexConsumer::HandleCXXStaticMemberVarInstantiation (1 samples, 0.04%)</title><rect x="1141.1" y="693" width="0.4" height="15.0" fill="rgb(246,143,12)" rx="2" ry="2" />
<text  x="1144.09" y="703.5" ></text>
</g>
<g >
<title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::MachineBasicBlock, true&gt; &gt;::CalculateFromScratch (1 samples, 0.04%)</title><rect x="842.8" y="549" width="0.4" height="15.0" fill="rgb(228,1,12)" rx="2" ry="2" />
<text  x="845.79" y="559.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::Compile (1 samples, 0.04%)</title><rect x="1027.4" y="741" width="0.4" height="15.0" fill="rgb(238,75,49)" rx="2" ry="2" />
<text  x="1030.41" y="751.5" ></text>
</g>
<g >
<title>__GI_setlocale (1 samples, 0.04%)</title><rect x="1168.8" y="917" width="0.5" height="15.0" fill="rgb(254,105,47)" rx="2" ry="2" />
<text  x="1171.85" y="927.5" ></text>
</g>
<g >
<title>clang::Sema::PerformPendingInstantiations (1 samples, 0.04%)</title><rect x="785.1" y="789" width="0.4" height="15.0" fill="rgb(233,30,1)" rx="2" ry="2" />
<text  x="788.06" y="799.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1187.4" y="741" width="0.4" height="15.0" fill="rgb(251,115,46)" rx="2" ry="2" />
<text  x="1190.36" y="751.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (1 samples, 0.04%)</title><rect x="1128.8" y="821" width="0.4" height="15.0" fill="rgb(234,192,13)" rx="2" ry="2" />
<text  x="1131.75" y="831.5" ></text>
</g>
<g >
<title>llvm::orc::JITSymbolResolverAdapter::lookup (2 samples, 0.07%)</title><rect x="1144.2" y="869" width="0.9" height="15.0" fill="rgb(230,178,0)" rx="2" ry="2" />
<text  x="1147.17" y="879.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::CodeGenAndEmitDAG (1 samples, 0.04%)</title><rect x="1154.3" y="949" width="0.4" height="15.0" fill="rgb(210,27,48)" rx="2" ry="2" />
<text  x="1157.31" y="959.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (6 samples, 0.22%)</title><rect x="1169.3" y="933" width="2.6" height="15.0" fill="rgb(218,88,23)" rx="2" ry="2" />
<text  x="1172.29" y="943.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="846.3" y="565" width="0.5" height="15.0" fill="rgb(205,4,19)" rx="2" ry="2" />
<text  x="849.31" y="575.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::runStaticInitializersOnce (1 samples, 0.04%)</title><rect x="1151.2" y="853" width="0.5" height="15.0" fill="rgb(243,169,6)" rx="2" ry="2" />
<text  x="1154.22" y="863.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertTypeForMem (1 samples, 0.04%)</title><rect x="1117.7" y="517" width="0.5" height="15.0" fill="rgb(235,180,15)" rx="2" ry="2" />
<text  x="1120.74" y="527.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord (1 samples, 0.04%)</title><rect x="786.4" y="197" width="0.4" height="15.0" fill="rgb(227,90,1)" rx="2" ry="2" />
<text  x="789.39" y="207.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition (2 samples, 0.07%)</title><rect x="1104.1" y="949" width="0.9" height="15.0" fill="rgb(211,43,9)" rx="2" ry="2" />
<text  x="1107.08" y="959.5" ></text>
</g>
<g >
<title>clang::ASTReader::loadDeclUpdateRecords (1 samples, 0.04%)</title><rect x="1118.2" y="725" width="0.4" height="15.0" fill="rgb(226,43,6)" rx="2" ry="2" />
<text  x="1121.18" y="735.5" ></text>
</g>
<g >
<title>execute_command_internal (4 samples, 0.15%)</title><rect x="22.3" y="805" width="1.8" height="15.0" fill="rgb(254,93,42)" rx="2" ry="2" />
<text  x="25.34" y="815.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::visitPHINode (1 samples, 0.04%)</title><rect x="1050.8" y="565" width="0.4" height="15.0" fill="rgb(207,54,23)" rx="2" ry="2" />
<text  x="1053.76" y="575.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="21.5" y="501" width="0.4" height="15.0" fill="rgb(240,89,49)" rx="2" ry="2" />
<text  x="24.46" y="511.5" ></text>
</g>
<g >
<title>llvm::isSafeToDestroyConstant (1 samples, 0.04%)</title><rect x="1065.3" y="565" width="0.4" height="15.0" fill="rgb(210,213,43)" rx="2" ry="2" />
<text  x="1068.30" y="575.5" ></text>
</g>
<g >
<title>llvm::MCELFStreamer::ChangeSection (1 samples, 0.04%)</title><rect x="702.2" y="677" width="0.5" height="15.0" fill="rgb(217,211,13)" rx="2" ry="2" />
<text  x="705.23" y="687.5" ></text>
</g>
<g >
<title>cling::MetaSema::actOnxCommand (2 samples, 0.07%)</title><rect x="1150.8" y="965" width="0.9" height="15.0" fill="rgb(220,84,14)" rx="2" ry="2" />
<text  x="1153.78" y="975.5" ></text>
</g>
<g >
<title>clang::ClassTemplateDecl::getPartialSpecializations (1 samples, 0.04%)</title><rect x="1142.0" y="613" width="0.4" height="15.0" fill="rgb(251,102,44)" rx="2" ry="2" />
<text  x="1144.97" y="623.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="12.2" y="357" width="0.4" height="15.0" fill="rgb(244,91,2)" rx="2" ry="2" />
<text  x="15.20" y="367.5" ></text>
</g>
<g >
<title>llvm::AttributeImpl::hasAttribute (1 samples, 0.04%)</title><rect x="845.4" y="517" width="0.5" height="15.0" fill="rgb(212,212,20)" rx="2" ry="2" />
<text  x="848.43" y="527.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateMemInitializers (1 samples, 0.04%)</title><rect x="1133.6" y="885" width="0.4" height="15.0" fill="rgb(227,182,13)" rx="2" ry="2" />
<text  x="1136.60" y="895.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::codegenCXXStructor (1 samples, 0.04%)</title><rect x="1105.0" y="949" width="0.4" height="15.0" fill="rgb(251,71,36)" rx="2" ry="2" />
<text  x="1107.96" y="959.5" ></text>
</g>
<g >
<title>getMangledNameImpl (2 samples, 0.07%)</title><rect x="1108.9" y="917" width="0.9" height="15.0" fill="rgb(210,109,14)" rx="2" ry="2" />
<text  x="1111.92" y="927.5" ></text>
</g>
<g >
<title>clang::ASTReader::loadPendingDeclChain (1 samples, 0.04%)</title><rect x="1104.5" y="837" width="0.5" height="15.0" fill="rgb(253,194,3)" rx="2" ry="2" />
<text  x="1107.52" y="847.5" ></text>
</g>
<g >
<title>clang::Sema::AddBuiltinOperatorCandidates (1 samples, 0.04%)</title><rect x="1125.7" y="949" width="0.4" height="15.0" fill="rgb(224,56,51)" rx="2" ry="2" />
<text  x="1128.67" y="959.5" ></text>
</g>
<g >
<title>clang::Sema::CompareReferenceRelationship (1 samples, 0.04%)</title><rect x="1126.5" y="885" width="0.5" height="15.0" fill="rgb(213,205,53)" rx="2" ry="2" />
<text  x="1129.55" y="895.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::executeWrapper (1 samples, 0.04%)</title><rect x="785.5" y="885" width="0.4" height="15.0" fill="rgb(230,66,29)" rx="2" ry="2" />
<text  x="788.50" y="895.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1143.7" y="869" width="0.5" height="15.0" fill="rgb(236,218,4)" rx="2" ry="2" />
<text  x="1146.73" y="879.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::SelectAllBasicBlocks (1 samples, 0.04%)</title><rect x="1144.2" y="709" width="0.4" height="15.0" fill="rgb(210,15,40)" rx="2" ry="2" />
<text  x="1147.17" y="719.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.07%)</title><rect x="1096.1" y="789" width="0.9" height="15.0" fill="rgb(205,75,42)" rx="2" ry="2" />
<text  x="1099.15" y="799.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddTemplateArgument (1 samples, 0.04%)</title><rect x="1123.0" y="613" width="0.5" height="15.0" fill="rgb(247,178,4)" rx="2" ry="2" />
<text  x="1126.02" y="623.5" ></text>
</g>
<g >
<title>llvm::removeUnreachableBlocks (1 samples, 0.04%)</title><rect x="900.9" y="613" width="0.5" height="15.0" fill="rgb(221,166,22)" rx="2" ry="2" />
<text  x="903.95" y="623.5" ></text>
</g>
<g >
<title>addPassesToGenerateCode (1 samples, 0.04%)</title><rect x="830.4" y="613" width="0.5" height="15.0" fill="rgb(250,10,42)" rx="2" ry="2" />
<text  x="833.45" y="623.5" ></text>
</g>
<g >
<title>llvm::InstructionCombiningPass::runOnFunction (4 samples, 0.15%)</title><rect x="1049.4" y="613" width="1.8" height="15.0" fill="rgb(240,168,8)" rx="2" ry="2" />
<text  x="1052.44" y="623.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallExpr (1 samples, 0.04%)</title><rect x="1105.4" y="757" width="0.4" height="15.0" fill="rgb(233,31,36)" rx="2" ry="2" />
<text  x="1108.40" y="767.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject&lt;std::shared_ptr&lt;llvm::RuntimeDyld::MemoryManager&gt; &gt;::getSymbolMaterializer(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda()#1}&gt;::_M_invoke (10 samples, 0.37%)</title><rect x="1159.6" y="965" width="4.4" height="15.0" fill="rgb(214,190,29)" rx="2" ry="2" />
<text  x="1162.60" y="975.5" ></text>
</g>
<g >
<title>TClass::Property (1 samples, 0.04%)</title><rect x="786.4" y="613" width="0.4" height="15.0" fill="rgb(254,49,6)" rx="2" ry="2" />
<text  x="789.39" y="623.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteDeclContext (1 samples, 0.04%)</title><rect x="1131.8" y="725" width="0.5" height="15.0" fill="rgb(229,4,44)" rx="2" ry="2" />
<text  x="1134.84" y="735.5" ></text>
</g>
<g >
<title>cling::Interpreter::loadHeader (5 samples, 0.19%)</title><rect x="908.9" y="853" width="2.2" height="15.0" fill="rgb(208,156,45)" rx="2" ry="2" />
<text  x="911.88" y="863.5" ></text>
</g>
<g >
<title>llvm::MachineFunctionPass::runOnFunction (2 samples, 0.07%)</title><rect x="1145.9" y="709" width="0.9" height="15.0" fill="rgb(251,45,52)" rx="2" ry="2" />
<text  x="1148.94" y="719.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateArgument (3 samples, 0.11%)</title><rect x="1142.0" y="965" width="1.3" height="15.0" fill="rgb(217,129,23)" rx="2" ry="2" />
<text  x="1144.97" y="975.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType (1 samples, 0.04%)</title><rect x="1127.4" y="821" width="0.5" height="15.0" fill="rgb(214,95,35)" rx="2" ry="2" />
<text  x="1130.43" y="831.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentScopeDeclRefExpr (1 samples, 0.04%)</title><rect x="1128.3" y="741" width="0.5" height="15.0" fill="rgb(227,159,25)" rx="2" ry="2" />
<text  x="1131.31" y="751.5" ></text>
</g>
<g >
<title>cling::Interpreter::loadHeader (24 samples, 0.90%)</title><rect x="889.9" y="821" width="10.6" height="15.0" fill="rgb(234,146,38)" rx="2" ry="2" />
<text  x="892.93" y="831.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTSIInObjectScope (1 samples, 0.04%)</title><rect x="1138.4" y="885" width="0.5" height="15.0" fill="rgb(246,160,24)" rx="2" ry="2" />
<text  x="1141.45" y="895.5" ></text>
</g>
<g >
<title>llvm::PassRegistry::getPassInfo (1 samples, 0.04%)</title><rect x="697.8" y="725" width="0.5" height="15.0" fill="rgb(243,96,37)" rx="2" ry="2" />
<text  x="700.82" y="735.5" ></text>
</g>
<g >
<title>set_default_locale (1 samples, 0.04%)</title><rect x="1189.6" y="917" width="0.4" height="15.0" fill="rgb(228,43,41)" rx="2" ry="2" />
<text  x="1192.56" y="927.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallArg (1 samples, 0.04%)</title><rect x="1101.4" y="917" width="0.5" height="15.0" fill="rgb(252,172,51)" rx="2" ry="2" />
<text  x="1104.43" y="927.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::visitStoreInst (1 samples, 0.04%)</title><rect x="901.4" y="613" width="0.4" height="15.0" fill="rgb(239,6,39)" rx="2" ry="2" />
<text  x="904.39" y="623.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::run (4 samples, 0.15%)</title><rect x="695.2" y="725" width="1.7" height="15.0" fill="rgb(232,12,53)" rx="2" ry="2" />
<text  x="698.18" y="735.5" ></text>
</g>
<g >
<title>clang::MakeDeductionFailureInfo (1 samples, 0.04%)</title><rect x="1119.1" y="885" width="0.4" height="15.0" fill="rgb(233,13,20)" rx="2" ry="2" />
<text  x="1122.06" y="895.5" ></text>
</g>
<g >
<title>operator() (1 samples, 0.04%)</title><rect x="1149.5" y="549" width="0.4" height="15.0" fill="rgb(231,29,31)" rx="2" ry="2" />
<text  x="1152.46" y="559.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.11%)</title><rect x="1069.7" y="709" width="1.3" height="15.0" fill="rgb(242,111,22)" rx="2" ry="2" />
<text  x="1072.71" y="719.5" ></text>
</g>
<g >
<title>TCling::Load (1 samples, 0.04%)</title><rect x="1149.5" y="517" width="0.4" height="15.0" fill="rgb(228,174,10)" rx="2" ry="2" />
<text  x="1152.46" y="527.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (1 samples, 0.04%)</title><rect x="785.5" y="805" width="0.4" height="15.0" fill="rgb(254,137,19)" rx="2" ry="2" />
<text  x="788.50" y="815.5" ></text>
</g>
<g >
<title>TUnixSystem::Exit (2 samples, 0.07%)</title><rect x="1027.8" y="933" width="0.9" height="15.0" fill="rgb(242,123,9)" rx="2" ry="2" />
<text  x="1030.85" y="943.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.07%)</title><rect x="1164.9" y="837" width="0.9" height="15.0" fill="rgb(206,141,27)" rx="2" ry="2" />
<text  x="1167.88" y="847.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl (1 samples, 0.04%)</title><rect x="1099.2" y="533" width="0.5" height="15.0" fill="rgb(215,124,46)" rx="2" ry="2" />
<text  x="1102.23" y="543.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.07%)</title><rect x="1096.1" y="821" width="0.9" height="15.0" fill="rgb(230,77,18)" rx="2" ry="2" />
<text  x="1099.15" y="831.5" ></text>
</g>
<g >
<title>TPluginManager::LoadHandlerMacros (1 samples, 0.04%)</title><rect x="1027.0" y="965" width="0.4" height="15.0" fill="rgb(251,139,7)" rx="2" ry="2" />
<text  x="1029.97" y="975.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (82 samples, 3.06%)</title><rect x="830.9" y="629" width="36.1" height="15.0" fill="rgb(220,98,22)" rx="2" ry="2" />
<text  x="833.89" y="639.5" >llv..</text>
</g>
<g >
<title>llvm::isMallocOrCallocLikeFn (1 samples, 0.04%)</title><rect x="1150.3" y="629" width="0.5" height="15.0" fill="rgb(213,76,45)" rx="2" ry="2" />
<text  x="1153.34" y="639.5" ></text>
</g>
<g >
<title>TClass::CallShowMembers (1 samples, 0.04%)</title><rect x="784.2" y="741" width="0.4" height="15.0" fill="rgb(213,28,41)" rx="2" ry="2" />
<text  x="787.18" y="751.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::commitTransaction (1 samples, 0.04%)</title><rect x="1027.4" y="725" width="0.4" height="15.0" fill="rgb(209,157,23)" rx="2" ry="2" />
<text  x="1030.41" y="735.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit (1 samples, 0.04%)</title><rect x="1132.7" y="597" width="0.5" height="15.0" fill="rgb(222,77,41)" rx="2" ry="2" />
<text  x="1135.72" y="607.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1169.3" y="853" width="0.4" height="15.0" fill="rgb(213,228,13)" rx="2" ry="2" />
<text  x="1172.29" y="863.5" ></text>
</g>
<g >
<title>llvm::LoopInfoBase&lt;llvm::BasicBlock, llvm::Loop&gt;::analyze (1 samples, 0.04%)</title><rect x="1051.6" y="597" width="0.5" height="15.0" fill="rgb(217,160,1)" rx="2" ry="2" />
<text  x="1054.64" y="607.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="10.4" y="389" width="0.5" height="15.0" fill="rgb(224,19,17)" rx="2" ry="2" />
<text  x="13.44" y="399.5" ></text>
</g>
<g >
<title>TKey::ReadObj (1 samples, 0.04%)</title><rect x="783.3" y="869" width="0.4" height="15.0" fill="rgb(240,32,1)" rx="2" ry="2" />
<text  x="786.30" y="879.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt;, llvm::DenseMapInfo&lt;llvm::BasicBlock*&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt; &gt; &gt;, llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt;, llvm::DenseMapInfo&lt;llvm::BasicBlock*&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt; &gt; &gt;::clear (1 samples, 0.04%)</title><rect x="849.8" y="533" width="0.5" height="15.0" fill="rgb(245,18,12)" rx="2" ry="2" />
<text  x="852.84" y="543.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="1069.3" y="741" width="0.4" height="15.0" fill="rgb(251,167,28)" rx="2" ry="2" />
<text  x="1072.27" y="751.5" ></text>
</g>
<g >
<title>clang::Sema::BuildQualifiedDeclarationNameExpr (1 samples, 0.04%)</title><rect x="1139.3" y="837" width="0.5" height="15.0" fill="rgb(207,121,35)" rx="2" ry="2" />
<text  x="1142.33" y="847.5" ></text>
</g>
<g >
<title>TryConstructorInitialization (1 samples, 0.04%)</title><rect x="1119.1" y="933" width="0.4" height="15.0" fill="rgb(208,179,11)" rx="2" ry="2" />
<text  x="1122.06" y="943.5" ></text>
</g>
<g >
<title>llvm::MemorySSA::buildMemorySSA (1 samples, 0.04%)</title><rect x="1150.3" y="725" width="0.5" height="15.0" fill="rgb(221,196,1)" rx="2" ry="2" />
<text  x="1153.34" y="735.5" ></text>
</g>
<g >
<title>cling::Interpreter::loadHeader (1 samples, 0.04%)</title><rect x="1027.0" y="773" width="0.4" height="15.0" fill="rgb(238,5,7)" rx="2" ry="2" />
<text  x="1029.97" y="783.5" ></text>
</g>
<g >
<title>uncompress2 (1 samples, 0.04%)</title><rect x="1137.6" y="517" width="0.4" height="15.0" fill="rgb(254,179,19)" rx="2" ry="2" />
<text  x="1140.57" y="527.5" ></text>
</g>
<g >
<title>clang::Sema::SubstInitializer (1 samples, 0.04%)</title><rect x="1134.0" y="805" width="0.5" height="15.0" fill="rgb(216,56,30)" rx="2" ry="2" />
<text  x="1137.04" y="815.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::InfoRec, llvm::DenseMapInfo&lt;llvm::BasicBlock*&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::InfoRec&gt; &gt;, llvm::BasicBlock*, llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::InfoRec, llvm::DenseMapInfo&lt;llvm::BasicBlock*&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::InfoRec&gt; &gt;::FindAndConstruct (1 samples, 0.04%)</title><rect x="1049.0" y="565" width="0.4" height="15.0" fill="rgb(237,116,27)" rx="2" ry="2" />
<text  x="1052.00" y="575.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnModule (1 samples, 0.04%)</title><rect x="1150.8" y="725" width="0.4" height="15.0" fill="rgb(244,142,39)" rx="2" ry="2" />
<text  x="1153.78" y="735.5" ></text>
</g>
<g >
<title>_IO_new_proc_open (4 samples, 0.15%)</title><rect x="1066.6" y="741" width="1.8" height="15.0" fill="rgb(221,110,14)" rx="2" ry="2" />
<text  x="1069.62" y="751.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (1 samples, 0.04%)</title><rect x="1151.2" y="821" width="0.5" height="15.0" fill="rgb(217,153,11)" rx="2" ry="2" />
<text  x="1154.22" y="831.5" ></text>
</g>
<g >
<title>clang::Sema::SubstBaseSpecifiers (1 samples, 0.04%)</title><rect x="1139.8" y="661" width="0.4" height="15.0" fill="rgb(230,126,43)" rx="2" ry="2" />
<text  x="1142.77" y="671.5" ></text>
</g>
<g >
<title>getDeclLanguageLinkage&lt;clang::FunctionDecl&gt; (1 samples, 0.04%)</title><rect x="1109.4" y="885" width="0.4" height="15.0" fill="rgb(208,27,24)" rx="2" ry="2" />
<text  x="1112.37" y="895.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="18.8" y="261" width="0.5" height="15.0" fill="rgb(241,183,47)" rx="2" ry="2" />
<text  x="21.81" y="271.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization (1 samples, 0.04%)</title><rect x="1155.2" y="837" width="0.4" height="15.0" fill="rgb(253,204,38)" rx="2" ry="2" />
<text  x="1158.19" y="847.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.26%)</title><rect x="1184.7" y="757" width="3.1" height="15.0" fill="rgb(217,154,29)" rx="2" ry="2" />
<text  x="1187.71" y="767.5" ></text>
</g>
<g >
<title>llvm::Function::dropAllReferences (1 samples, 0.04%)</title><rect x="1028.3" y="709" width="0.4" height="15.0" fill="rgb(253,200,21)" rx="2" ry="2" />
<text  x="1031.29" y="719.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXConstructorCall (1 samples, 0.04%)</title><rect x="1107.6" y="709" width="0.4" height="15.0" fill="rgb(218,154,19)" rx="2" ry="2" />
<text  x="1110.60" y="719.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallExpr (1 samples, 0.04%)</title><rect x="1107.2" y="821" width="0.4" height="15.0" fill="rgb(215,153,50)" rx="2" ry="2" />
<text  x="1110.16" y="831.5" ></text>
</g>
<g >
<title>llvm::ScheduleDAGSDNodes::EmitSchedule(llvm::MachineInstrBundleIterator&lt;llvm::MachineInstr, false&gt;&amp;)::{lambda(llvm::SDNode*, bool, bool, llvm::DenseMap&lt;llvm::SDValue, unsigned int, llvm::DenseMapInfo&lt;llvm::SDValue&gt;, llvm::detail::DenseMapPair&lt;llvm::SDValue, unsigned int&gt; &gt;&amp;)#1}::operator() (1 samples, 0.04%)</title><rect x="1144.2" y="661" width="0.4" height="15.0" fill="rgb(208,160,50)" rx="2" ry="2" />
<text  x="1147.17" y="671.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="900.1" y="549" width="0.4" height="15.0" fill="rgb(246,52,26)" rx="2" ry="2" />
<text  x="903.07" y="559.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1078.1" y="757" width="0.4" height="15.0" fill="rgb(236,77,29)" rx="2" ry="2" />
<text  x="1081.08" y="767.5" ></text>
</g>
<g >
<title>cling::Interpreter::EvaluateInternal (2 samples, 0.07%)</title><rect x="785.1" y="917" width="0.8" height="15.0" fill="rgb(211,101,53)" rx="2" ry="2" />
<text  x="788.06" y="927.5" ></text>
</g>
<g >
<title>llvm::AttributeList::hasAttribute (1 samples, 0.04%)</title><rect x="689.4" y="693" width="0.5" height="15.0" fill="rgb(205,113,31)" rx="2" ry="2" />
<text  x="692.45" y="703.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitLValue (1 samples, 0.04%)</title><rect x="1101.9" y="917" width="0.4" height="15.0" fill="rgb(228,121,32)" rx="2" ry="2" />
<text  x="1104.87" y="927.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord (1 samples, 0.04%)</title><rect x="1097.5" y="645" width="0.4" height="15.0" fill="rgb(247,114,5)" rx="2" ry="2" />
<text  x="1100.47" y="655.5" ></text>
</g>
<g >
<title>clang::Sema::AddTemplateOverloadCandidate (1 samples, 0.04%)</title><rect x="1122.6" y="901" width="0.4" height="15.0" fill="rgb(205,57,50)" rx="2" ry="2" />
<text  x="1125.58" y="911.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1168.0" y="853" width="0.4" height="15.0" fill="rgb(233,192,40)" rx="2" ry="2" />
<text  x="1170.97" y="863.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.11%)</title><rect x="1164.4" y="901" width="1.4" height="15.0" fill="rgb(224,132,38)" rx="2" ry="2" />
<text  x="1167.44" y="911.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (10 samples, 0.37%)</title><rect x="1159.6" y="821" width="4.4" height="15.0" fill="rgb(213,120,21)" rx="2" ry="2" />
<text  x="1162.60" y="831.5" ></text>
</g>
<g >
<title>execute_command_internal (5 samples, 0.19%)</title><rect x="10.4" y="565" width="2.2" height="15.0" fill="rgb(254,48,3)" rx="2" ry="2" />
<text  x="13.44" y="575.5" ></text>
</g>
<g >
<title>clang::Sema::BuildDeclRefExpr (1 samples, 0.04%)</title><rect x="1130.1" y="677" width="0.4" height="15.0" fill="rgb(241,56,4)" rx="2" ry="2" />
<text  x="1133.07" y="687.5" ></text>
</g>
<g >
<title>clang::MultiplexConsumer::HandleCXXStaticMemberVarInstantiation (1 samples, 0.04%)</title><rect x="1141.1" y="677" width="0.4" height="15.0" fill="rgb(243,161,51)" rx="2" ry="2" />
<text  x="1144.09" y="687.5" ></text>
</g>
<g >
<title>ClingMemberIterInternal::DCIter::DCIter (1 samples, 0.04%)</title><rect x="783.7" y="677" width="0.5" height="15.0" fill="rgb(229,180,27)" rx="2" ry="2" />
<text  x="786.74" y="687.5" ></text>
</g>
<g >
<title>llvm::PMTopLevelManager::~PMTopLevelManager (1 samples, 0.04%)</title><rect x="904.0" y="629" width="0.5" height="15.0" fill="rgb(216,97,47)" rx="2" ry="2" />
<text  x="907.03" y="639.5" ></text>
</g>
<g >
<title>instructionClobbersQuery&lt;llvm::BatchAAResults&gt; (1 samples, 0.04%)</title><rect x="1150.3" y="693" width="0.5" height="15.0" fill="rgb(229,55,40)" rx="2" ry="2" />
<text  x="1153.34" y="703.5" ></text>
</g>
<g >
<title>llvm::PMTopLevelManager::findAnalysisUsage (1 samples, 0.04%)</title><rect x="830.4" y="549" width="0.5" height="15.0" fill="rgb(227,136,47)" rx="2" ry="2" />
<text  x="833.45" y="559.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitReferenceBindingToExpr (1 samples, 0.04%)</title><rect x="1101.4" y="901" width="0.5" height="15.0" fill="rgb(226,120,12)" rx="2" ry="2" />
<text  x="1104.43" y="911.5" ></text>
</g>
<g >
<title>TBranch::GetBasketImpl (51 samples, 1.90%)</title><rect x="392.5" y="821" width="22.4" height="15.0" fill="rgb(220,132,1)" rx="2" ry="2" />
<text  x="395.46" y="831.5" >T..</text>
</g>
<g >
<title>_dl_init (1 samples, 0.04%)</title><rect x="1171.9" y="949" width="0.5" height="15.0" fill="rgb(212,213,43)" rx="2" ry="2" />
<text  x="1174.93" y="959.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.04%)</title><rect x="1123.9" y="885" width="0.4" height="15.0" fill="rgb(248,83,51)" rx="2" ry="2" />
<text  x="1126.91" y="895.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::executeWrapper (2 samples, 0.07%)</title><rect x="684.6" y="853" width="0.9" height="15.0" fill="rgb(230,46,6)" rx="2" ry="2" />
<text  x="687.60" y="863.5" ></text>
</g>
<g >
<title>[bash] (5 samples, 0.19%)</title><rect x="10.4" y="453" width="2.2" height="15.0" fill="rgb(205,69,9)" rx="2" ry="2" />
<text  x="13.44" y="463.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteDeclContext (1 samples, 0.04%)</title><rect x="1131.4" y="821" width="0.4" height="15.0" fill="rgb(237,181,24)" rx="2" ry="2" />
<text  x="1134.40" y="831.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType (1 samples, 0.04%)</title><rect x="1143.3" y="805" width="0.4" height="15.0" fill="rgb(220,142,20)" rx="2" ry="2" />
<text  x="1146.29" y="815.5" ></text>
</g>
<g >
<title>parse_and_execute (1 samples, 0.04%)</title><rect x="21.9" y="261" width="0.4" height="15.0" fill="rgb(254,8,32)" rx="2" ry="2" />
<text  x="24.90" y="271.5" ></text>
</g>
<g >
<title>std::__merge_adaptive&lt;llvm::MachineBasicBlock**, long, llvm::MachineBasicBlock**, __gnu_cxx::__ops::_Iter_comp_iter&lt;(anonymous namespace)::MachineSinking::GetAllSortedSuccessors(llvm::MachineInstr&amp;, llvm::MachineBasicBlock*, std::map&lt;llvm::MachineBasicBlock*, llvm::SmallVector&lt;llvm::MachineBasicBlock*, 4u&gt;, std::less&lt;llvm::MachineBasicBlock*&gt;, std::allocator&lt;std::pair&lt;llvm::MachineBasicBlock* const, llvm::SmallVector&lt;llvm::MachineBasicBlock*, 4u&gt; &gt; &gt; &gt;&amp;) const::{lambda(llvm::MachineBasicBlock const*, llvm::MachineBasicBlock const*)#1}&gt; &gt; (1 samples, 0.04%)</title><rect x="846.8" y="549" width="0.4" height="15.0" fill="rgb(221,133,28)" rx="2" ry="2" />
<text  x="849.75" y="559.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1046.4" y="517" width="0.4" height="15.0" fill="rgb(244,82,5)" rx="2" ry="2" />
<text  x="1049.36" y="527.5" ></text>
</g>
<g >
<title>__dlopen_check (1 samples, 0.04%)</title><rect x="1094.8" y="885" width="0.5" height="15.0" fill="rgb(205,154,41)" rx="2" ry="2" />
<text  x="1097.82" y="895.5" ></text>
</g>
<g >
<title>TUnixSystem::GetLinkedLibraries (5 samples, 0.19%)</title><rect x="1095.3" y="917" width="2.2" height="15.0" fill="rgb(253,192,21)" rx="2" ry="2" />
<text  x="1098.27" y="927.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1074.1" y="709" width="0.5" height="15.0" fill="rgb(214,30,24)" rx="2" ry="2" />
<text  x="1077.12" y="719.5" ></text>
</g>
<g >
<title>TCling::ProcessLineSynch (160 samples, 5.97%)</title><rect x="830.0" y="949" width="70.5" height="15.0" fill="rgb(231,181,16)" rx="2" ry="2" />
<text  x="833.01" y="959.5" >TCling:..</text>
</g>
<g >
<title>TH1D::AddBinContent (63 samples, 2.35%)</title><rect x="992.6" y="933" width="27.8" height="15.0" fill="rgb(235,29,9)" rx="2" ry="2" />
<text  x="995.60" y="943.5" >T..</text>
</g>
<g >
<title>llvm::orc::SimpleCompiler::operator() (2 samples, 0.07%)</title><rect x="1145.9" y="773" width="0.9" height="15.0" fill="rgb(242,4,46)" rx="2" ry="2" />
<text  x="1148.94" y="783.5" ></text>
</g>
<g >
<title>llvm::PMTopLevelManager::schedulePass (1 samples, 0.04%)</title><rect x="830.4" y="565" width="0.5" height="15.0" fill="rgb(226,84,46)" rx="2" ry="2" />
<text  x="833.45" y="575.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformReferenceType (1 samples, 0.04%)</title><rect x="1129.2" y="725" width="0.4" height="15.0" fill="rgb(225,20,40)" rx="2" ry="2" />
<text  x="1132.19" y="735.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentNameType (1 samples, 0.04%)</title><rect x="1127.4" y="725" width="0.5" height="15.0" fill="rgb(239,71,30)" rx="2" ry="2" />
<text  x="1130.43" y="735.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EvaluateExprAsBool (2 samples, 0.07%)</title><rect x="1105.8" y="853" width="0.9" height="15.0" fill="rgb(230,226,6)" rx="2" ry="2" />
<text  x="1108.84" y="863.5" ></text>
</g>
<g >
<title>clang::NestedNameSpecifier::Create (1 samples, 0.04%)</title><rect x="1100.1" y="613" width="0.5" height="15.0" fill="rgb(205,51,43)" rx="2" ry="2" />
<text  x="1103.11" y="623.5" ></text>
</g>
<g >
<title>llvm::SelectionDAG::getVTList (1 samples, 0.04%)</title><rect x="1151.7" y="853" width="0.4" height="15.0" fill="rgb(228,152,0)" rx="2" ry="2" />
<text  x="1154.67" y="863.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="11.8" y="245" width="0.4" height="15.0" fill="rgb(242,153,35)" rx="2" ry="2" />
<text  x="14.76" y="255.5" ></text>
</g>
<g >
<title>clang::Sema::SubstType (1 samples, 0.04%)</title><rect x="1124.8" y="837" width="0.4" height="15.0" fill="rgb(207,179,11)" rx="2" ry="2" />
<text  x="1127.79" y="847.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::SelectAllBasicBlocks (2 samples, 0.07%)</title><rect x="700.9" y="725" width="0.9" height="15.0" fill="rgb(217,227,10)" rx="2" ry="2" />
<text  x="703.90" y="735.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (2 samples, 0.07%)</title><rect x="1145.9" y="757" width="0.9" height="15.0" fill="rgb(213,172,30)" rx="2" ry="2" />
<text  x="1148.94" y="767.5" ></text>
</g>
<g >
<title>clang::TemplateDeclInstantiator::SubstFunctionType (1 samples, 0.04%)</title><rect x="1131.4" y="709" width="0.4" height="15.0" fill="rgb(215,93,38)" rx="2" ry="2" />
<text  x="1134.40" y="719.5" ></text>
</g>
<g >
<title>_dl_relocate_object (2 samples, 0.07%)</title><rect x="1093.9" y="773" width="0.9" height="15.0" fill="rgb(251,76,33)" rx="2" ry="2" />
<text  x="1096.94" y="783.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1078.1" y="709" width="0.4" height="15.0" fill="rgb(236,147,47)" rx="2" ry="2" />
<text  x="1081.08" y="719.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.04%)</title><rect x="1131.8" y="773" width="0.5" height="15.0" fill="rgb(234,153,30)" rx="2" ry="2" />
<text  x="1134.84" y="783.5" ></text>
</g>
<g >
<title>cling::Interpreter::executeTransaction (84 samples, 3.14%)</title><rect x="1028.7" y="693" width="37.0" height="15.0" fill="rgb(229,58,42)" rx="2" ry="2" />
<text  x="1031.73" y="703.5" >cli..</text>
</g>
<g >
<title>close_buffered_fd (1 samples, 0.04%)</title><rect x="21.5" y="565" width="0.4" height="15.0" fill="rgb(213,33,2)" rx="2" ry="2" />
<text  x="24.46" y="575.5" ></text>
</g>
<g >
<title>clang::Sema::CheckBaseSpecifier (1 samples, 0.04%)</title><rect x="1128.8" y="837" width="0.4" height="15.0" fill="rgb(245,81,20)" rx="2" ry="2" />
<text  x="1131.75" y="847.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1164.0" y="805" width="0.4" height="15.0" fill="rgb(242,54,25)" rx="2" ry="2" />
<text  x="1167.00" y="815.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolutionWrapperPass::runOnFunction (2 samples, 0.07%)</title><rect x="1045.0" y="629" width="0.9" height="15.0" fill="rgb(209,132,42)" rx="2" ry="2" />
<text  x="1048.03" y="639.5" ></text>
</g>
<g >
<title>TryImplicitConversion (1 samples, 0.04%)</title><rect x="1127.9" y="869" width="0.4" height="15.0" fill="rgb(206,154,48)" rx="2" ry="2" />
<text  x="1130.87" y="879.5" ></text>
</g>
<g >
<title>getInterestingTagDecl (1 samples, 0.04%)</title><rect x="1139.3" y="613" width="0.5" height="15.0" fill="rgb(230,210,16)" rx="2" ry="2" />
<text  x="1142.33" y="623.5" ></text>
</g>
<g >
<title>llvm::MapVector&lt;clang::CXXMethodDecl const*, clang::OverridingMethods, llvm::DenseMap&lt;clang::CXXMethodDecl const*, unsigned int, llvm::DenseMapInfo&lt;clang::CXXMethodDecl const*&gt;, llvm::detail::DenseMapPair&lt;clang::CXXMethodDecl const*, unsigned int&gt; &gt;, std::vector&lt;std::pair&lt;clang::CXXMethodDecl const*, clang::OverridingMethods&gt;, std::allocator&lt;std::pair&lt;clang::CXXMethodDecl const*, clang::OverridingMethods&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.04%)</title><rect x="1107.6" y="645" width="0.4" height="15.0" fill="rgb(248,57,49)" rx="2" ry="2" />
<text  x="1110.60" y="655.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.04%)</title><rect x="1138.4" y="837" width="0.5" height="15.0" fill="rgb(248,78,48)" rx="2" ry="2" />
<text  x="1141.45" y="847.5" ></text>
</g>
<g >
<title>llvm::SelectionDAG::LegalizeOp (1 samples, 0.04%)</title><rect x="1153.0" y="725" width="0.4" height="15.0" fill="rgb(237,198,0)" rx="2" ry="2" />
<text  x="1155.99" y="735.5" ></text>
</g>
<g >
<title>clang::Sema::DeduceTemplateArguments (3 samples, 0.11%)</title><rect x="1127.0" y="965" width="1.3" height="15.0" fill="rgb(247,170,27)" rx="2" ry="2" />
<text  x="1129.99" y="975.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitTemplateDecl (1 samples, 0.04%)</title><rect x="1099.2" y="549" width="0.5" height="15.0" fill="rgb(248,6,29)" rx="2" ry="2" />
<text  x="1102.23" y="559.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentScopeDeclRefExpr (1 samples, 0.04%)</title><rect x="1139.3" y="853" width="0.5" height="15.0" fill="rgb(222,201,7)" rx="2" ry="2" />
<text  x="1142.33" y="863.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXConstructorCall (1 samples, 0.04%)</title><rect x="1102.8" y="693" width="0.4" height="15.0" fill="rgb(254,120,20)" rx="2" ry="2" />
<text  x="1105.76" y="703.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTemplateIdType (1 samples, 0.04%)</title><rect x="1143.7" y="917" width="0.5" height="15.0" fill="rgb(218,62,32)" rx="2" ry="2" />
<text  x="1146.73" y="927.5" ></text>
</g>
<g >
<title>llvm::AttributeSet::removeAttribute (1 samples, 0.04%)</title><rect x="1111.6" y="629" width="0.4" height="15.0" fill="rgb(239,87,10)" rx="2" ry="2" />
<text  x="1114.57" y="639.5" ></text>
</g>
<g >
<title>cling::BackendPasses::runOnModule (3 samples, 0.11%)</title><rect x="1028.7" y="661" width="1.4" height="15.0" fill="rgb(245,15,26)" rx="2" ry="2" />
<text  x="1031.73" y="671.5" ></text>
</g>
<g >
<title>DoMarkVarDeclReferenced (1 samples, 0.04%)</title><rect x="1141.1" y="725" width="0.4" height="15.0" fill="rgb(216,159,7)" rx="2" ry="2" />
<text  x="1144.09" y="735.5" ></text>
</g>
<g >
<title>llvm::legacy::FunctionPassManager::run (2 samples, 0.07%)</title><rect x="900.5" y="677" width="0.9" height="15.0" fill="rgb(235,82,37)" rx="2" ry="2" />
<text  x="903.51" y="687.5" ></text>
</g>
<g >
<title>llvm::function_ref&lt;bool (llvm::ArrayRef&lt;clang::QualType&gt;)&gt;::callback_fn&lt;clang::Sema::AddTemplateOverloadCandidate(clang::FunctionTemplateDecl*, clang::DeclAccessPair, clang::TemplateArgumentListInfo*, llvm::ArrayRef&lt;clang::Expr*&gt;, clang::OverloadCandidateSet&amp;, bool, bool, bool, clang::CallExpr::ADLCallKind)::{lambda(llvm::ArrayRef&lt;clang::QualType&gt;)#1}&gt; (1 samples, 0.04%)</title><rect x="1155.2" y="965" width="0.4" height="15.0" fill="rgb(228,34,0)" rx="2" ry="2" />
<text  x="1158.19" y="975.5" ></text>
</g>
<g >
<title>llvm::Instruction::eraseFromParent (1 samples, 0.04%)</title><rect x="1050.3" y="533" width="0.5" height="15.0" fill="rgb(217,130,34)" rx="2" ry="2" />
<text  x="1053.32" y="543.5" ></text>
</g>
<g >
<title>DynamicPath (10 samples, 0.37%)</title><rect x="1071.5" y="853" width="4.4" height="15.0" fill="rgb(245,189,35)" rx="2" ry="2" />
<text  x="1074.47" y="863.5" ></text>
</g>
<g >
<title>llvm::MachineFunctionPass::runOnFunction (3 samples, 0.11%)</title><rect x="1148.1" y="645" width="1.4" height="15.0" fill="rgb(248,192,48)" rx="2" ry="2" />
<text  x="1151.14" y="655.5" ></text>
</g>
<g >
<title>ResolveConstructorOverload (1 samples, 0.04%)</title><rect x="1119.1" y="917" width="0.4" height="15.0" fill="rgb(242,28,41)" rx="2" ry="2" />
<text  x="1122.06" y="927.5" ></text>
</g>
<g >
<title>TUnixSystem::GetLinkedLibraries (5 samples, 0.19%)</title><rect x="1095.3" y="901" width="2.2" height="15.0" fill="rgb(232,33,12)" rx="2" ry="2" />
<text  x="1098.27" y="911.5" ></text>
</g>
<g >
<title>clang::ElaboratedTypeLoc::initializeLocal (1 samples, 0.04%)</title><rect x="1138.4" y="661" width="0.5" height="15.0" fill="rgb(207,37,10)" rx="2" ry="2" />
<text  x="1141.45" y="671.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1143.3" y="917" width="0.4" height="15.0" fill="rgb(236,157,37)" rx="2" ry="2" />
<text  x="1146.29" y="927.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="10.4" y="293" width="0.5" height="15.0" fill="rgb(220,164,30)" rx="2" ry="2" />
<text  x="13.44" y="303.5" ></text>
</g>
<g >
<title>?? (2 samples, 0.07%)</title><rect x="776.7" y="917" width="0.9" height="15.0" fill="rgb(210,10,34)" rx="2" ry="2" />
<text  x="779.69" y="927.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitDestructorBody (1 samples, 0.04%)</title><rect x="1109.8" y="485" width="0.4" height="15.0" fill="rgb(224,14,47)" rx="2" ry="2" />
<text  x="1112.81" y="495.5" ></text>
</g>
<g >
<title>clang::ASTContext::hasSameUnqualifiedType (1 samples, 0.04%)</title><rect x="1141.5" y="709" width="0.5" height="15.0" fill="rgb(251,53,54)" rx="2" ry="2" />
<text  x="1144.53" y="719.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.04%)</title><rect x="1103.6" y="901" width="0.5" height="15.0" fill="rgb(233,183,7)" rx="2" ry="2" />
<text  x="1106.64" y="911.5" ></text>
</g>
<g >
<title>TryCopyInitialization (1 samples, 0.04%)</title><rect x="1127.9" y="885" width="0.4" height="15.0" fill="rgb(241,134,42)" rx="2" ry="2" />
<text  x="1130.87" y="895.5" ></text>
</g>
<g >
<title>llvm::SimplifyInstruction (1 samples, 0.04%)</title><rect x="689.4" y="741" width="0.5" height="15.0" fill="rgb(205,39,7)" rx="2" ry="2" />
<text  x="692.45" y="751.5" ></text>
</g>
<g >
<title>check_match (1 samples, 0.04%)</title><rect x="1170.6" y="853" width="0.5" height="15.0" fill="rgb(232,26,13)" rx="2" ry="2" />
<text  x="1173.61" y="863.5" ></text>
</g>
<g >
<title>sed (1 samples, 0.04%)</title><rect x="1168.8" y="981" width="0.5" height="15.0" fill="rgb(207,116,21)" rx="2" ry="2" />
<text  x="1171.85" y="991.5" ></text>
</g>
<g >
<title>TTreeReader::SetEntryBase@plt (1 samples, 0.04%)</title><rect x="760.4" y="901" width="0.4" height="15.0" fill="rgb(232,153,27)" rx="2" ry="2" />
<text  x="763.39" y="911.5" ></text>
</g>
<g >
<title>clang::DeclContext::LoadLexicalDeclsFromExternalStorage (1 samples, 0.04%)</title><rect x="1137.1" y="661" width="0.5" height="15.0" fill="rgb(235,219,19)" rx="2" ry="2" />
<text  x="1140.12" y="671.5" ></text>
</g>
<g >
<title>llvm::computeKnownBits (1 samples, 0.04%)</title><rect x="889.9" y="645" width="0.5" height="15.0" fill="rgb(209,171,24)" rx="2" ry="2" />
<text  x="892.93" y="655.5" ></text>
</g>
<g >
<title>llvm::Instruction::isAtomic (1 samples, 0.04%)</title><rect x="1049.9" y="533" width="0.4" height="15.0" fill="rgb(225,89,7)" rx="2" ry="2" />
<text  x="1052.88" y="543.5" ></text>
</g>
<g >
<title>clang::Sema::CheckFieldDecl (1 samples, 0.04%)</title><rect x="1127.9" y="741" width="0.4" height="15.0" fill="rgb(220,43,19)" rx="2" ry="2" />
<text  x="1130.87" y="751.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::GetAddrOfFunction (1 samples, 0.04%)</title><rect x="1105.8" y="741" width="0.5" height="15.0" fill="rgb(222,5,41)" rx="2" ry="2" />
<text  x="1108.84" y="751.5" ></text>
</g>
<g >
<title>TObjArray::GetAbsLast (1 samples, 0.04%)</title><rect x="785.9" y="725" width="0.5" height="15.0" fill="rgb(241,86,41)" rx="2" ry="2" />
<text  x="788.94" y="735.5" ></text>
</g>
<g >
<title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::CalculateFromScratch (1 samples, 0.04%)</title><rect x="689.0" y="725" width="0.4" height="15.0" fill="rgb(239,228,42)" rx="2" ry="2" />
<text  x="692.01" y="735.5" ></text>
</g>
<g >
<title>llvm::DAGTypeLegalizer::getTableId (1 samples, 0.04%)</title><rect x="1157.4" y="741" width="0.4" height="15.0" fill="rgb(223,170,38)" rx="2" ry="2" />
<text  x="1160.39" y="751.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (1 samples, 0.04%)</title><rect x="785.5" y="837" width="0.4" height="15.0" fill="rgb(216,207,25)" rx="2" ry="2" />
<text  x="788.50" y="847.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.04%)</title><rect x="1134.0" y="773" width="0.5" height="15.0" fill="rgb(215,157,9)" rx="2" ry="2" />
<text  x="1137.04" y="783.5" ></text>
</g>
<g >
<title>llvm::AttributeSetNode::get (1 samples, 0.04%)</title><rect x="1113.8" y="773" width="0.4" height="15.0" fill="rgb(223,143,29)" rx="2" ry="2" />
<text  x="1116.77" y="783.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.04%)</title><rect x="1103.6" y="773" width="0.5" height="15.0" fill="rgb(214,177,34)" rx="2" ry="2" />
<text  x="1106.64" y="783.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTSIInObjectScope (2 samples, 0.07%)</title><rect x="1130.1" y="853" width="0.9" height="15.0" fill="rgb(244,159,36)" rx="2" ry="2" />
<text  x="1133.07" y="863.5" ></text>
</g>
<g >
<title>_IO_new_proc_open (3 samples, 0.11%)</title><rect x="1069.7" y="773" width="1.3" height="15.0" fill="rgb(254,144,23)" rx="2" ry="2" />
<text  x="1072.71" y="783.5" ></text>
</g>
<g >
<title>computeKnownBits (1 samples, 0.04%)</title><rect x="893.9" y="581" width="0.4" height="15.0" fill="rgb(219,33,36)" rx="2" ry="2" />
<text  x="896.90" y="591.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (3 samples, 0.11%)</title><rect x="1169.7" y="885" width="1.4" height="15.0" fill="rgb(242,122,21)" rx="2" ry="2" />
<text  x="1172.73" y="895.5" ></text>
</g>
<g >
<title>TSystem::GetLibraries (5 samples, 0.19%)</title><rect x="1095.3" y="933" width="2.2" height="15.0" fill="rgb(250,33,3)" rx="2" ry="2" />
<text  x="1098.27" y="943.5" ></text>
</g>
<g >
<title>dl_open_worker (1 samples, 0.04%)</title><rect x="1094.8" y="773" width="0.5" height="15.0" fill="rgb(235,42,48)" rx="2" ry="2" />
<text  x="1097.82" y="783.5" ></text>
</g>
<g >
<title>execute_command_internal (5 samples, 0.19%)</title><rect x="10.4" y="709" width="2.2" height="15.0" fill="rgb(244,145,40)" rx="2" ry="2" />
<text  x="13.44" y="719.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (1 samples, 0.04%)</title><rect x="904.9" y="757" width="0.5" height="15.0" fill="rgb(214,23,16)" rx="2" ry="2" />
<text  x="907.91" y="767.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (1 samples, 0.04%)</title><rect x="1129.6" y="821" width="0.5" height="15.0" fill="rgb(223,96,33)" rx="2" ry="2" />
<text  x="1132.63" y="831.5" ></text>
</g>
<g >
<title>?? (12 samples, 0.45%)</title><rect x="1066.2" y="869" width="5.3" height="15.0" fill="rgb(209,190,43)" rx="2" ry="2" />
<text  x="1069.18" y="879.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGBuilder::lowerInvokable (2 samples, 0.07%)</title><rect x="1153.4" y="949" width="0.9" height="15.0" fill="rgb(228,167,50)" rx="2" ry="2" />
<text  x="1156.43" y="959.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1169.3" y="773" width="0.4" height="15.0" fill="rgb(253,216,35)" rx="2" ry="2" />
<text  x="1172.29" y="783.5" ></text>
</g>
<g >
<title>clang::Sema::BuildQualifiedDeclarationNameExpr (1 samples, 0.04%)</title><rect x="1137.6" y="773" width="0.4" height="15.0" fill="rgb(249,135,5)" rx="2" ry="2" />
<text  x="1140.57" y="783.5" ></text>
</g>
<g >
<title>llvm::StringMapImpl::FindKey (1 samples, 0.04%)</title><rect x="1149.9" y="565" width="0.4" height="15.0" fill="rgb(218,175,40)" rx="2" ry="2" />
<text  x="1152.90" y="575.5" ></text>
</g>
<g >
<title>clang::Sema::SubstBaseSpecifiers (1 samples, 0.04%)</title><rect x="1128.8" y="853" width="0.4" height="15.0" fill="rgb(209,90,8)" rx="2" ry="2" />
<text  x="1131.75" y="863.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.07%)</title><rect x="1187.8" y="805" width="0.9" height="15.0" fill="rgb(242,145,51)" rx="2" ry="2" />
<text  x="1190.80" y="815.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (1 samples, 0.04%)</title><rect x="1027.8" y="741" width="0.5" height="15.0" fill="rgb(231,203,1)" rx="2" ry="2" />
<text  x="1030.85" y="751.5" ></text>
</g>
<g >
<title>TClass::BuildRealData (1 samples, 0.04%)</title><rect x="783.3" y="821" width="0.4" height="15.0" fill="rgb(219,11,23)" rx="2" ry="2" />
<text  x="786.30" y="831.5" ></text>
</g>
<g >
<title>__GI__dl_catch_error (1 samples, 0.04%)</title><rect x="904.9" y="613" width="0.5" height="15.0" fill="rgb(249,61,18)" rx="2" ry="2" />
<text  x="907.91" y="623.5" ></text>
</g>
<g >
<title>ROOT::Internal::RDF::JitBuildAction (1 samples, 0.04%)</title><rect x="785.9" y="965" width="0.5" height="15.0" fill="rgb(212,39,27)" rx="2" ry="2" />
<text  x="788.94" y="975.5" ></text>
</g>
<g >
<title>llvm::InstVisitor&lt;llvm::InstCombiner, llvm::Instruction*&gt;::visit (1 samples, 0.04%)</title><rect x="1035.3" y="581" width="0.5" height="15.0" fill="rgb(225,196,38)" rx="2" ry="2" />
<text  x="1038.34" y="591.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1127.4" y="869" width="0.5" height="15.0" fill="rgb(205,39,39)" rx="2" ry="2" />
<text  x="1130.43" y="879.5" ></text>
</g>
<g >
<title>_IO_new_popen (3 samples, 0.11%)</title><rect x="1069.7" y="789" width="1.3" height="15.0" fill="rgb(243,38,34)" rx="2" ry="2" />
<text  x="1072.71" y="799.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::removeDeadPasses (5 samples, 0.19%)</title><rect x="1053.4" y="613" width="2.2" height="15.0" fill="rgb(223,88,2)" rx="2" ry="2" />
<text  x="1056.41" y="623.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTSIInObjectScope (2 samples, 0.07%)</title><rect x="1131.8" y="837" width="0.9" height="15.0" fill="rgb(253,118,19)" rx="2" ry="2" />
<text  x="1134.84" y="847.5" ></text>
</g>
<g >
<title>llvm::AttributeList::removeAttribute (1 samples, 0.04%)</title><rect x="1110.2" y="565" width="0.5" height="15.0" fill="rgb(230,188,52)" rx="2" ry="2" />
<text  x="1113.25" y="575.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::codegenCXXStructor (1 samples, 0.04%)</title><rect x="1114.7" y="885" width="0.4" height="15.0" fill="rgb(226,114,44)" rx="2" ry="2" />
<text  x="1117.65" y="895.5" ></text>
</g>
<g >
<title>llvm::BlockFrequencyInfoImpl&lt;llvm::BasicBlock&gt;::tryToComputeMassInFunction (1 samples, 0.04%)</title><rect x="1034.0" y="581" width="0.5" height="15.0" fill="rgb(216,181,38)" rx="2" ry="2" />
<text  x="1037.02" y="591.5" ></text>
</g>
<g >
<title>TClingCallbacks::LookupObject (1 samples, 0.04%)</title><rect x="1137.6" y="677" width="0.4" height="15.0" fill="rgb(234,57,39)" rx="2" ry="2" />
<text  x="1140.57" y="687.5" ></text>
</g>
<g >
<title>cling::MetaParser::isCommand (160 samples, 5.97%)</title><rect x="830.0" y="885" width="70.5" height="15.0" fill="rgb(227,14,6)" rx="2" ry="2" />
<text  x="833.01" y="895.5" >cling::..</text>
</g>
<g >
<title>llvm::DominatorTreeWrapperPass::verifyAnalysis (1 samples, 0.04%)</title><rect x="1056.0" y="597" width="0.5" height="15.0" fill="rgb(243,168,14)" rx="2" ry="2" />
<text  x="1059.05" y="607.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXMemberOrOperatorMemberCallExpr (1 samples, 0.04%)</title><rect x="1101.9" y="965" width="0.4" height="15.0" fill="rgb(225,157,24)" rx="2" ry="2" />
<text  x="1104.87" y="975.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTemplateArgumentList (1 samples, 0.04%)</title><rect x="1123.9" y="949" width="0.4" height="15.0" fill="rgb(230,101,53)" rx="2" ry="2" />
<text  x="1126.91" y="959.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddTemplateArgument (1 samples, 0.04%)</title><rect x="1135.8" y="677" width="0.4" height="15.0" fill="rgb(243,56,14)" rx="2" ry="2" />
<text  x="1138.80" y="687.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1172.4" y="741" width="0.4" height="15.0" fill="rgb(211,26,10)" rx="2" ry="2" />
<text  x="1175.37" y="751.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="21.0" y="517" width="0.5" height="15.0" fill="rgb(208,72,51)" rx="2" ry="2" />
<text  x="24.02" y="527.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::ParseInternal (1 samples, 0.04%)</title><rect x="785.1" y="885" width="0.4" height="15.0" fill="rgb(209,163,9)" rx="2" ry="2" />
<text  x="788.06" y="895.5" ></text>
</g>
<g >
<title>?? (2 samples, 0.07%)</title><rect x="919.5" y="949" width="0.8" height="15.0" fill="rgb(212,150,25)" rx="2" ry="2" />
<text  x="922.45" y="959.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::CodeGenAndEmitDAG (1 samples, 0.04%)</title><rect x="1148.1" y="597" width="0.5" height="15.0" fill="rgb(250,171,13)" rx="2" ry="2" />
<text  x="1151.14" y="607.5" ></text>
</g>
<g >
<title>clang::Sema::AddMethodTemplateCandidate (1 samples, 0.04%)</title><rect x="1136.2" y="949" width="0.5" height="15.0" fill="rgb(223,163,16)" rx="2" ry="2" />
<text  x="1139.24" y="959.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType (1 samples, 0.04%)</title><rect x="1143.7" y="789" width="0.5" height="15.0" fill="rgb(234,221,54)" rx="2" ry="2" />
<text  x="1146.73" y="799.5" ></text>
</g>
<g >
<title>llvm::CallGraph::addToCallGraph (1 samples, 0.04%)</title><rect x="1030.1" y="613" width="0.4" height="15.0" fill="rgb(211,224,16)" rx="2" ry="2" />
<text  x="1033.05" y="623.5" ></text>
</g>
<g >
<title>cling::LookupHelper::findType (1 samples, 0.04%)</title><rect x="784.2" y="581" width="0.4" height="15.0" fill="rgb(212,182,15)" rx="2" ry="2" />
<text  x="787.18" y="591.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadSLocEntry(int)::{lambda(llvm::BitstreamCursor&amp;, llvm::StringRef)#1}::operator() (1 samples, 0.04%)</title><rect x="908.9" y="581" width="0.4" height="15.0" fill="rgb(240,218,54)" rx="2" ry="2" />
<text  x="911.88" y="591.5" ></text>
</g>
<g >
<title>ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (1 samples, 0.04%)</title><rect x="783.3" y="709" width="0.4" height="15.0" fill="rgb(254,196,50)" rx="2" ry="2" />
<text  x="786.30" y="719.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::removeNotPreservedAnalysis (1 samples, 0.04%)</title><rect x="1055.6" y="613" width="0.4" height="15.0" fill="rgb(241,80,29)" rx="2" ry="2" />
<text  x="1058.61" y="623.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitTypedefNameDecl (1 samples, 0.04%)</title><rect x="1100.6" y="917" width="0.4" height="15.0" fill="rgb(211,146,48)" rx="2" ry="2" />
<text  x="1103.55" y="927.5" ></text>
</g>
<g >
<title>clang::Sema::BuildQualifiedDeclarationNameExpr (1 samples, 0.04%)</title><rect x="1123.9" y="853" width="0.4" height="15.0" fill="rgb(253,131,33)" rx="2" ry="2" />
<text  x="1126.91" y="863.5" ></text>
</g>
<g >
<title>clang::ASTContext::getTrivialTypeSourceInfo (1 samples, 0.04%)</title><rect x="1138.4" y="693" width="0.5" height="15.0" fill="rgb(244,63,11)" rx="2" ry="2" />
<text  x="1141.45" y="703.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.04%)</title><rect x="1133.6" y="789" width="0.4" height="15.0" fill="rgb(250,49,35)" rx="2" ry="2" />
<text  x="1136.60" y="799.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertType (1 samples, 0.04%)</title><rect x="1117.3" y="645" width="0.4" height="15.0" fill="rgb(224,167,51)" rx="2" ry="2" />
<text  x="1120.30" y="655.5" ></text>
</g>
<g >
<title>llvm::DAGTypeLegalizer::getTableId (1 samples, 0.04%)</title><rect x="1152.1" y="693" width="0.4" height="15.0" fill="rgb(230,166,40)" rx="2" ry="2" />
<text  x="1155.11" y="703.5" ></text>
</g>
<g >
<title>TListOfDataMembers::Load (1 samples, 0.04%)</title><rect x="783.7" y="757" width="0.5" height="15.0" fill="rgb(205,165,17)" rx="2" ry="2" />
<text  x="786.74" y="767.5" ></text>
</g>
<g >
<title>SubstDefaultTemplateArgument (1 samples, 0.04%)</title><rect x="1097.9" y="869" width="0.4" height="15.0" fill="rgb(250,162,13)" rx="2" ry="2" />
<text  x="1100.91" y="879.5" ></text>
</g>
<g >
<title>[bash] (4 samples, 0.15%)</title><rect x="22.3" y="677" width="1.8" height="15.0" fill="rgb(221,54,19)" rx="2" ry="2" />
<text  x="25.34" y="687.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_erase (1 samples, 0.04%)</title><rect x="1112.0" y="613" width="0.4" height="15.0" fill="rgb(223,4,38)" rx="2" ry="2" />
<text  x="1115.01" y="623.5" ></text>
</g>
<g >
<title>clang::LinkageComputer::getLVForClassMember (1 samples, 0.04%)</title><rect x="1105.8" y="613" width="0.5" height="15.0" fill="rgb(246,99,0)" rx="2" ry="2" />
<text  x="1108.84" y="623.5" ></text>
</g>
<g >
<title>llvm::MachineFunction::~MachineFunction (1 samples, 0.04%)</title><rect x="834.0" y="581" width="0.4" height="15.0" fill="rgb(244,5,0)" rx="2" ry="2" />
<text  x="836.97" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;llvm::MCSectionELF const*, std::pair&lt;llvm::MCSectionELF const* const, std::pair&lt;unsigned long, unsigned long&gt; &gt;, std::_Select1st&lt;std::pair&lt;llvm::MCSectionELF const* const, std::pair&lt;unsigned long, unsigned long&gt; &gt; &gt;, std::less&lt;llvm::MCSectionELF const*&gt;, std::allocator&lt;std::pair&lt;llvm::MCSectionELF const* const, std::pair&lt;unsigned long, unsigned long&gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;llvm::MCSectionELF const*&amp;&amp;&gt;, std::tuple&lt;&gt; &gt; (1 samples, 0.04%)</title><rect x="831.3" y="549" width="0.5" height="15.0" fill="rgb(231,143,44)" rx="2" ry="2" />
<text  x="834.33" y="559.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitCXXMethodDecl (1 samples, 0.04%)</title><rect x="904.5" y="565" width="0.4" height="15.0" fill="rgb(207,40,2)" rx="2" ry="2" />
<text  x="907.47" y="575.5" ></text>
</g>
<g >
<title>cling::Interpreter::DeclareInternal (2 samples, 0.07%)</title><rect x="1149.9" y="869" width="0.9" height="15.0" fill="rgb(245,147,29)" rx="2" ry="2" />
<text  x="1152.90" y="879.5" ></text>
</g>
<g >
<title>cling::MetaProcessor::process (1 samples, 0.04%)</title><rect x="1027.4" y="853" width="0.4" height="15.0" fill="rgb(216,106,51)" rx="2" ry="2" />
<text  x="1030.41" y="863.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.04%)</title><rect x="1127.0" y="629" width="0.4" height="15.0" fill="rgb(208,3,26)" rx="2" ry="2" />
<text  x="1129.99" y="639.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyld::loadObject (49 samples, 1.83%)</title><rect x="868.3" y="629" width="21.6" height="15.0" fill="rgb(243,153,53)" rx="2" ry="2" />
<text  x="871.34" y="639.5" >l..</text>
</g>
<g >
<title>llvm::MachineFunctionPass::runOnFunction (6 samples, 0.22%)</title><rect x="906.2" y="613" width="2.7" height="15.0" fill="rgb(236,89,34)" rx="2" ry="2" />
<text  x="909.24" y="623.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::CodeGenAndEmitDAG (3 samples, 0.11%)</title><rect x="1157.0" y="821" width="1.3" height="15.0" fill="rgb(231,29,1)" rx="2" ry="2" />
<text  x="1159.95" y="831.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke (2 samples, 0.07%)</title><rect x="1145.9" y="789" width="0.9" height="15.0" fill="rgb(224,183,47)" rx="2" ry="2" />
<text  x="1148.94" y="799.5" ></text>
</g>
<g >
<title>clang::Sema::AddOverloadedCallCandidates (1 samples, 0.04%)</title><rect x="1122.6" y="933" width="0.4" height="15.0" fill="rgb(205,119,30)" rx="2" ry="2" />
<text  x="1125.58" y="943.5" ></text>
</g>
<g >
<title>cling::MetaSema::actOnLCommand (7 samples, 0.26%)</title><rect x="900.5" y="805" width="3.1" height="15.0" fill="rgb(205,38,18)" rx="2" ry="2" />
<text  x="903.51" y="815.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetTypeSourceInfo (1 samples, 0.04%)</title><rect x="1142.9" y="693" width="0.4" height="15.0" fill="rgb(209,117,43)" rx="2" ry="2" />
<text  x="1145.85" y="703.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveExternalSymbols (1 samples, 0.04%)</title><rect x="1146.8" y="869" width="0.5" height="15.0" fill="rgb(220,11,8)" rx="2" ry="2" />
<text  x="1149.82" y="879.5" ></text>
</g>
<g >
<title>__strlen_avx2 (1 samples, 0.04%)</title><rect x="1075.9" y="837" width="0.4" height="15.0" fill="rgb(254,103,18)" rx="2" ry="2" />
<text  x="1078.88" y="847.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTBAA::getBaseTypeInfo (1 samples, 0.04%)</title><rect x="1103.2" y="837" width="0.4" height="15.0" fill="rgb(248,35,37)" rx="2" ry="2" />
<text  x="1106.20" y="847.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCall (1 samples, 0.04%)</title><rect x="1108.0" y="629" width="0.5" height="15.0" fill="rgb(239,225,20)" rx="2" ry="2" />
<text  x="1111.04" y="639.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.04%)</title><rect x="21.9" y="901" width="0.4" height="15.0" fill="rgb(239,25,47)" rx="2" ry="2" />
<text  x="24.90" y="911.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord (1 samples, 0.04%)</title><rect x="904.5" y="693" width="0.4" height="15.0" fill="rgb(254,39,53)" rx="2" ry="2" />
<text  x="907.47" y="703.5" ></text>
</g>
<g >
<title>combineInstructionsOverFunction (4 samples, 0.15%)</title><rect x="1049.4" y="597" width="1.8" height="15.0" fill="rgb(210,166,52)" rx="2" ry="2" />
<text  x="1052.44" y="607.5" ></text>
</g>
<g >
<title>clang::Sema::PerformPendingInstantiations (1 samples, 0.04%)</title><rect x="785.1" y="821" width="0.4" height="15.0" fill="rgb(220,172,15)" rx="2" ry="2" />
<text  x="788.06" y="831.5" ></text>
</g>
<g >
<title>clang::QualType::getUnqualifiedType (1 samples, 0.04%)</title><rect x="1119.5" y="757" width="0.4" height="15.0" fill="rgb(223,173,32)" rx="2" ry="2" />
<text  x="1122.50" y="767.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1131.4" y="629" width="0.4" height="15.0" fill="rgb(213,194,31)" rx="2" ry="2" />
<text  x="1134.40" y="639.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1165.8" y="789" width="0.4" height="15.0" fill="rgb(207,194,22)" rx="2" ry="2" />
<text  x="1168.77" y="799.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject&lt;std::shared_ptr&lt;llvm::RuntimeDyld::MemoryManager&gt; &gt;::getSymbolMaterializer(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda()#1}&gt;::_M_invoke (1 samples, 0.04%)</title><rect x="1149.5" y="709" width="0.4" height="15.0" fill="rgb(249,147,31)" rx="2" ry="2" />
<text  x="1152.46" y="719.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1072.4" y="709" width="0.4" height="15.0" fill="rgb(237,161,54)" rx="2" ry="2" />
<text  x="1075.35" y="719.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::getAddExpr (1 samples, 0.04%)</title><rect x="692.1" y="565" width="0.4" height="15.0" fill="rgb(233,157,32)" rx="2" ry="2" />
<text  x="695.09" y="575.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnModule (1 samples, 0.04%)</title><rect x="785.5" y="821" width="0.4" height="15.0" fill="rgb(251,10,31)" rx="2" ry="2" />
<text  x="788.50" y="831.5" ></text>
</g>
<g >
<title>dl_main (1 samples, 0.04%)</title><rect x="1166.2" y="917" width="0.4" height="15.0" fill="rgb(245,133,50)" rx="2" ry="2" />
<text  x="1169.21" y="927.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadNestedNameSpecifier (1 samples, 0.04%)</title><rect x="1100.6" y="821" width="0.4" height="15.0" fill="rgb(245,69,8)" rx="2" ry="2" />
<text  x="1103.55" y="831.5" ></text>
</g>
<g >
<title>llvm::X86AsmPrinter::EmitAndCountInstruction (1 samples, 0.04%)</title><rect x="908.0" y="549" width="0.4" height="15.0" fill="rgb(218,80,11)" rx="2" ry="2" />
<text  x="911.00" y="559.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;, void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;::LookupBucketFor&lt;void const*&gt; (10 samples, 0.37%)</title><rect x="860.0" y="517" width="4.4" height="15.0" fill="rgb(244,123,18)" rx="2" ry="2" />
<text  x="862.97" y="527.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitClassTemplateDecl (1 samples, 0.04%)</title><rect x="1099.2" y="869" width="0.5" height="15.0" fill="rgb(241,36,1)" rx="2" ry="2" />
<text  x="1102.23" y="879.5" ></text>
</g>
<g >
<title>llvm::MachineFunctionPass::runOnFunction (1 samples, 0.04%)</title><rect x="1151.7" y="949" width="0.4" height="15.0" fill="rgb(233,200,7)" rx="2" ry="2" />
<text  x="1154.67" y="959.5" ></text>
</g>
<g >
<title>llvm::InstructionCombiningPass::runOnFunction (1 samples, 0.04%)</title><rect x="901.4" y="661" width="0.4" height="15.0" fill="rgb(243,25,11)" rx="2" ry="2" />
<text  x="904.39" y="671.5" ></text>
</g>
<g >
<title>llvm::AttrBuilder::addAttribute (1 samples, 0.04%)</title><rect x="1111.1" y="581" width="0.5" height="15.0" fill="rgb(243,69,54)" rx="2" ry="2" />
<text  x="1114.13" y="591.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (1 samples, 0.04%)</title><rect x="1127.4" y="661" width="0.5" height="15.0" fill="rgb(246,114,7)" rx="2" ry="2" />
<text  x="1130.43" y="671.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::GenerateCode (1 samples, 0.04%)</title><rect x="1114.7" y="869" width="0.4" height="15.0" fill="rgb(223,226,14)" rx="2" ry="2" />
<text  x="1117.65" y="879.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.11%)</title><rect x="14.8" y="277" width="1.4" height="15.0" fill="rgb(249,208,0)" rx="2" ry="2" />
<text  x="17.85" y="287.5" ></text>
</g>
<g >
<title>TChain::GetListOfBranches (1 samples, 0.04%)</title><rect x="903.6" y="965" width="0.4" height="15.0" fill="rgb(253,133,14)" rx="2" ry="2" />
<text  x="906.59" y="975.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertType (1 samples, 0.04%)</title><rect x="1117.3" y="757" width="0.4" height="15.0" fill="rgb(216,153,34)" rx="2" ry="2" />
<text  x="1120.30" y="767.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1176.8" y="709" width="0.4" height="15.0" fill="rgb(238,59,21)" rx="2" ry="2" />
<text  x="1179.78" y="719.5" ></text>
</g>
<g >
<title>[bash] (4 samples, 0.15%)</title><rect x="22.3" y="629" width="1.8" height="15.0" fill="rgb(234,58,39)" rx="2" ry="2" />
<text  x="25.34" y="639.5" ></text>
</g>
<g >
<title>runImpl (1 samples, 0.04%)</title><rect x="1047.7" y="629" width="0.4" height="15.0" fill="rgb(215,211,2)" rx="2" ry="2" />
<text  x="1050.68" y="639.5" ></text>
</g>
<g >
<title>clang::Type::isIncompleteType (1 samples, 0.04%)</title><rect x="1106.3" y="677" width="0.4" height="15.0" fill="rgb(230,193,36)" rx="2" ry="2" />
<text  x="1109.28" y="687.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.04%)</title><rect x="846.3" y="533" width="0.5" height="15.0" fill="rgb(226,209,43)" rx="2" ry="2" />
<text  x="849.31" y="543.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentNameType (1 samples, 0.04%)</title><rect x="1131.4" y="869" width="0.4" height="15.0" fill="rgb(250,218,11)" rx="2" ry="2" />
<text  x="1134.40" y="879.5" ></text>
</g>
<g >
<title>execute_command (21 samples, 0.78%)</title><rect x="12.6" y="709" width="9.3" height="15.0" fill="rgb(237,17,4)" rx="2" ry="2" />
<text  x="15.64" y="719.5" ></text>
</g>
<g >
<title>.annobin_rtld.c (6 samples, 0.22%)</title><rect x="1164.0" y="965" width="2.6" height="15.0" fill="rgb(248,60,9)" rx="2" ry="2" />
<text  x="1167.00" y="975.5" ></text>
</g>
<g >
<title>llvm::APInt::operator|= (1 samples, 0.04%)</title><rect x="893.5" y="581" width="0.4" height="15.0" fill="rgb(253,59,53)" rx="2" ry="2" />
<text  x="896.46" y="591.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::getSCEV (1 samples, 0.04%)</title><rect x="1159.2" y="613" width="0.4" height="15.0" fill="rgb(242,96,52)" rx="2" ry="2" />
<text  x="1162.16" y="623.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType (2 samples, 0.07%)</title><rect x="1131.8" y="821" width="0.9" height="15.0" fill="rgb(225,1,51)" rx="2" ry="2" />
<text  x="1134.84" y="831.5" ></text>
</g>
<g >
<title>llvm::AllocaInst::AllocaInst (1 samples, 0.04%)</title><rect x="1106.7" y="597" width="0.5" height="15.0" fill="rgb(242,24,30)" rx="2" ry="2" />
<text  x="1109.72" y="607.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition (4 samples, 0.15%)</title><rect x="1134.0" y="869" width="1.8" height="15.0" fill="rgb(231,100,54)" rx="2" ry="2" />
<text  x="1137.04" y="879.5" ></text>
</g>
<g >
<title>root.exe (2,582 samples, 96.42%)</title><rect x="26.3" y="981" width="1137.7" height="15.0" fill="rgb(252,46,42)" rx="2" ry="2" />
<text  x="29.30" y="991.5" >root.exe</text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1164.0" y="901" width="0.4" height="15.0" fill="rgb(245,190,38)" rx="2" ry="2" />
<text  x="1167.00" y="911.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (7 samples, 0.26%)</title><rect x="897.4" y="693" width="3.1" height="15.0" fill="rgb(254,201,21)" rx="2" ry="2" />
<text  x="900.42" y="703.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddType (1 samples, 0.04%)</title><rect x="1123.0" y="645" width="0.5" height="15.0" fill="rgb(219,181,51)" rx="2" ry="2" />
<text  x="1126.02" y="655.5" ></text>
</g>
<g >
<title>clang::Sema::CheckCompletedExpr (1 samples, 0.04%)</title><rect x="1134.5" y="725" width="0.4" height="15.0" fill="rgb(252,208,45)" rx="2" ry="2" />
<text  x="1137.48" y="735.5" ></text>
</g>
<g >
<title>clang::ItaniumVTableContext::getVTableLayout (1 samples, 0.04%)</title><rect x="1107.6" y="693" width="0.4" height="15.0" fill="rgb(246,100,36)" rx="2" ry="2" />
<text  x="1110.60" y="703.5" ></text>
</g>
<g >
<title>dlopen_doit (1 samples, 0.04%)</title><rect x="1149.5" y="405" width="0.4" height="15.0" fill="rgb(229,98,2)" rx="2" ry="2" />
<text  x="1152.46" y="415.5" ></text>
</g>
<g >
<title>llvm::CallGraphWrapperPass::runOnModule (1 samples, 0.04%)</title><rect x="1030.1" y="645" width="0.4" height="15.0" fill="rgb(215,44,29)" rx="2" ry="2" />
<text  x="1033.05" y="655.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddTemplateArgument (1 samples, 0.04%)</title><rect x="1103.2" y="293" width="0.4" height="15.0" fill="rgb(210,113,36)" rx="2" ry="2" />
<text  x="1106.20" y="303.5" ></text>
</g>
<g >
<title>cling::MetaProcessor::process (12 samples, 0.45%)</title><rect x="905.8" y="933" width="5.3" height="15.0" fill="rgb(239,32,21)" rx="2" ry="2" />
<text  x="908.80" y="943.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1172.8" y="693" width="0.5" height="15.0" fill="rgb(214,218,31)" rx="2" ry="2" />
<text  x="1175.82" y="703.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1171.9" y="773" width="0.5" height="15.0" fill="rgb(248,180,37)" rx="2" ry="2" />
<text  x="1174.93" y="783.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (1 samples, 0.04%)</title><rect x="831.8" y="549" width="0.4" height="15.0" fill="rgb(242,164,8)" rx="2" ry="2" />
<text  x="834.77" y="559.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1137.6" y="933" width="0.4" height="15.0" fill="rgb(220,48,53)" rx="2" ry="2" />
<text  x="1140.57" y="943.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.04%)</title><rect x="1149.9" y="757" width="0.4" height="15.0" fill="rgb(215,13,14)" rx="2" ry="2" />
<text  x="1152.90" y="767.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitBinaryOperatorLValue (1 samples, 0.04%)</title><rect x="1105.4" y="821" width="0.4" height="15.0" fill="rgb(220,220,26)" rx="2" ry="2" />
<text  x="1108.40" y="831.5" ></text>
</g>
<g >
<title>llvm::orc::SimpleCompiler::operator() (83 samples, 3.10%)</title><rect x="830.4" y="645" width="36.6" height="15.0" fill="rgb(214,117,3)" rx="2" ry="2" />
<text  x="833.45" y="655.5" >llv..</text>
</g>
<g >
<title>llvm::orc::JITSymbolResolverAdapter::lookup (2 samples, 0.07%)</title><rect x="1145.9" y="837" width="0.9" height="15.0" fill="rgb(228,95,22)" rx="2" ry="2" />
<text  x="1148.94" y="847.5" ></text>
</g>
<g >
<title>_dl_start (1 samples, 0.04%)</title><rect x="334.7" y="949" width="0.5" height="15.0" fill="rgb(251,119,48)" rx="2" ry="2" />
<text  x="337.74" y="959.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1168.4" y="837" width="0.4" height="15.0" fill="rgb(246,113,18)" rx="2" ry="2" />
<text  x="1171.41" y="847.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitRedeclarable&lt;clang::RedeclarableTemplateDecl&gt; (1 samples, 0.04%)</title><rect x="1099.2" y="741" width="0.5" height="15.0" fill="rgb(240,225,46)" rx="2" ry="2" />
<text  x="1102.23" y="751.5" ></text>
</g>
<g >
<title>llvm::AttrBuilder::removeAttribute (1 samples, 0.04%)</title><rect x="1110.2" y="533" width="0.5" height="15.0" fill="rgb(207,5,24)" rx="2" ry="2" />
<text  x="1113.25" y="543.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (6 samples, 0.22%)</title><rect x="1109.8" y="821" width="2.6" height="15.0" fill="rgb(218,86,10)" rx="2" ry="2" />
<text  x="1112.81" y="831.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentScopeDeclRefExpr (1 samples, 0.04%)</title><rect x="1141.1" y="837" width="0.4" height="15.0" fill="rgb(252,154,12)" rx="2" ry="2" />
<text  x="1144.09" y="847.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::runOnMachineFunction (4 samples, 0.15%)</title><rect x="906.2" y="597" width="1.8" height="15.0" fill="rgb(221,191,26)" rx="2" ry="2" />
<text  x="909.24" y="607.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertTypeForMem (1 samples, 0.04%)</title><rect x="1117.3" y="661" width="0.4" height="15.0" fill="rgb(234,83,0)" rx="2" ry="2" />
<text  x="1120.30" y="671.5" ></text>
</g>
<g >
<title>llvm::TargetLibraryInfoImpl::getLibFunc (1 samples, 0.04%)</title><rect x="899.2" y="597" width="0.4" height="15.0" fill="rgb(237,142,48)" rx="2" ry="2" />
<text  x="902.19" y="607.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::GenerateCode (2 samples, 0.07%)</title><rect x="1104.1" y="933" width="0.9" height="15.0" fill="rgb(205,48,35)" rx="2" ry="2" />
<text  x="1107.08" y="943.5" ></text>
</g>
<g >
<title>[unknown] (18 samples, 0.67%)</title><rect x="1179.9" y="821" width="7.9" height="15.0" fill="rgb(225,207,3)" rx="2" ry="2" />
<text  x="1182.87" y="831.5" ></text>
</g>
<g >
<title>cling::Interpreter::RunFunction (2 samples, 0.07%)</title><rect x="1145.9" y="949" width="0.9" height="15.0" fill="rgb(233,107,4)" rx="2" ry="2" />
<text  x="1148.94" y="959.5" ></text>
</g>
<g >
<title>llvm::LPPassManager::runOnFunction (1 samples, 0.04%)</title><rect x="692.1" y="773" width="0.4" height="15.0" fill="rgb(232,215,13)" rx="2" ry="2" />
<text  x="695.09" y="783.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1129.2" y="757" width="0.4" height="15.0" fill="rgb(221,133,41)" rx="2" ry="2" />
<text  x="1132.19" y="767.5" ></text>
</g>
<g >
<title>clang::Sema::SubstType (1 samples, 0.04%)</title><rect x="1131.4" y="645" width="0.4" height="15.0" fill="rgb(224,48,18)" rx="2" ry="2" />
<text  x="1134.40" y="655.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::GenerateCode (1 samples, 0.04%)</title><rect x="1114.2" y="869" width="0.5" height="15.0" fill="rgb(245,69,16)" rx="2" ry="2" />
<text  x="1117.21" y="879.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteDeclContext (1 samples, 0.04%)</title><rect x="1137.6" y="757" width="0.4" height="15.0" fill="rgb(233,92,42)" rx="2" ry="2" />
<text  x="1140.57" y="767.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddDecl (1 samples, 0.04%)</title><rect x="1128.3" y="565" width="0.5" height="15.0" fill="rgb(237,65,33)" rx="2" ry="2" />
<text  x="1131.31" y="575.5" ></text>
</g>
<g >
<title>execute_command_internal (4 samples, 0.15%)</title><rect x="22.3" y="869" width="1.8" height="15.0" fill="rgb(217,19,4)" rx="2" ry="2" />
<text  x="25.34" y="879.5" ></text>
</g>
<g >
<title>llvm::FoldingSet&lt;clang::NestedNameSpecifier&gt;::NodeEquals (1 samples, 0.04%)</title><rect x="1122.1" y="661" width="0.5" height="15.0" fill="rgb(215,84,5)" rx="2" ry="2" />
<text  x="1125.14" y="671.5" ></text>
</g>
<g >
<title>llvm::SmallVectorTemplateBase&lt;llvm::cfg::Update&lt;llvm::BasicBlock*&gt;, true&gt;::push_back (1 samples, 0.04%)</title><rect x="899.6" y="565" width="0.5" height="15.0" fill="rgb(240,129,50)" rx="2" ry="2" />
<text  x="902.63" y="575.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::TargetTransformInfo (llvm::Function const&amp;), llvm::TargetMachine::getTargetIRAnalysis()::{lambda(llvm::Function const&amp;)#1}&gt;::_M_invoke (1 samples, 0.04%)</title><rect x="694.7" y="757" width="0.5" height="15.0" fill="rgb(238,15,44)" rx="2" ry="2" />
<text  x="697.73" y="767.5" ></text>
</g>
<g >
<title>clang::FunctionDecl::getNumParams (1 samples, 0.04%)</title><rect x="1136.7" y="917" width="0.4" height="15.0" fill="rgb(254,196,26)" rx="2" ry="2" />
<text  x="1139.68" y="927.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitClassTemplateDecl (1 samples, 0.04%)</title><rect x="1099.2" y="773" width="0.5" height="15.0" fill="rgb(220,165,40)" rx="2" ry="2" />
<text  x="1102.23" y="783.5" ></text>
</g>
<g >
<title>getInterestingTagDecl (1 samples, 0.04%)</title><rect x="1131.0" y="645" width="0.4" height="15.0" fill="rgb(236,77,13)" rx="2" ry="2" />
<text  x="1133.96" y="655.5" ></text>
</g>
<g >
<title>clang::Sema::SubstBaseSpecifiers (1 samples, 0.04%)</title><rect x="1130.5" y="661" width="0.5" height="15.0" fill="rgb(236,55,7)" rx="2" ry="2" />
<text  x="1133.52" y="671.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiatingTemplate::InstantiatingTemplate (1 samples, 0.04%)</title><rect x="1124.8" y="629" width="0.4" height="15.0" fill="rgb(248,214,33)" rx="2" ry="2" />
<text  x="1127.79" y="639.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="1115.5" y="677" width="0.5" height="15.0" fill="rgb(228,80,10)" rx="2" ry="2" />
<text  x="1118.53" y="687.5" ></text>
</g>
<g >
<title>clang::TypedefNameDecl::getUnderlyingType (1 samples, 0.04%)</title><rect x="1138.0" y="693" width="0.4" height="15.0" fill="rgb(207,220,44)" rx="2" ry="2" />
<text  x="1141.01" y="703.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::PopCleanupBlocks (1 samples, 0.04%)</title><rect x="1108.0" y="725" width="0.5" height="15.0" fill="rgb(216,180,5)" rx="2" ry="2" />
<text  x="1111.04" y="735.5" ></text>
</g>
<g >
<title>clang::TemplateDeclInstantiator::SubstFunctionType (1 samples, 0.04%)</title><rect x="1138.4" y="965" width="0.5" height="15.0" fill="rgb(221,64,5)" rx="2" ry="2" />
<text  x="1141.45" y="975.5" ></text>
</g>
<g >
<title>LookupDirect (1 samples, 0.04%)</title><rect x="1133.6" y="661" width="0.4" height="15.0" fill="rgb(230,224,25)" rx="2" ry="2" />
<text  x="1136.60" y="671.5" ></text>
</g>
<g >
<title>clang::ASTRecordReader::readRecord (1 samples, 0.04%)</title><rect x="1099.2" y="501" width="0.5" height="15.0" fill="rgb(252,14,16)" rx="2" ry="2" />
<text  x="1102.23" y="511.5" ></text>
</g>
<g >
<title>llvm::Argument::hasNonNullAttr (1 samples, 0.04%)</title><rect x="892.1" y="597" width="0.5" height="15.0" fill="rgb(214,120,43)" rx="2" ry="2" />
<text  x="895.14" y="607.5" ></text>
</g>
<g >
<title>cling::Interpreter::DeclareInternal (1 samples, 0.04%)</title><rect x="1027.4" y="757" width="0.4" height="15.0" fill="rgb(231,186,26)" rx="2" ry="2" />
<text  x="1030.41" y="767.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddTemplateArgument (1 samples, 0.04%)</title><rect x="1140.2" y="533" width="0.4" height="15.0" fill="rgb(249,168,18)" rx="2" ry="2" />
<text  x="1143.21" y="543.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXMemberCallExpr (1 samples, 0.04%)</title><rect x="1101.0" y="821" width="0.4" height="15.0" fill="rgb(224,135,20)" rx="2" ry="2" />
<text  x="1103.99" y="831.5" ></text>
</g>
<g >
<title>clang::EvaluatedExprVisitorBase&lt;std::add_pointer, (anonymous namespace)::SequenceChecker&gt;::VisitStmt (1 samples, 0.04%)</title><rect x="1134.5" y="677" width="0.4" height="15.0" fill="rgb(248,179,29)" rx="2" ry="2" />
<text  x="1137.48" y="687.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTemplateTypeArgument (1 samples, 0.04%)</title><rect x="1141.5" y="741" width="0.5" height="15.0" fill="rgb(245,37,25)" rx="2" ry="2" />
<text  x="1144.53" y="751.5" ></text>
</g>
<g >
<title>llvm::orc::SimpleCompiler::operator() (1 samples, 0.04%)</title><rect x="1152.1" y="885" width="0.4" height="15.0" fill="rgb(246,117,33)" rx="2" ry="2" />
<text  x="1155.11" y="895.5" ></text>
</g>
<g >
<title>__nptl_set_robust (1 samples, 0.04%)</title><rect x="1097.0" y="837" width="0.5" height="15.0" fill="rgb(232,23,30)" rx="2" ry="2" />
<text  x="1100.03" y="847.5" ></text>
</g>
<g >
<title>llvm::MCObjectStreamer::EmitInstruction (1 samples, 0.04%)</title><rect x="908.0" y="533" width="0.4" height="15.0" fill="rgb(224,168,41)" rx="2" ry="2" />
<text  x="911.00" y="543.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.11%)</title><rect x="1164.4" y="917" width="1.4" height="15.0" fill="rgb(213,158,54)" rx="2" ry="2" />
<text  x="1167.44" y="927.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1074.6" y="773" width="0.4" height="15.0" fill="rgb(223,62,9)" rx="2" ry="2" />
<text  x="1077.56" y="783.5" ></text>
</g>
<g >
<title>clang::RedeclarableTemplateDecl::loadLazySpecializationsImpl (1 samples, 0.04%)</title><rect x="1122.6" y="805" width="0.4" height="15.0" fill="rgb(216,196,43)" rx="2" ry="2" />
<text  x="1125.58" y="815.5" ></text>
</g>
<g >
<title>llvm::LoopInfoBase&lt;llvm::BasicBlock, llvm::Loop&gt;::analyze (1 samples, 0.04%)</title><rect x="901.8" y="645" width="0.5" height="15.0" fill="rgb(230,181,6)" rx="2" ry="2" />
<text  x="904.83" y="655.5" ></text>
</g>
<g >
<title>llvm::orc::lookupWithLegacyFn&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}::operator()(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;) const::{lambda(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)#1}&gt; (2 samples, 0.07%)</title><rect x="1145.9" y="805" width="0.9" height="15.0" fill="rgb(239,158,53)" rx="2" ry="2" />
<text  x="1148.94" y="815.5" ></text>
</g>
<g >
<title>execute_command_internal (5 samples, 0.19%)</title><rect x="10.4" y="693" width="2.2" height="15.0" fill="rgb(229,158,17)" rx="2" ry="2" />
<text  x="13.44" y="703.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::GetExternalCXXBaseSpecifiers (1 samples, 0.04%)</title><rect x="1123.5" y="661" width="0.4" height="15.0" fill="rgb(241,115,25)" rx="2" ry="2" />
<text  x="1126.47" y="671.5" ></text>
</g>
<g >
<title>TCling::LoadPCMImpl (1 samples, 0.04%)</title><rect x="905.4" y="965" width="0.4" height="15.0" fill="rgb(251,79,5)" rx="2" ry="2" />
<text  x="908.35" y="975.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateVariableDefinition (1 samples, 0.04%)</title><rect x="1130.1" y="645" width="0.4" height="15.0" fill="rgb(254,69,25)" rx="2" ry="2" />
<text  x="1133.07" y="655.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (1 samples, 0.04%)</title><rect x="1155.2" y="773" width="0.4" height="15.0" fill="rgb(248,71,28)" rx="2" ry="2" />
<text  x="1158.19" y="783.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="21.9" y="917" width="0.4" height="15.0" fill="rgb(231,84,7)" rx="2" ry="2" />
<text  x="24.90" y="927.5" ></text>
</g>
<g >
<title>TEnum::GetEnum (1 samples, 0.04%)</title><rect x="904.5" y="949" width="0.4" height="15.0" fill="rgb(250,69,41)" rx="2" ry="2" />
<text  x="907.47" y="959.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass (1 samples, 0.04%)</title><rect x="1124.8" y="885" width="0.4" height="15.0" fill="rgb(225,218,2)" rx="2" ry="2" />
<text  x="1127.79" y="895.5" ></text>
</g>
<g >
<title>__GI___fork (4 samples, 0.15%)</title><rect x="1095.7" y="853" width="1.8" height="15.0" fill="rgb(206,190,36)" rx="2" ry="2" />
<text  x="1098.71" y="863.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitAggExpr (1 samples, 0.04%)</title><rect x="1106.7" y="869" width="0.5" height="15.0" fill="rgb(234,211,37)" rx="2" ry="2" />
<text  x="1109.72" y="879.5" ></text>
</g>
<g >
<title>clang::Sema::BuildCXXConstructExpr (1 samples, 0.04%)</title><rect x="1097.5" y="901" width="0.4" height="15.0" fill="rgb(249,193,22)" rx="2" ry="2" />
<text  x="1100.47" y="911.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1176.8" y="693" width="0.4" height="15.0" fill="rgb(229,216,21)" rx="2" ry="2" />
<text  x="1179.78" y="703.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (1 samples, 0.04%)</title><rect x="1146.8" y="773" width="0.5" height="15.0" fill="rgb(222,51,46)" rx="2" ry="2" />
<text  x="1149.82" y="783.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.15%)</title><rect x="1083.8" y="789" width="1.8" height="15.0" fill="rgb(217,16,41)" rx="2" ry="2" />
<text  x="1086.81" y="799.5" ></text>
</g>
<g >
<title>llvm::ContextualFoldingSet&lt;clang::TemplateSpecializationType, clang::ASTContext&amp;&gt;::NodeEquals (1 samples, 0.04%)</title><rect x="1100.1" y="725" width="0.5" height="15.0" fill="rgb(206,10,33)" rx="2" ry="2" />
<text  x="1103.11" y="735.5" ></text>
</g>
<g >
<title>__nptl_set_robust (4 samples, 0.15%)</title><rect x="1083.8" y="805" width="1.8" height="15.0" fill="rgb(218,43,36)" rx="2" ry="2" />
<text  x="1086.81" y="815.5" ></text>
</g>
<g >
<title>llvm::AttributeSetNode::getAttribute (1 samples, 0.04%)</title><rect x="1046.4" y="549" width="0.4" height="15.0" fill="rgb(225,132,31)" rx="2" ry="2" />
<text  x="1049.36" y="559.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::commitTransaction (1 samples, 0.04%)</title><rect x="1147.3" y="917" width="0.4" height="15.0" fill="rgb(238,4,18)" rx="2" ry="2" />
<text  x="1150.26" y="927.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitFunctionTemplateDecl (1 samples, 0.04%)</title><rect x="904.5" y="661" width="0.4" height="15.0" fill="rgb(228,113,35)" rx="2" ry="2" />
<text  x="907.47" y="671.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1067.9" y="693" width="0.5" height="15.0" fill="rgb(215,141,3)" rx="2" ry="2" />
<text  x="1070.95" y="703.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (20 samples, 0.75%)</title><rect x="690.3" y="805" width="8.8" height="15.0" fill="rgb(247,10,52)" rx="2" ry="2" />
<text  x="693.33" y="815.5" ></text>
</g>
<g >
<title>std::vector&lt;llvm::BranchProbability, std::allocator&lt;llvm::BranchProbability&gt; &gt;::_M_realloc_insert&lt;llvm::BranchProbability const&amp;&gt; (1 samples, 0.04%)</title><rect x="907.1" y="485" width="0.5" height="15.0" fill="rgb(241,165,53)" rx="2" ry="2" />
<text  x="910.12" y="495.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformNestedNameSpecifierLoc (1 samples, 0.04%)</title><rect x="1135.4" y="725" width="0.4" height="15.0" fill="rgb(230,76,17)" rx="2" ry="2" />
<text  x="1138.36" y="735.5" ></text>
</g>
<g >
<title>clang::LinkageComputer::getLVForTemplateArgumentList (1 samples, 0.04%)</title><rect x="1103.2" y="581" width="0.4" height="15.0" fill="rgb(217,221,18)" rx="2" ry="2" />
<text  x="1106.20" y="591.5" ></text>
</g>
<g >
<title>llvm::MCAssembler::layout (1 samples, 0.04%)</title><rect x="830.9" y="549" width="0.4" height="15.0" fill="rgb(230,54,24)" rx="2" ry="2" />
<text  x="833.89" y="559.5" ></text>
</g>
<g >
<title>computeKnownBits (1 samples, 0.04%)</title><rect x="696.1" y="645" width="0.4" height="15.0" fill="rgb(210,86,16)" rx="2" ry="2" />
<text  x="699.06" y="655.5" ></text>
</g>
<g >
<title>clang::QualType::getCanonicalType (1 samples, 0.04%)</title><rect x="1142.4" y="709" width="0.5" height="15.0" fill="rgb(234,144,19)" rx="2" ry="2" />
<text  x="1145.41" y="719.5" ></text>
</g>
<g >
<title>clang::Sema::SubstBaseSpecifiers (5 samples, 0.19%)</title><rect x="1128.8" y="949" width="2.2" height="15.0" fill="rgb(205,102,30)" rx="2" ry="2" />
<text  x="1131.75" y="959.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1086.9" y="709" width="0.4" height="15.0" fill="rgb(238,88,9)" rx="2" ry="2" />
<text  x="1089.89" y="719.5" ></text>
</g>
<g >
<title>clang::RedeclarableTemplateDecl::findSpecializationImpl&lt;clang::ClassTemplateSpecializationDecl&gt; (1 samples, 0.04%)</title><rect x="1135.8" y="725" width="0.4" height="15.0" fill="rgb(232,118,44)" rx="2" ry="2" />
<text  x="1138.80" y="735.5" ></text>
</g>
<g >
<title>clang::TemplateDeclInstantiator::SubstFunctionType (1 samples, 0.04%)</title><rect x="1129.2" y="837" width="0.4" height="15.0" fill="rgb(227,50,20)" rx="2" ry="2" />
<text  x="1132.19" y="847.5" ></text>
</g>
<g >
<title>__GI__IO_default_xsgetn (2 samples, 0.07%)</title><rect x="1068.4" y="741" width="0.9" height="15.0" fill="rgb(210,138,36)" rx="2" ry="2" />
<text  x="1071.39" y="751.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::LowerArguments (1 samples, 0.04%)</title><rect x="1146.8" y="677" width="0.5" height="15.0" fill="rgb(219,38,52)" rx="2" ry="2" />
<text  x="1149.82" y="687.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1093.9" y="709" width="0.5" height="15.0" fill="rgb(222,1,1)" rx="2" ry="2" />
<text  x="1096.94" y="719.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1124.8" y="725" width="0.4" height="15.0" fill="rgb(249,201,3)" rx="2" ry="2" />
<text  x="1127.79" y="735.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::getAddExpr (1 samples, 0.04%)</title><rect x="692.1" y="581" width="0.4" height="15.0" fill="rgb(225,30,33)" rx="2" ry="2" />
<text  x="695.09" y="591.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformUnaryOperator (1 samples, 0.04%)</title><rect x="1128.3" y="773" width="0.5" height="15.0" fill="rgb(248,155,5)" rx="2" ry="2" />
<text  x="1131.31" y="783.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnModule (3 samples, 0.11%)</title><rect x="1157.0" y="901" width="1.3" height="15.0" fill="rgb(223,56,2)" rx="2" ry="2" />
<text  x="1159.95" y="911.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1143.3" y="933" width="0.4" height="15.0" fill="rgb(225,136,30)" rx="2" ry="2" />
<text  x="1146.29" y="943.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveRelocations (2 samples, 0.07%)</title><rect x="1145.9" y="869" width="0.9" height="15.0" fill="rgb(216,227,9)" rx="2" ry="2" />
<text  x="1148.94" y="879.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.04%)</title><rect x="1141.5" y="869" width="0.5" height="15.0" fill="rgb(205,172,29)" rx="2" ry="2" />
<text  x="1144.53" y="879.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1020.4" y="933" width="0.4" height="15.0" fill="rgb(206,150,40)" rx="2" ry="2" />
<text  x="1023.36" y="943.5" ></text>
</g>
<g >
<title>cling::MetaParser::isCommand (6 samples, 0.22%)</title><rect x="1148.1" y="949" width="2.7" height="15.0" fill="rgb(247,205,4)" rx="2" ry="2" />
<text  x="1151.14" y="959.5" ></text>
</g>
<g >
<title>llvm::MemorySSA::OptimizeUses::optimizeUses (1 samples, 0.04%)</title><rect x="1150.3" y="709" width="0.5" height="15.0" fill="rgb(249,123,51)" rx="2" ry="2" />
<text  x="1153.34" y="719.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGBuilder::visitBr (1 samples, 0.04%)</title><rect x="907.1" y="533" width="0.5" height="15.0" fill="rgb(217,13,20)" rx="2" ry="2" />
<text  x="910.12" y="543.5" ></text>
</g>
<g >
<title>clang::TemplateDeclInstantiator::InstantiateTypedefNameDecl (1 samples, 0.04%)</title><rect x="1131.4" y="933" width="0.4" height="15.0" fill="rgb(236,104,4)" rx="2" ry="2" />
<text  x="1134.40" y="943.5" ></text>
</g>
<g >
<title>llvm::SelectionDAG::getGlobalAddress (1 samples, 0.04%)</title><rect x="1148.6" y="517" width="0.4" height="15.0" fill="rgb(221,87,49)" rx="2" ry="2" />
<text  x="1151.58" y="527.5" ></text>
</g>
<g >
<title>cling::Interpreter::EvaluateInternal (4 samples, 0.15%)</title><rect x="1148.1" y="901" width="1.8" height="15.0" fill="rgb(229,13,46)" rx="2" ry="2" />
<text  x="1151.14" y="911.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallArgs (1 samples, 0.04%)</title><rect x="1101.4" y="933" width="0.5" height="15.0" fill="rgb(231,204,33)" rx="2" ry="2" />
<text  x="1104.43" y="943.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="18.8" y="277" width="0.5" height="15.0" fill="rgb(243,165,33)" rx="2" ry="2" />
<text  x="21.81" y="287.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject&lt;std::shared_ptr&lt;llvm::RuntimeDyld::MemoryManager&gt; &gt;::getSymbolMaterializer(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda()#1}&gt;::_M_invoke (1 samples, 0.04%)</title><rect x="1147.7" y="869" width="0.4" height="15.0" fill="rgb(208,52,15)" rx="2" ry="2" />
<text  x="1150.70" y="879.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (1 samples, 0.04%)</title><rect x="910.6" y="725" width="0.5" height="15.0" fill="rgb(219,121,11)" rx="2" ry="2" />
<text  x="913.64" y="735.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;, void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;::LookupBucketFor&lt;void const*&gt; (3 samples, 0.11%)</title><rect x="852.9" y="549" width="1.3" height="15.0" fill="rgb(241,212,26)" rx="2" ry="2" />
<text  x="855.92" y="559.5" ></text>
</g>
<g >
<title>TClass::GetClass (1 samples, 0.04%)</title><rect x="783.3" y="741" width="0.4" height="15.0" fill="rgb(205,25,21)" rx="2" ry="2" />
<text  x="786.30" y="751.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformNestedNameSpecifierLoc (1 samples, 0.04%)</title><rect x="1135.8" y="853" width="0.4" height="15.0" fill="rgb(233,129,17)" rx="2" ry="2" />
<text  x="1138.80" y="863.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformReturnStmt (1 samples, 0.04%)</title><rect x="1135.8" y="917" width="0.4" height="15.0" fill="rgb(220,63,0)" rx="2" ry="2" />
<text  x="1138.80" y="927.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass (7 samples, 0.26%)</title><rect x="1128.8" y="965" width="3.0" height="15.0" fill="rgb(239,76,16)" rx="2" ry="2" />
<text  x="1131.75" y="975.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (11 samples, 0.41%)</title><rect x="1039.3" y="613" width="4.9" height="15.0" fill="rgb(232,40,13)" rx="2" ry="2" />
<text  x="1042.31" y="623.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="21.9" y="565" width="0.4" height="15.0" fill="rgb(221,84,26)" rx="2" ry="2" />
<text  x="24.90" y="575.5" ></text>
</g>
<g >
<title>clang::TemplateArgumentList::ComputeODRHash (1 samples, 0.04%)</title><rect x="1124.3" y="661" width="0.5" height="15.0" fill="rgb(250,199,16)" rx="2" ry="2" />
<text  x="1127.35" y="671.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddType (1 samples, 0.04%)</title><rect x="1135.8" y="661" width="0.4" height="15.0" fill="rgb(232,103,25)" rx="2" ry="2" />
<text  x="1138.80" y="671.5" ></text>
</g>
<g >
<title>llvm::orc::LambdaSymbolResolver&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt; const&amp;)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}&gt;::lookup (136 samples, 5.08%)</title><rect x="830.0" y="693" width="59.9" height="15.0" fill="rgb(254,56,21)" rx="2" ry="2" />
<text  x="833.01" y="703.5" >llvm::..</text>
</g>
<g >
<title>clang::ASTDeclReader::VisitTypedefNameDecl (1 samples, 0.04%)</title><rect x="1137.1" y="549" width="0.5" height="15.0" fill="rgb(249,45,31)" rx="2" ry="2" />
<text  x="1140.12" y="559.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXMemberOrOperatorMemberCallExpr (1 samples, 0.04%)</title><rect x="1102.3" y="805" width="0.5" height="15.0" fill="rgb(243,200,49)" rx="2" ry="2" />
<text  x="1105.32" y="815.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (2 samples, 0.07%)</title><rect x="1130.1" y="789" width="0.9" height="15.0" fill="rgb(231,103,40)" rx="2" ry="2" />
<text  x="1133.07" y="799.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveExternalSymbols (1 samples, 0.04%)</title><rect x="1152.1" y="965" width="0.4" height="15.0" fill="rgb(247,103,19)" rx="2" ry="2" />
<text  x="1155.11" y="975.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke (1 samples, 0.04%)</title><rect x="785.5" y="869" width="0.4" height="15.0" fill="rgb(232,148,49)" rx="2" ry="2" />
<text  x="788.50" y="879.5" ></text>
</g>
<g >
<title>TBuildRealData::Inspect (1 samples, 0.04%)</title><rect x="905.4" y="613" width="0.4" height="15.0" fill="rgb(252,214,47)" rx="2" ry="2" />
<text  x="908.35" y="623.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::CreateTempAlloca (1 samples, 0.04%)</title><rect x="1106.7" y="629" width="0.5" height="15.0" fill="rgb(214,21,10)" rx="2" ry="2" />
<text  x="1109.72" y="639.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallArgs&lt;clang::FunctionProtoType&gt; (1 samples, 0.04%)</title><rect x="1138.0" y="869" width="0.4" height="15.0" fill="rgb(232,168,47)" rx="2" ry="2" />
<text  x="1141.01" y="879.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentScopeDeclRefExpr (2 samples, 0.07%)</title><rect x="1130.1" y="773" width="0.9" height="15.0" fill="rgb(222,156,20)" rx="2" ry="2" />
<text  x="1133.07" y="783.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (2 samples, 0.07%)</title><rect x="889.9" y="677" width="0.9" height="15.0" fill="rgb(254,182,15)" rx="2" ry="2" />
<text  x="892.93" y="687.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl (1 samples, 0.04%)</title><rect x="1137.1" y="917" width="0.5" height="15.0" fill="rgb(239,105,15)" rx="2" ry="2" />
<text  x="1140.12" y="927.5" ></text>
</g>
<g >
<title>execute_command_internal (4 samples, 0.15%)</title><rect x="22.3" y="581" width="1.8" height="15.0" fill="rgb(210,86,10)" rx="2" ry="2" />
<text  x="25.34" y="591.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="1172.8" y="821" width="0.5" height="15.0" fill="rgb(214,120,7)" rx="2" ry="2" />
<text  x="1175.82" y="831.5" ></text>
</g>
<g >
<title>clang::NamedDecl::getLinkageInternal (1 samples, 0.04%)</title><rect x="1103.2" y="709" width="0.4" height="15.0" fill="rgb(231,11,3)" rx="2" ry="2" />
<text  x="1106.20" y="719.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXConstructorCall (1 samples, 0.04%)</title><rect x="1106.7" y="741" width="0.5" height="15.0" fill="rgb(233,43,37)" rx="2" ry="2" />
<text  x="1109.72" y="751.5" ></text>
</g>
<g >
<title>llvm::ValueHandleBase::RemoveFromUseList (1 samples, 0.04%)</title><rect x="866.6" y="565" width="0.4" height="15.0" fill="rgb(217,212,47)" rx="2" ry="2" />
<text  x="869.58" y="575.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::loadObjectImpl (2 samples, 0.07%)</title><rect x="707.5" y="773" width="0.9" height="15.0" fill="rgb(236,69,9)" rx="2" ry="2" />
<text  x="710.51" y="783.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateArgument (1 samples, 0.04%)</title><rect x="1143.7" y="773" width="0.5" height="15.0" fill="rgb(241,207,40)" rx="2" ry="2" />
<text  x="1146.73" y="783.5" ></text>
</g>
<g >
<title>TBranch::ReadLeaves1Impl (13 samples, 0.49%)</title><rect x="419.8" y="837" width="5.7" height="15.0" fill="rgb(230,65,53)" rx="2" ry="2" />
<text  x="422.78" y="847.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.04%)</title><rect x="1103.6" y="757" width="0.5" height="15.0" fill="rgb(217,124,33)" rx="2" ry="2" />
<text  x="1106.64" y="767.5" ></text>
</g>
<g >
<title>getSymbolOffsetImpl (1 samples, 0.04%)</title><rect x="905.8" y="581" width="0.4" height="15.0" fill="rgb(211,184,46)" rx="2" ry="2" />
<text  x="908.80" y="591.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass (1 samples, 0.04%)</title><rect x="1139.8" y="677" width="0.4" height="15.0" fill="rgb(235,87,39)" rx="2" ry="2" />
<text  x="1142.77" y="687.5" ></text>
</g>
<g >
<title>cling::MetaSema::actOnxCommand (1 samples, 0.04%)</title><rect x="904.0" y="741" width="0.5" height="15.0" fill="rgb(223,117,10)" rx="2" ry="2" />
<text  x="907.03" y="751.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::CreateTempAllocaWithoutCast (1 samples, 0.04%)</title><rect x="1106.7" y="645" width="0.5" height="15.0" fill="rgb(249,85,47)" rx="2" ry="2" />
<text  x="1109.72" y="655.5" ></text>
</g>
<g >
<title>TCling::Load (1 samples, 0.04%)</title><rect x="1094.8" y="933" width="0.5" height="15.0" fill="rgb(250,164,19)" rx="2" ry="2" />
<text  x="1097.82" y="943.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="431.2" y="741" width="0.5" height="15.0" fill="rgb(245,70,16)" rx="2" ry="2" />
<text  x="434.24" y="751.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1127.0" y="709" width="0.4" height="15.0" fill="rgb(222,129,52)" rx="2" ry="2" />
<text  x="1129.99" y="719.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;std::add_pointer, (anonymous namespace)::AggExprEmitter, void&gt;::Visit (1 samples, 0.04%)</title><rect x="1101.0" y="869" width="0.4" height="15.0" fill="rgb(211,55,46)" rx="2" ry="2" />
<text  x="1103.99" y="879.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveExternalSymbols (10 samples, 0.37%)</title><rect x="1159.6" y="917" width="4.4" height="15.0" fill="rgb(234,129,11)" rx="2" ry="2" />
<text  x="1162.60" y="927.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (35 samples, 1.31%)</title><rect x="1048.1" y="629" width="15.4" height="15.0" fill="rgb(235,99,53)" rx="2" ry="2" />
<text  x="1051.12" y="639.5" ></text>
</g>
<g >
<title>clang::QualType::getSplitDesugaredType (1 samples, 0.04%)</title><rect x="1138.0" y="709" width="0.4" height="15.0" fill="rgb(248,140,28)" rx="2" ry="2" />
<text  x="1141.01" y="719.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="843.7" y="533" width="0.4" height="15.0" fill="rgb(220,220,41)" rx="2" ry="2" />
<text  x="846.67" y="543.5" ></text>
</g>
<g >
<title>.annobin_rtld.c (4 samples, 0.15%)</title><rect x="24.1" y="965" width="1.8" height="15.0" fill="rgb(216,36,6)" rx="2" ry="2" />
<text  x="27.10" y="975.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTemplateArgument (1 samples, 0.04%)</title><rect x="1138.9" y="789" width="0.4" height="15.0" fill="rgb(241,150,0)" rx="2" ry="2" />
<text  x="1141.89" y="799.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::SetFunctionAttributes (1 samples, 0.04%)</title><rect x="1105.4" y="677" width="0.4" height="15.0" fill="rgb(205,110,16)" rx="2" ry="2" />
<text  x="1108.40" y="687.5" ></text>
</g>
<g >
<title>llvm::InstructionCombiningPass::runOnFunction (4 samples, 0.15%)</title><rect x="695.2" y="757" width="1.7" height="15.0" fill="rgb(246,41,26)" rx="2" ry="2" />
<text  x="698.18" y="767.5" ></text>
</g>
<g >
<title>llvm::SimpleBitstreamCursor::JumpToBit (1 samples, 0.04%)</title><rect x="905.4" y="325" width="0.4" height="15.0" fill="rgb(226,41,30)" rx="2" ry="2" />
<text  x="908.35" y="335.5" ></text>
</g>
<g >
<title>TApplication::ProcessLine (7 samples, 0.26%)</title><rect x="900.5" y="949" width="3.1" height="15.0" fill="rgb(242,164,1)" rx="2" ry="2" />
<text  x="903.51" y="959.5" ></text>
</g>
<g >
<title>collectSupportedLoops (1 samples, 0.04%)</title><rect x="696.9" y="741" width="0.5" height="15.0" fill="rgb(246,118,34)" rx="2" ry="2" />
<text  x="699.94" y="751.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (9 samples, 0.34%)</title><rect x="691.2" y="789" width="4.0" height="15.0" fill="rgb(218,30,44)" rx="2" ry="2" />
<text  x="694.21" y="799.5" ></text>
</g>
<g >
<title>_start (26 samples, 0.97%)</title><rect x="10.4" y="965" width="11.5" height="15.0" fill="rgb(213,67,53)" rx="2" ry="2" />
<text  x="13.44" y="975.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveRelocations (2 samples, 0.07%)</title><rect x="684.6" y="789" width="0.9" height="15.0" fill="rgb(244,126,22)" rx="2" ry="2" />
<text  x="687.60" y="799.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::executeWrapper (1 samples, 0.04%)</title><rect x="1147.7" y="901" width="0.4" height="15.0" fill="rgb(217,72,50)" rx="2" ry="2" />
<text  x="1150.70" y="911.5" ></text>
</g>
<g >
<title>combineInstructionsOverFunction (1 samples, 0.04%)</title><rect x="910.6" y="693" width="0.5" height="15.0" fill="rgb(254,134,32)" rx="2" ry="2" />
<text  x="913.64" y="703.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::GenerateCode (1 samples, 0.04%)</title><rect x="1109.8" y="501" width="0.4" height="15.0" fill="rgb(237,96,31)" rx="2" ry="2" />
<text  x="1112.81" y="511.5" ></text>
</g>
<g >
<title>clang::DeclContext::LoadLexicalDeclsFromExternalStorage (1 samples, 0.04%)</title><rect x="783.7" y="645" width="0.5" height="15.0" fill="rgb(244,58,44)" rx="2" ry="2" />
<text  x="786.74" y="655.5" ></text>
</g>
<g >
<title>llvm::Module::getModuleFlagsMetadata (1 samples, 0.04%)</title><rect x="1035.8" y="581" width="0.4" height="15.0" fill="rgb(249,46,30)" rx="2" ry="2" />
<text  x="1038.78" y="591.5" ></text>
</g>
<g >
<title>llvm::AttributeSet::removeAttribute (1 samples, 0.04%)</title><rect x="1113.8" y="789" width="0.4" height="15.0" fill="rgb(245,140,16)" rx="2" ry="2" />
<text  x="1116.77" y="799.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.04%)</title><rect x="1109.8" y="613" width="0.4" height="15.0" fill="rgb(235,23,29)" rx="2" ry="2" />
<text  x="1112.81" y="623.5" ></text>
</g>
<g >
<title>llvm::Function::addAttribute (1 samples, 0.04%)</title><rect x="1114.2" y="837" width="0.5" height="15.0" fill="rgb(247,109,29)" rx="2" ry="2" />
<text  x="1117.21" y="847.5" ></text>
</g>
<g >
<title>llvm::MCObjectStreamer::EmitInstructionImpl (1 samples, 0.04%)</title><rect x="908.0" y="517" width="0.4" height="15.0" fill="rgb(224,173,40)" rx="2" ry="2" />
<text  x="911.00" y="527.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1189.1" y="741" width="0.5" height="15.0" fill="rgb(245,0,13)" rx="2" ry="2" />
<text  x="1192.12" y="751.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1067.9" y="661" width="0.5" height="15.0" fill="rgb(246,136,38)" rx="2" ry="2" />
<text  x="1070.95" y="671.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformNestedNameSpecifierLoc (1 samples, 0.04%)</title><rect x="1134.9" y="677" width="0.5" height="15.0" fill="rgb(240,98,43)" rx="2" ry="2" />
<text  x="1137.92" y="687.5" ></text>
</g>
<g >
<title>clang::Decl::getASTContext (1 samples, 0.04%)</title><rect x="1141.1" y="565" width="0.4" height="15.0" fill="rgb(221,228,13)" rx="2" ry="2" />
<text  x="1144.09" y="575.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveExternalSymbols (136 samples, 5.08%)</title><rect x="830.0" y="725" width="59.9" height="15.0" fill="rgb(233,212,33)" rx="2" ry="2" />
<text  x="833.01" y="735.5" >llvm::..</text>
</g>
<g >
<title>llvm::orc::SimpleCompiler::operator() (3 samples, 0.11%)</title><rect x="1148.1" y="709" width="1.4" height="15.0" fill="rgb(237,206,6)" rx="2" ry="2" />
<text  x="1151.14" y="719.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::executeWrapper (21 samples, 0.78%)</title><rect x="699.1" y="853" width="9.3" height="15.0" fill="rgb(237,30,40)" rx="2" ry="2" />
<text  x="702.14" y="863.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXConstructExpr (1 samples, 0.04%)</title><rect x="1138.0" y="757" width="0.4" height="15.0" fill="rgb(205,17,37)" rx="2" ry="2" />
<text  x="1141.01" y="767.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit (1 samples, 0.04%)</title><rect x="1099.2" y="597" width="0.5" height="15.0" fill="rgb(233,72,7)" rx="2" ry="2" />
<text  x="1102.23" y="607.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1124.3" y="933" width="0.5" height="15.0" fill="rgb(242,186,7)" rx="2" ry="2" />
<text  x="1127.35" y="943.5" ></text>
</g>
<g >
<title>TBufferFile::ReadObjectAny (1 samples, 0.04%)</title><rect x="905.4" y="869" width="0.4" height="15.0" fill="rgb(235,198,54)" rx="2" ry="2" />
<text  x="908.35" y="879.5" ></text>
</g>
<g >
<title>llvm::GetUnderlyingObject (1 samples, 0.04%)</title><rect x="894.8" y="597" width="0.4" height="15.0" fill="rgb(245,179,16)" rx="2" ry="2" />
<text  x="897.78" y="607.5" ></text>
</g>
<g >
<title>clang::Expr::EvaluateAsConstantExpr (1 samples, 0.04%)</title><rect x="1138.9" y="741" width="0.4" height="15.0" fill="rgb(215,169,36)" rx="2" ry="2" />
<text  x="1141.89" y="751.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::codegenCXXStructor (1 samples, 0.04%)</title><rect x="1109.8" y="517" width="0.4" height="15.0" fill="rgb(247,85,28)" rx="2" ry="2" />
<text  x="1112.81" y="527.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (1 samples, 0.04%)</title><rect x="904.9" y="805" width="0.5" height="15.0" fill="rgb(205,124,8)" rx="2" ry="2" />
<text  x="907.91" y="815.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="12.2" y="325" width="0.4" height="15.0" fill="rgb(217,117,5)" rx="2" ry="2" />
<text  x="15.20" y="335.5" ></text>
</g>
<g >
<title>computeForAddCarry (1 samples, 0.04%)</title><rect x="1154.3" y="869" width="0.4" height="15.0" fill="rgb(230,186,46)" rx="2" ry="2" />
<text  x="1157.31" y="879.5" ></text>
</g>
<g >
<title>clang::LinkageComputer::getLVForTemplateArgumentList (1 samples, 0.04%)</title><rect x="1105.8" y="533" width="0.5" height="15.0" fill="rgb(244,194,9)" rx="2" ry="2" />
<text  x="1108.84" y="543.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.04%)</title><rect x="899.2" y="581" width="0.4" height="15.0" fill="rgb(236,43,0)" rx="2" ry="2" />
<text  x="902.19" y="591.5" ></text>
</g>
<g >
<title>llvm::AttributeSetNode::hasAttribute (1 samples, 0.04%)</title><rect x="908.4" y="517" width="0.5" height="15.0" fill="rgb(249,150,13)" rx="2" ry="2" />
<text  x="911.44" y="527.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.04%)</title><rect x="21.9" y="677" width="0.4" height="15.0" fill="rgb(213,72,7)" rx="2" ry="2" />
<text  x="24.90" y="687.5" ></text>
</g>
<g >
<title>combineStoreToNewValue (1 samples, 0.04%)</title><rect x="902.7" y="581" width="0.5" height="15.0" fill="rgb(248,168,7)" rx="2" ry="2" />
<text  x="905.71" y="591.5" ></text>
</g>
<g >
<title>clang::ASTReader::FindExternalLexicalDecls (1 samples, 0.04%)</title><rect x="1117.3" y="533" width="0.4" height="15.0" fill="rgb(226,193,40)" rx="2" ry="2" />
<text  x="1120.30" y="543.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="21.9" y="597" width="0.4" height="15.0" fill="rgb(217,9,24)" rx="2" ry="2" />
<text  x="24.90" y="607.5" ></text>
</g>
<g >
<title>llvm::Instruction::eraseFromParent (1 samples, 0.04%)</title><rect x="689.9" y="693" width="0.4" height="15.0" fill="rgb(254,2,34)" rx="2" ry="2" />
<text  x="692.89" y="703.5" ></text>
</g>
<g >
<title>[bash] (4 samples, 0.15%)</title><rect x="22.3" y="469" width="1.8" height="15.0" fill="rgb(238,149,14)" rx="2" ry="2" />
<text  x="25.34" y="479.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1078.1" y="693" width="0.4" height="15.0" fill="rgb(234,183,29)" rx="2" ry="2" />
<text  x="1081.08" y="703.5" ></text>
</g>
<g >
<title>llvm::Value::setNameImpl (1 samples, 0.04%)</title><rect x="1108.5" y="837" width="0.4" height="15.0" fill="rgb(247,52,29)" rx="2" ry="2" />
<text  x="1111.48" y="847.5" ></text>
</g>
<g >
<title>HandleInterpreterException (7 samples, 0.26%)</title><rect x="900.5" y="885" width="3.1" height="15.0" fill="rgb(240,225,15)" rx="2" ry="2" />
<text  x="903.51" y="895.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.04%)</title><rect x="1103.6" y="645" width="0.5" height="15.0" fill="rgb(225,66,22)" rx="2" ry="2" />
<text  x="1106.64" y="655.5" ></text>
</g>
<g >
<title>clang::TemplateDeclInstantiator::VisitCXXMethodDecl (1 samples, 0.04%)</title><rect x="1131.4" y="725" width="0.4" height="15.0" fill="rgb(223,121,13)" rx="2" ry="2" />
<text  x="1134.40" y="735.5" ></text>
</g>
<g >
<title>llvm::IVUsersWrapperPass::runOnLoop (1 samples, 0.04%)</title><rect x="1159.2" y="741" width="0.4" height="15.0" fill="rgb(237,1,20)" rx="2" ry="2" />
<text  x="1162.16" y="751.5" ></text>
</g>
<g >
<title>clang::RedeclarableTemplateDecl::loadLazySpecializationsImpl (1 samples, 0.04%)</title><rect x="1128.3" y="629" width="0.5" height="15.0" fill="rgb(252,4,0)" rx="2" ry="2" />
<text  x="1131.31" y="639.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="21.9" y="229" width="0.4" height="15.0" fill="rgb(224,71,45)" rx="2" ry="2" />
<text  x="24.90" y="239.5" ></text>
</g>
<g >
<title>llvm::AAResults::getModRefInfo (1 samples, 0.04%)</title><rect x="1150.3" y="661" width="0.5" height="15.0" fill="rgb(243,6,9)" rx="2" ry="2" />
<text  x="1153.34" y="671.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition (1 samples, 0.04%)</title><rect x="785.1" y="741" width="0.4" height="15.0" fill="rgb(210,116,19)" rx="2" ry="2" />
<text  x="788.06" y="751.5" ></text>
</g>
<g >
<title>llvm::FoldingSetNodeID::operator== (1 samples, 0.04%)</title><rect x="1102.3" y="645" width="0.5" height="15.0" fill="rgb(223,90,16)" rx="2" ry="2" />
<text  x="1105.32" y="655.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1092.6" y="741" width="0.5" height="15.0" fill="rgb(244,72,25)" rx="2" ry="2" />
<text  x="1095.62" y="751.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallExpr (1 samples, 0.04%)</title><rect x="1101.9" y="885" width="0.4" height="15.0" fill="rgb(233,111,36)" rx="2" ry="2" />
<text  x="1104.87" y="895.5" ></text>
</g>
<g >
<title>clang::CXXRecordDecl::DefinitionData::getBasesSlowCase (1 samples, 0.04%)</title><rect x="1142.9" y="757" width="0.4" height="15.0" fill="rgb(222,187,48)" rx="2" ry="2" />
<text  x="1145.85" y="767.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteDeclContext (1 samples, 0.04%)</title><rect x="1132.3" y="709" width="0.4" height="15.0" fill="rgb(228,157,7)" rx="2" ry="2" />
<text  x="1135.28" y="719.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.04%)</title><rect x="1131.0" y="709" width="0.4" height="15.0" fill="rgb(226,90,4)" rx="2" ry="2" />
<text  x="1133.96" y="719.5" ></text>
</g>
<g >
<title>clang::Sema::SubstBaseSpecifiers (1 samples, 0.04%)</title><rect x="1142.0" y="805" width="0.4" height="15.0" fill="rgb(248,198,38)" rx="2" ry="2" />
<text  x="1144.97" y="815.5" ></text>
</g>
<g >
<title>clang::LinkageComputer::getLVForType (1 samples, 0.04%)</title><rect x="1103.2" y="565" width="0.4" height="15.0" fill="rgb(248,205,4)" rx="2" ry="2" />
<text  x="1106.20" y="575.5" ></text>
</g>
<g >
<title>TObjArray::Streamer (1 samples, 0.04%)</title><rect x="905.4" y="885" width="0.4" height="15.0" fill="rgb(214,152,0)" rx="2" ry="2" />
<text  x="908.35" y="895.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertRecordDeclType (1 samples, 0.04%)</title><rect x="1117.7" y="453" width="0.5" height="15.0" fill="rgb(207,219,53)" rx="2" ry="2" />
<text  x="1120.74" y="463.5" ></text>
</g>
<g >
<title>llvm::CallBase::hasFnAttrOnCalledFunction (1 samples, 0.04%)</title><rect x="898.3" y="597" width="0.4" height="15.0" fill="rgb(251,46,19)" rx="2" ry="2" />
<text  x="901.30" y="607.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject&lt;std::shared_ptr&lt;llvm::RuntimeDyld::MemoryManager&gt; &gt;::getSymbolMaterializer(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda()#1}&gt;::_M_invoke (136 samples, 5.08%)</title><rect x="830.0" y="773" width="59.9" height="15.0" fill="rgb(227,22,37)" rx="2" ry="2" />
<text  x="833.01" y="783.5" >std::_..</text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1127.0" y="805" width="0.4" height="15.0" fill="rgb(252,146,1)" rx="2" ry="2" />
<text  x="1129.99" y="815.5" ></text>
</g>
<g >
<title>CreateInterpreter (12 samples, 0.45%)</title><rect x="1066.2" y="901" width="5.3" height="15.0" fill="rgb(225,164,19)" rx="2" ry="2" />
<text  x="1069.18" y="911.5" ></text>
</g>
<g >
<title>llvm::LazyValueInfo::getConstantRange (1 samples, 0.04%)</title><rect x="896.5" y="677" width="0.5" height="15.0" fill="rgb(211,94,13)" rx="2" ry="2" />
<text  x="899.54" y="687.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl (1 samples, 0.04%)</title><rect x="1139.8" y="709" width="0.4" height="15.0" fill="rgb(240,61,3)" rx="2" ry="2" />
<text  x="1142.77" y="719.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType (1 samples, 0.04%)</title><rect x="1143.3" y="741" width="0.4" height="15.0" fill="rgb(219,13,2)" rx="2" ry="2" />
<text  x="1146.29" y="751.5" ></text>
</g>
<g >
<title>computeKnownBits (1 samples, 0.04%)</title><rect x="889.9" y="629" width="0.5" height="15.0" fill="rgb(206,152,12)" rx="2" ry="2" />
<text  x="892.93" y="639.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1165.3" y="805" width="0.5" height="15.0" fill="rgb(228,120,8)" rx="2" ry="2" />
<text  x="1168.32" y="815.5" ></text>
</g>
<g >
<title>clang::VarDecl::isThisDeclarationADefinition (1 samples, 0.04%)</title><rect x="1141.1" y="629" width="0.4" height="15.0" fill="rgb(206,112,28)" rx="2" ry="2" />
<text  x="1144.09" y="639.5" ></text>
</g>
<g >
<title>clang::ASTContext::getObjCGCAttrKind (1 samples, 0.04%)</title><rect x="1116.9" y="837" width="0.4" height="15.0" fill="rgb(239,111,31)" rx="2" ry="2" />
<text  x="1119.86" y="847.5" ></text>
</g>
<g >
<title>execute_command_internal (21 samples, 0.78%)</title><rect x="12.6" y="613" width="9.3" height="15.0" fill="rgb(218,27,44)" rx="2" ry="2" />
<text  x="15.64" y="623.5" ></text>
</g>
<g >
<title>TPluginManager::LoadHandlerMacros (1 samples, 0.04%)</title><rect x="903.6" y="885" width="0.4" height="15.0" fill="rgb(224,135,9)" rx="2" ry="2" />
<text  x="906.59" y="895.5" ></text>
</g>
<g >
<title>llvm::BitstreamCursor::readRecord (1 samples, 0.04%)</title><rect x="1100.6" y="661" width="0.4" height="15.0" fill="rgb(217,226,50)" rx="2" ry="2" />
<text  x="1103.55" y="671.5" ></text>
</g>
<g >
<title>TApplication::ProcessLine (1 samples, 0.04%)</title><rect x="1027.4" y="949" width="0.4" height="15.0" fill="rgb(220,195,0)" rx="2" ry="2" />
<text  x="1030.41" y="959.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.07%)</title><rect x="18.4" y="293" width="0.9" height="15.0" fill="rgb(210,15,35)" rx="2" ry="2" />
<text  x="21.37" y="303.5" ></text>
</g>
<g >
<title>__run_exit_handlers (2 samples, 0.07%)</title><rect x="1027.8" y="901" width="0.9" height="15.0" fill="rgb(251,51,1)" rx="2" ry="2" />
<text  x="1030.85" y="911.5" ></text>
</g>
<g >
<title>[bash] (21 samples, 0.78%)</title><rect x="12.6" y="645" width="9.3" height="15.0" fill="rgb(210,48,46)" rx="2" ry="2" />
<text  x="15.64" y="655.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::removeDeadPasses (1 samples, 0.04%)</title><rect x="866.6" y="613" width="0.4" height="15.0" fill="rgb(229,190,53)" rx="2" ry="2" />
<text  x="869.58" y="623.5" ></text>
</g>
<g >
<title>__libc_start_main (26 samples, 0.97%)</title><rect x="10.4" y="949" width="11.5" height="15.0" fill="rgb(229,122,9)" rx="2" ry="2" />
<text  x="13.44" y="959.5" ></text>
</g>
<g >
<title>cling::Interpreter::executeTransaction (23 samples, 0.86%)</title><rect x="689.0" y="837" width="10.1" height="15.0" fill="rgb(213,153,30)" rx="2" ry="2" />
<text  x="692.01" y="847.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.15%)</title><rect x="1083.8" y="725" width="1.8" height="15.0" fill="rgb(226,149,49)" rx="2" ry="2" />
<text  x="1086.81" y="735.5" ></text>
</g>
<g >
<title>llvm::SROA::deleteDeadInstructions (1 samples, 0.04%)</title><rect x="689.9" y="709" width="0.4" height="15.0" fill="rgb(244,72,28)" rx="2" ry="2" />
<text  x="692.89" y="719.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::codegenCXXStructor (4 samples, 0.15%)</title><rect x="1115.5" y="965" width="1.8" height="15.0" fill="rgb(217,104,35)" rx="2" ry="2" />
<text  x="1118.53" y="975.5" ></text>
</g>
<g >
<title>ROOT::Detail::RDF::RLoopManager::RunTreeReader (1 samples, 0.04%)</title><rect x="782.9" y="933" width="0.4" height="15.0" fill="rgb(235,12,7)" rx="2" ry="2" />
<text  x="785.86" y="943.5" ></text>
</g>
<g >
<title>llvm::LazyValueInfo::getConstantOnEdge (1 samples, 0.04%)</title><rect x="896.1" y="677" width="0.4" height="15.0" fill="rgb(225,108,16)" rx="2" ry="2" />
<text  x="899.10" y="687.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertRecordDeclType (1 samples, 0.04%)</title><rect x="1117.7" y="549" width="0.5" height="15.0" fill="rgb(229,169,11)" rx="2" ry="2" />
<text  x="1120.74" y="559.5" ></text>
</g>
<g >
<title>clang::Parser::ParseParenExpression (1 samples, 0.04%)</title><rect x="1118.2" y="949" width="0.4" height="15.0" fill="rgb(226,85,23)" rx="2" ry="2" />
<text  x="1121.18" y="959.5" ></text>
</g>
<g >
<title>ROOT::VecOps::RVec&lt;float&gt;::RVec (17 samples, 0.63%)</title><rect x="801.8" y="949" width="7.5" height="15.0" fill="rgb(228,135,39)" rx="2" ry="2" />
<text  x="804.81" y="959.5" ></text>
</g>
<g >
<title>cling::Interpreter::EvaluateInternal (1 samples, 0.04%)</title><rect x="1147.7" y="933" width="0.4" height="15.0" fill="rgb(252,132,54)" rx="2" ry="2" />
<text  x="1150.70" y="943.5" ></text>
</g>
<g >
<title>llvm::FindAvailableLoadedValue (1 samples, 0.04%)</title><rect x="1049.9" y="549" width="0.4" height="15.0" fill="rgb(227,87,16)" rx="2" ry="2" />
<text  x="1052.88" y="559.5" ></text>
</g>
<g >
<title>clang::Sema::CreateOverloadedArraySubscriptExpr (1 samples, 0.04%)</title><rect x="1125.7" y="965" width="0.4" height="15.0" fill="rgb(211,168,18)" rx="2" ry="2" />
<text  x="1128.67" y="975.5" ></text>
</g>
<g >
<title>llvm::ComputeNumSignBits (1 samples, 0.04%)</title><rect x="829.6" y="821" width="0.4" height="15.0" fill="rgb(219,227,14)" rx="2" ry="2" />
<text  x="832.57" y="831.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.04%)</title><rect x="1168.8" y="821" width="0.5" height="15.0" fill="rgb(206,101,50)" rx="2" ry="2" />
<text  x="1171.85" y="831.5" ></text>
</g>
<g >
<title>write_unsigned_impl&lt;unsigned int&gt; (1 samples, 0.04%)</title><rect x="1101.4" y="709" width="0.5" height="15.0" fill="rgb(215,102,2)" rx="2" ry="2" />
<text  x="1104.43" y="719.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (3 samples, 0.11%)</title><rect x="1157.0" y="885" width="1.3" height="15.0" fill="rgb(219,145,10)" rx="2" ry="2" />
<text  x="1159.95" y="895.5" ></text>
</g>
<g >
<title>execute_command_internal (21 samples, 0.78%)</title><rect x="12.6" y="693" width="9.3" height="15.0" fill="rgb(207,127,0)" rx="2" ry="2" />
<text  x="15.64" y="703.5" ></text>
</g>
<g >
<title>dlopen_doit (1 samples, 0.04%)</title><rect x="1094.8" y="821" width="0.5" height="15.0" fill="rgb(216,174,38)" rx="2" ry="2" />
<text  x="1097.82" y="831.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord (1 samples, 0.04%)</title><rect x="1132.7" y="469" width="0.5" height="15.0" fill="rgb(238,122,18)" rx="2" ry="2" />
<text  x="1135.72" y="479.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (1 samples, 0.04%)</title><rect x="1150.3" y="773" width="0.5" height="15.0" fill="rgb(233,127,17)" rx="2" ry="2" />
<text  x="1153.34" y="783.5" ></text>
</g>
<g >
<title>llvm::Value::getValueName (1 samples, 0.04%)</title><rect x="1107.2" y="757" width="0.4" height="15.0" fill="rgb(215,208,13)" rx="2" ry="2" />
<text  x="1110.16" y="767.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::SelectAllBasicBlocks (3 samples, 0.11%)</title><rect x="1157.0" y="837" width="1.3" height="15.0" fill="rgb(233,143,31)" rx="2" ry="2" />
<text  x="1159.95" y="847.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentNameType (1 samples, 0.04%)</title><rect x="1137.1" y="805" width="0.5" height="15.0" fill="rgb(231,133,21)" rx="2" ry="2" />
<text  x="1140.12" y="815.5" ></text>
</g>
<g >
<title>ROOT::Detail::VecOps::RVecImpl&lt;float&gt;::operator= (2 samples, 0.07%)</title><rect x="808.4" y="917" width="0.9" height="15.0" fill="rgb(247,33,33)" rx="2" ry="2" />
<text  x="811.42" y="927.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddDecl (1 samples, 0.04%)</title><rect x="1103.2" y="357" width="0.4" height="15.0" fill="rgb(214,174,31)" rx="2" ry="2" />
<text  x="1106.20" y="367.5" ></text>
</g>
<g >
<title>clang::LinkageComputer::getLVForDecl (1 samples, 0.04%)</title><rect x="1103.2" y="693" width="0.4" height="15.0" fill="rgb(246,2,15)" rx="2" ry="2" />
<text  x="1106.20" y="703.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateMemInitializers (1 samples, 0.04%)</title><rect x="1134.0" y="821" width="0.5" height="15.0" fill="rgb(242,195,9)" rx="2" ry="2" />
<text  x="1137.04" y="831.5" ></text>
</g>
<g >
<title>llvm::isKnownNonZero (1 samples, 0.04%)</title><rect x="892.1" y="629" width="0.5" height="15.0" fill="rgb(214,94,31)" rx="2" ry="2" />
<text  x="895.14" y="639.5" ></text>
</g>
<g >
<title>clang::Sema::CheckNonDependentConversions (1 samples, 0.04%)</title><rect x="1127.9" y="901" width="0.4" height="15.0" fill="rgb(232,61,3)" rx="2" ry="2" />
<text  x="1130.87" y="911.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (1 samples, 0.04%)</title><rect x="1064.9" y="581" width="0.4" height="15.0" fill="rgb(251,203,23)" rx="2" ry="2" />
<text  x="1067.86" y="591.5" ></text>
</g>
<g >
<title>clang::FunctionDecl::getBody (1 samples, 0.04%)</title><rect x="1104.5" y="917" width="0.5" height="15.0" fill="rgb(244,10,16)" rx="2" ry="2" />
<text  x="1107.52" y="927.5" ></text>
</g>
<g >
<title>llvm::MemorySSA::buildMemorySSA (1 samples, 0.04%)</title><rect x="1151.2" y="773" width="0.5" height="15.0" fill="rgb(221,48,48)" rx="2" ry="2" />
<text  x="1154.22" y="783.5" ></text>
</g>
<g >
<title>llvm::AsmPrinter::EmitFunctionHeader (1 samples, 0.04%)</title><rect x="702.2" y="709" width="0.5" height="15.0" fill="rgb(227,197,43)" rx="2" ry="2" />
<text  x="705.23" y="719.5" ></text>
</g>
<g >
<title>TListOfTypes::FindType (1 samples, 0.04%)</title><rect x="784.2" y="645" width="0.4" height="15.0" fill="rgb(214,11,50)" rx="2" ry="2" />
<text  x="787.18" y="655.5" ></text>
</g>
<g >
<title>TApplication::ExecuteFile (160 samples, 5.97%)</title><rect x="830.0" y="965" width="70.5" height="15.0" fill="rgb(235,168,26)" rx="2" ry="2" />
<text  x="833.01" y="975.5" >TApplic..</text>
</g>
<g >
<title>llvm::LLVMContext::shouldDiscardValueNames (1 samples, 0.04%)</title><rect x="1108.5" y="821" width="0.4" height="15.0" fill="rgb(225,160,40)" rx="2" ry="2" />
<text  x="1111.48" y="831.5" ></text>
</g>
<g >
<title>llvm::InstructionCombiningPass::runOnFunction (1 samples, 0.04%)</title><rect x="902.7" y="645" width="0.5" height="15.0" fill="rgb(218,215,49)" rx="2" ry="2" />
<text  x="905.71" y="655.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl (1 samples, 0.04%)</title><rect x="905.4" y="405" width="0.4" height="15.0" fill="rgb(240,101,21)" rx="2" ry="2" />
<text  x="908.35" y="415.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization (1 samples, 0.04%)</title><rect x="1123.9" y="693" width="0.4" height="15.0" fill="rgb(239,14,43)" rx="2" ry="2" />
<text  x="1126.91" y="703.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::run (4 samples, 0.15%)</title><rect x="1049.4" y="581" width="1.8" height="15.0" fill="rgb(222,113,19)" rx="2" ry="2" />
<text  x="1052.44" y="591.5" ></text>
</g>
<g >
<title>_nl_find_locale (1 samples, 0.04%)</title><rect x="1168.8" y="901" width="0.5" height="15.0" fill="rgb(216,91,4)" rx="2" ry="2" />
<text  x="1171.85" y="911.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.04%)</title><rect x="1071.0" y="597" width="0.5" height="15.0" fill="rgb(245,191,48)" rx="2" ry="2" />
<text  x="1074.03" y="607.5" ></text>
</g>
<g >
<title>StrengthenNoWrapFlags (1 samples, 0.04%)</title><rect x="829.6" y="885" width="0.4" height="15.0" fill="rgb(205,194,17)" rx="2" ry="2" />
<text  x="832.57" y="895.5" ></text>
</g>
<g >
<title>clang::Sema::ActOnFinishFullExpr (1 samples, 0.04%)</title><rect x="1134.5" y="741" width="0.4" height="15.0" fill="rgb(254,80,39)" rx="2" ry="2" />
<text  x="1137.48" y="751.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (1 samples, 0.04%)</title><rect x="1131.0" y="901" width="0.4" height="15.0" fill="rgb(247,219,50)" rx="2" ry="2" />
<text  x="1133.96" y="911.5" ></text>
</g>
<g >
<title>cling::DynamicLibraryManager::loadLibrary (1 samples, 0.04%)</title><rect x="1094.8" y="917" width="0.5" height="15.0" fill="rgb(208,157,45)" rx="2" ry="2" />
<text  x="1097.82" y="927.5" ></text>
</g>
<g >
<title>cling::MetaSema::actOnxCommand (85 samples, 3.17%)</title><rect x="1028.7" y="789" width="37.5" height="15.0" fill="rgb(210,52,49)" rx="2" ry="2" />
<text  x="1031.73" y="799.5" >cli..</text>
</g>
<g >
<title>llvm::BranchProbabilityInfo::calculate (1 samples, 0.04%)</title><rect x="1034.5" y="613" width="0.4" height="15.0" fill="rgb(211,11,53)" rx="2" ry="2" />
<text  x="1037.46" y="623.5" ></text>
</g>
<g >
<title>clang::TemplateSpecializationType::TemplateSpecializationType (1 samples, 0.04%)</title><rect x="783.3" y="645" width="0.4" height="15.0" fill="rgb(212,77,18)" rx="2" ry="2" />
<text  x="786.30" y="655.5" ></text>
</g>
<g >
<title>TClingDataMemberInfo::Next (1 samples, 0.04%)</title><rect x="786.4" y="325" width="0.4" height="15.0" fill="rgb(228,137,24)" rx="2" ry="2" />
<text  x="789.39" y="335.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1093.9" y="757" width="0.5" height="15.0" fill="rgb(220,81,16)" rx="2" ry="2" />
<text  x="1096.94" y="767.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::SetLLVMFunctionAttributesForDefinition (1 samples, 0.04%)</title><rect x="1112.0" y="677" width="0.4" height="15.0" fill="rgb(211,74,30)" rx="2" ry="2" />
<text  x="1115.01" y="687.5" ></text>
</g>
<g >
<title>llvm::BlockFrequencyInfo::calculate (1 samples, 0.04%)</title><rect x="832.7" y="581" width="0.4" height="15.0" fill="rgb(231,177,17)" rx="2" ry="2" />
<text  x="835.65" y="591.5" ></text>
</g>
<g >
<title>clang::Sema::checkSpecializationVisibility (1 samples, 0.04%)</title><rect x="1127.4" y="629" width="0.5" height="15.0" fill="rgb(253,79,49)" rx="2" ry="2" />
<text  x="1130.43" y="639.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCheckedLValue (1 samples, 0.04%)</title><rect x="1106.3" y="773" width="0.4" height="15.0" fill="rgb(223,122,45)" rx="2" ry="2" />
<text  x="1109.28" y="783.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="1045.5" y="581" width="0.4" height="15.0" fill="rgb(231,142,48)" rx="2" ry="2" />
<text  x="1048.47" y="591.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.04%)</title><rect x="1139.3" y="885" width="0.5" height="15.0" fill="rgb(247,129,13)" rx="2" ry="2" />
<text  x="1142.33" y="895.5" ></text>
</g>
<g >
<title>clang::Sema::CheckConvertedConstantExpression (1 samples, 0.04%)</title><rect x="1138.9" y="773" width="0.4" height="15.0" fill="rgb(224,138,6)" rx="2" ry="2" />
<text  x="1141.89" y="783.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::tryOptimizeCall (1 samples, 0.04%)</title><rect x="892.6" y="613" width="0.4" height="15.0" fill="rgb(244,202,0)" rx="2" ry="2" />
<text  x="895.58" y="623.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitValueDecl (1 samples, 0.04%)</title><rect x="1117.3" y="437" width="0.4" height="15.0" fill="rgb(213,30,36)" rx="2" ry="2" />
<text  x="1120.30" y="447.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ComputeRecordLayout (1 samples, 0.04%)</title><rect x="1117.7" y="533" width="0.5" height="15.0" fill="rgb(246,51,13)" rx="2" ry="2" />
<text  x="1120.74" y="543.5" ></text>
</g>
<g >
<title>TBufferFile::ApplySequence (1 samples, 0.04%)</title><rect x="905.4" y="821" width="0.4" height="15.0" fill="rgb(219,90,43)" rx="2" ry="2" />
<text  x="908.35" y="831.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitScalarExpr (2 samples, 0.07%)</title><rect x="1105.8" y="837" width="0.9" height="15.0" fill="rgb(229,94,38)" rx="2" ry="2" />
<text  x="1108.84" y="847.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::visitLoadInst (1 samples, 0.04%)</title><rect x="893.9" y="645" width="0.4" height="15.0" fill="rgb(205,158,42)" rx="2" ry="2" />
<text  x="896.90" y="655.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;, void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;::LookupBucketFor&lt;void const*&gt; (1 samples, 0.04%)</title><rect x="849.4" y="549" width="0.4" height="15.0" fill="rgb(251,100,17)" rx="2" ry="2" />
<text  x="852.40" y="559.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformStmt (1 samples, 0.04%)</title><rect x="1134.9" y="773" width="0.5" height="15.0" fill="rgb(229,126,37)" rx="2" ry="2" />
<text  x="1137.92" y="783.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ComputeRecordLayout (1 samples, 0.04%)</title><rect x="1117.7" y="597" width="0.5" height="15.0" fill="rgb(232,22,45)" rx="2" ry="2" />
<text  x="1120.74" y="607.5" ></text>
</g>
<g >
<title>clang::RedeclarableTemplateDecl::findSpecializationImpl&lt;clang::ClassTemplateSpecializationDecl&gt; (1 samples, 0.04%)</title><rect x="1140.2" y="693" width="0.4" height="15.0" fill="rgb(253,189,18)" rx="2" ry="2" />
<text  x="1143.21" y="703.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::ConstructAttributeList (1 samples, 0.04%)</title><rect x="1101.0" y="725" width="0.4" height="15.0" fill="rgb(224,133,17)" rx="2" ry="2" />
<text  x="1103.99" y="735.5" ></text>
</g>
<g >
<title>ROOT::Internal::RDF::InterpreterCalc (44 samples, 1.64%)</title><rect x="689.0" y="933" width="19.4" height="15.0" fill="rgb(212,76,18)" rx="2" ry="2" />
<text  x="692.01" y="943.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1078.1" y="677" width="0.4" height="15.0" fill="rgb(231,133,39)" rx="2" ry="2" />
<text  x="1081.08" y="687.5" ></text>
</g>
<g >
<title>clang::DeclContext::LoadLexicalDeclsFromExternalStorage (1 samples, 0.04%)</title><rect x="904.5" y="853" width="0.4" height="15.0" fill="rgb(218,115,48)" rx="2" ry="2" />
<text  x="907.47" y="863.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertTypeForMem (1 samples, 0.04%)</title><rect x="1117.3" y="949" width="0.4" height="15.0" fill="rgb(216,78,23)" rx="2" ry="2" />
<text  x="1120.30" y="959.5" ></text>
</g>
<g >
<title>cling::Interpreter::executeTransaction (1 samples, 0.04%)</title><rect x="1147.3" y="901" width="0.4" height="15.0" fill="rgb(234,27,6)" rx="2" ry="2" />
<text  x="1150.26" y="911.5" ></text>
</g>
<g >
<title>clang::CodeGenerator::StartModule (1 samples, 0.04%)</title><rect x="903.6" y="597" width="0.4" height="15.0" fill="rgb(249,195,36)" rx="2" ry="2" />
<text  x="906.59" y="607.5" ></text>
</g>
<g >
<title>clang::Sema::SubstType (1 samples, 0.04%)</title><rect x="1097.9" y="853" width="0.4" height="15.0" fill="rgb(244,47,24)" rx="2" ry="2" />
<text  x="1100.91" y="863.5" ></text>
</g>
<g >
<title>addInstantiatedParametersToScope (1 samples, 0.04%)</title><rect x="1121.7" y="853" width="0.4" height="15.0" fill="rgb(240,192,9)" rx="2" ry="2" />
<text  x="1124.70" y="863.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::CodeGenAndEmitDAG (1 samples, 0.04%)</title><rect x="785.5" y="741" width="0.4" height="15.0" fill="rgb(208,126,12)" rx="2" ry="2" />
<text  x="788.50" y="751.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGBuilder::visitInvoke (1 samples, 0.04%)</title><rect x="1148.6" y="565" width="0.4" height="15.0" fill="rgb(205,69,43)" rx="2" ry="2" />
<text  x="1151.58" y="575.5" ></text>
</g>
<g >
<title>[bash] (4 samples, 0.15%)</title><rect x="22.3" y="149" width="1.8" height="15.0" fill="rgb(226,16,42)" rx="2" ry="2" />
<text  x="25.34" y="159.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="844.1" y="533" width="0.4" height="15.0" fill="rgb(216,125,52)" rx="2" ry="2" />
<text  x="847.11" y="543.5" ></text>
</g>
<g >
<title>llvm::PMTopLevelManager::findAnalysisPass (1 samples, 0.04%)</title><rect x="1064.4" y="613" width="0.5" height="15.0" fill="rgb(251,26,30)" rx="2" ry="2" />
<text  x="1067.42" y="623.5" ></text>
</g>
<g >
<title>llvm::PHITransAddr::PHITranslateValue (1 samples, 0.04%)</title><rect x="1151.2" y="709" width="0.5" height="15.0" fill="rgb(241,170,8)" rx="2" ry="2" />
<text  x="1154.22" y="719.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl (1 samples, 0.04%)</title><rect x="1129.6" y="805" width="0.5" height="15.0" fill="rgb(218,144,10)" rx="2" ry="2" />
<text  x="1132.63" y="815.5" ></text>
</g>
<g >
<title>clang::Sema::BuildQualifiedDeclarationNameExpr (1 samples, 0.04%)</title><rect x="1141.1" y="821" width="0.4" height="15.0" fill="rgb(211,151,48)" rx="2" ry="2" />
<text  x="1144.09" y="831.5" ></text>
</g>
<g >
<title>TClass::CallShowMembers (1 samples, 0.04%)</title><rect x="905.4" y="661" width="0.4" height="15.0" fill="rgb(225,122,49)" rx="2" ry="2" />
<text  x="908.35" y="671.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (1 samples, 0.04%)</title><rect x="1145.1" y="949" width="0.4" height="15.0" fill="rgb(221,223,10)" rx="2" ry="2" />
<text  x="1148.06" y="959.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyld::finalizeWithMemoryManagerLocking (4 samples, 0.15%)</title><rect x="1148.1" y="821" width="1.8" height="15.0" fill="rgb(215,71,51)" rx="2" ry="2" />
<text  x="1151.14" y="831.5" ></text>
</g>
<g >
<title>TH1::Fill (2 samples, 0.07%)</title><rect x="919.5" y="933" width="0.8" height="15.0" fill="rgb(224,188,54)" rx="2" ry="2" />
<text  x="922.45" y="943.5" ></text>
</g>
<g >
<title>llvm::SROA::promoteAllocas (1 samples, 0.04%)</title><rect x="1029.6" y="565" width="0.5" height="15.0" fill="rgb(232,223,4)" rx="2" ry="2" />
<text  x="1032.61" y="575.5" ></text>
</g>
<g >
<title>clang::RedeclarableTemplateDecl::findSpecializationImpl&lt;clang::ClassTemplateSpecializationDecl&gt; (1 samples, 0.04%)</title><rect x="1123.0" y="709" width="0.5" height="15.0" fill="rgb(231,2,1)" rx="2" ry="2" />
<text  x="1126.02" y="719.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::GetExternalDeclStmt (1 samples, 0.04%)</title><rect x="1104.5" y="901" width="0.5" height="15.0" fill="rgb(217,122,9)" rx="2" ry="2" />
<text  x="1107.52" y="911.5" ></text>
</g>
<g >
<title>llvm::FoldingSetBase::FindNodeOrInsertPos (1 samples, 0.04%)</title><rect x="1122.1" y="677" width="0.5" height="15.0" fill="rgb(245,117,9)" rx="2" ry="2" />
<text  x="1125.14" y="687.5" ></text>
</g>
<g >
<title>DynamicPath (3 samples, 0.11%)</title><rect x="1071.5" y="821" width="1.3" height="15.0" fill="rgb(216,150,46)" rx="2" ry="2" />
<text  x="1074.47" y="831.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertType (1 samples, 0.04%)</title><rect x="1117.3" y="853" width="0.4" height="15.0" fill="rgb(243,158,18)" rx="2" ry="2" />
<text  x="1120.30" y="863.5" ></text>
</g>
<g >
<title>llvm::DataLayout::getTypeAllocSize (1 samples, 0.04%)</title><rect x="900.5" y="581" width="0.4" height="15.0" fill="rgb(240,155,21)" rx="2" ry="2" />
<text  x="903.51" y="591.5" ></text>
</g>
<g >
<title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::runSemiNCA (1 samples, 0.04%)</title><rect x="1049.0" y="581" width="0.4" height="15.0" fill="rgb(244,168,31)" rx="2" ry="2" />
<text  x="1052.00" y="591.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertTypeForMem (1 samples, 0.04%)</title><rect x="1117.3" y="693" width="0.4" height="15.0" fill="rgb(221,98,2)" rx="2" ry="2" />
<text  x="1120.30" y="703.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1137.1" y="821" width="0.5" height="15.0" fill="rgb(243,15,37)" rx="2" ry="2" />
<text  x="1140.12" y="831.5" ></text>
</g>
<g >
<title>inflate (50 samples, 1.87%)</title><rect x="392.5" y="757" width="22.0" height="15.0" fill="rgb(234,227,14)" rx="2" ry="2" />
<text  x="395.46" y="767.5" >i..</text>
</g>
<g >
<title>__GI__IO_default_uflow (1 samples, 0.04%)</title><rect x="1075.0" y="805" width="0.4" height="15.0" fill="rgb(247,191,18)" rx="2" ry="2" />
<text  x="1078.00" y="815.5" ></text>
</g>
<g >
<title>llvm::AllocaInst::AllocaInst (1 samples, 0.04%)</title><rect x="1115.1" y="693" width="0.4" height="15.0" fill="rgb(246,101,9)" rx="2" ry="2" />
<text  x="1118.09" y="703.5" ></text>
</g>
<g >
<title>llvm::runIPSCCP (1 samples, 0.04%)</title><rect x="1158.3" y="965" width="0.4" height="15.0" fill="rgb(216,53,13)" rx="2" ry="2" />
<text  x="1161.27" y="975.5" ></text>
</g>
<g >
<title>llvm::object::ELFFile&lt;llvm::object::ELFType&lt;(llvm::support::endianness)1, true&gt; &gt;::sections (2 samples, 0.07%)</title><rect x="887.3" y="501" width="0.9" height="15.0" fill="rgb(214,67,49)" rx="2" ry="2" />
<text  x="890.29" y="511.5" ></text>
</g>
<g >
<title>simplifyFunctionCFG (1 samples, 0.04%)</title><rect x="890.4" y="661" width="0.4" height="15.0" fill="rgb(213,208,51)" rx="2" ry="2" />
<text  x="893.37" y="671.5" ></text>
</g>
<g >
<title>ROOT::Internal::RDF::GetValidatedColumnNames (4 samples, 0.15%)</title><rect x="783.3" y="965" width="1.8" height="15.0" fill="rgb(246,98,29)" rx="2" ry="2" />
<text  x="786.30" y="975.5" ></text>
</g>
<g >
<title>clang::ASTContext::getTypeSizeInChars (1 samples, 0.04%)</title><rect x="1116.4" y="821" width="0.5" height="15.0" fill="rgb(229,162,20)" rx="2" ry="2" />
<text  x="1119.42" y="831.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTypenameType (1 samples, 0.04%)</title><rect x="1129.6" y="853" width="0.5" height="15.0" fill="rgb(216,159,44)" rx="2" ry="2" />
<text  x="1132.63" y="863.5" ></text>
</g>
<g >
<title>llvm::PMTopLevelManager::findAnalysisPassInfo (1 samples, 0.04%)</title><rect x="697.8" y="741" width="0.5" height="15.0" fill="rgb(211,106,13)" rx="2" ry="2" />
<text  x="700.82" y="751.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformUnaryOperator (1 samples, 0.04%)</title><rect x="1142.9" y="917" width="0.4" height="15.0" fill="rgb(243,210,6)" rx="2" ry="2" />
<text  x="1145.85" y="927.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke (136 samples, 5.08%)</title><rect x="830.0" y="789" width="59.9" height="15.0" fill="rgb(219,83,35)" rx="2" ry="2" />
<text  x="833.01" y="799.5" >std::_..</text>
</g>
<g >
<title>clang::Sema::CheckFieldDecl (1 samples, 0.04%)</title><rect x="1155.2" y="789" width="0.4" height="15.0" fill="rgb(233,61,26)" rx="2" ry="2" />
<text  x="1158.19" y="799.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (1 samples, 0.04%)</title><rect x="693.9" y="725" width="0.4" height="15.0" fill="rgb(220,50,44)" rx="2" ry="2" />
<text  x="696.85" y="735.5" ></text>
</g>
<g >
<title>llvm::createLegacyPMAAResults (1 samples, 0.04%)</title><rect x="1064.9" y="645" width="0.4" height="15.0" fill="rgb(226,20,8)" rx="2" ry="2" />
<text  x="1067.86" y="655.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::GenerateCode (4 samples, 0.15%)</title><rect x="1115.5" y="949" width="1.8" height="15.0" fill="rgb(210,66,31)" rx="2" ry="2" />
<text  x="1118.53" y="959.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;std::add_pointer, (anonymous namespace)::AggExprEmitter, void&gt;::Visit (1 samples, 0.04%)</title><rect x="1106.7" y="853" width="0.5" height="15.0" fill="rgb(213,79,41)" rx="2" ry="2" />
<text  x="1109.72" y="863.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.04%)</title><rect x="1103.6" y="869" width="0.5" height="15.0" fill="rgb(208,8,7)" rx="2" ry="2" />
<text  x="1106.64" y="879.5" ></text>
</g>
<g >
<title>cling::MultiplexInterpreterCallbacks::LookupObject (1 samples, 0.04%)</title><rect x="1137.6" y="693" width="0.4" height="15.0" fill="rgb(238,197,22)" rx="2" ry="2" />
<text  x="1140.57" y="703.5" ></text>
</g>
<g >
<title>__GI___libc_sigaction (1 samples, 0.04%)</title><rect x="21.9" y="165" width="0.4" height="15.0" fill="rgb(245,210,6)" rx="2" ry="2" />
<text  x="24.90" y="175.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformReferenceType (1 samples, 0.04%)</title><rect x="1127.0" y="789" width="0.4" height="15.0" fill="rgb(208,175,22)" rx="2" ry="2" />
<text  x="1129.99" y="799.5" ></text>
</g>
<g >
<title>tryToUnrollLoop (1 samples, 0.04%)</title><rect x="899.6" y="661" width="0.5" height="15.0" fill="rgb(233,80,48)" rx="2" ry="2" />
<text  x="902.63" y="671.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (2 samples, 0.07%)</title><rect x="1093.9" y="853" width="0.9" height="15.0" fill="rgb(246,19,4)" rx="2" ry="2" />
<text  x="1096.94" y="863.5" ></text>
</g>
<g >
<title>clang::Sema::PerformPendingInstantiations (1 samples, 0.04%)</title><rect x="908.9" y="741" width="0.4" height="15.0" fill="rgb(208,91,35)" rx="2" ry="2" />
<text  x="911.88" y="751.5" ></text>
</g>
<g >
<title>AddOverloadedCallCandidate (1 samples, 0.04%)</title><rect x="1122.6" y="917" width="0.4" height="15.0" fill="rgb(207,24,15)" rx="2" ry="2" />
<text  x="1125.58" y="927.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (1 samples, 0.04%)</title><rect x="698.3" y="709" width="0.4" height="15.0" fill="rgb(205,142,3)" rx="2" ry="2" />
<text  x="701.26" y="719.5" ></text>
</g>
<g >
<title>llvm::MemorySSAWrapperPass::runOnFunction (1 samples, 0.04%)</title><rect x="1150.3" y="757" width="0.5" height="15.0" fill="rgb(216,99,40)" rx="2" ry="2" />
<text  x="1153.34" y="767.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddType (1 samples, 0.04%)</title><rect x="1123.0" y="597" width="0.5" height="15.0" fill="rgb(215,50,38)" rx="2" ry="2" />
<text  x="1126.02" y="607.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="992.2" y="869" width="0.4" height="15.0" fill="rgb(207,169,24)" rx="2" ry="2" />
<text  x="995.16" y="879.5" ></text>
</g>
<g >
<title>clang::NestedNameSpecifier::Create (1 samples, 0.04%)</title><rect x="1134.9" y="629" width="0.5" height="15.0" fill="rgb(240,22,24)" rx="2" ry="2" />
<text  x="1137.92" y="639.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformElaboratedType (1 samples, 0.04%)</title><rect x="1124.8" y="693" width="0.4" height="15.0" fill="rgb(224,61,23)" rx="2" ry="2" />
<text  x="1127.79" y="703.5" ></text>
</g>
<g >
<title>malloc_hook_ini (1 samples, 0.04%)</title><rect x="1189.6" y="837" width="0.4" height="15.0" fill="rgb(205,139,32)" rx="2" ry="2" />
<text  x="1192.56" y="847.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTemplateArgumentList (1 samples, 0.04%)</title><rect x="1141.1" y="917" width="0.4" height="15.0" fill="rgb(230,137,27)" rx="2" ry="2" />
<text  x="1144.09" y="927.5" ></text>
</g>
<g >
<title>execute_command_internal (4 samples, 0.15%)</title><rect x="22.3" y="917" width="1.8" height="15.0" fill="rgb(241,124,16)" rx="2" ry="2" />
<text  x="25.34" y="927.5" ></text>
</g>
<g >
<title>llvm::NullPointerIsDefined (1 samples, 0.04%)</title><rect x="901.4" y="597" width="0.4" height="15.0" fill="rgb(220,182,27)" rx="2" ry="2" />
<text  x="904.39" y="607.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitScalarExpr (1 samples, 0.04%)</title><rect x="1105.4" y="789" width="0.4" height="15.0" fill="rgb(233,151,29)" rx="2" ry="2" />
<text  x="1108.40" y="799.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl (1 samples, 0.04%)</title><rect x="1139.8" y="805" width="0.4" height="15.0" fill="rgb(231,103,47)" rx="2" ry="2" />
<text  x="1142.77" y="815.5" ></text>
</g>
<g >
<title>llvm::orc::JITSymbolResolverAdapter::lookup (2 samples, 0.07%)</title><rect x="1152.5" y="933" width="0.9" height="15.0" fill="rgb(240,119,24)" rx="2" ry="2" />
<text  x="1155.55" y="943.5" ></text>
</g>
<g >
<title>__run_fork_handlers (1 samples, 0.04%)</title><rect x="1168.4" y="933" width="0.4" height="15.0" fill="rgb(224,183,17)" rx="2" ry="2" />
<text  x="1171.41" y="943.5" ></text>
</g>
<g >
<title>clang::ASTContext::getTemplateOrSpecializationInfo (1 samples, 0.04%)</title><rect x="1130.1" y="501" width="0.4" height="15.0" fill="rgb(251,165,27)" rx="2" ry="2" />
<text  x="1133.07" y="511.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::freePass (1 samples, 0.04%)</title><rect x="866.6" y="597" width="0.4" height="15.0" fill="rgb(250,50,5)" rx="2" ry="2" />
<text  x="869.58" y="607.5" ></text>
</g>
<g >
<title>clang::ASTStmtReader::VisitOverloadExpr (1 samples, 0.04%)</title><rect x="1099.7" y="821" width="0.4" height="15.0" fill="rgb(251,24,45)" rx="2" ry="2" />
<text  x="1102.67" y="831.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddTemplateArgument (1 samples, 0.04%)</title><rect x="1128.3" y="549" width="0.5" height="15.0" fill="rgb(221,171,47)" rx="2" ry="2" />
<text  x="1131.31" y="559.5" ></text>
</g>
<g >
<title>clang::Sema::SubstType (1 samples, 0.04%)</title><rect x="1098.3" y="869" width="0.5" height="15.0" fill="rgb(244,212,10)" rx="2" ry="2" />
<text  x="1101.35" y="879.5" ></text>
</g>
<g >
<title>clang::Sema::PerformPendingInstantiations (1 samples, 0.04%)</title><rect x="1134.5" y="821" width="0.4" height="15.0" fill="rgb(227,159,47)" rx="2" ry="2" />
<text  x="1137.48" y="831.5" ></text>
</g>
<g >
<title>cling::Interpreter::executeTransaction (24 samples, 0.90%)</title><rect x="889.9" y="757" width="10.6" height="15.0" fill="rgb(224,215,37)" rx="2" ry="2" />
<text  x="892.93" y="767.5" ></text>
</g>
<g >
<title>Matchs (1 samples, 0.04%)</title><rect x="784.6" y="805" width="0.5" height="15.0" fill="rgb(240,156,28)" rx="2" ry="2" />
<text  x="787.62" y="815.5" ></text>
</g>
<g >
<title>clang::TemplateDeclInstantiator::SubstFunctionType (1 samples, 0.04%)</title><rect x="1138.9" y="949" width="0.4" height="15.0" fill="rgb(235,182,2)" rx="2" ry="2" />
<text  x="1141.89" y="959.5" ></text>
</g>
<g >
<title>__dlopen_check (2 samples, 0.07%)</title><rect x="1093.9" y="901" width="0.9" height="15.0" fill="rgb(222,169,46)" rx="2" ry="2" />
<text  x="1096.94" y="911.5" ></text>
</g>
<g >
<title>llvm::AsmPrinter::EmitFunctionBody (1 samples, 0.04%)</title><rect x="908.0" y="581" width="0.4" height="15.0" fill="rgb(205,164,53)" rx="2" ry="2" />
<text  x="911.00" y="591.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitTemplateTypeParmDecl (1 samples, 0.04%)</title><rect x="1100.1" y="933" width="0.5" height="15.0" fill="rgb(218,205,19)" rx="2" ry="2" />
<text  x="1103.11" y="943.5" ></text>
</g>
<g >
<title>llvm::Value::assertModuleIsMaterializedImpl (1 samples, 0.04%)</title><rect x="1049.4" y="549" width="0.5" height="15.0" fill="rgb(239,126,49)" rx="2" ry="2" />
<text  x="1052.44" y="559.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord (1 samples, 0.04%)</title><rect x="1099.7" y="693" width="0.4" height="15.0" fill="rgb(205,73,38)" rx="2" ry="2" />
<text  x="1102.67" y="703.5" ></text>
</g>
<g >
<title>IsStandardConversion (1 samples, 0.04%)</title><rect x="1127.9" y="853" width="0.4" height="15.0" fill="rgb(235,207,24)" rx="2" ry="2" />
<text  x="1130.87" y="863.5" ></text>
</g>
<g >
<title>clang::UsingDirectiveDecl::getNominatedNamespace (1 samples, 0.04%)</title><rect x="784.2" y="405" width="0.4" height="15.0" fill="rgb(227,172,14)" rx="2" ry="2" />
<text  x="787.18" y="415.5" ></text>
</g>
<g >
<title>llvm::AttributeSet::removeAttribute (1 samples, 0.04%)</title><rect x="1110.7" y="613" width="0.4" height="15.0" fill="rgb(245,143,25)" rx="2" ry="2" />
<text  x="1113.69" y="623.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::visitLoadInst (2 samples, 0.07%)</title><rect x="1049.9" y="565" width="0.9" height="15.0" fill="rgb(230,179,24)" rx="2" ry="2" />
<text  x="1052.88" y="575.5" ></text>
</g>
<g >
<title>[bash] (4 samples, 0.15%)</title><rect x="22.3" y="213" width="1.8" height="15.0" fill="rgb(246,223,3)" rx="2" ry="2" />
<text  x="25.34" y="223.5" ></text>
</g>
<g >
<title>clang::Sema::BuildBinOp (1 samples, 0.04%)</title><rect x="1118.6" y="949" width="0.5" height="15.0" fill="rgb(251,186,44)" rx="2" ry="2" />
<text  x="1121.62" y="959.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddTemplateArgument (1 samples, 0.04%)</title><rect x="1131.0" y="501" width="0.4" height="15.0" fill="rgb(219,146,52)" rx="2" ry="2" />
<text  x="1133.96" y="511.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1095.3" y="741" width="0.4" height="15.0" fill="rgb(222,173,48)" rx="2" ry="2" />
<text  x="1098.27" y="751.5" ></text>
</g>
<g >
<title>llvm::ScheduleDAGSDNodes::EmitSchedule (1 samples, 0.04%)</title><rect x="1150.8" y="629" width="0.4" height="15.0" fill="rgb(254,81,45)" rx="2" ry="2" />
<text  x="1153.78" y="639.5" ></text>
</g>
<g >
<title>llvm::PMTopLevelManager::findAnalysisPass (1 samples, 0.04%)</title><rect x="693.9" y="741" width="0.4" height="15.0" fill="rgb(223,188,28)" rx="2" ry="2" />
<text  x="696.85" y="751.5" ></text>
</g>
<g >
<title>clang::VarDecl::getMemberSpecializationInfo (1 samples, 0.04%)</title><rect x="1141.1" y="581" width="0.4" height="15.0" fill="rgb(242,217,51)" rx="2" ry="2" />
<text  x="1144.09" y="591.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.04%)</title><rect x="1135.4" y="661" width="0.4" height="15.0" fill="rgb(212,139,21)" rx="2" ry="2" />
<text  x="1138.36" y="671.5" ></text>
</g>
<g >
<title>TROOT::Macro (1 samples, 0.04%)</title><rect x="903.6" y="869" width="0.4" height="15.0" fill="rgb(234,53,53)" rx="2" ry="2" />
<text  x="906.59" y="879.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType (1 samples, 0.04%)</title><rect x="1124.8" y="661" width="0.4" height="15.0" fill="rgb(213,39,22)" rx="2" ry="2" />
<text  x="1127.79" y="671.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveRelocations (1 samples, 0.04%)</title><rect x="1159.2" y="917" width="0.4" height="15.0" fill="rgb(209,105,41)" rx="2" ry="2" />
<text  x="1162.16" y="927.5" ></text>
</g>
<g >
<title>Append (1 samples, 0.04%)</title><rect x="1138.4" y="629" width="0.5" height="15.0" fill="rgb(223,139,27)" rx="2" ry="2" />
<text  x="1141.45" y="639.5" ></text>
</g>
<g >
<title>clang::Sema::ActOnEndOfTranslationUnit (1 samples, 0.04%)</title><rect x="908.9" y="773" width="0.4" height="15.0" fill="rgb(238,66,11)" rx="2" ry="2" />
<text  x="911.88" y="783.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::runStaticInitializersOnce (1 samples, 0.04%)</title><rect x="1145.5" y="901" width="0.4" height="15.0" fill="rgb(250,184,9)" rx="2" ry="2" />
<text  x="1148.50" y="911.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.07%)</title><rect x="1167.1" y="917" width="0.9" height="15.0" fill="rgb(246,189,49)" rx="2" ry="2" />
<text  x="1170.09" y="927.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::codeGenTransaction (1 samples, 0.04%)</title><rect x="1149.9" y="821" width="0.4" height="15.0" fill="rgb(222,130,23)" rx="2" ry="2" />
<text  x="1152.90" y="831.5" ></text>
</g>
<g >
<title>llvm::orc::lookupWithLegacyFn&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}::operator()(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;) const::{lambda(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)#1}&gt; (1 samples, 0.04%)</title><rect x="1159.2" y="853" width="0.4" height="15.0" fill="rgb(233,66,22)" rx="2" ry="2" />
<text  x="1162.16" y="863.5" ></text>
</g>
<g >
<title>TBranch::ReadLeaves1Impl (9 samples, 0.34%)</title><rect x="657.3" y="933" width="3.9" height="15.0" fill="rgb(227,218,1)" rx="2" ry="2" />
<text  x="660.28" y="943.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTypenameType (1 samples, 0.04%)</title><rect x="1131.4" y="837" width="0.4" height="15.0" fill="rgb(244,157,20)" rx="2" ry="2" />
<text  x="1134.40" y="847.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.11%)</title><rect x="1174.1" y="757" width="1.4" height="15.0" fill="rgb(207,158,3)" rx="2" ry="2" />
<text  x="1177.14" y="767.5" ></text>
</g>
<g >
<title>llvm::simplifyUsersOfIV (1 samples, 0.04%)</title><rect x="692.1" y="757" width="0.4" height="15.0" fill="rgb(213,169,13)" rx="2" ry="2" />
<text  x="695.09" y="767.5" ></text>
</g>
<g >
<title>clang::Sema::getTemplateInstantiationArgs (1 samples, 0.04%)</title><rect x="1139.8" y="581" width="0.4" height="15.0" fill="rgb(228,45,42)" rx="2" ry="2" />
<text  x="1142.77" y="591.5" ></text>
</g>
<g >
<title>cling::Interpreter::loadHeader (1 samples, 0.04%)</title><rect x="1151.2" y="933" width="0.5" height="15.0" fill="rgb(238,171,8)" rx="2" ry="2" />
<text  x="1154.22" y="943.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.04%)</title><rect x="1027.8" y="661" width="0.5" height="15.0" fill="rgb(247,178,7)" rx="2" ry="2" />
<text  x="1030.85" y="671.5" ></text>
</g>
<g >
<title>llvm::AttrBuilder::AttrBuilder (1 samples, 0.04%)</title><rect x="1111.1" y="597" width="0.5" height="15.0" fill="rgb(246,34,48)" rx="2" ry="2" />
<text  x="1114.13" y="607.5" ></text>
</g>
<g >
<title>clang::RedeclarableTemplateDecl::loadLazySpecializationsImpl (1 samples, 0.04%)</title><rect x="1140.2" y="677" width="0.4" height="15.0" fill="rgb(210,226,9)" rx="2" ry="2" />
<text  x="1143.21" y="687.5" ></text>
</g>
<g >
<title>TDirectoryFile::Get (1 samples, 0.04%)</title><rect x="783.3" y="885" width="0.4" height="15.0" fill="rgb(241,70,4)" rx="2" ry="2" />
<text  x="786.30" y="895.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (1 samples, 0.04%)</title><rect x="1150.3" y="789" width="0.5" height="15.0" fill="rgb(230,169,22)" rx="2" ry="2" />
<text  x="1153.34" y="799.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke (2 samples, 0.07%)</title><rect x="1145.9" y="917" width="0.9" height="15.0" fill="rgb(210,26,50)" rx="2" ry="2" />
<text  x="1148.94" y="927.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1093.9" y="741" width="0.5" height="15.0" fill="rgb(219,84,43)" rx="2" ry="2" />
<text  x="1096.94" y="751.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl (1 samples, 0.04%)</title><rect x="1098.3" y="933" width="0.5" height="15.0" fill="rgb(254,12,22)" rx="2" ry="2" />
<text  x="1101.35" y="943.5" ></text>
</g>
<g >
<title>clang::Sema::SubstBaseSpecifiers (1 samples, 0.04%)</title><rect x="1128.8" y="757" width="0.4" height="15.0" fill="rgb(241,49,1)" rx="2" ry="2" />
<text  x="1131.75" y="767.5" ></text>
</g>
<g >
<title>TListOfEnums::Load (1 samples, 0.04%)</title><rect x="904.5" y="901" width="0.4" height="15.0" fill="rgb(225,8,16)" rx="2" ry="2" />
<text  x="907.47" y="911.5" ></text>
</g>
<g >
<title>llvm::FoldingSetBase::FindNodeOrInsertPos (1 samples, 0.04%)</title><rect x="1100.1" y="741" width="0.5" height="15.0" fill="rgb(228,64,31)" rx="2" ry="2" />
<text  x="1103.11" y="751.5" ></text>
</g>
<g >
<title>TStreamerInfo::BuildCheck (2 samples, 0.07%)</title><rect x="783.7" y="821" width="0.9" height="15.0" fill="rgb(218,53,9)" rx="2" ry="2" />
<text  x="786.74" y="831.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetType (1 samples, 0.04%)</title><rect x="1100.6" y="885" width="0.4" height="15.0" fill="rgb(254,206,8)" rx="2" ry="2" />
<text  x="1103.55" y="895.5" ></text>
</g>
<g >
<title>llvm::SelectionDAG::Legalize (1 samples, 0.04%)</title><rect x="906.2" y="549" width="0.5" height="15.0" fill="rgb(226,133,12)" rx="2" ry="2" />
<text  x="909.24" y="559.5" ></text>
</g>
<g >
<title>clang::ASTContext::getDeclAlign (1 samples, 0.04%)</title><rect x="1104.1" y="869" width="0.4" height="15.0" fill="rgb(231,125,32)" rx="2" ry="2" />
<text  x="1107.08" y="879.5" ></text>
</g>
<g >
<title>TCling::ProcessLine (7 samples, 0.26%)</title><rect x="900.5" y="901" width="3.1" height="15.0" fill="rgb(242,214,14)" rx="2" ry="2" />
<text  x="903.51" y="911.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl (1 samples, 0.04%)</title><rect x="1142.0" y="661" width="0.4" height="15.0" fill="rgb(239,176,40)" rx="2" ry="2" />
<text  x="1144.97" y="671.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::SetLLVMFunctionAttributes (1 samples, 0.04%)</title><rect x="1102.3" y="741" width="0.5" height="15.0" fill="rgb(211,75,18)" rx="2" ry="2" />
<text  x="1105.32" y="751.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::runStaticInitializersOnce (24 samples, 0.90%)</title><rect x="889.9" y="741" width="10.6" height="15.0" fill="rgb(252,160,54)" rx="2" ry="2" />
<text  x="892.93" y="751.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1070.6" y="677" width="0.4" height="15.0" fill="rgb(246,105,48)" rx="2" ry="2" />
<text  x="1073.59" y="687.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;llvm::StringRef, std::pair&lt;llvm::StringRef const, clang::GlobalDecl&gt;, std::_Select1st&lt;std::pair&lt;llvm::StringRef const, clang::GlobalDecl&gt; &gt;, std::less&lt;llvm::StringRef&gt;, std::allocator&lt;std::pair&lt;llvm::StringRef const, clang::GlobalDecl&gt; &gt; &gt;::_M_get_insert_unique_pos (1 samples, 0.04%)</title><rect x="909.3" y="725" width="0.5" height="15.0" fill="rgb(238,53,7)" rx="2" ry="2" />
<text  x="912.32" y="735.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCall (1 samples, 0.04%)</title><rect x="1107.2" y="789" width="0.4" height="15.0" fill="rgb(216,119,44)" rx="2" ry="2" />
<text  x="1110.16" y="799.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentNameType (1 samples, 0.04%)</title><rect x="1139.3" y="677" width="0.5" height="15.0" fill="rgb(222,112,13)" rx="2" ry="2" />
<text  x="1142.33" y="687.5" ></text>
</g>
<g >
<title>execute_command (5 samples, 0.19%)</title><rect x="10.4" y="645" width="2.2" height="15.0" fill="rgb(247,225,41)" rx="2" ry="2" />
<text  x="13.44" y="655.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformCompoundStmt (1 samples, 0.04%)</title><rect x="785.1" y="645" width="0.4" height="15.0" fill="rgb(247,228,41)" rx="2" ry="2" />
<text  x="788.06" y="655.5" ></text>
</g>
<g >
<title>TBranch::GetBasketAndFirst (76 samples, 2.84%)</title><rect x="381.4" y="837" width="33.5" height="15.0" fill="rgb(244,117,3)" rx="2" ry="2" />
<text  x="384.45" y="847.5" >TB..</text>
</g>
<g >
<title>llvm::ScalarEvolution::isKnownPredicateViaConstantRanges (1 samples, 0.04%)</title><rect x="909.8" y="661" width="0.4" height="15.0" fill="rgb(248,142,7)" rx="2" ry="2" />
<text  x="912.76" y="671.5" ></text>
</g>
<g >
<title>TClass::GetCheckSum (1 samples, 0.04%)</title><rect x="783.7" y="789" width="0.5" height="15.0" fill="rgb(210,63,24)" rx="2" ry="2" />
<text  x="786.74" y="799.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGBuilder::visit (2 samples, 0.07%)</title><rect x="907.1" y="549" width="0.9" height="15.0" fill="rgb(240,199,5)" rx="2" ry="2" />
<text  x="910.12" y="559.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (3 samples, 0.11%)</title><rect x="1148.1" y="661" width="1.4" height="15.0" fill="rgb(222,44,11)" rx="2" ry="2" />
<text  x="1151.14" y="671.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::runOnMachineFunction (1 samples, 0.04%)</title><rect x="1144.2" y="725" width="0.4" height="15.0" fill="rgb(213,45,2)" rx="2" ry="2" />
<text  x="1147.17" y="735.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (2 samples, 0.07%)</title><rect x="1165.8" y="933" width="0.8" height="15.0" fill="rgb(220,193,36)" rx="2" ry="2" />
<text  x="1168.77" y="943.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (1 samples, 0.04%)</title><rect x="1051.2" y="581" width="0.4" height="15.0" fill="rgb(213,36,3)" rx="2" ry="2" />
<text  x="1054.20" y="591.5" ></text>
</g>
<g >
<title>clang::SourceManager::loadSLocEntry (1 samples, 0.04%)</title><rect x="1137.6" y="613" width="0.4" height="15.0" fill="rgb(235,227,24)" rx="2" ry="2" />
<text  x="1140.57" y="623.5" ></text>
</g>
<g >
<title>llvm::AttributeImpl::hasAttribute (1 samples, 0.04%)</title><rect x="865.7" y="533" width="0.4" height="15.0" fill="rgb(235,84,41)" rx="2" ry="2" />
<text  x="868.70" y="543.5" ></text>
</g>
<g >
<title>_nl_expand_alias (1 samples, 0.04%)</title><rect x="25.9" y="885" width="0.4" height="15.0" fill="rgb(217,163,21)" rx="2" ry="2" />
<text  x="28.86" y="895.5" ></text>
</g>
<g >
<title>clang::DeclContext::buildLookupImpl (1 samples, 0.04%)</title><rect x="1129.6" y="661" width="0.5" height="15.0" fill="rgb(216,220,1)" rx="2" ry="2" />
<text  x="1132.63" y="671.5" ></text>
</g>
<g >
<title>ROOT::Detail::RDF::RLoopManager::RunAndCheckFilters (2 samples, 0.07%)</title><rect x="776.7" y="901" width="0.9" height="15.0" fill="rgb(252,219,36)" rx="2" ry="2" />
<text  x="779.69" y="911.5" ></text>
</g>
<g >
<title>llvm::orc::LambdaSymbolResolver&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt; const&amp;)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}&gt;::lookup (1 samples, 0.04%)</title><rect x="1149.5" y="629" width="0.4" height="15.0" fill="rgb(239,210,16)" rx="2" ry="2" />
<text  x="1152.46" y="639.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitLValue (1 samples, 0.04%)</title><rect x="1116.0" y="693" width="0.4" height="15.0" fill="rgb(241,146,29)" rx="2" ry="2" />
<text  x="1118.97" y="703.5" ></text>
</g>
<g >
<title>llvm::FoldingSetNodeID::operator== (1 samples, 0.04%)</title><rect x="1127.0" y="645" width="0.4" height="15.0" fill="rgb(253,149,10)" rx="2" ry="2" />
<text  x="1129.99" y="655.5" ></text>
</g>
<g >
<title>llvm::ValueHandleBase::ValueIsDeleted (1 samples, 0.04%)</title><rect x="1028.3" y="661" width="0.4" height="15.0" fill="rgb(237,15,26)" rx="2" ry="2" />
<text  x="1031.29" y="671.5" ></text>
</g>
<g >
<title>TCling::TCling (12 samples, 0.45%)</title><rect x="1066.2" y="885" width="5.3" height="15.0" fill="rgb(208,0,35)" rx="2" ry="2" />
<text  x="1069.18" y="895.5" ></text>
</g>
<g >
<title>llvm::DominatorTreeWrapperPass::runOnFunction (1 samples, 0.04%)</title><rect x="1158.3" y="901" width="0.4" height="15.0" fill="rgb(250,119,6)" rx="2" ry="2" />
<text  x="1161.27" y="911.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.07%)</title><rect x="1164.9" y="821" width="0.9" height="15.0" fill="rgb(240,126,17)" rx="2" ry="2" />
<text  x="1167.88" y="831.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType (1 samples, 0.04%)</title><rect x="1135.4" y="693" width="0.4" height="15.0" fill="rgb(220,181,15)" rx="2" ry="2" />
<text  x="1138.36" y="703.5" ></text>
</g>
<g >
<title>__GI_setlocale (1 samples, 0.04%)</title><rect x="25.9" y="917" width="0.4" height="15.0" fill="rgb(244,33,39)" rx="2" ry="2" />
<text  x="28.86" y="927.5" ></text>
</g>
<g >
<title>llvm::AttributeSetNode::getAttribute (1 samples, 0.04%)</title><rect x="707.1" y="725" width="0.4" height="15.0" fill="rgb(238,33,45)" rx="2" ry="2" />
<text  x="710.07" y="735.5" ></text>
</g>
<g >
<title>clang::LinkageComputer::getLVForDecl (1 samples, 0.04%)</title><rect x="1105.4" y="517" width="0.4" height="15.0" fill="rgb(228,61,20)" rx="2" ry="2" />
<text  x="1108.40" y="527.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl (1 samples, 0.04%)</title><rect x="1127.9" y="693" width="0.4" height="15.0" fill="rgb(239,109,30)" rx="2" ry="2" />
<text  x="1130.87" y="703.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="11.8" y="277" width="0.4" height="15.0" fill="rgb(213,91,52)" rx="2" ry="2" />
<text  x="14.76" y="287.5" ></text>
</g>
<g >
<title>_dl_protect_relro (1 samples, 0.04%)</title><rect x="1171.1" y="885" width="0.4" height="15.0" fill="rgb(227,121,41)" rx="2" ry="2" />
<text  x="1174.05" y="895.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGBuilder::getValueImpl (1 samples, 0.04%)</title><rect x="1148.6" y="533" width="0.4" height="15.0" fill="rgb(218,47,15)" rx="2" ry="2" />
<text  x="1151.58" y="543.5" ></text>
</g>
<g >
<title>cling::Interpreter::loadHeader (1 samples, 0.04%)</title><rect x="1027.4" y="773" width="0.4" height="15.0" fill="rgb(251,112,47)" rx="2" ry="2" />
<text  x="1030.41" y="783.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1093.9" y="725" width="0.5" height="15.0" fill="rgb(246,59,27)" rx="2" ry="2" />
<text  x="1096.94" y="735.5" ></text>
</g>
<g >
<title>llvm::BasicAAWrapperPass::runOnFunction (1 samples, 0.04%)</title><rect x="1048.6" y="613" width="0.4" height="15.0" fill="rgb(239,182,18)" rx="2" ry="2" />
<text  x="1051.56" y="623.5" ></text>
</g>
<g >
<title>ROOT::Internal::RDF::GetValidatedArgTypes (1 samples, 0.04%)</title><rect x="785.9" y="949" width="0.5" height="15.0" fill="rgb(217,161,47)" rx="2" ry="2" />
<text  x="788.94" y="959.5" ></text>
</g>
<g >
<title>llvm::X86TargetMachine::getSubtargetImpl (1 samples, 0.04%)</title><rect x="1046.4" y="581" width="0.4" height="15.0" fill="rgb(245,102,28)" rx="2" ry="2" />
<text  x="1049.36" y="591.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::SelectAllBasicBlocks (4 samples, 0.15%)</title><rect x="906.2" y="581" width="1.8" height="15.0" fill="rgb(250,36,51)" rx="2" ry="2" />
<text  x="909.24" y="591.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="21.5" y="517" width="0.4" height="15.0" fill="rgb(245,224,9)" rx="2" ry="2" />
<text  x="24.46" y="527.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke (1 samples, 0.04%)</title><rect x="904.0" y="677" width="0.5" height="15.0" fill="rgb(212,199,47)" rx="2" ry="2" />
<text  x="907.03" y="687.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::SelectAllBasicBlocks (1 samples, 0.04%)</title><rect x="1151.7" y="917" width="0.4" height="15.0" fill="rgb(250,19,6)" rx="2" ry="2" />
<text  x="1154.67" y="927.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1131.0" y="789" width="0.4" height="15.0" fill="rgb(224,94,9)" rx="2" ry="2" />
<text  x="1133.96" y="799.5" ></text>
</g>
<g >
<title>cling::MetaSema::actOnLCommand (1 samples, 0.04%)</title><rect x="1027.0" y="789" width="0.4" height="15.0" fill="rgb(226,37,40)" rx="2" ry="2" />
<text  x="1029.97" y="799.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization (1 samples, 0.04%)</title><rect x="1142.0" y="645" width="0.4" height="15.0" fill="rgb(252,108,31)" rx="2" ry="2" />
<text  x="1144.97" y="655.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::GetExternalDeclStmt (1 samples, 0.04%)</title><rect x="1132.7" y="933" width="0.5" height="15.0" fill="rgb(219,115,42)" rx="2" ry="2" />
<text  x="1135.72" y="943.5" ></text>
</g>
<g >
<title>llvm::FoldingSetNodeID::AddInteger (1 samples, 0.04%)</title><rect x="1128.3" y="501" width="0.5" height="15.0" fill="rgb(231,17,15)" rx="2" ry="2" />
<text  x="1131.31" y="511.5" ></text>
</g>
<g >
<title>cling::MetaSema::actOnxCommand (160 samples, 5.97%)</title><rect x="830.0" y="853" width="70.5" height="15.0" fill="rgb(242,123,50)" rx="2" ry="2" />
<text  x="833.01" y="863.5" >cling::..</text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::setGVPropertiesAux (1 samples, 0.04%)</title><rect x="1105.8" y="693" width="0.5" height="15.0" fill="rgb(214,103,24)" rx="2" ry="2" />
<text  x="1108.84" y="703.5" ></text>
</g>
<g >
<title>llvm::AttrBuilder::addAttribute (1 samples, 0.04%)</title><rect x="1112.4" y="709" width="0.5" height="15.0" fill="rgb(235,35,53)" rx="2" ry="2" />
<text  x="1115.45" y="719.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="843.7" y="517" width="0.4" height="15.0" fill="rgb(226,142,27)" rx="2" ry="2" />
<text  x="846.67" y="527.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="21.9" y="629" width="0.4" height="15.0" fill="rgb(219,155,40)" rx="2" ry="2" />
<text  x="24.90" y="639.5" ></text>
</g>
<g >
<title>llvm::MachineFunctionPass::runOnFunction (1 samples, 0.04%)</title><rect x="1147.7" y="677" width="0.4" height="15.0" fill="rgb(247,186,9)" rx="2" ry="2" />
<text  x="1150.70" y="687.5" ></text>
</g>
<g >
<title>llvm::orc::lookupWithLegacyFn&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}::operator()(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;) const::{lambda(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)#1}&gt; (3 samples, 0.11%)</title><rect x="1157.0" y="965" width="1.3" height="15.0" fill="rgb(241,19,8)" rx="2" ry="2" />
<text  x="1159.95" y="975.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::SelectBasicBlock (2 samples, 0.07%)</title><rect x="1148.6" y="597" width="0.9" height="15.0" fill="rgb(221,159,42)" rx="2" ry="2" />
<text  x="1151.58" y="607.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (1 samples, 0.04%)</title><rect x="1094.8" y="789" width="0.5" height="15.0" fill="rgb(226,90,52)" rx="2" ry="2" />
<text  x="1097.82" y="799.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveRelocations (4 samples, 0.15%)</title><rect x="1148.1" y="805" width="1.8" height="15.0" fill="rgb(210,172,14)" rx="2" ry="2" />
<text  x="1151.14" y="815.5" ></text>
</g>
<g >
<title>___printf_chk (1 samples, 0.04%)</title><rect x="19.3" y="469" width="0.4" height="15.0" fill="rgb(225,3,33)" rx="2" ry="2" />
<text  x="22.25" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;llvm::StringRef, llvm::StringRef, std::_Identity&lt;llvm::StringRef&gt;, std::less&lt;llvm::StringRef&gt;, std::allocator&lt;llvm::StringRef&gt; &gt;::find (1 samples, 0.04%)</title><rect x="889.5" y="581" width="0.4" height="15.0" fill="rgb(253,175,21)" rx="2" ry="2" />
<text  x="892.49" y="591.5" ></text>
</g>
<g >
<title>clang::Lexer::LexTokenInternal (1 samples, 0.04%)</title><rect x="1071.0" y="757" width="0.5" height="15.0" fill="rgb(218,101,14)" rx="2" ry="2" />
<text  x="1074.03" y="767.5" ></text>
</g>
<g >
<title>llvm::isFreeCall (2 samples, 0.07%)</title><rect x="898.7" y="613" width="0.9" height="15.0" fill="rgb(235,75,31)" rx="2" ry="2" />
<text  x="901.75" y="623.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="21.0" y="485" width="0.5" height="15.0" fill="rgb(232,94,42)" rx="2" ry="2" />
<text  x="24.02" y="495.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (1 samples, 0.04%)</title><rect x="1155.2" y="757" width="0.4" height="15.0" fill="rgb(249,73,51)" rx="2" ry="2" />
<text  x="1158.19" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.04%)</title><rect x="1112.4" y="693" width="0.5" height="15.0" fill="rgb(242,96,12)" rx="2" ry="2" />
<text  x="1115.45" y="703.5" ></text>
</g>
<g >
<title>TCling::~TCling (2 samples, 0.07%)</title><rect x="1027.8" y="821" width="0.9" height="15.0" fill="rgb(208,190,26)" rx="2" ry="2" />
<text  x="1030.85" y="831.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitStmt (1 samples, 0.04%)</title><rect x="1102.8" y="885" width="0.4" height="15.0" fill="rgb(236,213,40)" rx="2" ry="2" />
<text  x="1105.76" y="895.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl (1 samples, 0.04%)</title><rect x="1126.1" y="869" width="0.4" height="15.0" fill="rgb(235,50,41)" rx="2" ry="2" />
<text  x="1129.11" y="879.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetExistingDecl (1 samples, 0.04%)</title><rect x="1137.1" y="533" width="0.5" height="15.0" fill="rgb(250,189,37)" rx="2" ry="2" />
<text  x="1140.12" y="543.5" ></text>
</g>
<g >
<title>make_child (4 samples, 0.15%)</title><rect x="22.3" y="133" width="1.8" height="15.0" fill="rgb(229,13,22)" rx="2" ry="2" />
<text  x="25.34" y="143.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl (1 samples, 0.04%)</title><rect x="1127.9" y="805" width="0.4" height="15.0" fill="rgb(215,11,39)" rx="2" ry="2" />
<text  x="1130.87" y="815.5" ></text>
</g>
<g >
<title>TCling::TypedefInfo_Factory (1 samples, 0.04%)</title><rect x="784.2" y="629" width="0.4" height="15.0" fill="rgb(218,184,37)" rx="2" ry="2" />
<text  x="787.18" y="639.5" ></text>
</g>
<g >
<title>TCling::TCling (12 samples, 0.45%)</title><rect x="1066.2" y="853" width="5.3" height="15.0" fill="rgb(251,175,50)" rx="2" ry="2" />
<text  x="1069.18" y="863.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetExternalDeclStmt (1 samples, 0.04%)</title><rect x="1132.7" y="917" width="0.5" height="15.0" fill="rgb(220,85,52)" rx="2" ry="2" />
<text  x="1135.72" y="927.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1095.3" y="725" width="0.4" height="15.0" fill="rgb(208,46,0)" rx="2" ry="2" />
<text  x="1098.27" y="735.5" ></text>
</g>
<g >
<title>llvm::legacy::FunctionPassManager::run (3 samples, 0.11%)</title><rect x="1028.7" y="645" width="1.4" height="15.0" fill="rgb(244,229,32)" rx="2" ry="2" />
<text  x="1031.73" y="655.5" ></text>
</g>
<g >
<title>llvm::function_ref&lt;bool (llvm::ArrayRef&lt;clang::QualType&gt;)&gt;::callback_fn&lt;clang::Sema::AddTemplateOverloadCandidate(clang::FunctionTemplateDecl*, clang::DeclAccessPair, clang::TemplateArgumentListInfo*, llvm::ArrayRef&lt;clang::Expr*&gt;, clang::OverloadCandidateSet&amp;, bool, bool, bool, clang::CallExpr::ADLCallKind)::{lambda(llvm::ArrayRef&lt;clang::QualType&gt;)#1}&gt; (1 samples, 0.04%)</title><rect x="1127.9" y="917" width="0.4" height="15.0" fill="rgb(212,92,37)" rx="2" ry="2" />
<text  x="1130.87" y="927.5" ></text>
</g>
<g >
<title>clang::ASTContext::getUnqualifiedArrayType (1 samples, 0.04%)</title><rect x="1126.5" y="869" width="0.5" height="15.0" fill="rgb(227,17,33)" rx="2" ry="2" />
<text  x="1129.55" y="879.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.11%)</title><rect x="14.8" y="245" width="1.4" height="15.0" fill="rgb(237,64,19)" rx="2" ry="2" />
<text  x="17.85" y="255.5" ></text>
</g>
<g >
<title>call_init.part.0 (1 samples, 0.04%)</title><rect x="904.9" y="693" width="0.5" height="15.0" fill="rgb(214,31,10)" rx="2" ry="2" />
<text  x="907.91" y="703.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::getNotSCEV (1 samples, 0.04%)</title><rect x="692.1" y="613" width="0.4" height="15.0" fill="rgb(207,164,47)" rx="2" ry="2" />
<text  x="695.09" y="623.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformNestedNameSpecifierLoc (2 samples, 0.07%)</title><rect x="1130.1" y="869" width="0.9" height="15.0" fill="rgb(241,155,53)" rx="2" ry="2" />
<text  x="1133.07" y="879.5" ></text>
</g>
<g >
<title>command_substitute (1 samples, 0.04%)</title><rect x="21.9" y="453" width="0.4" height="15.0" fill="rgb(227,44,39)" rx="2" ry="2" />
<text  x="24.90" y="463.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::runStaticInitializersOnce (1 samples, 0.04%)</title><rect x="1027.4" y="693" width="0.4" height="15.0" fill="rgb(229,202,6)" rx="2" ry="2" />
<text  x="1030.41" y="703.5" ></text>
</g>
<g >
<title>llvm::PMTopLevelManager::findAnalysisPassInfo (1 samples, 0.04%)</title><rect x="1037.1" y="613" width="0.4" height="15.0" fill="rgb(251,24,4)" rx="2" ry="2" />
<text  x="1040.10" y="623.5" ></text>
</g>
<g >
<title>llvm::orc::SimpleCompiler::operator() (2 samples, 0.07%)</title><rect x="1152.5" y="869" width="0.9" height="15.0" fill="rgb(221,77,39)" rx="2" ry="2" />
<text  x="1155.55" y="879.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization (1 samples, 0.04%)</title><rect x="1123.0" y="901" width="0.5" height="15.0" fill="rgb(254,122,23)" rx="2" ry="2" />
<text  x="1126.02" y="911.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.04%)</title><rect x="1141.5" y="917" width="0.5" height="15.0" fill="rgb(234,156,41)" rx="2" ry="2" />
<text  x="1144.53" y="927.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1127.4" y="837" width="0.5" height="15.0" fill="rgb(222,121,17)" rx="2" ry="2" />
<text  x="1130.43" y="847.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (18 samples, 0.67%)</title><rect x="856.4" y="533" width="8.0" height="15.0" fill="rgb(247,140,35)" rx="2" ry="2" />
<text  x="859.45" y="543.5" ></text>
</g>
<g >
<title>cling::Interpreter::DeclareInternal (1 samples, 0.04%)</title><rect x="1151.2" y="917" width="0.5" height="15.0" fill="rgb(212,50,16)" rx="2" ry="2" />
<text  x="1154.22" y="927.5" ></text>
</g>
<g >
<title>TPluginManager::FindHandler (1 samples, 0.04%)</title><rect x="904.0" y="933" width="0.5" height="15.0" fill="rgb(236,42,3)" rx="2" ry="2" />
<text  x="907.03" y="943.5" ></text>
</g>
<g >
<title>llvm::AttributeSetNode::getAttribute (1 samples, 0.04%)</title><rect x="901.4" y="549" width="0.4" height="15.0" fill="rgb(225,66,29)" rx="2" ry="2" />
<text  x="904.39" y="559.5" ></text>
</g>
<g >
<title>execute_command (4 samples, 0.15%)</title><rect x="22.3" y="325" width="1.8" height="15.0" fill="rgb(218,48,0)" rx="2" ry="2" />
<text  x="25.34" y="335.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1138.4" y="933" width="0.5" height="15.0" fill="rgb(247,201,1)" rx="2" ry="2" />
<text  x="1141.45" y="943.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallArg (1 samples, 0.04%)</title><rect x="1138.0" y="837" width="0.4" height="15.0" fill="rgb(225,145,45)" rx="2" ry="2" />
<text  x="1141.01" y="847.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1127.4" y="741" width="0.5" height="15.0" fill="rgb(241,34,17)" rx="2" ry="2" />
<text  x="1130.43" y="751.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTemplateIdType (1 samples, 0.04%)</title><rect x="1124.8" y="645" width="0.4" height="15.0" fill="rgb(238,145,34)" rx="2" ry="2" />
<text  x="1127.79" y="655.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;std::add_pointer, (anonymous namespace)::AggExprEmitter, void&gt;::Visit (1 samples, 0.04%)</title><rect x="1101.0" y="853" width="0.4" height="15.0" fill="rgb(223,190,5)" rx="2" ry="2" />
<text  x="1103.99" y="863.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.07%)</title><rect x="1175.5" y="725" width="0.8" height="15.0" fill="rgb(229,116,7)" rx="2" ry="2" />
<text  x="1178.46" y="735.5" ></text>
</g>
<g >
<title>dl_open_worker (1 samples, 0.04%)</title><rect x="904.9" y="741" width="0.5" height="15.0" fill="rgb(217,35,22)" rx="2" ry="2" />
<text  x="907.91" y="751.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (1 samples, 0.04%)</title><rect x="1130.5" y="725" width="0.5" height="15.0" fill="rgb(254,29,53)" rx="2" ry="2" />
<text  x="1133.52" y="735.5" ></text>
</g>
<g >
<title>clang::ASTContext::getBaseElementType (1 samples, 0.04%)</title><rect x="1138.0" y="725" width="0.4" height="15.0" fill="rgb(221,26,28)" rx="2" ry="2" />
<text  x="1141.01" y="735.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitFunctionTemplateDecl (1 samples, 0.04%)</title><rect x="1097.5" y="725" width="0.4" height="15.0" fill="rgb(250,15,54)" rx="2" ry="2" />
<text  x="1100.47" y="735.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke (2 samples, 0.07%)</title><rect x="1144.2" y="821" width="0.9" height="15.0" fill="rgb(239,77,42)" rx="2" ry="2" />
<text  x="1147.17" y="831.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXMemberOrOperatorCall (1 samples, 0.04%)</title><rect x="1138.0" y="901" width="0.4" height="15.0" fill="rgb(250,183,8)" rx="2" ry="2" />
<text  x="1141.01" y="911.5" ></text>
</g>
<g >
<title>llvm::MCAssembler::layoutSectionOnce (1 samples, 0.04%)</title><rect x="830.9" y="517" width="0.4" height="15.0" fill="rgb(207,187,46)" rx="2" ry="2" />
<text  x="833.89" y="527.5" ></text>
</g>
<g >
<title>llvm::orc::LambdaSymbolResolver&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt; const&amp;)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}&gt;::lookup (10 samples, 0.37%)</title><rect x="1159.6" y="885" width="4.4" height="15.0" fill="rgb(240,151,54)" rx="2" ry="2" />
<text  x="1162.60" y="895.5" ></text>
</g>
<g >
<title>msort_with_tmp.part.0 (1 samples, 0.04%)</title><rect x="25.9" y="837" width="0.4" height="15.0" fill="rgb(208,163,52)" rx="2" ry="2" />
<text  x="28.86" y="847.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.04%)</title><rect x="909.3" y="709" width="0.5" height="15.0" fill="rgb(225,29,45)" rx="2" ry="2" />
<text  x="912.32" y="719.5" ></text>
</g>
<g >
<title>__run_fork_handlers (2 samples, 0.07%)</title><rect x="1175.5" y="789" width="0.8" height="15.0" fill="rgb(247,177,4)" rx="2" ry="2" />
<text  x="1178.46" y="799.5" ></text>
</g>
<g >
<title>llvm::BitstreamCursor::readRecord (1 samples, 0.04%)</title><rect x="1140.6" y="661" width="0.5" height="15.0" fill="rgb(225,111,23)" rx="2" ry="2" />
<text  x="1143.65" y="671.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitBranchOnBoolExpr (2 samples, 0.07%)</title><rect x="1105.8" y="869" width="0.9" height="15.0" fill="rgb(221,127,12)" rx="2" ry="2" />
<text  x="1108.84" y="879.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;std::add_pointer, (anonymous namespace)::ScalarExprEmitter, llvm::Value*&gt;::Visit (1 samples, 0.04%)</title><rect x="1107.2" y="853" width="0.4" height="15.0" fill="rgb(251,40,52)" rx="2" ry="2" />
<text  x="1110.16" y="863.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformElaboratedType (1 samples, 0.04%)</title><rect x="1124.8" y="789" width="0.4" height="15.0" fill="rgb(216,53,27)" rx="2" ry="2" />
<text  x="1127.79" y="799.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadCXXBaseSpecifier (1 samples, 0.04%)</title><rect x="1123.5" y="629" width="0.4" height="15.0" fill="rgb(254,189,8)" rx="2" ry="2" />
<text  x="1126.47" y="639.5" ></text>
</g>
<g >
<title>llvm::isMathLibCallNoop (1 samples, 0.04%)</title><rect x="897.9" y="629" width="0.4" height="15.0" fill="rgb(248,163,2)" rx="2" ry="2" />
<text  x="900.86" y="639.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::runOnMachineFunction (3 samples, 0.11%)</title><rect x="1155.6" y="885" width="1.4" height="15.0" fill="rgb(211,74,48)" rx="2" ry="2" />
<text  x="1158.63" y="895.5" ></text>
</g>
<g >
<title>TClass::GetListOfEnums (1 samples, 0.04%)</title><rect x="904.5" y="917" width="0.4" height="15.0" fill="rgb(253,25,33)" rx="2" ry="2" />
<text  x="907.47" y="927.5" ></text>
</g>
<g >
<title>HandleInterpreterException (1 samples, 0.04%)</title><rect x="1027.0" y="869" width="0.4" height="15.0" fill="rgb(205,126,26)" rx="2" ry="2" />
<text  x="1029.97" y="879.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.11%)</title><rect x="1066.6" y="693" width="1.3" height="15.0" fill="rgb(236,82,31)" rx="2" ry="2" />
<text  x="1069.62" y="703.5" ></text>
</g>
<g >
<title>__GI___fork (24 samples, 0.90%)</title><rect x="1177.2" y="837" width="10.6" height="15.0" fill="rgb(216,56,11)" rx="2" ry="2" />
<text  x="1180.22" y="847.5" ></text>
</g>
<g >
<title>clang::Sema::AddInitializerToDecl (1 samples, 0.04%)</title><rect x="1120.4" y="949" width="0.4" height="15.0" fill="rgb(235,148,54)" rx="2" ry="2" />
<text  x="1123.38" y="959.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl (1 samples, 0.04%)</title><rect x="783.7" y="597" width="0.5" height="15.0" fill="rgb(206,157,14)" rx="2" ry="2" />
<text  x="786.74" y="607.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::getRangeRef (1 samples, 0.04%)</title><rect x="829.6" y="869" width="0.4" height="15.0" fill="rgb(244,112,38)" rx="2" ry="2" />
<text  x="832.57" y="879.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::RebuildDependentNameType (1 samples, 0.04%)</title><rect x="1131.4" y="853" width="0.4" height="15.0" fill="rgb(212,33,22)" rx="2" ry="2" />
<text  x="1134.40" y="863.5" ></text>
</g>
<g >
<title>adler32_z (24 samples, 0.90%)</title><rect x="633.5" y="837" width="10.6" height="15.0" fill="rgb(216,34,54)" rx="2" ry="2" />
<text  x="636.49" y="847.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (3 samples, 0.11%)</title><rect x="1157.0" y="917" width="1.3" height="15.0" fill="rgb(225,65,49)" rx="2" ry="2" />
<text  x="1159.95" y="927.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::GetOrCreateLLVMFunction (1 samples, 0.04%)</title><rect x="1101.0" y="773" width="0.4" height="15.0" fill="rgb(208,98,26)" rx="2" ry="2" />
<text  x="1103.99" y="783.5" ></text>
</g>
<g >
<title>llvm::MemorySSA::MemorySSA (1 samples, 0.04%)</title><rect x="910.2" y="709" width="0.4" height="15.0" fill="rgb(221,139,33)" rx="2" ry="2" />
<text  x="913.20" y="719.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::Release (1 samples, 0.04%)</title><rect x="1149.9" y="789" width="0.4" height="15.0" fill="rgb(216,213,28)" rx="2" ry="2" />
<text  x="1152.90" y="799.5" ></text>
</g>
<g >
<title>[bash] (15 samples, 0.56%)</title><rect x="12.6" y="357" width="6.7" height="15.0" fill="rgb(217,6,19)" rx="2" ry="2" />
<text  x="15.64" y="367.5" ></text>
</g>
<g >
<title>llvm::CompositeType::getTypeAtIndex (1 samples, 0.04%)</title><rect x="696.1" y="613" width="0.4" height="15.0" fill="rgb(234,153,16)" rx="2" ry="2" />
<text  x="699.06" y="623.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::TargetTransformInfo (llvm::Function const&amp;), llvm::TargetMachine::getTargetIRAnalysis()::{lambda(llvm::Function const&amp;)#1}&gt;::_M_invoke (1 samples, 0.04%)</title><rect x="1148.1" y="565" width="0.5" height="15.0" fill="rgb(250,4,15)" rx="2" ry="2" />
<text  x="1151.14" y="575.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.07%)</title><rect x="1175.5" y="741" width="0.8" height="15.0" fill="rgb(219,182,2)" rx="2" ry="2" />
<text  x="1178.46" y="751.5" ></text>
</g>
<g >
<title>llvm::Value::setValueName (1 samples, 0.04%)</title><rect x="1029.2" y="517" width="0.4" height="15.0" fill="rgb(221,123,29)" rx="2" ry="2" />
<text  x="1032.17" y="527.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1172.8" y="789" width="0.5" height="15.0" fill="rgb(250,120,26)" rx="2" ry="2" />
<text  x="1175.82" y="799.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1137.1" y="837" width="0.5" height="15.0" fill="rgb(247,64,42)" rx="2" ry="2" />
<text  x="1140.12" y="847.5" ></text>
</g>
<g >
<title>clang::CodeGen::EHScopeStack::allocate (1 samples, 0.04%)</title><rect x="1113.3" y="741" width="0.5" height="15.0" fill="rgb(237,48,44)" rx="2" ry="2" />
<text  x="1116.33" y="751.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ComputeRecordLayout (1 samples, 0.04%)</title><rect x="1117.3" y="885" width="0.4" height="15.0" fill="rgb(221,8,3)" rx="2" ry="2" />
<text  x="1120.30" y="895.5" ></text>
</g>
<g >
<title>llvm::LPPassManager::runOnFunction (1 samples, 0.04%)</title><rect x="1159.2" y="757" width="0.4" height="15.0" fill="rgb(238,149,42)" rx="2" ry="2" />
<text  x="1162.16" y="767.5" ></text>
</g>
<g >
<title>__run_fork_handlers (1 samples, 0.04%)</title><rect x="21.0" y="565" width="0.5" height="15.0" fill="rgb(209,65,39)" rx="2" ry="2" />
<text  x="24.02" y="575.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="21.9" y="533" width="0.4" height="15.0" fill="rgb(222,30,32)" rx="2" ry="2" />
<text  x="24.90" y="543.5" ></text>
</g>
<g >
<title>llvm::MergeBlockIntoPredecessor (1 samples, 0.04%)</title><rect x="899.6" y="629" width="0.5" height="15.0" fill="rgb(243,42,34)" rx="2" ry="2" />
<text  x="902.63" y="639.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (2 samples, 0.07%)</title><rect x="693.4" y="757" width="0.9" height="15.0" fill="rgb(236,171,17)" rx="2" ry="2" />
<text  x="696.41" y="767.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::RebuildDependentNameType (1 samples, 0.04%)</title><rect x="1127.4" y="709" width="0.5" height="15.0" fill="rgb(247,181,0)" rx="2" ry="2" />
<text  x="1130.43" y="719.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitFunctionTemplateDecl (1 samples, 0.04%)</title><rect x="1099.7" y="757" width="0.4" height="15.0" fill="rgb(246,134,36)" rx="2" ry="2" />
<text  x="1102.67" y="767.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitTemplateDecl (1 samples, 0.04%)</title><rect x="1097.5" y="693" width="0.4" height="15.0" fill="rgb(251,32,30)" rx="2" ry="2" />
<text  x="1100.47" y="703.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.07%)</title><rect x="1086.5" y="725" width="0.8" height="15.0" fill="rgb(249,186,23)" rx="2" ry="2" />
<text  x="1089.45" y="735.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitSimpleStmt (1 samples, 0.04%)</title><rect x="1115.1" y="837" width="0.4" height="15.0" fill="rgb(252,73,5)" rx="2" ry="2" />
<text  x="1118.09" y="847.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1020.4" y="869" width="0.4" height="15.0" fill="rgb(208,73,9)" rx="2" ry="2" />
<text  x="1023.36" y="879.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1176.3" y="773" width="0.5" height="15.0" fill="rgb(250,3,44)" rx="2" ry="2" />
<text  x="1179.34" y="783.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="1078.1" y="789" width="0.4" height="15.0" fill="rgb(236,62,11)" rx="2" ry="2" />
<text  x="1081.08" y="799.5" ></text>
</g>
<g >
<title>TBaseClass::GetClassPointer (1 samples, 0.04%)</title><rect x="786.4" y="549" width="0.4" height="15.0" fill="rgb(228,144,29)" rx="2" ry="2" />
<text  x="789.39" y="559.5" ></text>
</g>
<g >
<title>llvm::SelectionDAG::Combine (1 samples, 0.04%)</title><rect x="1158.7" y="821" width="0.5" height="15.0" fill="rgb(238,224,22)" rx="2" ry="2" />
<text  x="1161.72" y="831.5" ></text>
</g>
<g >
<title>llvm::runIPSCCP (1 samples, 0.04%)</title><rect x="1147.3" y="853" width="0.4" height="15.0" fill="rgb(237,212,24)" rx="2" ry="2" />
<text  x="1150.26" y="863.5" ></text>
</g>
<g >
<title>cling::DynamicLibraryManager::DynamicLibraryManager (8 samples, 0.30%)</title><rect x="1066.2" y="805" width="3.5" height="15.0" fill="rgb(228,166,14)" rx="2" ry="2" />
<text  x="1069.18" y="815.5" ></text>
</g>
<g >
<title>msort_with_tmp.part.0 (1 samples, 0.04%)</title><rect x="25.9" y="821" width="0.4" height="15.0" fill="rgb(240,160,45)" rx="2" ry="2" />
<text  x="28.86" y="831.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="21.9" y="325" width="0.4" height="15.0" fill="rgb(220,138,53)" rx="2" ry="2" />
<text  x="24.90" y="335.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::StartFunction (1 samples, 0.04%)</title><rect x="1113.3" y="789" width="0.5" height="15.0" fill="rgb(213,152,48)" rx="2" ry="2" />
<text  x="1116.33" y="799.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="431.2" y="693" width="0.5" height="15.0" fill="rgb(249,135,0)" rx="2" ry="2" />
<text  x="434.24" y="703.5" ></text>
</g>
<g >
<title>__GI__dl_catch_error (1 samples, 0.04%)</title><rect x="904.9" y="821" width="0.5" height="15.0" fill="rgb(231,58,9)" rx="2" ry="2" />
<text  x="907.91" y="831.5" ></text>
</g>
<g >
<title>clang::ASTContext::getTypeInfoImpl (1 samples, 0.04%)</title><rect x="1123.5" y="773" width="0.4" height="15.0" fill="rgb(248,122,43)" rx="2" ry="2" />
<text  x="1126.47" y="783.5" ></text>
</g>
<g >
<title>cling::Dyld::ContainsSymbol (2 samples, 0.07%)</title><rect x="867.5" y="453" width="0.8" height="15.0" fill="rgb(228,46,12)" rx="2" ry="2" />
<text  x="870.46" y="463.5" ></text>
</g>
<g >
<title>MarkExprReferenced (2 samples, 0.07%)</title><rect x="1121.7" y="901" width="0.9" height="15.0" fill="rgb(236,121,13)" rx="2" ry="2" />
<text  x="1124.70" y="911.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveRelocations (1 samples, 0.04%)</title><rect x="1147.7" y="837" width="0.4" height="15.0" fill="rgb(210,124,8)" rx="2" ry="2" />
<text  x="1150.70" y="847.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::PopCleanupBlocks (1 samples, 0.04%)</title><rect x="1115.5" y="901" width="0.5" height="15.0" fill="rgb(238,124,7)" rx="2" ry="2" />
<text  x="1118.53" y="911.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::RunCleanupsScope::ForceCleanup (1 samples, 0.04%)</title><rect x="1116.4" y="917" width="0.5" height="15.0" fill="rgb(235,137,25)" rx="2" ry="2" />
<text  x="1119.42" y="927.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitScalarExpr (1 samples, 0.04%)</title><rect x="1116.0" y="773" width="0.4" height="15.0" fill="rgb(254,136,31)" rx="2" ry="2" />
<text  x="1118.97" y="783.5" ></text>
</g>
<g >
<title>TBasket::ReadBasketBuffers (456 samples, 17.03%)</title><rect x="447.5" y="901" width="201.0" height="15.0" fill="rgb(218,88,29)" rx="2" ry="2" />
<text  x="450.54" y="911.5" >TBasket::ReadBasketBuffers</text>
</g>
<g >
<title>clang::Sema::ActOnConditionalOp (1 samples, 0.04%)</title><rect x="1134.0" y="693" width="0.5" height="15.0" fill="rgb(232,211,12)" rx="2" ry="2" />
<text  x="1137.04" y="703.5" ></text>
</g>
<g >
<title>clang::ASTReader::DeclCursorForID (1 samples, 0.04%)</title><rect x="1104.5" y="789" width="0.5" height="15.0" fill="rgb(230,229,6)" rx="2" ry="2" />
<text  x="1107.52" y="799.5" ></text>
</g>
<g >
<title>TROOT::~TROOT (2 samples, 0.07%)</title><rect x="1027.8" y="885" width="0.9" height="15.0" fill="rgb(228,165,48)" rx="2" ry="2" />
<text  x="1030.85" y="895.5" ></text>
</g>
<g >
<title>llvm::AAResults::~AAResults (1 samples, 0.04%)</title><rect x="1032.3" y="613" width="0.4" height="15.0" fill="rgb(236,138,12)" rx="2" ry="2" />
<text  x="1035.26" y="623.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitStmt (1 samples, 0.04%)</title><rect x="1105.4" y="869" width="0.4" height="15.0" fill="rgb(227,204,35)" rx="2" ry="2" />
<text  x="1108.40" y="879.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::CodeGenAndEmitDAG (1 samples, 0.04%)</title><rect x="1145.9" y="661" width="0.5" height="15.0" fill="rgb(240,99,32)" rx="2" ry="2" />
<text  x="1148.94" y="671.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddTemplateArgument (1 samples, 0.04%)</title><rect x="1135.8" y="629" width="0.4" height="15.0" fill="rgb(215,143,5)" rx="2" ry="2" />
<text  x="1138.80" y="639.5" ></text>
</g>
<g >
<title>cling::Interpreter::executeTransaction (1 samples, 0.04%)</title><rect x="1027.0" y="709" width="0.4" height="15.0" fill="rgb(214,98,48)" rx="2" ry="2" />
<text  x="1029.97" y="719.5" ></text>
</g>
<g >
<title>llvm::MemorySSA::~MemorySSA (1 samples, 0.04%)</title><rect x="1038.0" y="581" width="0.4" height="15.0" fill="rgb(205,45,49)" rx="2" ry="2" />
<text  x="1040.98" y="591.5" ></text>
</g>
<g >
<title>TPluginManager::FindHandler (1 samples, 0.04%)</title><rect x="784.6" y="869" width="0.5" height="15.0" fill="rgb(211,135,0)" rx="2" ry="2" />
<text  x="787.62" y="879.5" ></text>
</g>
<g >
<title>llvm::X86FrameLowering::emitEpilogue (1 samples, 0.04%)</title><rect x="845.9" y="565" width="0.4" height="15.0" fill="rgb(213,220,4)" rx="2" ry="2" />
<text  x="848.87" y="575.5" ></text>
</g>
<g >
<title>ROOT::Internal::RDF::RJittedAction::Run (7 samples, 0.26%)</title><rect x="779.3" y="869" width="3.1" height="15.0" fill="rgb(250,110,30)" rx="2" ry="2" />
<text  x="782.34" y="879.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::SmallDenseMap&lt;clang::DeclarationName, clang::StoredDeclsList, 4u, llvm::DenseMapInfo&lt;clang::DeclarationName&gt;, llvm::detail::DenseMapPair&lt;clang::DeclarationName, clang::StoredDeclsList&gt; &gt;, clang::DeclarationName, clang::StoredDeclsList, llvm::DenseMapInfo&lt;clang::DeclarationName&gt;, llvm::detail::DenseMapPair&lt;clang::DeclarationName, clang::StoredDeclsList&gt; &gt;::LookupBucketFor&lt;clang::DeclarationName&gt; (1 samples, 0.04%)</title><rect x="1139.3" y="533" width="0.5" height="15.0" fill="rgb(218,43,24)" rx="2" ry="2" />
<text  x="1142.33" y="543.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1143.3" y="837" width="0.4" height="15.0" fill="rgb(235,82,39)" rx="2" ry="2" />
<text  x="1146.29" y="847.5" ></text>
</g>
<g >
<title>TCling::HandleNewDecl (1 samples, 0.04%)</title><rect x="1065.7" y="661" width="0.5" height="15.0" fill="rgb(223,105,27)" rx="2" ry="2" />
<text  x="1068.74" y="671.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::runOnMachineFunction (1 samples, 0.04%)</title><rect x="1146.8" y="709" width="0.5" height="15.0" fill="rgb(220,3,21)" rx="2" ry="2" />
<text  x="1149.82" y="719.5" ></text>
</g>
<g >
<title>execute_command (5 samples, 0.19%)</title><rect x="10.4" y="581" width="2.2" height="15.0" fill="rgb(214,219,25)" rx="2" ry="2" />
<text  x="13.44" y="591.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1165.8" y="869" width="0.4" height="15.0" fill="rgb(253,98,28)" rx="2" ry="2" />
<text  x="1168.77" y="879.5" ></text>
</g>
<g >
<title>llvm::Pass::getAnalysisIfAvailable&lt;llvm::objcarc::ObjCARCAAWrapperPass&gt; (1 samples, 0.04%)</title><rect x="1032.7" y="613" width="0.4" height="15.0" fill="rgb(211,102,14)" rx="2" ry="2" />
<text  x="1035.70" y="623.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTSIInObjectScope (1 samples, 0.04%)</title><rect x="1135.4" y="709" width="0.4" height="15.0" fill="rgb(235,14,38)" rx="2" ry="2" />
<text  x="1138.36" y="719.5" ></text>
</g>
<g >
<title>__GI___fork (4 samples, 0.15%)</title><rect x="22.3" y="117" width="1.8" height="15.0" fill="rgb(241,189,30)" rx="2" ry="2" />
<text  x="25.34" y="127.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.11%)</title><rect x="1086.0" y="757" width="1.3" height="15.0" fill="rgb(224,175,42)" rx="2" ry="2" />
<text  x="1089.01" y="767.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadNestedNameSpecifier (1 samples, 0.04%)</title><rect x="1100.1" y="837" width="0.5" height="15.0" fill="rgb(217,136,20)" rx="2" ry="2" />
<text  x="1103.11" y="847.5" ></text>
</g>
<g >
<title>clang::Sema::DefaultFunctionArrayLvalueConversion (1 samples, 0.04%)</title><rect x="1125.2" y="933" width="0.5" height="15.0" fill="rgb(234,6,21)" rx="2" ry="2" />
<text  x="1128.23" y="943.5" ></text>
</g>
<g >
<title>sh (47 samples, 1.76%)</title><rect x="1169.3" y="981" width="20.7" height="15.0" fill="rgb(218,229,26)" rx="2" ry="2" />
<text  x="1172.29" y="991.5" ></text>
</g>
<g >
<title>llvm::getOrEnforceKnownAlignment (1 samples, 0.04%)</title><rect x="696.1" y="693" width="0.4" height="15.0" fill="rgb(230,28,1)" rx="2" ry="2" />
<text  x="699.06" y="703.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (2 samples, 0.07%)</title><rect x="909.8" y="741" width="0.8" height="15.0" fill="rgb(209,97,50)" rx="2" ry="2" />
<text  x="912.76" y="751.5" ></text>
</g>
<g >
<title>llvm::AttributeList::hasAttribute (1 samples, 0.04%)</title><rect x="898.3" y="581" width="0.4" height="15.0" fill="rgb(215,138,47)" rx="2" ry="2" />
<text  x="901.30" y="591.5" ></text>
</g>
<g >
<title>msort_with_tmp.part.0 (1 samples, 0.04%)</title><rect x="25.9" y="773" width="0.4" height="15.0" fill="rgb(238,226,18)" rx="2" ry="2" />
<text  x="28.86" y="783.5" ></text>
</g>
<g >
<title>ROOT::TMetaUtils::GetNormalizedType (1 samples, 0.04%)</title><rect x="783.3" y="693" width="0.4" height="15.0" fill="rgb(213,122,32)" rx="2" ry="2" />
<text  x="786.30" y="703.5" ></text>
</g>
<g >
<title>llvm::SelectionDAG::LegalizeTypes (2 samples, 0.07%)</title><rect x="1157.4" y="805" width="0.9" height="15.0" fill="rgb(242,226,6)" rx="2" ry="2" />
<text  x="1160.39" y="815.5" ></text>
</g>
<g >
<title>.annobin_rtld.c (1 samples, 0.04%)</title><rect x="10.0" y="965" width="0.4" height="15.0" fill="rgb(231,8,20)" rx="2" ry="2" />
<text  x="13.00" y="975.5" ></text>
</g>
<g >
<title>[ls] (1 samples, 0.04%)</title><rect x="25.9" y="933" width="0.4" height="15.0" fill="rgb(226,7,30)" rx="2" ry="2" />
<text  x="28.86" y="943.5" ></text>
</g>
<g >
<title>strcmp (1 samples, 0.04%)</title><rect x="1170.6" y="837" width="0.5" height="15.0" fill="rgb(218,46,34)" rx="2" ry="2" />
<text  x="1173.61" y="847.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (3 samples, 0.11%)</title><rect x="1155.6" y="949" width="1.4" height="15.0" fill="rgb(232,229,51)" rx="2" ry="2" />
<text  x="1158.63" y="959.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::visitStoreInst (1 samples, 0.04%)</title><rect x="696.5" y="709" width="0.4" height="15.0" fill="rgb(218,19,42)" rx="2" ry="2" />
<text  x="699.50" y="719.5" ></text>
</g>
<g >
<title>clang::Sema::CheckLValueToRValueConversionOperand (1 samples, 0.04%)</title><rect x="1125.2" y="901" width="0.5" height="15.0" fill="rgb(207,212,2)" rx="2" ry="2" />
<text  x="1128.23" y="911.5" ></text>
</g>
<g >
<title>clang::Sema::AddInitializerToDecl (1 samples, 0.04%)</title><rect x="1119.1" y="965" width="0.4" height="15.0" fill="rgb(250,177,45)" rx="2" ry="2" />
<text  x="1122.06" y="975.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::executeWrapper (1 samples, 0.04%)</title><rect x="904.0" y="693" width="0.5" height="15.0" fill="rgb(229,59,15)" rx="2" ry="2" />
<text  x="907.03" y="703.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitRedeclarableTemplateDecl (1 samples, 0.04%)</title><rect x="1099.2" y="757" width="0.5" height="15.0" fill="rgb(253,6,42)" rx="2" ry="2" />
<text  x="1102.23" y="767.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl (1 samples, 0.04%)</title><rect x="1155.2" y="853" width="0.4" height="15.0" fill="rgb(225,135,24)" rx="2" ry="2" />
<text  x="1158.19" y="863.5" ></text>
</g>
<g >
<title>combineInstructionsOverFunction (1 samples, 0.04%)</title><rect x="902.7" y="629" width="0.5" height="15.0" fill="rgb(250,163,15)" rx="2" ry="2" />
<text  x="905.71" y="639.5" ></text>
</g>
<g >
<title>clang::SourceManager::getFileIDLoaded (1 samples, 0.04%)</title><rect x="908.9" y="629" width="0.4" height="15.0" fill="rgb(230,15,19)" rx="2" ry="2" />
<text  x="911.88" y="639.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (1 samples, 0.04%)</title><rect x="902.7" y="661" width="0.5" height="15.0" fill="rgb(205,43,41)" rx="2" ry="2" />
<text  x="905.71" y="671.5" ></text>
</g>
<g >
<title>[unknown] (16 samples, 0.60%)</title><rect x="1180.7" y="773" width="7.1" height="15.0" fill="rgb(229,161,49)" rx="2" ry="2" />
<text  x="1183.75" y="783.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization (1 samples, 0.04%)</title><rect x="1123.9" y="789" width="0.4" height="15.0" fill="rgb(238,13,6)" rx="2" ry="2" />
<text  x="1126.91" y="799.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentNameType (3 samples, 0.11%)</title><rect x="1129.6" y="885" width="1.4" height="15.0" fill="rgb(236,201,24)" rx="2" ry="2" />
<text  x="1132.63" y="895.5" ></text>
</g>
<g >
<title>clang::Sema::LookupQualifiedName (1 samples, 0.04%)</title><rect x="1133.6" y="677" width="0.4" height="15.0" fill="rgb(219,71,22)" rx="2" ry="2" />
<text  x="1136.60" y="687.5" ></text>
</g>
<g >
<title>_nl_make_l10nflist.localalias.0 (1 samples, 0.04%)</title><rect x="1168.8" y="869" width="0.5" height="15.0" fill="rgb(219,184,3)" rx="2" ry="2" />
<text  x="1171.85" y="879.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization (1 samples, 0.04%)</title><rect x="1127.9" y="677" width="0.4" height="15.0" fill="rgb(239,39,5)" rx="2" ry="2" />
<text  x="1130.87" y="687.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGBuilder::visitLoad (1 samples, 0.04%)</title><rect x="1149.0" y="565" width="0.5" height="15.0" fill="rgb(209,147,43)" rx="2" ry="2" />
<text  x="1152.02" y="575.5" ></text>
</g>
<g >
<title>llvm::FoldingSetBase::FindNodeOrInsertPos (1 samples, 0.04%)</title><rect x="1102.3" y="661" width="0.5" height="15.0" fill="rgb(242,174,17)" rx="2" ry="2" />
<text  x="1105.32" y="671.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXConstructExpr (1 samples, 0.04%)</title><rect x="1107.6" y="741" width="0.4" height="15.0" fill="rgb(207,193,33)" rx="2" ry="2" />
<text  x="1110.60" y="751.5" ></text>
</g>
<g >
<title>command_substitute (4 samples, 0.15%)</title><rect x="22.3" y="373" width="1.8" height="15.0" fill="rgb(206,91,42)" rx="2" ry="2" />
<text  x="25.34" y="383.5" ></text>
</g>
<g >
<title>__GI___dup2 (1 samples, 0.04%)</title><rect x="1172.8" y="805" width="0.5" height="15.0" fill="rgb(244,124,50)" rx="2" ry="2" />
<text  x="1175.82" y="815.5" ></text>
</g>
<g >
<title>ClingMemberIterInternal::DCIter::IterNext (1 samples, 0.04%)</title><rect x="786.4" y="293" width="0.4" height="15.0" fill="rgb(209,142,8)" rx="2" ry="2" />
<text  x="789.39" y="303.5" ></text>
</g>
<g >
<title>llvm::MCAssembler::Finish (2 samples, 0.07%)</title><rect x="830.9" y="565" width="0.9" height="15.0" fill="rgb(213,126,5)" rx="2" ry="2" />
<text  x="833.89" y="575.5" ></text>
</g>
<g >
<title>llvm::AttributeList::hasAttribute (1 samples, 0.04%)</title><rect x="898.7" y="565" width="0.5" height="15.0" fill="rgb(243,162,14)" rx="2" ry="2" />
<text  x="901.75" y="575.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolutionWrapperPass::releaseMemory (1 samples, 0.04%)</title><rect x="1054.7" y="581" width="0.5" height="15.0" fill="rgb(233,1,33)" rx="2" ry="2" />
<text  x="1057.73" y="591.5" ></text>
</g>
<g >
<title>llvm::Instruction::mayWriteToMemory (1 samples, 0.04%)</title><rect x="898.3" y="613" width="0.4" height="15.0" fill="rgb(208,226,13)" rx="2" ry="2" />
<text  x="901.30" y="623.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitIgnoredExpr (1 samples, 0.04%)</title><rect x="1102.8" y="869" width="0.4" height="15.0" fill="rgb(253,62,9)" rx="2" ry="2" />
<text  x="1105.76" y="879.5" ></text>
</g>
<g >
<title>[unknown] (8 samples, 0.30%)</title><rect x="1080.3" y="789" width="3.5" height="15.0" fill="rgb(211,120,13)" rx="2" ry="2" />
<text  x="1083.28" y="799.5" ></text>
</g>
<g >
<title>TPluginManager::FindHandler (1 samples, 0.04%)</title><rect x="903.6" y="917" width="0.4" height="15.0" fill="rgb(213,221,44)" rx="2" ry="2" />
<text  x="906.59" y="927.5" ></text>
</g>
<g >
<title>TCling::ProcessLine (12 samples, 0.45%)</title><rect x="905.8" y="965" width="5.3" height="15.0" fill="rgb(242,45,37)" rx="2" ry="2" />
<text  x="908.80" y="975.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1020.4" y="805" width="0.4" height="15.0" fill="rgb(251,36,48)" rx="2" ry="2" />
<text  x="1023.36" y="815.5" ></text>
</g>
<g >
<title>cling::MetaParser::isXCommand (12 samples, 0.45%)</title><rect x="905.8" y="901" width="5.3" height="15.0" fill="rgb(241,122,39)" rx="2" ry="2" />
<text  x="908.80" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;llvm::scc_iterator&lt;llvm::Function const*, llvm::GraphTraits&lt;llvm::Function const*&gt; &gt;::StackElement, std::allocator&lt;llvm::scc_iterator&lt;llvm::Function const*, llvm::GraphTraits&lt;llvm::Function const*&gt; &gt;::StackElement&gt; &gt;::_M_realloc_insert&lt;llvm::scc_iterator&lt;llvm::Function const*, llvm::GraphTraits&lt;llvm::Function const*&gt; &gt;::StackElement&gt; (1 samples, 0.04%)</title><rect x="1034.5" y="565" width="0.4" height="15.0" fill="rgb(241,86,4)" rx="2" ry="2" />
<text  x="1037.46" y="575.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1131.4" y="885" width="0.4" height="15.0" fill="rgb(217,102,27)" rx="2" ry="2" />
<text  x="1134.40" y="895.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::isLoopEntryGuardedByCond(llvm::Loop const*, llvm::CmpInst::Predicate, llvm::SCEV const*, llvm::SCEV const*)::{lambda(llvm::Value*, bool)#2}::operator() (1 samples, 0.04%)</title><rect x="692.1" y="677" width="0.4" height="15.0" fill="rgb(217,60,24)" rx="2" ry="2" />
<text  x="695.09" y="687.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (1 samples, 0.04%)</title><rect x="1158.7" y="933" width="0.5" height="15.0" fill="rgb(227,34,7)" rx="2" ry="2" />
<text  x="1161.72" y="943.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1165.8" y="837" width="0.4" height="15.0" fill="rgb(246,178,24)" rx="2" ry="2" />
<text  x="1168.77" y="847.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::DoInstructionSelection (3 samples, 0.11%)</title><rect x="1155.6" y="837" width="1.4" height="15.0" fill="rgb(222,19,29)" rx="2" ry="2" />
<text  x="1158.63" y="847.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.04%)</title><rect x="1077.6" y="789" width="0.5" height="15.0" fill="rgb(246,197,6)" rx="2" ry="2" />
<text  x="1080.64" y="799.5" ></text>
</g>
<g >
<title>command_substitute (5 samples, 0.19%)</title><rect x="10.4" y="437" width="2.2" height="15.0" fill="rgb(206,58,33)" rx="2" ry="2" />
<text  x="13.44" y="447.5" ></text>
</g>
<g >
<title>llvm::orc::JITSymbolResolverAdapter::lookup (1 samples, 0.04%)</title><rect x="1149.5" y="645" width="0.4" height="15.0" fill="rgb(252,122,24)" rx="2" ry="2" />
<text  x="1152.46" y="655.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCastLValue (1 samples, 0.04%)</title><rect x="1116.0" y="677" width="0.4" height="15.0" fill="rgb(245,177,29)" rx="2" ry="2" />
<text  x="1118.97" y="687.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCompoundStmtWithoutScope (7 samples, 0.26%)</title><rect x="1105.4" y="917" width="3.1" height="15.0" fill="rgb(252,90,6)" rx="2" ry="2" />
<text  x="1108.40" y="927.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiatingTemplate::InstantiatingTemplate (1 samples, 0.04%)</title><rect x="1131.8" y="645" width="0.5" height="15.0" fill="rgb(235,10,0)" rx="2" ry="2" />
<text  x="1134.84" y="655.5" ></text>
</g>
<g >
<title>clang::Sema::SubstDefaultTemplateArgumentIfAvailable (1 samples, 0.04%)</title><rect x="1097.9" y="885" width="0.4" height="15.0" fill="rgb(220,217,37)" rx="2" ry="2" />
<text  x="1100.91" y="895.5" ></text>
</g>
<g >
<title>llvm::AttributeSetNode::getAttribute (1 samples, 0.04%)</title><rect x="845.9" y="485" width="0.4" height="15.0" fill="rgb(229,209,17)" rx="2" ry="2" />
<text  x="848.87" y="495.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::commitTransaction (1 samples, 0.04%)</title><rect x="1151.2" y="885" width="0.5" height="15.0" fill="rgb(226,16,9)" rx="2" ry="2" />
<text  x="1154.22" y="895.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1124.8" y="677" width="0.4" height="15.0" fill="rgb(210,163,18)" rx="2" ry="2" />
<text  x="1127.79" y="687.5" ></text>
</g>
<g >
<title>clang::LookupResult::getAcceptableDecl (1 samples, 0.04%)</title><rect x="1133.6" y="645" width="0.4" height="15.0" fill="rgb(207,210,27)" rx="2" ry="2" />
<text  x="1136.60" y="655.5" ></text>
</g>
<g >
<title>llvm::SmallDenseMap&lt;unsigned int, llvm::SDValue, 8u, llvm::DenseMapInfo&lt;unsigned int&gt;, llvm::detail::DenseMapPair&lt;unsigned int, llvm::SDValue&gt; &gt;::grow (1 samples, 0.04%)</title><rect x="1157.4" y="709" width="0.4" height="15.0" fill="rgb(240,65,17)" rx="2" ry="2" />
<text  x="1160.39" y="719.5" ></text>
</g>
<g >
<title>llvm::Instruction::setMetadata (1 samples, 0.04%)</title><rect x="902.7" y="565" width="0.5" height="15.0" fill="rgb(220,204,45)" rx="2" ry="2" />
<text  x="905.71" y="575.5" ></text>
</g>
<g >
<title>cling::MetaParser::isXCommand (7 samples, 0.26%)</title><rect x="900.5" y="837" width="3.1" height="15.0" fill="rgb(236,207,44)" rx="2" ry="2" />
<text  x="903.51" y="847.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1092.6" y="773" width="0.5" height="15.0" fill="rgb(209,55,11)" rx="2" ry="2" />
<text  x="1095.62" y="783.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTemplateIdType (1 samples, 0.04%)</title><rect x="1135.8" y="741" width="0.4" height="15.0" fill="rgb(217,139,16)" rx="2" ry="2" />
<text  x="1138.80" y="751.5" ></text>
</g>
<g >
<title>clang::ASTReader::FindExternalLexicalDecls (1 samples, 0.04%)</title><rect x="1155.2" y="645" width="0.4" height="15.0" fill="rgb(231,186,22)" rx="2" ry="2" />
<text  x="1158.19" y="655.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformCallExpr (1 samples, 0.04%)</title><rect x="1134.9" y="741" width="0.5" height="15.0" fill="rgb(214,62,5)" rx="2" ry="2" />
<text  x="1137.92" y="751.5" ></text>
</g>
<g >
<title>unset_bash_input (1 samples, 0.04%)</title><rect x="12.2" y="405" width="0.4" height="15.0" fill="rgb(211,11,4)" rx="2" ry="2" />
<text  x="15.20" y="415.5" ></text>
</g>
<g >
<title>TSystem::DynamicPathName (40 samples, 1.49%)</title><rect x="1076.3" y="901" width="17.6" height="15.0" fill="rgb(236,204,1)" rx="2" ry="2" />
<text  x="1079.32" y="911.5" ></text>
</g>
<g >
<title>llvm::AttrBuilder::addAttribute (1 samples, 0.04%)</title><rect x="1115.5" y="709" width="0.5" height="15.0" fill="rgb(213,73,44)" rx="2" ry="2" />
<text  x="1118.53" y="719.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass (1 samples, 0.04%)</title><rect x="1132.3" y="645" width="0.4" height="15.0" fill="rgb(225,13,4)" rx="2" ry="2" />
<text  x="1135.28" y="655.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.11%)</title><rect x="1095.7" y="837" width="1.3" height="15.0" fill="rgb(247,149,37)" rx="2" ry="2" />
<text  x="1098.71" y="847.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType (1 samples, 0.04%)</title><rect x="1143.7" y="933" width="0.5" height="15.0" fill="rgb(225,185,36)" rx="2" ry="2" />
<text  x="1146.73" y="943.5" ></text>
</g>
<g >
<title>clang::DeclContext::decls_begin (1 samples, 0.04%)</title><rect x="1155.2" y="693" width="0.4" height="15.0" fill="rgb(220,118,30)" rx="2" ry="2" />
<text  x="1158.19" y="703.5" ></text>
</g>
<g >
<title>clang::Type::getLinkage (1 samples, 0.04%)</title><rect x="1103.2" y="549" width="0.4" height="15.0" fill="rgb(245,195,37)" rx="2" ry="2" />
<text  x="1106.20" y="559.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;std::add_pointer, (anonymous namespace)::AggExprEmitter, void&gt;::Visit (1 samples, 0.04%)</title><rect x="1138.0" y="773" width="0.4" height="15.0" fill="rgb(205,203,3)" rx="2" ry="2" />
<text  x="1141.01" y="783.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitDeclaratorDecl (1 samples, 0.04%)</title><rect x="1099.7" y="949" width="0.4" height="15.0" fill="rgb(230,112,17)" rx="2" ry="2" />
<text  x="1102.67" y="959.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDeclRefExpr (1 samples, 0.04%)</title><rect x="1134.9" y="693" width="0.5" height="15.0" fill="rgb(206,48,43)" rx="2" ry="2" />
<text  x="1137.92" y="703.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadStmtFromStream (1 samples, 0.04%)</title><rect x="1132.7" y="901" width="0.5" height="15.0" fill="rgb(219,43,27)" rx="2" ry="2" />
<text  x="1135.72" y="911.5" ></text>
</g>
<g >
<title>clang::Sema::getTypeName (1 samples, 0.04%)</title><rect x="1118.2" y="869" width="0.4" height="15.0" fill="rgb(244,121,41)" rx="2" ry="2" />
<text  x="1121.18" y="879.5" ></text>
</g>
<g >
<title>clang::ASTContext::getTypeInfoInChars (1 samples, 0.04%)</title><rect x="1101.9" y="741" width="0.4" height="15.0" fill="rgb(234,65,4)" rx="2" ry="2" />
<text  x="1104.87" y="751.5" ></text>
</g>
<g >
<title>llvm::Instruction::getFunction (1 samples, 0.04%)</title><rect x="695.6" y="693" width="0.5" height="15.0" fill="rgb(219,32,52)" rx="2" ry="2" />
<text  x="698.62" y="703.5" ></text>
</g>
<g >
<title>llvm::X86FrameLowering::determineCalleeSaves (1 samples, 0.04%)</title><rect x="702.7" y="741" width="0.4" height="15.0" fill="rgb(223,189,39)" rx="2" ry="2" />
<text  x="705.67" y="751.5" ></text>
</g>
<g >
<title>clang::TemplateArgumentList::ComputeODRHash (1 samples, 0.04%)</title><rect x="1140.2" y="661" width="0.4" height="15.0" fill="rgb(249,191,15)" rx="2" ry="2" />
<text  x="1143.21" y="671.5" ></text>
</g>
<g >
<title>clang::Sema::FixOverloadedFunctionReference (1 samples, 0.04%)</title><rect x="1128.3" y="965" width="0.5" height="15.0" fill="rgb(250,171,8)" rx="2" ry="2" />
<text  x="1131.31" y="975.5" ></text>
</g>
<g >
<title>llvm::InstrEmitter::AddRegisterOperand (1 samples, 0.04%)</title><rect x="1144.2" y="613" width="0.4" height="15.0" fill="rgb(221,154,13)" rx="2" ry="2" />
<text  x="1147.17" y="623.5" ></text>
</g>
<g >
<title>clang::ASTReader::readTypeRecord (1 samples, 0.04%)</title><rect x="1100.6" y="869" width="0.4" height="15.0" fill="rgb(250,27,19)" rx="2" ry="2" />
<text  x="1103.55" y="879.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1131.4" y="901" width="0.4" height="15.0" fill="rgb(242,78,50)" rx="2" ry="2" />
<text  x="1134.40" y="911.5" ></text>
</g>
<g >
<title>clang::RedeclarableTemplateDecl::loadLazySpecializationsImpl (1 samples, 0.04%)</title><rect x="1130.5" y="565" width="0.5" height="15.0" fill="rgb(242,132,39)" rx="2" ry="2" />
<text  x="1133.52" y="575.5" ></text>
</g>
<g >
<title>execute_command_internal (4 samples, 0.15%)</title><rect x="22.3" y="885" width="1.8" height="15.0" fill="rgb(246,84,40)" rx="2" ry="2" />
<text  x="25.34" y="895.5" ></text>
</g>
<g >
<title>TClass::CreateListOfDataMembers (1 samples, 0.04%)</title><rect x="905.4" y="581" width="0.4" height="15.0" fill="rgb(218,96,36)" rx="2" ry="2" />
<text  x="908.35" y="591.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (1 samples, 0.04%)</title><rect x="1127.9" y="709" width="0.4" height="15.0" fill="rgb(238,101,18)" rx="2" ry="2" />
<text  x="1130.87" y="719.5" ></text>
</g>
<g >
<title>llvm::orc::LambdaSymbolResolver&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt; const&amp;)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}&gt;::lookup (1 samples, 0.04%)</title><rect x="1152.1" y="933" width="0.4" height="15.0" fill="rgb(239,39,23)" rx="2" ry="2" />
<text  x="1155.11" y="943.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass (1 samples, 0.04%)</title><rect x="1139.3" y="757" width="0.5" height="15.0" fill="rgb(218,51,44)" rx="2" ry="2" />
<text  x="1142.33" y="767.5" ></text>
</g>
<g >
<title>llvm::Attribute::hasAttribute (1 samples, 0.04%)</title><rect x="845.9" y="469" width="0.4" height="15.0" fill="rgb(248,205,11)" rx="2" ry="2" />
<text  x="848.87" y="479.5" ></text>
</g>
<g >
<title>llvm::X86TargetLowering::isTypeDesirableForOp (1 samples, 0.04%)</title><rect x="1158.7" y="805" width="0.5" height="15.0" fill="rgb(210,66,52)" rx="2" ry="2" />
<text  x="1161.72" y="815.5" ></text>
</g>
<g >
<title>simplifyFunctionCFG (1 samples, 0.04%)</title><rect x="900.1" y="677" width="0.4" height="15.0" fill="rgb(210,227,49)" rx="2" ry="2" />
<text  x="903.07" y="687.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::visitPHINode (1 samples, 0.04%)</title><rect x="1027.4" y="597" width="0.4" height="15.0" fill="rgb(242,134,27)" rx="2" ry="2" />
<text  x="1030.41" y="607.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitTemplateDecl (1 samples, 0.04%)</title><rect x="1132.7" y="677" width="0.5" height="15.0" fill="rgb(250,21,13)" rx="2" ry="2" />
<text  x="1135.72" y="687.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::FindExternalLexicalDecls (1 samples, 0.04%)</title><rect x="783.7" y="629" width="0.5" height="15.0" fill="rgb(220,192,19)" rx="2" ry="2" />
<text  x="786.74" y="639.5" ></text>
</g>
<g >
<title>ROOT::Detail::RDF::RLoopManager::Run (214 samples, 7.99%)</title><rect x="689.0" y="965" width="94.3" height="15.0" fill="rgb(205,169,0)" rx="2" ry="2" />
<text  x="692.01" y="975.5" >ROOT::Detai..</text>
</g>
<g >
<title>ptmalloc_init.part.0 (1 samples, 0.04%)</title><rect x="1189.6" y="821" width="0.4" height="15.0" fill="rgb(240,127,1)" rx="2" ry="2" />
<text  x="1192.56" y="831.5" ></text>
</g>
<g >
<title>?? (9 samples, 0.34%)</title><rect x="794.8" y="917" width="3.9" height="15.0" fill="rgb(227,45,23)" rx="2" ry="2" />
<text  x="797.76" y="927.5" ></text>
</g>
<g >
<title>llvm::orc::JITSymbolResolverAdapter::lookup (7 samples, 0.26%)</title><rect x="905.8" y="741" width="3.1" height="15.0" fill="rgb(221,227,0)" rx="2" ry="2" />
<text  x="908.80" y="751.5" ></text>
</g>
<g >
<title>TKey::ReadObjectAny (1 samples, 0.04%)</title><rect x="905.4" y="901" width="0.4" height="15.0" fill="rgb(224,95,1)" rx="2" ry="2" />
<text  x="908.35" y="911.5" ></text>
</g>
<g >
<title>cling::Interpreter::RunFunction (21 samples, 0.78%)</title><rect x="699.1" y="869" width="9.3" height="15.0" fill="rgb(251,147,11)" rx="2" ry="2" />
<text  x="702.14" y="879.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (3 samples, 0.11%)</title><rect x="1071.5" y="805" width="1.3" height="15.0" fill="rgb(230,132,14)" rx="2" ry="2" />
<text  x="1074.47" y="815.5" ></text>
</g>
<g >
<title>llvm::JumpThreadingPass::ProcessBlock (1 samples, 0.04%)</title><rect x="691.7" y="757" width="0.4" height="15.0" fill="rgb(243,147,35)" rx="2" ry="2" />
<text  x="694.65" y="767.5" ></text>
</g>
<g >
<title>llvm::BasicAAWrapperPass::runOnFunction (1 samples, 0.04%)</title><rect x="832.2" y="581" width="0.5" height="15.0" fill="rgb(251,167,46)" rx="2" ry="2" />
<text  x="835.21" y="591.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitFunctionDecl (1 samples, 0.04%)</title><rect x="904.5" y="549" width="0.4" height="15.0" fill="rgb(241,58,30)" rx="2" ry="2" />
<text  x="907.47" y="559.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="431.2" y="709" width="0.5" height="15.0" fill="rgb(229,56,52)" rx="2" ry="2" />
<text  x="434.24" y="719.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1176.8" y="773" width="0.4" height="15.0" fill="rgb(219,112,38)" rx="2" ry="2" />
<text  x="1179.78" y="783.5" ></text>
</g>
<g >
<title>TCling::RegisterModule (1 samples, 0.04%)</title><rect x="904.9" y="661" width="0.5" height="15.0" fill="rgb(219,181,42)" rx="2" ry="2" />
<text  x="907.91" y="671.5" ></text>
</g>
<g >
<title>clang::VarDecl::getInstantiatedFromStaticDataMember (1 samples, 0.04%)</title><rect x="1130.1" y="533" width="0.4" height="15.0" fill="rgb(245,21,21)" rx="2" ry="2" />
<text  x="1133.07" y="543.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTBAA::getAccessInfo (1 samples, 0.04%)</title><rect x="1106.3" y="693" width="0.4" height="15.0" fill="rgb(245,44,46)" rx="2" ry="2" />
<text  x="1109.28" y="703.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTemplateArgumentList (1 samples, 0.04%)</title><rect x="1141.5" y="773" width="0.5" height="15.0" fill="rgb(217,16,25)" rx="2" ry="2" />
<text  x="1144.53" y="783.5" ></text>
</g>
<g >
<title>llvm::X86TargetMachine::getSubtargetImpl (3 samples, 0.11%)</title><rect x="864.4" y="533" width="1.3" height="15.0" fill="rgb(251,31,51)" rx="2" ry="2" />
<text  x="867.38" y="543.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1095.3" y="805" width="0.4" height="15.0" fill="rgb(244,68,12)" rx="2" ry="2" />
<text  x="1098.27" y="815.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertType (1 samples, 0.04%)</title><rect x="1117.7" y="469" width="0.5" height="15.0" fill="rgb(236,227,9)" rx="2" ry="2" />
<text  x="1120.74" y="479.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1172.4" y="773" width="0.4" height="15.0" fill="rgb(210,108,14)" rx="2" ry="2" />
<text  x="1175.37" y="783.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::removeDeadPasses (1 samples, 0.04%)</title><rect x="692.5" y="773" width="0.5" height="15.0" fill="rgb(225,174,2)" rx="2" ry="2" />
<text  x="695.53" y="783.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitRedeclarableTemplateDecl (1 samples, 0.04%)</title><rect x="904.5" y="741" width="0.4" height="15.0" fill="rgb(238,94,50)" rx="2" ry="2" />
<text  x="907.47" y="751.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddTemplateArgument (1 samples, 0.04%)</title><rect x="1103.2" y="341" width="0.4" height="15.0" fill="rgb(252,72,51)" rx="2" ry="2" />
<text  x="1106.20" y="351.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl (1 samples, 0.04%)</title><rect x="1140.6" y="709" width="0.5" height="15.0" fill="rgb(240,57,16)" rx="2" ry="2" />
<text  x="1143.65" y="719.5" ></text>
</g>
<g >
<title>TFileCacheRead::ReadBuffer (3 samples, 0.11%)</title><rect x="647.1" y="869" width="1.4" height="15.0" fill="rgb(245,226,14)" rx="2" ry="2" />
<text  x="650.15" y="879.5" ></text>
</g>
<g >
<title>clang::SourceManager::loadSLocEntry (1 samples, 0.04%)</title><rect x="908.9" y="613" width="0.4" height="15.0" fill="rgb(230,125,31)" rx="2" ry="2" />
<text  x="911.88" y="623.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitLValue (1 samples, 0.04%)</title><rect x="1116.0" y="661" width="0.4" height="15.0" fill="rgb(227,116,53)" rx="2" ry="2" />
<text  x="1118.97" y="671.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::TargetTransformInfo (llvm::Function const&amp;), llvm::TargetMachine::getTargetIRAnalysis()::{lambda(llvm::Function const&amp;)#1}&gt;::_M_invoke (1 samples, 0.04%)</title><rect x="906.7" y="533" width="0.4" height="15.0" fill="rgb(234,45,35)" rx="2" ry="2" />
<text  x="909.68" y="543.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.04%)</title><rect x="21.9" y="789" width="0.4" height="15.0" fill="rgb(244,15,1)" rx="2" ry="2" />
<text  x="24.90" y="799.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl (1 samples, 0.04%)</title><rect x="1099.2" y="629" width="0.5" height="15.0" fill="rgb(209,97,53)" rx="2" ry="2" />
<text  x="1102.23" y="639.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization (1 samples, 0.04%)</title><rect x="1132.3" y="661" width="0.4" height="15.0" fill="rgb(220,97,29)" rx="2" ry="2" />
<text  x="1135.28" y="671.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="1152.5" y="709" width="0.5" height="15.0" fill="rgb(254,66,35)" rx="2" ry="2" />
<text  x="1155.55" y="719.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGBuilderInserter::InsertHelper (1 samples, 0.04%)</title><rect x="1108.5" y="869" width="0.4" height="15.0" fill="rgb(252,200,28)" rx="2" ry="2" />
<text  x="1111.48" y="879.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::PopCleanupBlock (1 samples, 0.04%)</title><rect x="1108.0" y="709" width="0.5" height="15.0" fill="rgb(236,123,38)" rx="2" ry="2" />
<text  x="1111.04" y="719.5" ></text>
</g>
<g >
<title>llvm::Module::~Module (1 samples, 0.04%)</title><rect x="1028.3" y="741" width="0.4" height="15.0" fill="rgb(238,65,29)" rx="2" ry="2" />
<text  x="1031.29" y="751.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::GetExternalCXXBaseSpecifiers (1 samples, 0.04%)</title><rect x="1140.6" y="837" width="0.5" height="15.0" fill="rgb(217,28,0)" rx="2" ry="2" />
<text  x="1143.65" y="847.5" ></text>
</g>
<g >
<title>TBuildRealData::Inspect (1 samples, 0.04%)</title><rect x="783.3" y="757" width="0.4" height="15.0" fill="rgb(208,22,37)" rx="2" ry="2" />
<text  x="786.30" y="767.5" ></text>
</g>
<g >
<title>TLeafI::GetValue (9 samples, 0.34%)</title><rect x="680.6" y="917" width="4.0" height="15.0" fill="rgb(230,54,1)" rx="2" ry="2" />
<text  x="683.63" y="927.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject&lt;std::shared_ptr&lt;llvm::RuntimeDyld::MemoryManager&gt; &gt;::getSymbolMaterializer(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda()#1}&gt;::_M_invoke (4 samples, 0.15%)</title><rect x="1148.1" y="837" width="1.8" height="15.0" fill="rgb(244,139,7)" rx="2" ry="2" />
<text  x="1151.14" y="847.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType (1 samples, 0.04%)</title><rect x="1135.8" y="757" width="0.4" height="15.0" fill="rgb(218,194,31)" rx="2" ry="2" />
<text  x="1138.80" y="767.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType (1 samples, 0.04%)</title><rect x="1140.2" y="741" width="0.4" height="15.0" fill="rgb(226,146,16)" rx="2" ry="2" />
<text  x="1143.21" y="751.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (5 samples, 0.19%)</title><rect x="704.4" y="709" width="2.2" height="15.0" fill="rgb(243,75,36)" rx="2" ry="2" />
<text  x="707.43" y="719.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_erase_aux (1 samples, 0.04%)</title><rect x="1110.7" y="581" width="0.4" height="15.0" fill="rgb(250,174,37)" rx="2" ry="2" />
<text  x="1113.69" y="591.5" ></text>
</g>
<g >
<title>clang::ASTReader::readTypeRecord (1 samples, 0.04%)</title><rect x="1100.1" y="885" width="0.5" height="15.0" fill="rgb(219,111,27)" rx="2" ry="2" />
<text  x="1103.11" y="895.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="21.9" y="581" width="0.4" height="15.0" fill="rgb(230,138,6)" rx="2" ry="2" />
<text  x="24.90" y="591.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::getTBAAAccessInfo (1 samples, 0.04%)</title><rect x="1106.3" y="709" width="0.4" height="15.0" fill="rgb(240,204,23)" rx="2" ry="2" />
<text  x="1109.28" y="719.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::createSCEV (1 samples, 0.04%)</title><rect x="1159.2" y="661" width="0.4" height="15.0" fill="rgb(245,203,19)" rx="2" ry="2" />
<text  x="1162.16" y="671.5" ></text>
</g>
<g >
<title>TCling::ProcessLineSynch (1 samples, 0.04%)</title><rect x="1027.0" y="901" width="0.4" height="15.0" fill="rgb(228,7,36)" rx="2" ry="2" />
<text  x="1029.97" y="911.5" ></text>
</g>
<g >
<title>__dlopen_check (1 samples, 0.04%)</title><rect x="904.9" y="645" width="0.5" height="15.0" fill="rgb(205,73,46)" rx="2" ry="2" />
<text  x="907.91" y="655.5" ></text>
</g>
<g >
<title>llvm::SmallVectorImpl&lt;unsigned int&gt;::resize (1 samples, 0.04%)</title><rect x="701.8" y="741" width="0.4" height="15.0" fill="rgb(242,129,21)" rx="2" ry="2" />
<text  x="704.78" y="751.5" ></text>
</g>
<g >
<title>clang::ASTContext::getTypeInfo (1 samples, 0.04%)</title><rect x="1123.5" y="757" width="0.4" height="15.0" fill="rgb(217,105,25)" rx="2" ry="2" />
<text  x="1126.47" y="767.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (81 samples, 3.02%)</title><rect x="1030.1" y="661" width="35.6" height="15.0" fill="rgb(249,30,3)" rx="2" ry="2" />
<text  x="1033.05" y="671.5" >llv..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="431.2" y="789" width="0.5" height="15.0" fill="rgb(243,217,26)" rx="2" ry="2" />
<text  x="434.24" y="799.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="21.5" y="437" width="0.4" height="15.0" fill="rgb(233,9,4)" rx="2" ry="2" />
<text  x="24.46" y="447.5" ></text>
</g>
<g >
<title>expand_string_assignment (5 samples, 0.19%)</title><rect x="10.4" y="485" width="2.2" height="15.0" fill="rgb(230,216,29)" rx="2" ry="2" />
<text  x="13.44" y="495.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::StartFunction (1 samples, 0.04%)</title><rect x="1116.9" y="933" width="0.4" height="15.0" fill="rgb(217,82,31)" rx="2" ry="2" />
<text  x="1119.86" y="943.5" ></text>
</g>
<g >
<title>llvm::AttributeSetNode::get (1 samples, 0.04%)</title><rect x="1112.9" y="741" width="0.4" height="15.0" fill="rgb(205,165,24)" rx="2" ry="2" />
<text  x="1115.89" y="751.5" ></text>
</g>
<g >
<title>llvm::InstructionCombiningPass::runOnFunction (1 samples, 0.04%)</title><rect x="910.6" y="709" width="0.5" height="15.0" fill="rgb(208,105,27)" rx="2" ry="2" />
<text  x="913.64" y="719.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertTypeForMem (1 samples, 0.04%)</title><rect x="1117.7" y="965" width="0.5" height="15.0" fill="rgb(212,158,16)" rx="2" ry="2" />
<text  x="1120.74" y="975.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="12.2" y="293" width="0.4" height="15.0" fill="rgb(217,15,23)" rx="2" ry="2" />
<text  x="15.20" y="303.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitAnyExpr (1 samples, 0.04%)</title><rect x="1116.0" y="789" width="0.4" height="15.0" fill="rgb(223,41,40)" rx="2" ry="2" />
<text  x="1118.97" y="799.5" ></text>
</g>
<g >
<title>llvm::orc::JITSymbolResolverAdapter::lookup (1 samples, 0.04%)</title><rect x="1147.7" y="805" width="0.4" height="15.0" fill="rgb(236,94,46)" rx="2" ry="2" />
<text  x="1150.70" y="815.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallArgs&lt;clang::FunctionProtoType&gt; (1 samples, 0.04%)</title><rect x="1101.4" y="949" width="0.5" height="15.0" fill="rgb(213,98,51)" rx="2" ry="2" />
<text  x="1104.43" y="959.5" ></text>
</g>
<g >
<title>clang::Sema::ActOnBinOp (1 samples, 0.04%)</title><rect x="1118.6" y="965" width="0.5" height="15.0" fill="rgb(238,64,10)" rx="2" ry="2" />
<text  x="1121.62" y="975.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1127.0" y="757" width="0.4" height="15.0" fill="rgb(239,103,33)" rx="2" ry="2" />
<text  x="1129.99" y="767.5" ></text>
</g>
<g >
<title>TFileCacheRead::ReadBufferExtNormal (1 samples, 0.04%)</title><rect x="414.5" y="757" width="0.4" height="15.0" fill="rgb(237,14,22)" rx="2" ry="2" />
<text  x="417.50" y="767.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1168.4" y="853" width="0.4" height="15.0" fill="rgb(230,116,26)" rx="2" ry="2" />
<text  x="1171.41" y="863.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddDecl (1 samples, 0.04%)</title><rect x="1131.0" y="469" width="0.4" height="15.0" fill="rgb(216,155,36)" rx="2" ry="2" />
<text  x="1133.96" y="479.5" ></text>
</g>
<g >
<title>llvm::BitstreamCursor::readRecord (1 samples, 0.04%)</title><rect x="783.7" y="549" width="0.5" height="15.0" fill="rgb(252,16,52)" rx="2" ry="2" />
<text  x="786.74" y="559.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.04%)</title><rect x="1112.0" y="597" width="0.4" height="15.0" fill="rgb(213,150,22)" rx="2" ry="2" />
<text  x="1115.01" y="607.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;std::add_pointer, (anonymous namespace)::ScalarExprEmitter, llvm::Value*&gt;::Visit (2 samples, 0.07%)</title><rect x="1105.8" y="805" width="0.9" height="15.0" fill="rgb(254,16,52)" rx="2" ry="2" />
<text  x="1108.84" y="815.5" ></text>
</g>
<g >
<title>TClass::BuildRealData (1 samples, 0.04%)</title><rect x="784.2" y="757" width="0.4" height="15.0" fill="rgb(247,101,37)" rx="2" ry="2" />
<text  x="787.18" y="767.5" ></text>
</g>
<g >
<title>llvm::function_ref&lt;llvm::AnalysisResultsForFn (llvm::Function&amp;)&gt;::callback_fn&lt;(anonymous namespace)::IPSCCPLegacyPass::runOnModule(llvm::Module&amp;)::{lambda(llvm::Function&amp;)#1}&gt; (1 samples, 0.04%)</title><rect x="1158.3" y="949" width="0.4" height="15.0" fill="rgb(235,19,16)" rx="2" ry="2" />
<text  x="1161.27" y="959.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::createAddRecFromPHI (1 samples, 0.04%)</title><rect x="1159.2" y="629" width="0.4" height="15.0" fill="rgb(253,202,15)" rx="2" ry="2" />
<text  x="1162.16" y="639.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitFunctionProlog (1 samples, 0.04%)</title><rect x="1116.9" y="917" width="0.4" height="15.0" fill="rgb(228,74,6)" rx="2" ry="2" />
<text  x="1119.86" y="927.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1097.5" y="549" width="0.4" height="15.0" fill="rgb(221,152,31)" rx="2" ry="2" />
<text  x="1100.47" y="559.5" ></text>
</g>
<g >
<title>llvm::KnownBits::computeForAddCarry (1 samples, 0.04%)</title><rect x="1154.3" y="885" width="0.4" height="15.0" fill="rgb(221,129,16)" rx="2" ry="2" />
<text  x="1157.31" y="895.5" ></text>
</g>
<g >
<title>TROOT::Macro (1 samples, 0.04%)</title><rect x="904.0" y="885" width="0.5" height="15.0" fill="rgb(242,45,6)" rx="2" ry="2" />
<text  x="907.03" y="895.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::CodeGenAndEmitDAG (1 samples, 0.04%)</title><rect x="1154.7" y="933" width="0.5" height="15.0" fill="rgb(228,90,24)" rx="2" ry="2" />
<text  x="1157.75" y="943.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (1 samples, 0.04%)</title><rect x="1142.9" y="837" width="0.4" height="15.0" fill="rgb(229,43,8)" rx="2" ry="2" />
<text  x="1145.85" y="847.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="10.4" y="341" width="0.5" height="15.0" fill="rgb(208,217,41)" rx="2" ry="2" />
<text  x="13.44" y="351.5" ></text>
</g>
<g >
<title>execute_command_internal (4 samples, 0.15%)</title><rect x="22.3" y="277" width="1.8" height="15.0" fill="rgb(238,161,0)" rx="2" ry="2" />
<text  x="25.34" y="287.5" ></text>
</g>
<g >
<title>clang::Sema::BuildOverloadedCallExpr (3 samples, 0.11%)</title><rect x="1121.7" y="965" width="1.3" height="15.0" fill="rgb(214,65,18)" rx="2" ry="2" />
<text  x="1124.70" y="975.5" ></text>
</g>
<g >
<title>llvm::X86AsmPrinter::runOnMachineFunction (1 samples, 0.04%)</title><rect x="1144.6" y="725" width="0.5" height="15.0" fill="rgb(230,183,34)" rx="2" ry="2" />
<text  x="1147.62" y="735.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="23.7" y="37" width="0.4" height="15.0" fill="rgb(237,103,43)" rx="2" ry="2" />
<text  x="26.66" y="47.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl (1 samples, 0.04%)</title><rect x="1137.1" y="725" width="0.5" height="15.0" fill="rgb(243,127,7)" rx="2" ry="2" />
<text  x="1140.12" y="735.5" ></text>
</g>
<g >
<title>llvm::X86TargetMachine::getTargetTransformInfo (3 samples, 0.11%)</title><rect x="1061.8" y="581" width="1.3" height="15.0" fill="rgb(242,195,53)" rx="2" ry="2" />
<text  x="1064.78" y="591.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;, void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;::LookupBucketFor&lt;void const*&gt; (1 samples, 0.04%)</title><rect x="1052.5" y="581" width="0.5" height="15.0" fill="rgb(221,64,29)" rx="2" ry="2" />
<text  x="1055.52" y="591.5" ></text>
</g>
<g >
<title>llvm::orc::JITSymbolResolverAdapter::lookup (2 samples, 0.07%)</title><rect x="867.5" y="581" width="0.8" height="15.0" fill="rgb(217,37,34)" rx="2" ry="2" />
<text  x="870.46" y="591.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitAutoVarDecl (1 samples, 0.04%)</title><rect x="1115.1" y="773" width="0.4" height="15.0" fill="rgb(254,116,53)" rx="2" ry="2" />
<text  x="1118.09" y="783.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::CodeGenAndEmitDAG (1 samples, 0.04%)</title><rect x="700.9" y="709" width="0.4" height="15.0" fill="rgb(229,227,29)" rx="2" ry="2" />
<text  x="703.90" y="719.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::freePass (1 samples, 0.04%)</title><rect x="692.5" y="757" width="0.5" height="15.0" fill="rgb(209,62,0)" rx="2" ry="2" />
<text  x="695.53" y="767.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertRecordDeclType (1 samples, 0.04%)</title><rect x="1117.3" y="901" width="0.4" height="15.0" fill="rgb(205,190,26)" rx="2" ry="2" />
<text  x="1120.30" y="911.5" ></text>
</g>
<g >
<title>dlopen_doit (2 samples, 0.07%)</title><rect x="1093.9" y="837" width="0.9" height="15.0" fill="rgb(231,163,34)" rx="2" ry="2" />
<text  x="1096.94" y="847.5" ></text>
</g>
<g >
<title>llvm::Attribute::hasAttribute (1 samples, 0.04%)</title><rect x="901.4" y="533" width="0.4" height="15.0" fill="rgb(207,144,18)" rx="2" ry="2" />
<text  x="904.39" y="543.5" ></text>
</g>
<g >
<title>combineInstructionsOverFunction (7 samples, 0.26%)</title><rect x="892.1" y="677" width="3.1" height="15.0" fill="rgb(237,165,10)" rx="2" ry="2" />
<text  x="895.14" y="687.5" ></text>
</g>
<g >
<title>llvm::FoldingSetBase::FindNodeOrInsertPos (1 samples, 0.04%)</title><rect x="1100.1" y="581" width="0.5" height="15.0" fill="rgb(205,50,34)" rx="2" ry="2" />
<text  x="1103.11" y="591.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.11%)</title><rect x="1073.2" y="725" width="1.4" height="15.0" fill="rgb(210,49,37)" rx="2" ry="2" />
<text  x="1076.23" y="735.5" ></text>
</g>
<g >
<title>_IO_new_popen (4 samples, 0.15%)</title><rect x="1066.6" y="757" width="1.8" height="15.0" fill="rgb(219,200,48)" rx="2" ry="2" />
<text  x="1069.62" y="767.5" ></text>
</g>
<g >
<title>clang::Sema::CheckNonDependentConversions (1 samples, 0.04%)</title><rect x="1155.2" y="949" width="0.4" height="15.0" fill="rgb(241,98,14)" rx="2" ry="2" />
<text  x="1158.19" y="959.5" ></text>
</g>
<g >
<title>check_match (1 samples, 0.04%)</title><rect x="1149.5" y="293" width="0.4" height="15.0" fill="rgb(219,135,41)" rx="2" ry="2" />
<text  x="1152.46" y="303.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::SetLLVMFunctionAttributes (1 samples, 0.04%)</title><rect x="1101.0" y="741" width="0.4" height="15.0" fill="rgb(219,109,41)" rx="2" ry="2" />
<text  x="1103.99" y="751.5" ></text>
</g>
<g >
<title>LookupMemberExprInRecord (1 samples, 0.04%)</title><rect x="1133.6" y="693" width="0.4" height="15.0" fill="rgb(207,94,47)" rx="2" ry="2" />
<text  x="1136.60" y="703.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.04%)</title><rect x="1135.8" y="885" width="0.4" height="15.0" fill="rgb(226,185,35)" rx="2" ry="2" />
<text  x="1138.80" y="895.5" ></text>
</g>
<g >
<title>__libc_start_main (1 samples, 0.04%)</title><rect x="1168.8" y="949" width="0.5" height="15.0" fill="rgb(220,109,28)" rx="2" ry="2" />
<text  x="1171.85" y="959.5" ></text>
</g>
<g >
<title>llvm::MemorySSA::OptimizeUses::optimizeUses (1 samples, 0.04%)</title><rect x="1151.2" y="757" width="0.5" height="15.0" fill="rgb(219,55,5)" rx="2" ry="2" />
<text  x="1154.22" y="767.5" ></text>
</g>
<g >
<title>llvm::InstrEmitter::AddOperand (1 samples, 0.04%)</title><rect x="1144.2" y="629" width="0.4" height="15.0" fill="rgb(248,19,20)" rx="2" ry="2" />
<text  x="1147.17" y="639.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1143.3" y="853" width="0.4" height="15.0" fill="rgb(232,181,27)" rx="2" ry="2" />
<text  x="1146.29" y="863.5" ></text>
</g>
<g >
<title>[bash] (4 samples, 0.15%)</title><rect x="22.3" y="421" width="1.8" height="15.0" fill="rgb(219,103,0)" rx="2" ry="2" />
<text  x="25.34" y="431.5" ></text>
</g>
<g >
<title>llvm::BitstreamCursor::readRecord (1 samples, 0.04%)</title><rect x="1132.7" y="437" width="0.5" height="15.0" fill="rgb(243,157,3)" rx="2" ry="2" />
<text  x="1135.72" y="447.5" ></text>
</g>
<g >
<title>clang::Sema::PerformPendingInstantiations (3 samples, 0.11%)</title><rect x="1134.0" y="853" width="1.4" height="15.0" fill="rgb(252,156,18)" rx="2" ry="2" />
<text  x="1137.04" y="863.5" ></text>
</g>
<g >
<title>clang::ASTContext::getBaseElementType (1 samples, 0.04%)</title><rect x="1104.1" y="853" width="0.4" height="15.0" fill="rgb(223,38,38)" rx="2" ry="2" />
<text  x="1107.08" y="863.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitTopLevelDecl (1 samples, 0.04%)</title><rect x="1133.2" y="853" width="0.4" height="15.0" fill="rgb(228,85,36)" rx="2" ry="2" />
<text  x="1136.16" y="863.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord (1 samples, 0.04%)</title><rect x="1126.1" y="853" width="0.4" height="15.0" fill="rgb(230,212,5)" rx="2" ry="2" />
<text  x="1129.11" y="863.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.07%)</title><rect x="1082.9" y="741" width="0.9" height="15.0" fill="rgb(229,35,47)" rx="2" ry="2" />
<text  x="1085.93" y="751.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetType (1 samples, 0.04%)</title><rect x="1099.7" y="901" width="0.4" height="15.0" fill="rgb(242,15,28)" rx="2" ry="2" />
<text  x="1102.67" y="911.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke (1 samples, 0.04%)</title><rect x="1150.8" y="773" width="0.4" height="15.0" fill="rgb(253,52,4)" rx="2" ry="2" />
<text  x="1153.78" y="783.5" ></text>
</g>
<g >
<title>TClass::GetBaseClass (1 samples, 0.04%)</title><rect x="786.4" y="581" width="0.4" height="15.0" fill="rgb(242,211,32)" rx="2" ry="2" />
<text  x="789.39" y="591.5" ></text>
</g>
<g >
<title>llvm::BlockFrequencyInfo::calculate (1 samples, 0.04%)</title><rect x="1034.0" y="613" width="0.5" height="15.0" fill="rgb(220,36,19)" rx="2" ry="2" />
<text  x="1037.02" y="623.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::LookupUnqualified (1 samples, 0.04%)</title><rect x="784.2" y="501" width="0.4" height="15.0" fill="rgb(232,76,5)" rx="2" ry="2" />
<text  x="787.18" y="511.5" ></text>
</g>
<g >
<title>[bash] (5 samples, 0.19%)</title><rect x="10.4" y="517" width="2.2" height="15.0" fill="rgb(225,151,54)" rx="2" ry="2" />
<text  x="13.44" y="527.5" ></text>
</g>
<g >
<title>clang::Sema::BuildQualifiedDeclarationNameExpr (1 samples, 0.04%)</title><rect x="1131.8" y="741" width="0.5" height="15.0" fill="rgb(226,62,11)" rx="2" ry="2" />
<text  x="1134.84" y="751.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1172.8" y="741" width="0.5" height="15.0" fill="rgb(219,84,21)" rx="2" ry="2" />
<text  x="1175.82" y="751.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformReferenceType (1 samples, 0.04%)</title><rect x="1131.4" y="597" width="0.4" height="15.0" fill="rgb(234,162,41)" rx="2" ry="2" />
<text  x="1134.40" y="607.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitFunctionBody (1 samples, 0.04%)</title><rect x="1115.1" y="885" width="0.4" height="15.0" fill="rgb(232,144,50)" rx="2" ry="2" />
<text  x="1118.09" y="895.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.11%)</title><rect x="1073.2" y="741" width="1.4" height="15.0" fill="rgb(243,92,51)" rx="2" ry="2" />
<text  x="1076.23" y="751.5" ></text>
</g>
<g >
<title>__GI___fork (4 samples, 0.15%)</title><rect x="19.7" y="581" width="1.8" height="15.0" fill="rgb(211,60,30)" rx="2" ry="2" />
<text  x="22.69" y="591.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.11%)</title><rect x="1073.2" y="757" width="1.4" height="15.0" fill="rgb(231,185,39)" rx="2" ry="2" />
<text  x="1076.23" y="767.5" ></text>
</g>
<g >
<title>llvm::MemorySSA::OptimizeUses::optimizeUses (1 samples, 0.04%)</title><rect x="910.2" y="677" width="0.4" height="15.0" fill="rgb(243,125,25)" rx="2" ry="2" />
<text  x="913.20" y="687.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (1 samples, 0.04%)</title><rect x="1064.4" y="597" width="0.5" height="15.0" fill="rgb(213,187,19)" rx="2" ry="2" />
<text  x="1067.42" y="607.5" ></text>
</g>
<g >
<title>clang::Sema::AddBuiltinCandidate (1 samples, 0.04%)</title><rect x="1126.5" y="933" width="0.5" height="15.0" fill="rgb(233,21,19)" rx="2" ry="2" />
<text  x="1129.55" y="943.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::SmallDenseMap&lt;unsigned int, llvm::SDValue, 8u, llvm::DenseMapInfo&lt;unsigned int&gt;, llvm::detail::DenseMapPair&lt;unsigned int, llvm::SDValue&gt; &gt;, unsigned int, llvm::SDValue, llvm::DenseMapInfo&lt;unsigned int&gt;, llvm::detail::DenseMapPair&lt;unsigned int, llvm::SDValue&gt; &gt;::LookupBucketFor&lt;unsigned int&gt; (1 samples, 0.04%)</title><rect x="1152.1" y="661" width="0.4" height="15.0" fill="rgb(232,216,12)" rx="2" ry="2" />
<text  x="1155.11" y="671.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;, void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;::LookupBucketFor&lt;void const*&gt; (1 samples, 0.04%)</title><rect x="698.3" y="693" width="0.4" height="15.0" fill="rgb(219,120,7)" rx="2" ry="2" />
<text  x="701.26" y="703.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType (1 samples, 0.04%)</title><rect x="1135.8" y="821" width="0.4" height="15.0" fill="rgb(213,173,44)" rx="2" ry="2" />
<text  x="1138.80" y="831.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTypenameType (1 samples, 0.04%)</title><rect x="1142.0" y="709" width="0.4" height="15.0" fill="rgb(211,64,18)" rx="2" ry="2" />
<text  x="1144.97" y="719.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentScopeDeclRefExpr (2 samples, 0.07%)</title><rect x="1142.0" y="917" width="0.9" height="15.0" fill="rgb(237,22,51)" rx="2" ry="2" />
<text  x="1144.97" y="927.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformNestedNameSpecifierLoc (1 samples, 0.04%)</title><rect x="1139.3" y="949" width="0.5" height="15.0" fill="rgb(240,2,19)" rx="2" ry="2" />
<text  x="1142.33" y="959.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveExternalSymbols (2 samples, 0.07%)</title><rect x="1145.9" y="853" width="0.9" height="15.0" fill="rgb(209,189,35)" rx="2" ry="2" />
<text  x="1148.94" y="863.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitDeclStmt (2 samples, 0.07%)</title><rect x="1107.6" y="869" width="0.9" height="15.0" fill="rgb(211,197,31)" rx="2" ry="2" />
<text  x="1110.60" y="879.5" ></text>
</g>
<g >
<title>llvm::Use::getImpliedUser (1 samples, 0.04%)</title><rect x="1027.4" y="565" width="0.4" height="15.0" fill="rgb(238,184,12)" rx="2" ry="2" />
<text  x="1030.41" y="575.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="21.9" y="949" width="0.4" height="15.0" fill="rgb(216,160,16)" rx="2" ry="2" />
<text  x="24.90" y="959.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddType (1 samples, 0.04%)</title><rect x="1140.2" y="581" width="0.4" height="15.0" fill="rgb(206,117,13)" rx="2" ry="2" />
<text  x="1143.21" y="591.5" ></text>
</g>
<g >
<title>clang::Sema::FinishTemplateArgumentDeduction (3 samples, 0.11%)</title><rect x="1127.0" y="949" width="1.3" height="15.0" fill="rgb(226,69,34)" rx="2" ry="2" />
<text  x="1129.99" y="959.5" ></text>
</g>
<g >
<title>clang::Sema::DeduceTemplateArguments (1 samples, 0.04%)</title><rect x="1122.6" y="885" width="0.4" height="15.0" fill="rgb(208,50,34)" rx="2" ry="2" />
<text  x="1125.58" y="895.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass (2 samples, 0.07%)</title><rect x="1139.8" y="869" width="0.8" height="15.0" fill="rgb(220,46,20)" rx="2" ry="2" />
<text  x="1142.77" y="879.5" ></text>
</g>
<g >
<title>_dl_relocate_object (1 samples, 0.04%)</title><rect x="334.7" y="901" width="0.5" height="15.0" fill="rgb(216,156,9)" rx="2" ry="2" />
<text  x="337.74" y="911.5" ></text>
</g>
<g >
<title>clang::Sema::SubstFunctionDeclType (1 samples, 0.04%)</title><rect x="1138.9" y="933" width="0.4" height="15.0" fill="rgb(209,69,14)" rx="2" ry="2" />
<text  x="1141.89" y="943.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord (1 samples, 0.04%)</title><rect x="783.7" y="581" width="0.5" height="15.0" fill="rgb(238,183,36)" rx="2" ry="2" />
<text  x="786.74" y="591.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.11%)</title><rect x="14.8" y="293" width="1.4" height="15.0" fill="rgb(227,41,43)" rx="2" ry="2" />
<text  x="17.85" y="303.5" ></text>
</g>
<g >
<title>cling::MetaParser::isXCommand (1 samples, 0.04%)</title><rect x="1027.4" y="821" width="0.4" height="15.0" fill="rgb(232,94,0)" rx="2" ry="2" />
<text  x="1030.41" y="831.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl (1 samples, 0.04%)</title><rect x="1097.5" y="661" width="0.4" height="15.0" fill="rgb(220,161,17)" rx="2" ry="2" />
<text  x="1100.47" y="671.5" ></text>
</g>
<g >
<title>clang::Sema::CreateOverloadedBinOp (2 samples, 0.07%)</title><rect x="1126.1" y="965" width="0.9" height="15.0" fill="rgb(220,75,5)" rx="2" ry="2" />
<text  x="1129.11" y="975.5" ></text>
</g>
<g >
<title>clang::Lexer::Lex (1 samples, 0.04%)</title><rect x="1071.0" y="773" width="0.5" height="15.0" fill="rgb(215,179,33)" rx="2" ry="2" />
<text  x="1074.03" y="783.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertType (1 samples, 0.04%)</title><rect x="1117.7" y="885" width="0.5" height="15.0" fill="rgb(235,8,48)" rx="2" ry="2" />
<text  x="1120.74" y="895.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddType (1 samples, 0.04%)</title><rect x="1128.3" y="581" width="0.5" height="15.0" fill="rgb(248,126,46)" rx="2" ry="2" />
<text  x="1131.31" y="591.5" ></text>
</g>
<g >
<title>clang::Sema::SubstFunctionDeclType (1 samples, 0.04%)</title><rect x="1127.0" y="885" width="0.4" height="15.0" fill="rgb(239,9,35)" rx="2" ry="2" />
<text  x="1129.99" y="895.5" ></text>
</g>
<g >
<title>llvm::TargetLowering::SimplifyDemandedBits (1 samples, 0.04%)</title><rect x="1154.3" y="917" width="0.4" height="15.0" fill="rgb(225,153,51)" rx="2" ry="2" />
<text  x="1157.31" y="927.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt;, llvm::DenseMapInfo&lt;llvm::BasicBlock*&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt; &gt; &gt;, llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt;, llvm::DenseMapInfo&lt;llvm::BasicBlock*&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt; &gt; &gt;::destroyAll (1 samples, 0.04%)</title><rect x="1028.7" y="533" width="0.5" height="15.0" fill="rgb(217,3,33)" rx="2" ry="2" />
<text  x="1031.73" y="543.5" ></text>
</g>
<g >
<title>llvm::SROA::runOnAlloca (1 samples, 0.04%)</title><rect x="900.5" y="597" width="0.4" height="15.0" fill="rgb(249,32,17)" rx="2" ry="2" />
<text  x="903.51" y="607.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXMemberOrOperatorMemberCallExpr (1 samples, 0.04%)</title><rect x="1101.0" y="805" width="0.4" height="15.0" fill="rgb(231,9,34)" rx="2" ry="2" />
<text  x="1103.99" y="815.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1168.0" y="885" width="0.4" height="15.0" fill="rgb(237,64,8)" rx="2" ry="2" />
<text  x="1170.97" y="895.5" ></text>
</g>
<g >
<title>llvm::LLVMTargetMachine::addPassesToEmitMC (1 samples, 0.04%)</title><rect x="830.4" y="629" width="0.5" height="15.0" fill="rgb(210,198,28)" rx="2" ry="2" />
<text  x="833.45" y="639.5" ></text>
</g>
<g >
<title>llvm::legacy::FunctionPassManagerImpl::run (1 samples, 0.04%)</title><rect x="1158.3" y="933" width="0.4" height="15.0" fill="rgb(222,189,42)" rx="2" ry="2" />
<text  x="1161.27" y="943.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitDestructorBody (2 samples, 0.07%)</title><rect x="1116.0" y="933" width="0.9" height="15.0" fill="rgb(220,123,28)" rx="2" ry="2" />
<text  x="1118.97" y="943.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1095.3" y="757" width="0.4" height="15.0" fill="rgb(216,54,54)" rx="2" ry="2" />
<text  x="1098.27" y="767.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.04%)</title><rect x="907.6" y="485" width="0.4" height="15.0" fill="rgb(219,89,2)" rx="2" ry="2" />
<text  x="910.56" y="495.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.04%)</title><rect x="21.9" y="933" width="0.4" height="15.0" fill="rgb(207,186,28)" rx="2" ry="2" />
<text  x="24.90" y="943.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="21.9" y="117" width="0.4" height="15.0" fill="rgb(228,150,17)" rx="2" ry="2" />
<text  x="24.90" y="127.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.04%)</title><rect x="786.4" y="869" width="0.4" height="15.0" fill="rgb(215,159,20)" rx="2" ry="2" />
<text  x="789.39" y="879.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.04%)</title><rect x="783.7" y="709" width="0.5" height="15.0" fill="rgb(245,145,3)" rx="2" ry="2" />
<text  x="786.74" y="719.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentNameType (1 samples, 0.04%)</title><rect x="1138.4" y="917" width="0.5" height="15.0" fill="rgb(217,126,26)" rx="2" ry="2" />
<text  x="1141.45" y="927.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformNestedNameSpecifierLoc (1 samples, 0.04%)</title><rect x="1128.3" y="725" width="0.5" height="15.0" fill="rgb(221,35,37)" rx="2" ry="2" />
<text  x="1131.31" y="735.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.04%)</title><rect x="1128.3" y="757" width="0.5" height="15.0" fill="rgb(254,51,27)" rx="2" ry="2" />
<text  x="1131.31" y="767.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="431.2" y="837" width="0.5" height="15.0" fill="rgb(221,73,49)" rx="2" ry="2" />
<text  x="434.24" y="847.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddDecl (1 samples, 0.04%)</title><rect x="1140.2" y="613" width="0.4" height="15.0" fill="rgb(240,188,7)" rx="2" ry="2" />
<text  x="1143.21" y="623.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke (1 samples, 0.04%)</title><rect x="1152.1" y="901" width="0.4" height="15.0" fill="rgb(249,30,15)" rx="2" ry="2" />
<text  x="1155.11" y="911.5" ></text>
</g>
<g >
<title>llvm::simplifyCFG (1 samples, 0.04%)</title><rect x="890.4" y="629" width="0.4" height="15.0" fill="rgb(225,73,19)" rx="2" ry="2" />
<text  x="893.37" y="639.5" ></text>
</g>
<g >
<title>clang::ASTContext::getTypeSizeInChars (1 samples, 0.04%)</title><rect x="1123.5" y="821" width="0.4" height="15.0" fill="rgb(253,146,14)" rx="2" ry="2" />
<text  x="1126.47" y="831.5" ></text>
</g>
<g >
<title>iterativelySimplifyCFG (1 samples, 0.04%)</title><rect x="890.4" y="645" width="0.4" height="15.0" fill="rgb(227,67,44)" rx="2" ry="2" />
<text  x="893.37" y="655.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType (1 samples, 0.04%)</title><rect x="1124.3" y="725" width="0.5" height="15.0" fill="rgb(212,86,3)" rx="2" ry="2" />
<text  x="1127.35" y="735.5" ></text>
</g>
<g >
<title>llvm::BumpPtrAllocatorImpl&lt;llvm::MallocAllocator, 4096ul, 4096ul&gt;::Allocate (1 samples, 0.04%)</title><rect x="1119.1" y="869" width="0.4" height="15.0" fill="rgb(206,94,13)" rx="2" ry="2" />
<text  x="1122.06" y="879.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="12.2" y="341" width="0.4" height="15.0" fill="rgb(219,16,11)" rx="2" ry="2" />
<text  x="15.20" y="351.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1020.4" y="917" width="0.4" height="15.0" fill="rgb(234,57,49)" rx="2" ry="2" />
<text  x="1023.36" y="927.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (1 samples, 0.04%)</title><rect x="1137.6" y="741" width="0.4" height="15.0" fill="rgb(251,25,50)" rx="2" ry="2" />
<text  x="1140.57" y="751.5" ></text>
</g>
<g >
<title>clang::LinkageComputer::computeLVForDecl (1 samples, 0.04%)</title><rect x="1103.2" y="629" width="0.4" height="15.0" fill="rgb(214,110,14)" rx="2" ry="2" />
<text  x="1106.20" y="639.5" ></text>
</g>
<g >
<title>llvm::MachineFunctionPass::getAnalysisUsage (1 samples, 0.04%)</title><rect x="830.4" y="533" width="0.5" height="15.0" fill="rgb(226,122,53)" rx="2" ry="2" />
<text  x="833.45" y="543.5" ></text>
</g>
<g >
<title>TryImplicitConversion (1 samples, 0.04%)</title><rect x="1134.0" y="597" width="0.5" height="15.0" fill="rgb(222,81,51)" rx="2" ry="2" />
<text  x="1137.04" y="607.5" ></text>
</g>
<g >
<title>clang::Sema::CheckBaseSpecifier (1 samples, 0.04%)</title><rect x="1139.8" y="837" width="0.4" height="15.0" fill="rgb(206,122,32)" rx="2" ry="2" />
<text  x="1142.77" y="847.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.07%)</title><rect x="1188.7" y="821" width="0.9" height="15.0" fill="rgb(209,160,4)" rx="2" ry="2" />
<text  x="1191.68" y="831.5" ></text>
</g>
<g >
<title>ReduceLoopStrength (1 samples, 0.04%)</title><rect x="829.6" y="965" width="0.4" height="15.0" fill="rgb(225,83,3)" rx="2" ry="2" />
<text  x="832.57" y="975.5" ></text>
</g>
<g >
<title>llvm::AttributeSetNode::hasAttribute (1 samples, 0.04%)</title><rect x="1062.2" y="549" width="0.5" height="15.0" fill="rgb(228,96,28)" rx="2" ry="2" />
<text  x="1065.22" y="559.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::PopCleanupBlock (1 samples, 0.04%)</title><rect x="1115.5" y="869" width="0.5" height="15.0" fill="rgb(225,104,34)" rx="2" ry="2" />
<text  x="1118.53" y="879.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord (1 samples, 0.04%)</title><rect x="1117.3" y="501" width="0.4" height="15.0" fill="rgb(219,203,16)" rx="2" ry="2" />
<text  x="1120.30" y="511.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1124.8" y="773" width="0.4" height="15.0" fill="rgb(238,85,30)" rx="2" ry="2" />
<text  x="1127.79" y="783.5" ></text>
</g>
<g >
<title>clang::Sema::BuildQualifiedDeclarationNameExpr (1 samples, 0.04%)</title><rect x="1123.0" y="965" width="0.5" height="15.0" fill="rgb(247,192,3)" rx="2" ry="2" />
<text  x="1126.02" y="975.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallExpr (1 samples, 0.04%)</title><rect x="1101.0" y="837" width="0.4" height="15.0" fill="rgb(232,59,18)" rx="2" ry="2" />
<text  x="1103.99" y="847.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyld::finalizeWithMemoryManagerLocking (2 samples, 0.07%)</title><rect x="1145.9" y="885" width="0.9" height="15.0" fill="rgb(212,38,2)" rx="2" ry="2" />
<text  x="1148.94" y="895.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitTypedefDecl (1 samples, 0.04%)</title><rect x="1137.1" y="565" width="0.5" height="15.0" fill="rgb(238,18,29)" rx="2" ry="2" />
<text  x="1140.12" y="575.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (1 samples, 0.04%)</title><rect x="1139.8" y="725" width="0.4" height="15.0" fill="rgb(207,155,7)" rx="2" ry="2" />
<text  x="1142.77" y="735.5" ></text>
</g>
<g >
<title>llvm::Function::addAttributes (1 samples, 0.04%)</title><rect x="1111.1" y="629" width="0.5" height="15.0" fill="rgb(220,3,36)" rx="2" ry="2" />
<text  x="1114.13" y="639.5" ></text>
</g>
<g >
<title>TCling::LazyFunctionCreatorAutoload (1 samples, 0.04%)</title><rect x="904.9" y="965" width="0.5" height="15.0" fill="rgb(253,98,45)" rx="2" ry="2" />
<text  x="907.91" y="975.5" ></text>
</g>
<g >
<title>llvm::orc::SimpleCompiler::operator() (10 samples, 0.37%)</title><rect x="1159.6" y="837" width="4.4" height="15.0" fill="rgb(211,139,50)" rx="2" ry="2" />
<text  x="1162.60" y="847.5" ></text>
</g>
<g >
<title>llvm::DataLayout::~DataLayout (1 samples, 0.04%)</title><rect x="1146.8" y="661" width="0.5" height="15.0" fill="rgb(249,74,8)" rx="2" ry="2" />
<text  x="1149.82" y="671.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition (1 samples, 0.04%)</title><rect x="1111.6" y="677" width="0.4" height="15.0" fill="rgb(231,105,34)" rx="2" ry="2" />
<text  x="1114.57" y="687.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitStmt (1 samples, 0.04%)</title><rect x="1102.8" y="949" width="0.4" height="15.0" fill="rgb(233,203,17)" rx="2" ry="2" />
<text  x="1105.76" y="959.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject&lt;std::shared_ptr&lt;llvm::RuntimeDyld::MemoryManager&gt; &gt;::getSymbolMaterializer(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda()#1}&gt;::_M_invoke (7 samples, 0.26%)</title><rect x="905.8" y="805" width="3.1" height="15.0" fill="rgb(231,61,37)" rx="2" ry="2" />
<text  x="908.80" y="815.5" ></text>
</g>
<g >
<title>clang::LinkageComputer::getLVForDecl (1 samples, 0.04%)</title><rect x="1103.2" y="645" width="0.4" height="15.0" fill="rgb(254,200,51)" rx="2" ry="2" />
<text  x="1106.20" y="655.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition (1 samples, 0.04%)</title><rect x="785.1" y="805" width="0.4" height="15.0" fill="rgb(253,33,33)" rx="2" ry="2" />
<text  x="788.06" y="815.5" ></text>
</g>
<g >
<title>execute_command (16 samples, 0.60%)</title><rect x="12.6" y="565" width="7.1" height="15.0" fill="rgb(242,1,3)" rx="2" ry="2" />
<text  x="15.64" y="575.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1131.0" y="773" width="0.4" height="15.0" fill="rgb(212,183,52)" rx="2" ry="2" />
<text  x="1133.96" y="783.5" ></text>
</g>
<g >
<title>TRegexp::Index (1 samples, 0.04%)</title><rect x="784.6" y="821" width="0.5" height="15.0" fill="rgb(239,100,49)" rx="2" ry="2" />
<text  x="787.62" y="831.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteDeclContext (1 samples, 0.04%)</title><rect x="1139.3" y="821" width="0.5" height="15.0" fill="rgb(246,154,16)" rx="2" ry="2" />
<text  x="1142.33" y="831.5" ></text>
</g>
<g >
<title>clang::DeclContext::decls_begin (1 samples, 0.04%)</title><rect x="1132.3" y="597" width="0.4" height="15.0" fill="rgb(243,3,31)" rx="2" ry="2" />
<text  x="1135.28" y="607.5" ></text>
</g>
<g >
<title>clang::Sema::MarkFunctionReferenced (1 samples, 0.04%)</title><rect x="1097.5" y="885" width="0.4" height="15.0" fill="rgb(240,138,44)" rx="2" ry="2" />
<text  x="1100.47" y="895.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization (1 samples, 0.04%)</title><rect x="1139.3" y="773" width="0.5" height="15.0" fill="rgb(251,69,49)" rx="2" ry="2" />
<text  x="1142.33" y="783.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertType (1 samples, 0.04%)</title><rect x="1117.7" y="917" width="0.5" height="15.0" fill="rgb(221,98,6)" rx="2" ry="2" />
<text  x="1120.74" y="927.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1097.5" y="501" width="0.4" height="15.0" fill="rgb(232,25,5)" rx="2" ry="2" />
<text  x="1100.47" y="511.5" ></text>
</g>
<g >
<title>clang::Sema::PerformContextuallyConvertToBool (1 samples, 0.04%)</title><rect x="1134.0" y="629" width="0.5" height="15.0" fill="rgb(244,51,15)" rx="2" ry="2" />
<text  x="1137.04" y="639.5" ></text>
</g>
<g >
<title>HandleInterpreterException (1 samples, 0.04%)</title><rect x="904.0" y="805" width="0.5" height="15.0" fill="rgb(224,139,27)" rx="2" ry="2" />
<text  x="907.03" y="815.5" ></text>
</g>
<g >
<title>cling::MetaSema::actOnxCommand (1 samples, 0.04%)</title><rect x="1147.7" y="949" width="0.4" height="15.0" fill="rgb(244,195,32)" rx="2" ry="2" />
<text  x="1150.70" y="959.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit (1 samples, 0.04%)</title><rect x="1099.2" y="885" width="0.5" height="15.0" fill="rgb(244,159,25)" rx="2" ry="2" />
<text  x="1102.23" y="895.5" ></text>
</g>
<g >
<title>TBufferFile::ReadFastArray (3 samples, 0.11%)</title><rect x="667.9" y="917" width="1.3" height="15.0" fill="rgb(208,21,14)" rx="2" ry="2" />
<text  x="670.86" y="927.5" ></text>
</g>
<g >
<title>clang::DeclContext::decls_begin (1 samples, 0.04%)</title><rect x="1137.1" y="677" width="0.5" height="15.0" fill="rgb(253,194,5)" rx="2" ry="2" />
<text  x="1140.12" y="687.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertTypeForMem (1 samples, 0.04%)</title><rect x="1117.3" y="773" width="0.4" height="15.0" fill="rgb(206,129,4)" rx="2" ry="2" />
<text  x="1120.30" y="783.5" ></text>
</g>
<g >
<title>clang::Sema::FixOverloadedFunctionReference (1 samples, 0.04%)</title><rect x="1121.3" y="917" width="0.4" height="15.0" fill="rgb(243,89,34)" rx="2" ry="2" />
<text  x="1124.26" y="927.5" ></text>
</g>
<g >
<title>llvm::simplifyCFG (1 samples, 0.04%)</title><rect x="900.1" y="645" width="0.4" height="15.0" fill="rgb(224,45,48)" rx="2" ry="2" />
<text  x="903.07" y="655.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::ConstructAttributeList (1 samples, 0.04%)</title><rect x="1102.3" y="725" width="0.5" height="15.0" fill="rgb(250,130,10)" rx="2" ry="2" />
<text  x="1105.32" y="735.5" ></text>
</g>
<g >
<title>llvm::AttributeList::addParamAttribute (1 samples, 0.04%)</title><rect x="695.2" y="693" width="0.4" height="15.0" fill="rgb(247,36,28)" rx="2" ry="2" />
<text  x="698.18" y="703.5" ></text>
</g>
<g >
<title>llvm::orc::LambdaSymbolResolver&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt; const&amp;)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}&gt;::lookup (2 samples, 0.07%)</title><rect x="1145.9" y="821" width="0.9" height="15.0" fill="rgb(237,146,54)" rx="2" ry="2" />
<text  x="1148.94" y="831.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitAutoVarAlloca (1 samples, 0.04%)</title><rect x="1115.1" y="757" width="0.4" height="15.0" fill="rgb(240,113,53)" rx="2" ry="2" />
<text  x="1118.09" y="767.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (6 samples, 0.22%)</title><rect x="1109.8" y="725" width="2.6" height="15.0" fill="rgb(235,117,29)" rx="2" ry="2" />
<text  x="1112.81" y="735.5" ></text>
</g>
<g >
<title>_IO_new_popen (20 samples, 0.75%)</title><rect x="1078.5" y="853" width="8.8" height="15.0" fill="rgb(233,8,7)" rx="2" ry="2" />
<text  x="1081.52" y="863.5" ></text>
</g>
<g >
<title>llvm::BlockFrequencyInfoImpl&lt;llvm::BasicBlock&gt;::propagateMassToSuccessors (1 samples, 0.04%)</title><rect x="832.7" y="533" width="0.4" height="15.0" fill="rgb(216,205,46)" rx="2" ry="2" />
<text  x="835.65" y="543.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::GetAddrOfFunction (1 samples, 0.04%)</title><rect x="1105.4" y="709" width="0.4" height="15.0" fill="rgb(237,58,22)" rx="2" ry="2" />
<text  x="1108.40" y="719.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformCallExpr (1 samples, 0.04%)</title><rect x="1133.6" y="773" width="0.4" height="15.0" fill="rgb(214,15,47)" rx="2" ry="2" />
<text  x="1136.60" y="783.5" ></text>
</g>
<g >
<title>HandleInterpreterException (160 samples, 5.97%)</title><rect x="830.0" y="917" width="70.5" height="15.0" fill="rgb(221,208,50)" rx="2" ry="2" />
<text  x="833.01" y="927.5" >HandleI..</text>
</g>
<g >
<title>llvm::SelectionDAGISel::CodeGenAndEmitDAG (1 samples, 0.04%)</title><rect x="1147.7" y="629" width="0.4" height="15.0" fill="rgb(211,2,54)" rx="2" ry="2" />
<text  x="1150.70" y="639.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (1 samples, 0.04%)</title><rect x="1033.6" y="581" width="0.4" height="15.0" fill="rgb(211,117,48)" rx="2" ry="2" />
<text  x="1036.58" y="591.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalDefinition (1 samples, 0.04%)</title><rect x="1103.6" y="581" width="0.5" height="15.0" fill="rgb(230,104,39)" rx="2" ry="2" />
<text  x="1106.64" y="591.5" ></text>
</g>
<g >
<title>clang::Sema::BuildDeclRefExpr (2 samples, 0.07%)</title><rect x="1121.7" y="917" width="0.9" height="15.0" fill="rgb(226,72,10)" rx="2" ry="2" />
<text  x="1124.70" y="927.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformFunctionTypeParams (1 samples, 0.04%)</title><rect x="1127.0" y="869" width="0.4" height="15.0" fill="rgb(228,140,13)" rx="2" ry="2" />
<text  x="1129.99" y="879.5" ></text>
</g>
<g >
<title>_nl_make_l10nflist.localalias.0 (1 samples, 0.04%)</title><rect x="1168.8" y="885" width="0.5" height="15.0" fill="rgb(222,75,32)" rx="2" ry="2" />
<text  x="1171.85" y="895.5" ></text>
</g>
<g >
<title>TCling::InspectMembers (1 samples, 0.04%)</title><rect x="783.3" y="773" width="0.4" height="15.0" fill="rgb(253,80,5)" rx="2" ry="2" />
<text  x="786.30" y="783.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Instruction const*, llvm::MDAttachmentMap, llvm::DenseMapInfo&lt;llvm::Instruction const*&gt;, llvm::detail::DenseMapPair&lt;llvm::Instruction const*, llvm::MDAttachmentMap&gt; &gt;, llvm::Instruction const*, llvm::MDAttachmentMap, llvm::DenseMapInfo&lt;llvm::Instruction const*&gt;, llvm::detail::DenseMapPair&lt;llvm::Instruction const*, llvm::MDAttachmentMap&gt; &gt;::FindAndConstruct (1 samples, 0.04%)</title><rect x="902.7" y="549" width="0.5" height="15.0" fill="rgb(248,23,38)" rx="2" ry="2" />
<text  x="905.71" y="559.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.04%)</title><rect x="1141.1" y="853" width="0.4" height="15.0" fill="rgb(218,190,18)" rx="2" ry="2" />
<text  x="1144.09" y="863.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTSIInObjectScope (1 samples, 0.04%)</title><rect x="1135.8" y="837" width="0.4" height="15.0" fill="rgb(240,19,27)" rx="2" ry="2" />
<text  x="1138.80" y="847.5" ></text>
</g>
<g >
<title>std::vector&lt;llvm::DomainValue*, std::allocator&lt;llvm::DomainValue*&gt; &gt;::_M_fill_assign (1 samples, 0.04%)</title><rect x="841.5" y="501" width="0.4" height="15.0" fill="rgb(207,0,5)" rx="2" ry="2" />
<text  x="844.46" y="511.5" ></text>
</g>
<g >
<title>TROOT::Macro (1 samples, 0.04%)</title><rect x="1027.0" y="949" width="0.4" height="15.0" fill="rgb(244,149,19)" rx="2" ry="2" />
<text  x="1029.97" y="959.5" ></text>
</g>
<g >
<title>TListOfDataMembers::Load (1 samples, 0.04%)</title><rect x="905.4" y="565" width="0.4" height="15.0" fill="rgb(248,207,39)" rx="2" ry="2" />
<text  x="908.35" y="575.5" ></text>
</g>
<g >
<title>llvm::CallBase::hasFnAttrOnCalledFunction (1 samples, 0.04%)</title><rect x="900.9" y="597" width="0.5" height="15.0" fill="rgb(240,158,20)" rx="2" ry="2" />
<text  x="903.95" y="607.5" ></text>
</g>
<g >
<title>cling::Interpreter::executeTransaction (7 samples, 0.26%)</title><rect x="900.5" y="725" width="3.1" height="15.0" fill="rgb(209,227,40)" rx="2" ry="2" />
<text  x="903.51" y="735.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1189.1" y="725" width="0.5" height="15.0" fill="rgb(241,108,6)" rx="2" ry="2" />
<text  x="1192.12" y="735.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentScopeDeclRefExpr (1 samples, 0.04%)</title><rect x="1131.8" y="757" width="0.5" height="15.0" fill="rgb(237,62,38)" rx="2" ry="2" />
<text  x="1134.84" y="767.5" ></text>
</g>
<g >
<title>clang::Sema::FindInstantiatedDecl (1 samples, 0.04%)</title><rect x="1129.2" y="677" width="0.4" height="15.0" fill="rgb(249,125,0)" rx="2" ry="2" />
<text  x="1132.19" y="687.5" ></text>
</g>
<g >
<title>TClingDataMemberInfo::TClingDataMemberInfo (1 samples, 0.04%)</title><rect x="783.7" y="693" width="0.5" height="15.0" fill="rgb(207,227,34)" rx="2" ry="2" />
<text  x="786.74" y="703.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitRedeclarableTemplateDecl (1 samples, 0.04%)</title><rect x="1097.5" y="709" width="0.4" height="15.0" fill="rgb(226,120,11)" rx="2" ry="2" />
<text  x="1100.47" y="719.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::InfoRec, llvm::DenseMapInfo&lt;llvm::BasicBlock*&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::InfoRec&gt; &gt;, llvm::BasicBlock*, llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::InfoRec, llvm::DenseMapInfo&lt;llvm::BasicBlock*&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::InfoRec&gt; &gt;::initEmpty (1 samples, 0.04%)</title><rect x="1034.9" y="565" width="0.4" height="15.0" fill="rgb(223,146,28)" rx="2" ry="2" />
<text  x="1037.90" y="575.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::doFinalization (1 samples, 0.04%)</title><rect x="905.8" y="645" width="0.4" height="15.0" fill="rgb(222,61,40)" rx="2" ry="2" />
<text  x="908.80" y="655.5" ></text>
</g>
<g >
<title>clang::CXXRecordDecl::addedMember (1 samples, 0.04%)</title><rect x="1127.9" y="597" width="0.4" height="15.0" fill="rgb(222,127,19)" rx="2" ry="2" />
<text  x="1130.87" y="607.5" ></text>
</g>
<g >
<title>ROOT::Detail::RDF::RLoopManager::Jit (44 samples, 1.64%)</title><rect x="689.0" y="949" width="19.4" height="15.0" fill="rgb(237,133,8)" rx="2" ry="2" />
<text  x="692.01" y="959.5" ></text>
</g>
<g >
<title>clang::SavedStreamPosition::~SavedStreamPosition (1 samples, 0.04%)</title><rect x="1126.1" y="837" width="0.4" height="15.0" fill="rgb(254,99,48)" rx="2" ry="2" />
<text  x="1129.11" y="847.5" ></text>
</g>
<g >
<title>llvm::object::ELFFile&lt;llvm::object::ELFType&lt;(llvm::support::endianness)1, true&gt; &gt;::getSection (1 samples, 0.04%)</title><rect x="830.0" y="597" width="0.4" height="15.0" fill="rgb(209,219,11)" rx="2" ry="2" />
<text  x="833.01" y="607.5" ></text>
</g>
<g >
<title>xrealloc (3 samples, 0.11%)</title><rect x="16.2" y="325" width="1.3" height="15.0" fill="rgb(222,33,27)" rx="2" ry="2" />
<text  x="19.17" y="335.5" ></text>
</g>
<g >
<title>llvm::FoldingSetNodeID::operator== (1 samples, 0.04%)</title><rect x="1153.9" y="821" width="0.4" height="15.0" fill="rgb(250,139,46)" rx="2" ry="2" />
<text  x="1156.87" y="831.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.04%)</title><rect x="1149.9" y="773" width="0.4" height="15.0" fill="rgb(216,111,49)" rx="2" ry="2" />
<text  x="1152.90" y="783.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTypenameType (1 samples, 0.04%)</title><rect x="1139.3" y="645" width="0.5" height="15.0" fill="rgb(205,24,36)" rx="2" ry="2" />
<text  x="1142.33" y="655.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertTypeForMem (1 samples, 0.04%)</title><rect x="1117.7" y="581" width="0.5" height="15.0" fill="rgb(230,132,50)" rx="2" ry="2" />
<text  x="1120.74" y="591.5" ></text>
</g>
<g >
<title>clang::RedeclarableTemplateDecl::loadLazySpecializationsImpl (1 samples, 0.04%)</title><rect x="1123.0" y="693" width="0.5" height="15.0" fill="rgb(233,218,5)" rx="2" ry="2" />
<text  x="1126.02" y="703.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteDeclContext (1 samples, 0.04%)</title><rect x="1124.8" y="949" width="0.4" height="15.0" fill="rgb(222,136,23)" rx="2" ry="2" />
<text  x="1127.79" y="959.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1140.2" y="805" width="0.4" height="15.0" fill="rgb(205,167,0)" rx="2" ry="2" />
<text  x="1143.21" y="815.5" ></text>
</g>
<g >
<title>llvm::DomTreeBuilder::Verify&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt; (1 samples, 0.04%)</title><rect x="1047.7" y="613" width="0.4" height="15.0" fill="rgb(217,213,27)" rx="2" ry="2" />
<text  x="1050.68" y="623.5" ></text>
</g>
<g >
<title>llvm::GlobalStatus::analyzeGlobal (1 samples, 0.04%)</title><rect x="1065.3" y="613" width="0.4" height="15.0" fill="rgb(242,194,14)" rx="2" ry="2" />
<text  x="1068.30" y="623.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject&lt;std::shared_ptr&lt;llvm::RuntimeDyld::MemoryManager&gt; &gt;::getSymbolMaterializer(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda()#1}&gt;::_M_invoke (2 samples, 0.07%)</title><rect x="684.6" y="821" width="0.9" height="15.0" fill="rgb(235,58,51)" rx="2" ry="2" />
<text  x="687.60" y="831.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit (1 samples, 0.04%)</title><rect x="1155.2" y="597" width="0.4" height="15.0" fill="rgb(215,142,26)" rx="2" ry="2" />
<text  x="1158.19" y="607.5" ></text>
</g>
<g >
<title>clang::Sema::BuildQualifiedDeclarationNameExpr (1 samples, 0.04%)</title><rect x="1143.7" y="709" width="0.5" height="15.0" fill="rgb(235,36,9)" rx="2" ry="2" />
<text  x="1146.73" y="719.5" ></text>
</g>
<g >
<title>clang::CXXScopeSpec::Extend (1 samples, 0.04%)</title><rect x="1134.9" y="661" width="0.5" height="15.0" fill="rgb(208,99,11)" rx="2" ry="2" />
<text  x="1137.92" y="671.5" ></text>
</g>
<g >
<title>llvm::PopulateLoopsDFS&lt;llvm::BasicBlock, llvm::Loop&gt;::insertIntoLoop (1 samples, 0.04%)</title><rect x="901.8" y="613" width="0.5" height="15.0" fill="rgb(231,155,14)" rx="2" ry="2" />
<text  x="904.83" y="623.5" ></text>
</g>
<g >
<title>clang::Sema::SubstStmt (1 samples, 0.04%)</title><rect x="785.1" y="661" width="0.4" height="15.0" fill="rgb(249,26,36)" rx="2" ry="2" />
<text  x="788.06" y="671.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.04%)</title><rect x="1103.6" y="725" width="0.5" height="15.0" fill="rgb(237,132,53)" rx="2" ry="2" />
<text  x="1106.64" y="735.5" ></text>
</g>
<g >
<title>clang::Sema::CheckConvertedConstantExpression (1 samples, 0.04%)</title><rect x="1123.5" y="917" width="0.4" height="15.0" fill="rgb(253,194,20)" rx="2" ry="2" />
<text  x="1126.47" y="927.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitIgnoredExpr (1 samples, 0.04%)</title><rect x="1116.0" y="805" width="0.4" height="15.0" fill="rgb(206,83,13)" rx="2" ry="2" />
<text  x="1118.97" y="815.5" ></text>
</g>
<g >
<title>llvm::orc::SimpleCompiler::operator() (1 samples, 0.04%)</title><rect x="1159.2" y="821" width="0.4" height="15.0" fill="rgb(208,123,54)" rx="2" ry="2" />
<text  x="1162.16" y="831.5" ></text>
</g>
<g >
<title>clang::NamedDecl::getLinkageInternal (1 samples, 0.04%)</title><rect x="1103.2" y="517" width="0.4" height="15.0" fill="rgb(219,113,33)" rx="2" ry="2" />
<text  x="1106.20" y="527.5" ></text>
</g>
<g >
<title>clang::Sema::SubstInitializer (1 samples, 0.04%)</title><rect x="1133.6" y="869" width="0.4" height="15.0" fill="rgb(206,15,27)" rx="2" ry="2" />
<text  x="1136.60" y="879.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl (2 samples, 0.07%)</title><rect x="1139.8" y="901" width="0.8" height="15.0" fill="rgb(216,115,34)" rx="2" ry="2" />
<text  x="1142.77" y="911.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitFieldDecl (1 samples, 0.04%)</title><rect x="1117.3" y="469" width="0.4" height="15.0" fill="rgb(207,64,34)" rx="2" ry="2" />
<text  x="1120.30" y="479.5" ></text>
</g>
<g >
<title>llvm::orc::SimpleCompiler::operator() (1 samples, 0.04%)</title><rect x="1146.8" y="789" width="0.5" height="15.0" fill="rgb(247,200,14)" rx="2" ry="2" />
<text  x="1149.82" y="799.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1142.0" y="773" width="0.4" height="15.0" fill="rgb(240,6,53)" rx="2" ry="2" />
<text  x="1144.97" y="783.5" ></text>
</g>
<g >
<title>__run_fork_handlers (2 samples, 0.07%)</title><rect x="11.3" y="389" width="0.9" height="15.0" fill="rgb(240,80,38)" rx="2" ry="2" />
<text  x="14.32" y="399.5" ></text>
</g>
<g >
<title>llvm::MemorySSAWrapperPass::runOnFunction (1 samples, 0.04%)</title><rect x="910.2" y="725" width="0.4" height="15.0" fill="rgb(237,173,30)" rx="2" ry="2" />
<text  x="913.20" y="735.5" ></text>
</g>
<g >
<title>clang::Sema::SubstBaseSpecifiers (1 samples, 0.04%)</title><rect x="1137.1" y="869" width="0.5" height="15.0" fill="rgb(230,68,21)" rx="2" ry="2" />
<text  x="1140.12" y="879.5" ></text>
</g>
<g >
<title>clang::Sema::SubstDefaultTemplateArgumentIfAvailable (1 samples, 0.04%)</title><rect x="1127.4" y="933" width="0.5" height="15.0" fill="rgb(252,180,45)" rx="2" ry="2" />
<text  x="1130.43" y="943.5" ></text>
</g>
<g >
<title>clang::TemplateDeclInstantiator::VisitFieldDecl (1 samples, 0.04%)</title><rect x="1098.3" y="885" width="0.5" height="15.0" fill="rgb(230,139,43)" rx="2" ry="2" />
<text  x="1101.35" y="895.5" ></text>
</g>
<g >
<title>ccache (1 samples, 0.04%)</title><rect x="10.0" y="981" width="0.4" height="15.0" fill="rgb(210,84,44)" rx="2" ry="2" />
<text  x="13.00" y="991.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization (1 samples, 0.04%)</title><rect x="1139.8" y="597" width="0.4" height="15.0" fill="rgb(206,40,15)" rx="2" ry="2" />
<text  x="1142.77" y="607.5" ></text>
</g>
<g >
<title>clang::ASTRecordReader::readRecord (1 samples, 0.04%)</title><rect x="1100.6" y="677" width="0.4" height="15.0" fill="rgb(238,99,47)" rx="2" ry="2" />
<text  x="1103.55" y="687.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.04%)</title><rect x="1109.8" y="565" width="0.4" height="15.0" fill="rgb(253,6,39)" rx="2" ry="2" />
<text  x="1112.81" y="575.5" ></text>
</g>
<g >
<title>llvm::MCAssembler::relaxLEB (1 samples, 0.04%)</title><rect x="830.9" y="501" width="0.4" height="15.0" fill="rgb(226,119,24)" rx="2" ry="2" />
<text  x="833.89" y="511.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::ParseInternal (1 samples, 0.04%)</title><rect x="908.9" y="805" width="0.4" height="15.0" fill="rgb(223,16,46)" rx="2" ry="2" />
<text  x="911.88" y="815.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.04%)</title><rect x="1109.8" y="597" width="0.4" height="15.0" fill="rgb(209,189,14)" rx="2" ry="2" />
<text  x="1112.81" y="607.5" ></text>
</g>
<g >
<title>clang::ASTReader::FindExternalLexicalDecls (1 samples, 0.04%)</title><rect x="905.4" y="421" width="0.4" height="15.0" fill="rgb(247,132,40)" rx="2" ry="2" />
<text  x="908.35" y="431.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.04%)</title><rect x="830.4" y="485" width="0.5" height="15.0" fill="rgb(221,31,15)" rx="2" ry="2" />
<text  x="833.45" y="495.5" ></text>
</g>
<g >
<title>clang::Sema::LookupSpecialMember (2 samples, 0.07%)</title><rect x="1136.2" y="965" width="0.9" height="15.0" fill="rgb(237,47,38)" rx="2" ry="2" />
<text  x="1139.24" y="975.5" ></text>
</g>
<g >
<title>TLeafI::ReadBasket (9 samples, 0.34%)</title><rect x="427.3" y="837" width="3.9" height="15.0" fill="rgb(231,214,25)" rx="2" ry="2" />
<text  x="430.27" y="847.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::verifyPreservedAnalysis (1 samples, 0.04%)</title><rect x="1051.2" y="597" width="0.4" height="15.0" fill="rgb(220,20,14)" rx="2" ry="2" />
<text  x="1054.20" y="607.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::Compile (1 samples, 0.04%)</title><rect x="1027.0" y="741" width="0.4" height="15.0" fill="rgb(253,220,27)" rx="2" ry="2" />
<text  x="1029.97" y="751.5" ></text>
</g>
<g >
<title>ROOT::Detail::VecOps::RVecImpl&lt;float&gt;::operator= (6 samples, 0.22%)</title><rect x="822.1" y="917" width="2.6" height="15.0" fill="rgb(216,196,3)" rx="2" ry="2" />
<text  x="825.08" y="927.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition (2 samples, 0.07%)</title><rect x="1121.7" y="869" width="0.9" height="15.0" fill="rgb(236,153,2)" rx="2" ry="2" />
<text  x="1124.70" y="879.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1020.4" y="885" width="0.4" height="15.0" fill="rgb(231,136,49)" rx="2" ry="2" />
<text  x="1023.36" y="895.5" ></text>
</g>
<g >
<title>clang::VarDecl::getInstantiatedFromStaticDataMember (1 samples, 0.04%)</title><rect x="1141.1" y="597" width="0.4" height="15.0" fill="rgb(219,185,44)" rx="2" ry="2" />
<text  x="1144.09" y="607.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord (1 samples, 0.04%)</title><rect x="1104.5" y="805" width="0.5" height="15.0" fill="rgb(206,212,19)" rx="2" ry="2" />
<text  x="1107.52" y="815.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1171.9" y="853" width="0.5" height="15.0" fill="rgb(218,162,6)" rx="2" ry="2" />
<text  x="1174.93" y="863.5" ></text>
</g>
<g >
<title>TTree::GetLeafImpl (1 samples, 0.04%)</title><rect x="785.9" y="853" width="0.5" height="15.0" fill="rgb(247,21,39)" rx="2" ry="2" />
<text  x="788.94" y="863.5" ></text>
</g>
<g >
<title>inferAttrsFromFunctionBodies (1 samples, 0.04%)</title><rect x="890.8" y="709" width="0.5" height="15.0" fill="rgb(213,95,52)" rx="2" ry="2" />
<text  x="893.81" y="719.5" ></text>
</g>
<g >
<title>execute_command (26 samples, 0.97%)</title><rect x="10.4" y="757" width="11.5" height="15.0" fill="rgb(211,191,18)" rx="2" ry="2" />
<text  x="13.44" y="767.5" ></text>
</g>
<g >
<title>ldd (31 samples, 1.16%)</title><rect x="10.4" y="981" width="13.7" height="15.0" fill="rgb(210,106,27)" rx="2" ry="2" />
<text  x="13.44" y="991.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetType (1 samples, 0.04%)</title><rect x="1100.1" y="901" width="0.5" height="15.0" fill="rgb(232,125,50)" rx="2" ry="2" />
<text  x="1103.11" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.04%)</title><rect x="1115.5" y="693" width="0.5" height="15.0" fill="rgb(233,222,11)" rx="2" ry="2" />
<text  x="1118.53" y="703.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (1 samples, 0.04%)</title><rect x="1123.9" y="725" width="0.4" height="15.0" fill="rgb(210,140,20)" rx="2" ry="2" />
<text  x="1126.91" y="735.5" ></text>
</g>
<g >
<title>operator() (1 samples, 0.04%)</title><rect x="904.9" y="933" width="0.5" height="15.0" fill="rgb(223,99,9)" rx="2" ry="2" />
<text  x="907.91" y="943.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::CompleteRedeclChain (1 samples, 0.04%)</title><rect x="1103.2" y="453" width="0.4" height="15.0" fill="rgb(215,103,40)" rx="2" ry="2" />
<text  x="1106.20" y="463.5" ></text>
</g>
<g >
<title>llvm::InstructionCombiningPass::runOnFunction (1 samples, 0.04%)</title><rect x="1027.4" y="645" width="0.4" height="15.0" fill="rgb(217,164,28)" rx="2" ry="2" />
<text  x="1030.41" y="655.5" ></text>
</g>
<g >
<title>llvm::orc::JITSymbolResolverAdapter::lookup (1 samples, 0.04%)</title><rect x="1146.8" y="853" width="0.5" height="15.0" fill="rgb(206,224,37)" rx="2" ry="2" />
<text  x="1149.82" y="863.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddTemplateArgument (1 samples, 0.04%)</title><rect x="1140.2" y="597" width="0.4" height="15.0" fill="rgb(238,118,10)" rx="2" ry="2" />
<text  x="1143.21" y="607.5" ></text>
</g>
<g >
<title>llvm::AllocaInst::AllocaInst (1 samples, 0.04%)</title><rect x="1106.7" y="613" width="0.5" height="15.0" fill="rgb(218,1,33)" rx="2" ry="2" />
<text  x="1109.72" y="623.5" ></text>
</g>
<g >
<title>TCling::DataMemberInfo_Factory (1 samples, 0.04%)</title><rect x="905.4" y="549" width="0.4" height="15.0" fill="rgb(219,159,8)" rx="2" ry="2" />
<text  x="908.35" y="559.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization (1 samples, 0.04%)</title><rect x="1129.6" y="789" width="0.5" height="15.0" fill="rgb(247,87,12)" rx="2" ry="2" />
<text  x="1132.63" y="799.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateArgument (1 samples, 0.04%)</title><rect x="1137.6" y="837" width="0.4" height="15.0" fill="rgb(213,108,31)" rx="2" ry="2" />
<text  x="1140.57" y="847.5" ></text>
</g>
<g >
<title>clang::Sema::LookupQualifiedName (1 samples, 0.04%)</title><rect x="1118.2" y="853" width="0.4" height="15.0" fill="rgb(233,137,31)" rx="2" ry="2" />
<text  x="1121.18" y="863.5" ></text>
</g>
<g >
<title>[libc-2.28.so] (1 samples, 0.04%)</title><rect x="1098.8" y="965" width="0.4" height="15.0" fill="rgb(247,56,46)" rx="2" ry="2" />
<text  x="1101.79" y="975.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::getMulExpr (1 samples, 0.04%)</title><rect x="909.8" y="613" width="0.4" height="15.0" fill="rgb(216,102,31)" rx="2" ry="2" />
<text  x="912.76" y="623.5" ></text>
</g>
<g >
<title>llvm::AAResultsWrapperPass::runOnFunction (2 samples, 0.07%)</title><rect x="1032.3" y="629" width="0.8" height="15.0" fill="rgb(245,66,15)" rx="2" ry="2" />
<text  x="1035.26" y="639.5" ></text>
</g>
<g >
<title>eliminateTailRecursion (1 samples, 0.04%)</title><rect x="1031.8" y="629" width="0.5" height="15.0" fill="rgb(243,164,26)" rx="2" ry="2" />
<text  x="1034.81" y="639.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (1 samples, 0.04%)</title><rect x="1027.0" y="677" width="0.4" height="15.0" fill="rgb(236,119,31)" rx="2" ry="2" />
<text  x="1029.97" y="687.5" ></text>
</g>
<g >
<title>ROOT::VecOps::RVec&lt;float&gt;::RVec (51 samples, 1.90%)</title><rect x="786.8" y="965" width="22.5" height="15.0" fill="rgb(214,160,21)" rx="2" ry="2" />
<text  x="789.83" y="975.5" >R..</text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;, void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;::LookupBucketFor&lt;void const*&gt; (1 samples, 0.04%)</title><rect x="1033.6" y="565" width="0.4" height="15.0" fill="rgb(241,122,13)" rx="2" ry="2" />
<text  x="1036.58" y="575.5" ></text>
</g>
<g >
<title>clang::ASTContext::getTypeInfo (1 samples, 0.04%)</title><rect x="1101.9" y="725" width="0.4" height="15.0" fill="rgb(231,141,3)" rx="2" ry="2" />
<text  x="1104.87" y="735.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1139.3" y="693" width="0.5" height="15.0" fill="rgb(206,109,17)" rx="2" ry="2" />
<text  x="1142.33" y="703.5" ></text>
</g>
<g >
<title>runOnFunction (1 samples, 0.04%)</title><rect x="707.1" y="757" width="0.4" height="15.0" fill="rgb(241,64,1)" rx="2" ry="2" />
<text  x="710.07" y="767.5" ></text>
</g>
<g >
<title>llvm::LibCallSimplifier::optimizeCall (1 samples, 0.04%)</title><rect x="892.6" y="597" width="0.4" height="15.0" fill="rgb(229,147,49)" rx="2" ry="2" />
<text  x="895.58" y="607.5" ></text>
</g>
<g >
<title>llvm::isDereferenceableAndAlignedPointer (1 samples, 0.04%)</title><rect x="1149.0" y="549" width="0.5" height="15.0" fill="rgb(207,130,14)" rx="2" ry="2" />
<text  x="1152.02" y="559.5" ></text>
</g>
<g >
<title>clang::Sema::SubstExpr (1 samples, 0.04%)</title><rect x="1141.1" y="885" width="0.4" height="15.0" fill="rgb(252,40,17)" rx="2" ry="2" />
<text  x="1144.09" y="895.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTBAA::getBaseTypeInfo (1 samples, 0.04%)</title><rect x="1103.2" y="773" width="0.4" height="15.0" fill="rgb(247,162,27)" rx="2" ry="2" />
<text  x="1106.20" y="783.5" ></text>
</g>
<g >
<title>TCling::ProcessLineSynch (1 samples, 0.04%)</title><rect x="903.6" y="821" width="0.4" height="15.0" fill="rgb(222,186,2)" rx="2" ry="2" />
<text  x="906.59" y="831.5" ></text>
</g>
<g >
<title>llvm::X86FrameLowering::hasFP (1 samples, 0.04%)</title><rect x="908.4" y="549" width="0.5" height="15.0" fill="rgb(245,123,22)" rx="2" ry="2" />
<text  x="911.44" y="559.5" ></text>
</g>
<g >
<title>llvm::object::ELFFile&lt;llvm::object::ELFType&lt;(llvm::support::endianness)1, true&gt; &gt;::getEntry&lt;llvm::object::Elf_Sym_Impl&lt;llvm::object::ELFType&lt;(llvm::support::endianness)1, true&gt; &gt; &gt; (1 samples, 0.04%)</title><rect x="830.0" y="613" width="0.4" height="15.0" fill="rgb(252,134,35)" rx="2" ry="2" />
<text  x="833.01" y="623.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="10.9" y="373" width="0.4" height="15.0" fill="rgb(252,90,22)" rx="2" ry="2" />
<text  x="13.88" y="383.5" ></text>
</g>
<g >
<title>execute_command_internal (39 samples, 1.46%)</title><rect x="1172.4" y="885" width="17.2" height="15.0" fill="rgb(224,139,44)" rx="2" ry="2" />
<text  x="1175.37" y="895.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (1 samples, 0.04%)</title><rect x="1051.2" y="549" width="0.4" height="15.0" fill="rgb(217,153,23)" rx="2" ry="2" />
<text  x="1054.20" y="559.5" ></text>
</g>
<g >
<title>llvm::orc::LambdaSymbolResolver&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt; const&amp;)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}&gt;::lookup (1 samples, 0.04%)</title><rect x="1147.7" y="789" width="0.4" height="15.0" fill="rgb(239,211,7)" rx="2" ry="2" />
<text  x="1150.70" y="799.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject&lt;std::shared_ptr&lt;llvm::RuntimeDyld::MemoryManager&gt; &gt;::getSymbolMaterializer(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda()#1}&gt;::_M_invoke (1 samples, 0.04%)</title><rect x="1146.8" y="917" width="0.5" height="15.0" fill="rgb(224,111,45)" rx="2" ry="2" />
<text  x="1149.82" y="927.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalDefinition (1 samples, 0.04%)</title><rect x="1113.3" y="837" width="0.5" height="15.0" fill="rgb(227,136,25)" rx="2" ry="2" />
<text  x="1116.33" y="847.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveExternalSymbols (7 samples, 0.26%)</title><rect x="905.8" y="757" width="3.1" height="15.0" fill="rgb(247,54,48)" rx="2" ry="2" />
<text  x="908.80" y="767.5" ></text>
</g>
<g >
<title>clang::ASTContext::getASTRecordLayout (1 samples, 0.04%)</title><rect x="1123.5" y="725" width="0.4" height="15.0" fill="rgb(243,151,40)" rx="2" ry="2" />
<text  x="1126.47" y="735.5" ></text>
</g>
<g >
<title>clang::Sema::ActOnExprStmt (1 samples, 0.04%)</title><rect x="1134.5" y="757" width="0.4" height="15.0" fill="rgb(246,133,51)" rx="2" ry="2" />
<text  x="1137.48" y="767.5" ></text>
</g>
<g >
<title>__init_misc (1 samples, 0.04%)</title><rect x="1171.9" y="901" width="0.5" height="15.0" fill="rgb(211,226,6)" rx="2" ry="2" />
<text  x="1174.93" y="911.5" ></text>
</g>
<g >
<title>llvm::AAResultsWrapperPass::runOnFunction (1 samples, 0.04%)</title><rect x="1048.1" y="613" width="0.5" height="15.0" fill="rgb(247,12,5)" rx="2" ry="2" />
<text  x="1051.12" y="623.5" ></text>
</g>
<g >
<title>do_lookup_x (3 samples, 0.11%)</title><rect x="1169.7" y="869" width="1.4" height="15.0" fill="rgb(215,137,39)" rx="2" ry="2" />
<text  x="1172.73" y="879.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (1 samples, 0.04%)</title><rect x="1139.8" y="629" width="0.4" height="15.0" fill="rgb(227,104,37)" rx="2" ry="2" />
<text  x="1142.77" y="639.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateArgument (2 samples, 0.07%)</title><rect x="1130.1" y="821" width="0.9" height="15.0" fill="rgb(215,99,30)" rx="2" ry="2" />
<text  x="1133.07" y="831.5" ></text>
</g>
<g >
<title>clang::Parser::isCXXTypeId (1 samples, 0.04%)</title><rect x="1118.2" y="933" width="0.4" height="15.0" fill="rgb(223,15,2)" rx="2" ry="2" />
<text  x="1121.18" y="943.5" ></text>
</g>
<g >
<title>execute_command_internal (4 samples, 0.15%)</title><rect x="22.3" y="341" width="1.8" height="15.0" fill="rgb(223,82,33)" rx="2" ry="2" />
<text  x="25.34" y="351.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::SelectAllBasicBlocks (1 samples, 0.04%)</title><rect x="1154.7" y="949" width="0.5" height="15.0" fill="rgb(234,180,42)" rx="2" ry="2" />
<text  x="1157.75" y="959.5" ></text>
</g>
<g >
<title>clang::Preprocessor::HandleDefineDirective (1 samples, 0.04%)</title><rect x="1071.0" y="725" width="0.5" height="15.0" fill="rgb(216,47,22)" rx="2" ry="2" />
<text  x="1074.03" y="735.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock const*, llvm::Loop*, llvm::DenseMapInfo&lt;llvm::BasicBlock const*&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock const*, llvm::Loop*&gt; &gt;, llvm::BasicBlock const*, llvm::Loop*, llvm::DenseMapInfo&lt;llvm::BasicBlock const*&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock const*, llvm::Loop*&gt; &gt;::LookupBucketFor&lt;llvm::BasicBlock const*&gt; (1 samples, 0.04%)</title><rect x="901.8" y="597" width="0.5" height="15.0" fill="rgb(229,147,22)" rx="2" ry="2" />
<text  x="904.83" y="607.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;std::add_pointer, (anonymous namespace)::AggExprEmitter, void&gt;::Visit (1 samples, 0.04%)</title><rect x="1106.7" y="805" width="0.5" height="15.0" fill="rgb(206,168,15)" rx="2" ry="2" />
<text  x="1109.72" y="815.5" ></text>
</g>
<g >
<title>llvm::MachineFunctionPass::runOnFunction (1 samples, 0.04%)</title><rect x="785.5" y="789" width="0.4" height="15.0" fill="rgb(210,90,0)" rx="2" ry="2" />
<text  x="788.50" y="799.5" ></text>
</g>
<g >
<title>llvm::AttributeList::getImpl (1 samples, 0.04%)</title><rect x="1108.0" y="581" width="0.5" height="15.0" fill="rgb(214,144,9)" rx="2" ry="2" />
<text  x="1111.04" y="591.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;std::add_pointer, (anonymous namespace)::ScalarExprEmitter, llvm::Value*&gt;::Visit (1 samples, 0.04%)</title><rect x="1102.3" y="853" width="0.5" height="15.0" fill="rgb(236,126,13)" rx="2" ry="2" />
<text  x="1105.32" y="863.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1093.9" y="645" width="0.5" height="15.0" fill="rgb(213,166,19)" rx="2" ry="2" />
<text  x="1096.94" y="655.5" ></text>
</g>
<g >
<title>clang::Sema::PerformPendingInstantiations (1 samples, 0.04%)</title><rect x="785.1" y="725" width="0.4" height="15.0" fill="rgb(220,67,33)" rx="2" ry="2" />
<text  x="788.06" y="735.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitRedeclarable&lt;clang::RedeclarableTemplateDecl&gt; (1 samples, 0.04%)</title><rect x="1132.7" y="773" width="0.5" height="15.0" fill="rgb(216,172,0)" rx="2" ry="2" />
<text  x="1135.72" y="783.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1167.5" y="869" width="0.5" height="15.0" fill="rgb(221,54,22)" rx="2" ry="2" />
<text  x="1170.53" y="879.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;inferAttrsFromFunctionBodies(llvm::SmallSetVector&lt;llvm::Function*, 8u&gt; const&amp;)::{lambda(llvm::Instruction&amp;)#2}&gt;::_M_manager (1 samples, 0.04%)</title><rect x="690.8" y="773" width="0.4" height="15.0" fill="rgb(236,89,48)" rx="2" ry="2" />
<text  x="693.77" y="783.5" ></text>
</g>
<g >
<title>clang::Sema::ActOnEndOfTranslationUnitFragment (1 samples, 0.04%)</title><rect x="785.1" y="837" width="0.4" height="15.0" fill="rgb(233,139,7)" rx="2" ry="2" />
<text  x="788.06" y="847.5" ></text>
</g>
<g >
<title>llvm::object::ELFObjectFile&lt;llvm::object::ELFType&lt;(llvm::support::endianness)1, true&gt; &gt;::section_end (5 samples, 0.19%)</title><rect x="886.0" y="517" width="2.2" height="15.0" fill="rgb(254,167,33)" rx="2" ry="2" />
<text  x="888.97" y="527.5" ></text>
</g>
<g >
<title>llvm::computeKnownBits (1 samples, 0.04%)</title><rect x="696.1" y="677" width="0.4" height="15.0" fill="rgb(237,39,34)" rx="2" ry="2" />
<text  x="699.06" y="687.5" ></text>
</g>
<g >
<title>llvm::ReassociatePass::run (1 samples, 0.04%)</title><rect x="895.2" y="693" width="0.5" height="15.0" fill="rgb(253,120,42)" rx="2" ry="2" />
<text  x="898.22" y="703.5" ></text>
</g>
<g >
<title>TApplication::ProcessLine (1 samples, 0.04%)</title><rect x="1027.4" y="933" width="0.4" height="15.0" fill="rgb(225,51,47)" rx="2" ry="2" />
<text  x="1030.41" y="943.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::getAddrAndTypeOfCXXStructor (1 samples, 0.04%)</title><rect x="1115.5" y="805" width="0.5" height="15.0" fill="rgb(207,20,45)" rx="2" ry="2" />
<text  x="1118.53" y="815.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTBAA::getAccessInfo (1 samples, 0.04%)</title><rect x="1101.4" y="805" width="0.5" height="15.0" fill="rgb(231,27,32)" rx="2" ry="2" />
<text  x="1104.43" y="815.5" ></text>
</g>
<g >
<title>clang::ASTReader::FindExternalLexicalDecls (1 samples, 0.04%)</title><rect x="786.4" y="229" width="0.4" height="15.0" fill="rgb(210,221,10)" rx="2" ry="2" />
<text  x="789.39" y="239.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveExternalSymbols (2 samples, 0.07%)</title><rect x="1144.2" y="885" width="0.9" height="15.0" fill="rgb(247,224,30)" rx="2" ry="2" />
<text  x="1147.17" y="895.5" ></text>
</g>
<g >
<title>clang::TemplateDeclInstantiator::VisitFunctionTemplateDecl (1 samples, 0.04%)</title><rect x="1131.4" y="741" width="0.4" height="15.0" fill="rgb(211,210,28)" rx="2" ry="2" />
<text  x="1134.40" y="751.5" ></text>
</g>
<g >
<title>getInterestingTagDecl (1 samples, 0.04%)</title><rect x="1130.5" y="613" width="0.5" height="15.0" fill="rgb(221,190,33)" rx="2" ry="2" />
<text  x="1133.52" y="623.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::UpdateDecl (1 samples, 0.04%)</title><rect x="1118.2" y="709" width="0.4" height="15.0" fill="rgb(226,125,21)" rx="2" ry="2" />
<text  x="1121.18" y="719.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTSIInObjectScope (1 samples, 0.04%)</title><rect x="1124.3" y="853" width="0.5" height="15.0" fill="rgb(212,219,30)" rx="2" ry="2" />
<text  x="1127.35" y="863.5" ></text>
</g>
<g >
<title>TryMoveInitialization (1 samples, 0.04%)</title><rect x="1097.5" y="965" width="0.4" height="15.0" fill="rgb(253,168,10)" rx="2" ry="2" />
<text  x="1100.47" y="975.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::getMulExpr (1 samples, 0.04%)</title><rect x="909.8" y="629" width="0.4" height="15.0" fill="rgb(243,65,15)" rx="2" ry="2" />
<text  x="912.76" y="639.5" ></text>
</g>
<g >
<title>llvm::orc::LambdaSymbolResolver&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt; const&amp;)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}&gt;::lookup (2 samples, 0.07%)</title><rect x="1144.2" y="853" width="0.9" height="15.0" fill="rgb(235,162,37)" rx="2" ry="2" />
<text  x="1147.17" y="863.5" ></text>
</g>
<g >
<title>clang::DeclContext::lookup (1 samples, 0.04%)</title><rect x="1129.6" y="693" width="0.5" height="15.0" fill="rgb(232,131,28)" rx="2" ry="2" />
<text  x="1132.63" y="703.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::FindExternalLexicalDecls (1 samples, 0.04%)</title><rect x="904.5" y="837" width="0.4" height="15.0" fill="rgb(221,195,38)" rx="2" ry="2" />
<text  x="907.47" y="847.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="21.9" y="149" width="0.4" height="15.0" fill="rgb(242,179,8)" rx="2" ry="2" />
<text  x="24.90" y="159.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1169.3" y="789" width="0.4" height="15.0" fill="rgb(226,224,11)" rx="2" ry="2" />
<text  x="1172.29" y="799.5" ></text>
</g>
<g >
<title>llvm::X86TargetMachine::getSubtargetImpl (1 samples, 0.04%)</title><rect x="1148.1" y="533" width="0.5" height="15.0" fill="rgb(250,150,17)" rx="2" ry="2" />
<text  x="1151.14" y="543.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::SmallDenseMap&lt;clang::DeclarationName, clang::StoredDeclsList, 4u, llvm::DenseMapInfo&lt;clang::DeclarationName&gt;, llvm::detail::DenseMapPair&lt;clang::DeclarationName, clang::StoredDeclsList&gt; &gt;, clang::DeclarationName, clang::StoredDeclsList, llvm::DenseMapInfo&lt;clang::DeclarationName&gt;, llvm::detail::DenseMapPair&lt;clang::DeclarationName, clang::StoredDeclsList&gt; &gt;::LookupBucketFor&lt;clang::DeclarationName&gt; (1 samples, 0.04%)</title><rect x="1129.6" y="629" width="0.5" height="15.0" fill="rgb(205,88,7)" rx="2" ry="2" />
<text  x="1132.63" y="639.5" ></text>
</g>
<g >
<title>__GI___fork (3 samples, 0.11%)</title><rect x="10.9" y="405" width="1.3" height="15.0" fill="rgb(227,98,48)" rx="2" ry="2" />
<text  x="13.88" y="415.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType (1 samples, 0.04%)</title><rect x="1138.9" y="853" width="0.4" height="15.0" fill="rgb(239,59,34)" rx="2" ry="2" />
<text  x="1141.89" y="863.5" ></text>
</g>
<g >
<title>llvm::DenseMap&lt;llvm::PoisoningVH&lt;llvm::BasicBlock&gt;, llvm::SmallPtrSet&lt;llvm::Value*, 4u&gt;, llvm::DenseMapInfo&lt;llvm::PoisoningVH&lt;llvm::BasicBlock&gt; &gt;, llvm::detail::DenseMapPair&lt;llvm::PoisoningVH&lt;llvm::BasicBlock&gt;, llvm::SmallPtrSet&lt;llvm::Value*, 4u&gt; &gt; &gt;::grow (1 samples, 0.04%)</title><rect x="896.5" y="661" width="0.5" height="15.0" fill="rgb(205,158,14)" rx="2" ry="2" />
<text  x="899.54" y="671.5" ></text>
</g>
<g >
<title>_dl_start (1 samples, 0.04%)</title><rect x="10.0" y="949" width="0.4" height="15.0" fill="rgb(231,109,53)" rx="2" ry="2" />
<text  x="13.00" y="959.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.04%)</title><rect x="1149.9" y="677" width="0.4" height="15.0" fill="rgb(209,167,49)" rx="2" ry="2" />
<text  x="1152.90" y="687.5" ></text>
</g>
<g >
<title>llvm::sroa::SROALegacyPass::runOnFunction (2 samples, 0.07%)</title><rect x="1029.2" y="597" width="0.9" height="15.0" fill="rgb(245,107,13)" rx="2" ry="2" />
<text  x="1032.17" y="607.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject&lt;std::shared_ptr&lt;llvm::RuntimeDyld::MemoryManager&gt; &gt;::getSymbolMaterializer(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda()#1}&gt;::_M_invoke (1 samples, 0.04%)</title><rect x="1150.8" y="885" width="0.4" height="15.0" fill="rgb(220,116,41)" rx="2" ry="2" />
<text  x="1153.78" y="895.5" ></text>
</g>
<g >
<title>clang::Sema::SubstParmVarDecl (1 samples, 0.04%)</title><rect x="1127.0" y="853" width="0.4" height="15.0" fill="rgb(229,84,48)" rx="2" ry="2" />
<text  x="1129.99" y="863.5" ></text>
</g>
<g >
<title>clang::VarDecl::checkInitIsICE (1 samples, 0.04%)</title><rect x="1125.2" y="837" width="0.5" height="15.0" fill="rgb(249,18,7)" rx="2" ry="2" />
<text  x="1128.23" y="847.5" ></text>
</g>
<g >
<title>[sed] (1 samples, 0.04%)</title><rect x="1168.8" y="965" width="0.5" height="15.0" fill="rgb(233,94,21)" rx="2" ry="2" />
<text  x="1171.85" y="975.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitAggExpr (1 samples, 0.04%)</title><rect x="1101.0" y="885" width="0.4" height="15.0" fill="rgb(249,21,49)" rx="2" ry="2" />
<text  x="1103.99" y="895.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadCXXBaseSpecifier (1 samples, 0.04%)</title><rect x="1140.6" y="805" width="0.5" height="15.0" fill="rgb(211,116,39)" rx="2" ry="2" />
<text  x="1143.65" y="815.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGBuilder::visitInvoke (1 samples, 0.04%)</title><rect x="907.6" y="533" width="0.4" height="15.0" fill="rgb(209,130,16)" rx="2" ry="2" />
<text  x="910.56" y="543.5" ></text>
</g>
<g >
<title>CheckConvertedConstantExpression (1 samples, 0.04%)</title><rect x="1123.5" y="901" width="0.4" height="15.0" fill="rgb(206,37,51)" rx="2" ry="2" />
<text  x="1126.47" y="911.5" ></text>
</g>
<g >
<title>clang::Sema::ActOnEndOfTranslationUnitFragment (1 samples, 0.04%)</title><rect x="908.9" y="757" width="0.4" height="15.0" fill="rgb(205,118,4)" rx="2" ry="2" />
<text  x="911.88" y="767.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;std::add_pointer, (anonymous namespace)::ScalarExprEmitter, llvm::Value*&gt;::Visit (1 samples, 0.04%)</title><rect x="1138.0" y="965" width="0.4" height="15.0" fill="rgb(235,157,12)" rx="2" ry="2" />
<text  x="1141.01" y="975.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::setGlobalVisibility (1 samples, 0.04%)</title><rect x="1105.8" y="677" width="0.5" height="15.0" fill="rgb(210,90,24)" rx="2" ry="2" />
<text  x="1108.84" y="687.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl (1 samples, 0.04%)</title><rect x="1142.9" y="821" width="0.4" height="15.0" fill="rgb(214,5,44)" rx="2" ry="2" />
<text  x="1145.85" y="831.5" ></text>
</g>
<g >
<title>llvm::AttributeList::addAttributes (1 samples, 0.04%)</title><rect x="1111.1" y="613" width="0.5" height="15.0" fill="rgb(249,56,3)" rx="2" ry="2" />
<text  x="1114.13" y="623.5" ></text>
</g>
<g >
<title>llvm::getOrEnforceKnownAlignment (1 samples, 0.04%)</title><rect x="893.9" y="629" width="0.4" height="15.0" fill="rgb(209,34,1)" rx="2" ry="2" />
<text  x="896.90" y="639.5" ></text>
</g>
<g >
<title>clang::Type::getAs&lt;clang::FunctionProtoType&gt; (1 samples, 0.04%)</title><rect x="1136.7" y="901" width="0.4" height="15.0" fill="rgb(229,95,26)" rx="2" ry="2" />
<text  x="1139.68" y="911.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnModule (79 samples, 2.95%)</title><rect x="831.8" y="613" width="34.8" height="15.0" fill="rgb(210,168,40)" rx="2" ry="2" />
<text  x="834.77" y="623.5" >ll..</text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitStmt (1 samples, 0.04%)</title><rect x="1115.1" y="853" width="0.4" height="15.0" fill="rgb(246,43,2)" rx="2" ry="2" />
<text  x="1118.09" y="863.5" ></text>
</g>
<g >
<title>TLeafF::ReadBasket (35 samples, 1.31%)</title><rect x="669.2" y="933" width="15.4" height="15.0" fill="rgb(217,216,43)" rx="2" ry="2" />
<text  x="672.18" y="943.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddTemplateArgument (1 samples, 0.04%)</title><rect x="1131.0" y="405" width="0.4" height="15.0" fill="rgb(240,15,41)" rx="2" ry="2" />
<text  x="1133.96" y="415.5" ></text>
</g>
<g >
<title>llvm::TargetLibraryInfoImpl::getLibFunc (1 samples, 0.04%)</title><rect x="897.9" y="613" width="0.4" height="15.0" fill="rgb(254,229,44)" rx="2" ry="2" />
<text  x="900.86" y="623.5" ></text>
</g>
<g >
<title>execute_command (4 samples, 0.15%)</title><rect x="22.3" y="709" width="1.8" height="15.0" fill="rgb(218,67,50)" rx="2" ry="2" />
<text  x="25.34" y="719.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyld::finalizeWithMemoryManagerLocking (1 samples, 0.04%)</title><rect x="1149.5" y="693" width="0.4" height="15.0" fill="rgb(220,74,45)" rx="2" ry="2" />
<text  x="1152.46" y="703.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke (1 samples, 0.04%)</title><rect x="1159.2" y="837" width="0.4" height="15.0" fill="rgb(238,216,50)" rx="2" ry="2" />
<text  x="1162.16" y="847.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::runStaticInitializersOnce (1 samples, 0.04%)</title><rect x="1027.0" y="693" width="0.4" height="15.0" fill="rgb(207,70,35)" rx="2" ry="2" />
<text  x="1029.97" y="703.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitEnumConstantDecl (1 samples, 0.04%)</title><rect x="786.4" y="165" width="0.4" height="15.0" fill="rgb(241,159,50)" rx="2" ry="2" />
<text  x="789.39" y="175.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::getAddExpr (1 samples, 0.04%)</title><rect x="1159.2" y="565" width="0.4" height="15.0" fill="rgb(246,45,24)" rx="2" ry="2" />
<text  x="1162.16" y="575.5" ></text>
</g>
<g >
<title>TStreamerInfoActions::GenericReadAction (1 samples, 0.04%)</title><rect x="905.4" y="773" width="0.4" height="15.0" fill="rgb(216,87,44)" rx="2" ry="2" />
<text  x="908.35" y="783.5" ></text>
</g>
<g >
<title>llvm::FoldingSet&lt;clang::NestedNameSpecifier&gt;::NodeEquals (1 samples, 0.04%)</title><rect x="1134.9" y="581" width="0.5" height="15.0" fill="rgb(219,49,47)" rx="2" ry="2" />
<text  x="1137.92" y="591.5" ></text>
</g>
<g >
<title>TChain::CheckTObjectHashConsistency (1 samples, 0.04%)</title><rect x="786.4" y="741" width="0.4" height="15.0" fill="rgb(229,104,30)" rx="2" ry="2" />
<text  x="789.39" y="751.5" ></text>
</g>
<g >
<title>llvm::TargetLibraryInfoImpl::getLibFunc (1 samples, 0.04%)</title><rect x="1150.3" y="581" width="0.5" height="15.0" fill="rgb(229,68,16)" rx="2" ry="2" />
<text  x="1153.34" y="591.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformNestedNameSpecifierLoc (1 samples, 0.04%)</title><rect x="1138.4" y="901" width="0.5" height="15.0" fill="rgb(220,135,20)" rx="2" ry="2" />
<text  x="1141.45" y="911.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (1 samples, 0.04%)</title><rect x="1159.2" y="773" width="0.4" height="15.0" fill="rgb(206,40,50)" rx="2" ry="2" />
<text  x="1162.16" y="783.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.04%)</title><rect x="21.9" y="613" width="0.4" height="15.0" fill="rgb(205,61,42)" rx="2" ry="2" />
<text  x="24.90" y="623.5" ></text>
</g>
<g >
<title>?? (9 samples, 0.34%)</title><rect x="663.9" y="917" width="4.0" height="15.0" fill="rgb(208,88,36)" rx="2" ry="2" />
<text  x="666.89" y="927.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::AssertingVH&lt;llvm::Instruction&gt;, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo&lt;llvm::AssertingVH&lt;llvm::Instruction&gt; &gt;, llvm::detail::DenseSetPair&lt;llvm::AssertingVH&lt;llvm::Instruction&gt; &gt; &gt;, llvm::AssertingVH&lt;llvm::Instruction&gt;, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo&lt;llvm::AssertingVH&lt;llvm::Instruction&gt; &gt;, llvm::detail::DenseSetPair&lt;llvm::AssertingVH&lt;llvm::Instruction&gt; &gt; &gt;::destroyAll (1 samples, 0.04%)</title><rect x="694.3" y="757" width="0.4" height="15.0" fill="rgb(216,143,19)" rx="2" ry="2" />
<text  x="697.29" y="767.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.26%)</title><rect x="1080.7" y="773" width="3.1" height="15.0" fill="rgb(216,122,30)" rx="2" ry="2" />
<text  x="1083.72" y="783.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1093.9" y="661" width="0.5" height="15.0" fill="rgb(249,74,42)" rx="2" ry="2" />
<text  x="1096.94" y="671.5" ></text>
</g>
<g >
<title>clang::Sema::SubstBaseSpecifiers (2 samples, 0.07%)</title><rect x="1131.8" y="933" width="0.9" height="15.0" fill="rgb(216,220,32)" rx="2" ry="2" />
<text  x="1134.84" y="943.5" ></text>
</g>
<g >
<title>_dlerror_run (2 samples, 0.07%)</title><rect x="1093.9" y="885" width="0.9" height="15.0" fill="rgb(215,219,6)" rx="2" ry="2" />
<text  x="1096.94" y="895.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateArgument (1 samples, 0.04%)</title><rect x="1135.8" y="805" width="0.4" height="15.0" fill="rgb(239,28,15)" rx="2" ry="2" />
<text  x="1138.80" y="815.5" ></text>
</g>
<g >
<title>clang::Sema::SubstType (1 samples, 0.04%)</title><rect x="1127.0" y="837" width="0.4" height="15.0" fill="rgb(247,25,46)" rx="2" ry="2" />
<text  x="1129.99" y="847.5" ></text>
</g>
<g >
<title>dl_open_worker (2 samples, 0.07%)</title><rect x="1093.9" y="789" width="0.9" height="15.0" fill="rgb(231,103,0)" rx="2" ry="2" />
<text  x="1096.94" y="799.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.04%)</title><rect x="1103.6" y="629" width="0.5" height="15.0" fill="rgb(247,69,36)" rx="2" ry="2" />
<text  x="1106.64" y="639.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentScopeDeclRefExpr (1 samples, 0.04%)</title><rect x="1143.7" y="725" width="0.5" height="15.0" fill="rgb(251,223,12)" rx="2" ry="2" />
<text  x="1146.73" y="735.5" ></text>
</g>
<g >
<title>llvm::Pass::getPassName (1 samples, 0.04%)</title><rect x="706.6" y="757" width="0.5" height="15.0" fill="rgb(219,138,5)" rx="2" ry="2" />
<text  x="709.63" y="767.5" ></text>
</g>
<g >
<title>llvm::MemorySSA::buildMemorySSA (1 samples, 0.04%)</title><rect x="910.2" y="693" width="0.4" height="15.0" fill="rgb(222,89,49)" rx="2" ry="2" />
<text  x="913.20" y="703.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCastLValue (1 samples, 0.04%)</title><rect x="1101.9" y="933" width="0.4" height="15.0" fill="rgb(208,184,48)" rx="2" ry="2" />
<text  x="1104.87" y="943.5" ></text>
</g>
<g >
<title>[libz.so.1.2.11] (416 samples, 15.53%)</title><rect x="450.2" y="837" width="183.3" height="15.0" fill="rgb(229,87,52)" rx="2" ry="2" />
<text  x="453.19" y="847.5" >[libz.so.1.2.11]</text>
</g>
<g >
<title>llvm::InstCombiner::visitStoreInst (2 samples, 0.07%)</title><rect x="894.3" y="645" width="0.9" height="15.0" fill="rgb(246,219,47)" rx="2" ry="2" />
<text  x="897.34" y="655.5" ></text>
</g>
<g >
<title>ROOT::Internal::TTreeReaderValueBase::GetAddress (217 samples, 8.10%)</title><rect x="336.1" y="917" width="95.6" height="15.0" fill="rgb(206,143,21)" rx="2" ry="2" />
<text  x="339.06" y="927.5" >ROOT::Inter..</text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl (1 samples, 0.04%)</title><rect x="1131.0" y="885" width="0.4" height="15.0" fill="rgb(226,28,37)" rx="2" ry="2" />
<text  x="1133.96" y="895.5" ></text>
</g>
<g >
<title>clang::Sema::SubstParmVarDecl (1 samples, 0.04%)</title><rect x="1131.4" y="661" width="0.4" height="15.0" fill="rgb(210,188,37)" rx="2" ry="2" />
<text  x="1134.40" y="671.5" ></text>
</g>
<g >
<title>clang::Sema::SubstType (2 samples, 0.07%)</title><rect x="1131.8" y="917" width="0.9" height="15.0" fill="rgb(246,71,44)" rx="2" ry="2" />
<text  x="1134.84" y="927.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke (3 samples, 0.11%)</title><rect x="1157.0" y="949" width="1.3" height="15.0" fill="rgb(223,65,38)" rx="2" ry="2" />
<text  x="1159.95" y="959.5" ></text>
</g>
<g >
<title>ROOT::Internal::HasConsistentHashMember (1 samples, 0.04%)</title><rect x="786.4" y="693" width="0.4" height="15.0" fill="rgb(245,38,13)" rx="2" ry="2" />
<text  x="789.39" y="703.5" ></text>
</g>
<g >
<title>[bash] (4 samples, 0.15%)</title><rect x="22.3" y="501" width="1.8" height="15.0" fill="rgb(206,116,1)" rx="2" ry="2" />
<text  x="25.34" y="511.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.04%)</title><rect x="21.9" y="341" width="0.4" height="15.0" fill="rgb(240,208,45)" rx="2" ry="2" />
<text  x="24.90" y="351.5" ></text>
</g>
<g >
<title>TSystem::Load (6 samples, 0.22%)</title><rect x="1094.8" y="949" width="2.7" height="15.0" fill="rgb(217,115,19)" rx="2" ry="2" />
<text  x="1097.82" y="959.5" ></text>
</g>
<g >
<title>clang::Decl::getTranslationUnitDecl (1 samples, 0.04%)</title><rect x="1133.6" y="597" width="0.4" height="15.0" fill="rgb(237,78,17)" rx="2" ry="2" />
<text  x="1136.60" y="607.5" ></text>
</g>
<g >
<title>llvm::TargetTransformInfoWrapperPass::getTTI (1 samples, 0.04%)</title><rect x="694.7" y="773" width="0.5" height="15.0" fill="rgb(244,95,49)" rx="2" ry="2" />
<text  x="697.73" y="783.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="21.9" y="773" width="0.4" height="15.0" fill="rgb(242,167,18)" rx="2" ry="2" />
<text  x="24.90" y="783.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::Compile (1 samples, 0.04%)</title><rect x="1147.3" y="933" width="0.4" height="15.0" fill="rgb(235,223,16)" rx="2" ry="2" />
<text  x="1150.26" y="943.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitLValue (1 samples, 0.04%)</title><rect x="1105.4" y="837" width="0.4" height="15.0" fill="rgb(233,152,46)" rx="2" ry="2" />
<text  x="1108.40" y="847.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::run (1 samples, 0.04%)</title><rect x="1027.0" y="613" width="0.4" height="15.0" fill="rgb(224,159,21)" rx="2" ry="2" />
<text  x="1029.97" y="623.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateArgument (1 samples, 0.04%)</title><rect x="1124.3" y="821" width="0.5" height="15.0" fill="rgb(225,43,27)" rx="2" ry="2" />
<text  x="1127.35" y="831.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="12.2" y="309" width="0.4" height="15.0" fill="rgb(225,101,17)" rx="2" ry="2" />
<text  x="15.20" y="319.5" ></text>
</g>
<g >
<title>cling::Interpreter::loadHeader (1 samples, 0.04%)</title><rect x="903.6" y="693" width="0.4" height="15.0" fill="rgb(242,24,43)" rx="2" ry="2" />
<text  x="906.59" y="703.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnModule (18 samples, 0.67%)</title><rect x="699.6" y="789" width="7.9" height="15.0" fill="rgb(208,55,40)" rx="2" ry="2" />
<text  x="702.58" y="799.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl (1 samples, 0.04%)</title><rect x="786.4" y="213" width="0.4" height="15.0" fill="rgb(215,137,51)" rx="2" ry="2" />
<text  x="789.39" y="223.5" ></text>
</g>
<g >
<title>clang::FunctionDecl::getBody (1 samples, 0.04%)</title><rect x="1132.7" y="949" width="0.5" height="15.0" fill="rgb(245,77,29)" rx="2" ry="2" />
<text  x="1135.72" y="959.5" ></text>
</g>
<g >
<title>llvm::orc::SimpleCompiler::operator() (19 samples, 0.71%)</title><rect x="699.1" y="821" width="8.4" height="15.0" fill="rgb(210,149,25)" rx="2" ry="2" />
<text  x="702.14" y="831.5" ></text>
</g>
<g >
<title>TBranch::GetMother (1 samples, 0.04%)</title><rect x="785.9" y="805" width="0.5" height="15.0" fill="rgb(219,126,4)" rx="2" ry="2" />
<text  x="788.94" y="815.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitDecl (1 samples, 0.04%)</title><rect x="1132.7" y="645" width="0.5" height="15.0" fill="rgb(241,124,45)" rx="2" ry="2" />
<text  x="1135.72" y="655.5" ></text>
</g>
<g >
<title>clang::Sema::BuildCXXConstructExpr (1 samples, 0.04%)</title><rect x="1097.5" y="917" width="0.4" height="15.0" fill="rgb(243,190,14)" rx="2" ry="2" />
<text  x="1100.47" y="927.5" ></text>
</g>
<g >
<title>llvm::PMTopLevelManager::findAnalysisPass (1 samples, 0.04%)</title><rect x="1051.2" y="565" width="0.4" height="15.0" fill="rgb(233,111,17)" rx="2" ry="2" />
<text  x="1054.20" y="575.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExprs (1 samples, 0.04%)</title><rect x="1134.0" y="741" width="0.5" height="15.0" fill="rgb(209,52,24)" rx="2" ry="2" />
<text  x="1137.04" y="751.5" ></text>
</g>
<g >
<title>TChain::LoadTree (1 samples, 0.04%)</title><rect x="904.0" y="965" width="0.5" height="15.0" fill="rgb(229,87,18)" rx="2" ry="2" />
<text  x="907.03" y="975.5" ></text>
</g>
<g >
<title>clang::Lexer::LexIdentifier (1 samples, 0.04%)</title><rect x="1071.0" y="645" width="0.5" height="15.0" fill="rgb(206,185,17)" rx="2" ry="2" />
<text  x="1074.03" y="655.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddTemplateArgument (1 samples, 0.04%)</title><rect x="1124.3" y="645" width="0.5" height="15.0" fill="rgb(250,182,45)" rx="2" ry="2" />
<text  x="1127.35" y="655.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetType (1 samples, 0.04%)</title><rect x="1100.1" y="789" width="0.5" height="15.0" fill="rgb(215,178,45)" rx="2" ry="2" />
<text  x="1103.11" y="799.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.11%)</title><rect x="1174.1" y="741" width="1.4" height="15.0" fill="rgb(247,44,16)" rx="2" ry="2" />
<text  x="1177.14" y="751.5" ></text>
</g>
<g >
<title>KeepNParams (1 samples, 0.04%)</title><rect x="783.3" y="677" width="0.4" height="15.0" fill="rgb(211,57,38)" rx="2" ry="2" />
<text  x="786.30" y="687.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="21.5" y="533" width="0.4" height="15.0" fill="rgb(232,59,25)" rx="2" ry="2" />
<text  x="24.46" y="543.5" ></text>
</g>
<g >
<title>clang::ASTReader::FinishedDeserializing (1 samples, 0.04%)</title><rect x="1118.2" y="757" width="0.4" height="15.0" fill="rgb(215,11,10)" rx="2" ry="2" />
<text  x="1121.18" y="767.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveRelocations (136 samples, 5.08%)</title><rect x="830.0" y="741" width="59.9" height="15.0" fill="rgb(213,112,24)" rx="2" ry="2" />
<text  x="833.01" y="751.5" >llvm::..</text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (1 samples, 0.04%)</title><rect x="1131.4" y="805" width="0.4" height="15.0" fill="rgb(248,205,20)" rx="2" ry="2" />
<text  x="1134.40" y="815.5" ></text>
</g>
<g >
<title>llvm::AttributeSetNode::get (1 samples, 0.04%)</title><rect x="1105.0" y="853" width="0.4" height="15.0" fill="rgb(238,161,21)" rx="2" ry="2" />
<text  x="1107.96" y="863.5" ></text>
</g>
<g >
<title>cling::Interpreter::RunFunction (136 samples, 5.08%)</title><rect x="830.0" y="821" width="59.9" height="15.0" fill="rgb(215,196,43)" rx="2" ry="2" />
<text  x="833.01" y="831.5" >cling:..</text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalDefinition (1 samples, 0.04%)</title><rect x="1110.2" y="613" width="0.5" height="15.0" fill="rgb(247,71,37)" rx="2" ry="2" />
<text  x="1113.25" y="623.5" ></text>
</g>
<g >
<title>clang::Sema::FinishTemplateArgumentDeduction (1 samples, 0.04%)</title><rect x="1097.9" y="901" width="0.4" height="15.0" fill="rgb(211,80,45)" rx="2" ry="2" />
<text  x="1100.91" y="911.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnModule (6 samples, 0.22%)</title><rect x="906.2" y="645" width="2.7" height="15.0" fill="rgb(208,42,46)" rx="2" ry="2" />
<text  x="909.24" y="655.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitLValueForField (1 samples, 0.04%)</title><rect x="1116.4" y="837" width="0.5" height="15.0" fill="rgb(218,203,50)" rx="2" ry="2" />
<text  x="1119.42" y="847.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitTypeAliasDecl (1 samples, 0.04%)</title><rect x="1100.6" y="933" width="0.4" height="15.0" fill="rgb(216,157,16)" rx="2" ry="2" />
<text  x="1103.55" y="943.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddDecl (1 samples, 0.04%)</title><rect x="1123.0" y="517" width="0.5" height="15.0" fill="rgb(222,41,52)" rx="2" ry="2" />
<text  x="1126.02" y="527.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="19.3" y="501" width="0.4" height="15.0" fill="rgb(247,156,0)" rx="2" ry="2" />
<text  x="22.25" y="511.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::Release (1 samples, 0.04%)</title><rect x="909.3" y="757" width="0.5" height="15.0" fill="rgb(238,138,0)" rx="2" ry="2" />
<text  x="912.32" y="767.5" ></text>
</g>
<g >
<title>clang::InitializationSequence::Perform (1 samples, 0.04%)</title><rect x="1097.5" y="949" width="0.4" height="15.0" fill="rgb(248,206,14)" rx="2" ry="2" />
<text  x="1100.47" y="959.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.07%)</title><rect x="1175.5" y="661" width="0.8" height="15.0" fill="rgb(248,71,21)" rx="2" ry="2" />
<text  x="1178.46" y="671.5" ></text>
</g>
<g >
<title>optimizeGlobalsInModule (1 samples, 0.04%)</title><rect x="1065.3" y="645" width="0.4" height="15.0" fill="rgb(227,31,21)" rx="2" ry="2" />
<text  x="1068.30" y="655.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="992.2" y="917" width="0.4" height="15.0" fill="rgb(229,6,44)" rx="2" ry="2" />
<text  x="995.16" y="927.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.11%)</title><rect x="22.8" y="101" width="1.3" height="15.0" fill="rgb(252,208,29)" rx="2" ry="2" />
<text  x="25.78" y="111.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::NotifyLazyFunctionCreators (2 samples, 0.07%)</title><rect x="867.5" y="533" width="0.8" height="15.0" fill="rgb(219,188,54)" rx="2" ry="2" />
<text  x="870.46" y="543.5" ></text>
</g>
<g >
<title>clang::TemplateDeclInstantiator::VisitFunctionTemplateDecl (1 samples, 0.04%)</title><rect x="1129.6" y="757" width="0.5" height="15.0" fill="rgb(222,217,41)" rx="2" ry="2" />
<text  x="1132.63" y="767.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitStartEHSpec (1 samples, 0.04%)</title><rect x="1113.3" y="773" width="0.5" height="15.0" fill="rgb(248,6,22)" rx="2" ry="2" />
<text  x="1116.33" y="783.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition (1 samples, 0.04%)</title><rect x="1115.1" y="917" width="0.4" height="15.0" fill="rgb(227,19,25)" rx="2" ry="2" />
<text  x="1118.09" y="927.5" ></text>
</g>
<g >
<title>write_unsigned&lt;unsigned long&gt; (1 samples, 0.04%)</title><rect x="1101.4" y="725" width="0.5" height="15.0" fill="rgb(217,72,11)" rx="2" ry="2" />
<text  x="1104.43" y="735.5" ></text>
</g>
<g >
<title>llvm::BlockFrequencyInfoImplBase::distributeMass (1 samples, 0.04%)</title><rect x="1034.0" y="549" width="0.5" height="15.0" fill="rgb(230,159,35)" rx="2" ry="2" />
<text  x="1037.02" y="559.5" ></text>
</g>
<g >
<title>llvm::X86AsmPrinter::runOnMachineFunction (1 samples, 0.04%)</title><rect x="702.2" y="741" width="0.5" height="15.0" fill="rgb(251,139,15)" rx="2" ry="2" />
<text  x="705.23" y="751.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::isKnownOnEveryIteration (1 samples, 0.04%)</title><rect x="692.1" y="709" width="0.4" height="15.0" fill="rgb(213,190,9)" rx="2" ry="2" />
<text  x="695.09" y="719.5" ></text>
</g>
<g >
<title>_dlerror_run (1 samples, 0.04%)</title><rect x="904.9" y="837" width="0.5" height="15.0" fill="rgb(220,140,2)" rx="2" ry="2" />
<text  x="907.91" y="847.5" ></text>
</g>
<g >
<title>clang::MultiplexConsumer::HandleTopLevelDecl (1 samples, 0.04%)</title><rect x="1133.2" y="917" width="0.4" height="15.0" fill="rgb(219,185,43)" rx="2" ry="2" />
<text  x="1136.16" y="927.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1165.8" y="853" width="0.4" height="15.0" fill="rgb(220,22,24)" rx="2" ry="2" />
<text  x="1168.77" y="863.5" ></text>
</g>
<g >
<title>PerformConstructorInitialization (1 samples, 0.04%)</title><rect x="1097.5" y="933" width="0.4" height="15.0" fill="rgb(207,169,43)" rx="2" ry="2" />
<text  x="1100.47" y="943.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition (5 samples, 0.19%)</title><rect x="1133.6" y="901" width="2.2" height="15.0" fill="rgb(219,56,47)" rx="2" ry="2" />
<text  x="1136.60" y="911.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::FindExternalVisibleDeclsByName (1 samples, 0.04%)</title><rect x="1118.2" y="789" width="0.4" height="15.0" fill="rgb(210,186,8)" rx="2" ry="2" />
<text  x="1121.18" y="799.5" ></text>
</g>
<g >
<title>llvm::MCAssembler::registerSection (1 samples, 0.04%)</title><rect x="702.2" y="645" width="0.5" height="15.0" fill="rgb(209,196,22)" rx="2" ry="2" />
<text  x="705.23" y="655.5" ></text>
</g>
<g >
<title>ROOT::TGenericClassInfo::GetClass (1 samples, 0.04%)</title><rect x="786.4" y="469" width="0.4" height="15.0" fill="rgb(248,179,47)" rx="2" ry="2" />
<text  x="789.39" y="479.5" ></text>
</g>
<g >
<title>llvm::DenseMap&lt;llvm::BasicBlock*, llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::InfoRec, llvm::DenseMapInfo&lt;llvm::BasicBlock*&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::InfoRec&gt; &gt;::grow (1 samples, 0.04%)</title><rect x="1034.9" y="581" width="0.4" height="15.0" fill="rgb(224,127,50)" rx="2" ry="2" />
<text  x="1037.90" y="591.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.04%)</title><rect x="786.4" y="661" width="0.4" height="15.0" fill="rgb(254,193,38)" rx="2" ry="2" />
<text  x="789.39" y="671.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitAnyExpr (1 samples, 0.04%)</title><rect x="1101.0" y="949" width="0.4" height="15.0" fill="rgb(228,175,49)" rx="2" ry="2" />
<text  x="1103.99" y="959.5" ></text>
</g>
<g >
<title>llvm::TargetTransformInfoWrapperPass::getTTI (1 samples, 0.04%)</title><rect x="1148.1" y="581" width="0.5" height="15.0" fill="rgb(239,63,28)" rx="2" ry="2" />
<text  x="1151.14" y="591.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1143.3" y="693" width="0.4" height="15.0" fill="rgb(242,218,52)" rx="2" ry="2" />
<text  x="1146.29" y="703.5" ></text>
</g>
<g >
<title>llvm::LoopInfoBase&lt;llvm::BasicBlock, llvm::Loop&gt;::analyze (1 samples, 0.04%)</title><rect x="833.5" y="565" width="0.5" height="15.0" fill="rgb(249,199,53)" rx="2" ry="2" />
<text  x="836.53" y="575.5" ></text>
</g>
<g >
<title>R__unzipZLIB (50 samples, 1.87%)</title><rect x="392.5" y="773" width="22.0" height="15.0" fill="rgb(205,96,15)" rx="2" ry="2" />
<text  x="395.46" y="783.5" >R..</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3 samples, 0.11%)</title><rect x="647.1" y="837" width="1.4" height="15.0" fill="rgb(212,67,23)" rx="2" ry="2" />
<text  x="650.15" y="847.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::getNaturalTypeAlignment (1 samples, 0.04%)</title><rect x="1103.2" y="901" width="0.4" height="15.0" fill="rgb(226,124,12)" rx="2" ry="2" />
<text  x="1106.20" y="911.5" ></text>
</g>
<g >
<title>cling::MetaSema::actOnLCommand (1 samples, 0.04%)</title><rect x="1027.4" y="789" width="0.4" height="15.0" fill="rgb(208,147,11)" rx="2" ry="2" />
<text  x="1030.41" y="799.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::SelectAllBasicBlocks (10 samples, 0.37%)</title><rect x="1159.6" y="741" width="4.4" height="15.0" fill="rgb(230,179,27)" rx="2" ry="2" />
<text  x="1162.60" y="751.5" ></text>
</g>
<g >
<title>llvm::ReassociatePass::run (1 samples, 0.04%)</title><rect x="694.3" y="773" width="0.4" height="15.0" fill="rgb(236,86,4)" rx="2" ry="2" />
<text  x="697.29" y="783.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetType (1 samples, 0.04%)</title><rect x="1100.6" y="773" width="0.4" height="15.0" fill="rgb(221,211,35)" rx="2" ry="2" />
<text  x="1103.55" y="783.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::removeDeadPasses (4 samples, 0.15%)</title><rect x="1037.5" y="629" width="1.8" height="15.0" fill="rgb(247,196,48)" rx="2" ry="2" />
<text  x="1040.54" y="639.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::getRangeRef (1 samples, 0.04%)</title><rect x="829.6" y="837" width="0.4" height="15.0" fill="rgb(230,118,3)" rx="2" ry="2" />
<text  x="832.57" y="847.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitParmDecl (1 samples, 0.04%)</title><rect x="1104.1" y="885" width="0.4" height="15.0" fill="rgb(231,8,52)" rx="2" ry="2" />
<text  x="1107.08" y="895.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddDecl (1 samples, 0.04%)</title><rect x="1131.0" y="421" width="0.4" height="15.0" fill="rgb(212,90,37)" rx="2" ry="2" />
<text  x="1133.96" y="431.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformNestedNameSpecifierLoc (1 samples, 0.04%)</title><rect x="1122.1" y="757" width="0.5" height="15.0" fill="rgb(222,205,45)" rx="2" ry="2" />
<text  x="1125.14" y="767.5" ></text>
</g>
<g >
<title>llvm::Value::deleteValue (1 samples, 0.04%)</title><rect x="1029.2" y="533" width="0.4" height="15.0" fill="rgb(238,3,32)" rx="2" ry="2" />
<text  x="1032.17" y="543.5" ></text>
</g>
<g >
<title>llvm::FoldingSetNodeID::AddInteger (1 samples, 0.04%)</title><rect x="1103.2" y="261" width="0.4" height="15.0" fill="rgb(233,72,11)" rx="2" ry="2" />
<text  x="1106.20" y="271.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="12.2" y="245" width="0.4" height="15.0" fill="rgb(214,31,15)" rx="2" ry="2" />
<text  x="15.20" y="255.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveExternalSymbols (1 samples, 0.04%)</title><rect x="1147.7" y="821" width="0.4" height="15.0" fill="rgb(244,121,22)" rx="2" ry="2" />
<text  x="1150.70" y="831.5" ></text>
</g>
<g >
<title>TTreeCache::ReadBufferNormal (3 samples, 0.11%)</title><rect x="647.1" y="885" width="1.4" height="15.0" fill="rgb(212,214,13)" rx="2" ry="2" />
<text  x="650.15" y="895.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass (1 samples, 0.04%)</title><rect x="1142.0" y="821" width="0.4" height="15.0" fill="rgb(249,96,24)" rx="2" ry="2" />
<text  x="1144.97" y="831.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddType (1 samples, 0.04%)</title><rect x="1135.8" y="565" width="0.4" height="15.0" fill="rgb(226,162,20)" rx="2" ry="2" />
<text  x="1138.80" y="575.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXMemberOrOperatorMemberCallExpr (1 samples, 0.04%)</title><rect x="1105.4" y="725" width="0.4" height="15.0" fill="rgb(244,84,36)" rx="2" ry="2" />
<text  x="1108.40" y="735.5" ></text>
</g>
<g >
<title>THashTable::Add (1 samples, 0.04%)</title><rect x="786.4" y="757" width="0.4" height="15.0" fill="rgb(233,33,23)" rx="2" ry="2" />
<text  x="789.39" y="767.5" ></text>
</g>
<g >
<title>TChain::LoadTree (1 samples, 0.04%)</title><rect x="903.6" y="949" width="0.4" height="15.0" fill="rgb(213,69,22)" rx="2" ry="2" />
<text  x="906.59" y="959.5" ></text>
</g>
<g >
<title>_IO_vfprintf_internal (1 samples, 0.04%)</title><rect x="19.3" y="453" width="0.4" height="15.0" fill="rgb(231,220,21)" rx="2" ry="2" />
<text  x="22.25" y="463.5" ></text>
</g>
<g >
<title>llvm::DominatorTreeWrapperPass::runOnFunction (1 samples, 0.04%)</title><rect x="689.0" y="741" width="0.4" height="15.0" fill="rgb(244,88,37)" rx="2" ry="2" />
<text  x="692.01" y="751.5" ></text>
</g>
<g >
<title>TClass::GetDataMember (1 samples, 0.04%)</title><rect x="905.4" y="597" width="0.4" height="15.0" fill="rgb(250,141,32)" rx="2" ry="2" />
<text  x="908.35" y="607.5" ></text>
</g>
<g >
<title>rtld_lock_default_unlock_recursive (1 samples, 0.04%)</title><rect x="1171.5" y="901" width="0.4" height="15.0" fill="rgb(254,104,12)" rx="2" ry="2" />
<text  x="1174.49" y="911.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::initializeAnalysisImpl (2 samples, 0.07%)</title><rect x="1064.0" y="645" width="0.9" height="15.0" fill="rgb(222,108,40)" rx="2" ry="2" />
<text  x="1066.98" y="655.5" ></text>
</g>
<g >
<title>clang::Sema::SubstType (3 samples, 0.11%)</title><rect x="1129.6" y="933" width="1.4" height="15.0" fill="rgb(220,224,42)" rx="2" ry="2" />
<text  x="1132.63" y="943.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::setNonAliasAttributes (1 samples, 0.04%)</title><rect x="1111.6" y="661" width="0.4" height="15.0" fill="rgb(206,12,20)" rx="2" ry="2" />
<text  x="1114.57" y="671.5" ></text>
</g>
<g >
<title>std::__find_if&lt;void const* const*, __gnu_cxx::__ops::_Iter_equals_val&lt;void const* const&gt; &gt; (1 samples, 0.04%)</title><rect x="851.6" y="565" width="0.4" height="15.0" fill="rgb(234,41,49)" rx="2" ry="2" />
<text  x="854.60" y="575.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitTopLevelDecl (2 samples, 0.07%)</title><rect x="1108.9" y="965" width="0.9" height="15.0" fill="rgb(233,106,33)" rx="2" ry="2" />
<text  x="1111.92" y="975.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject&lt;std::shared_ptr&lt;llvm::RuntimeDyld::MemoryManager&gt; &gt;::getSymbolMaterializer(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda()#1}&gt;::_M_invoke (2 samples, 0.07%)</title><rect x="1145.9" y="901" width="0.9" height="15.0" fill="rgb(207,149,41)" rx="2" ry="2" />
<text  x="1148.94" y="911.5" ></text>
</g>
<g >
<title>clang::Sema::BuildDeclarationNameExpr (1 samples, 0.04%)</title><rect x="1141.1" y="773" width="0.4" height="15.0" fill="rgb(236,147,31)" rx="2" ry="2" />
<text  x="1144.09" y="783.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1072.4" y="741" width="0.4" height="15.0" fill="rgb(210,37,34)" rx="2" ry="2" />
<text  x="1075.35" y="751.5" ></text>
</g>
<g >
<title>clang::Sema::BuildQualifiedDeclarationNameExpr (1 samples, 0.04%)</title><rect x="1140.6" y="933" width="0.5" height="15.0" fill="rgb(241,47,44)" rx="2" ry="2" />
<text  x="1143.65" y="943.5" ></text>
</g>
<g >
<title>[bash] (4 samples, 0.15%)</title><rect x="22.3" y="661" width="1.8" height="15.0" fill="rgb(206,119,36)" rx="2" ry="2" />
<text  x="25.34" y="671.5" ></text>
</g>
<g >
<title>llvm::MachineInstr::addOperand (1 samples, 0.04%)</title><rect x="1144.2" y="597" width="0.4" height="15.0" fill="rgb(239,149,25)" rx="2" ry="2" />
<text  x="1147.17" y="607.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitAutoVarInit (2 samples, 0.07%)</title><rect x="1107.6" y="805" width="0.9" height="15.0" fill="rgb(227,110,30)" rx="2" ry="2" />
<text  x="1110.60" y="815.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::FindExternalLexicalDecls (1 samples, 0.04%)</title><rect x="1155.2" y="661" width="0.4" height="15.0" fill="rgb(235,132,12)" rx="2" ry="2" />
<text  x="1158.19" y="671.5" ></text>
</g>
<g >
<title>llvm::legacy::FunctionPassManagerImpl::run (2 samples, 0.07%)</title><rect x="889.9" y="693" width="0.9" height="15.0" fill="rgb(241,15,2)" rx="2" ry="2" />
<text  x="892.93" y="703.5" ></text>
</g>
<g >
<title>llvm::PointerType::get (1 samples, 0.04%)</title><rect x="1106.7" y="581" width="0.5" height="15.0" fill="rgb(250,116,4)" rx="2" ry="2" />
<text  x="1109.72" y="591.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::visitCallInst (2 samples, 0.07%)</title><rect x="898.7" y="629" width="0.9" height="15.0" fill="rgb(222,189,51)" rx="2" ry="2" />
<text  x="901.75" y="639.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.11%)</title><rect x="1069.7" y="741" width="1.3" height="15.0" fill="rgb(209,120,52)" rx="2" ry="2" />
<text  x="1072.71" y="751.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.04%)</title><rect x="1112.0" y="565" width="0.4" height="15.0" fill="rgb(243,129,34)" rx="2" ry="2" />
<text  x="1115.01" y="575.5" ></text>
</g>
<g >
<title>computeKnownBitsFromAssume (1 samples, 0.04%)</title><rect x="889.9" y="597" width="0.5" height="15.0" fill="rgb(234,94,51)" rx="2" ry="2" />
<text  x="892.93" y="607.5" ></text>
</g>
<g >
<title>mergeConditionalStores (1 samples, 0.04%)</title><rect x="890.4" y="613" width="0.4" height="15.0" fill="rgb(220,164,3)" rx="2" ry="2" />
<text  x="893.37" y="623.5" ></text>
</g>
<g >
<title>__nptl_set_robust (1 samples, 0.04%)</title><rect x="1067.9" y="709" width="0.5" height="15.0" fill="rgb(237,112,16)" rx="2" ry="2" />
<text  x="1070.95" y="719.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXDestructorCall (1 samples, 0.04%)</title><rect x="1108.0" y="645" width="0.5" height="15.0" fill="rgb(245,225,24)" rx="2" ry="2" />
<text  x="1111.04" y="655.5" ></text>
</g>
<g >
<title>IsStandardConversion (1 samples, 0.04%)</title><rect x="1155.2" y="901" width="0.4" height="15.0" fill="rgb(228,211,13)" rx="2" ry="2" />
<text  x="1158.19" y="911.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;, void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;::LookupBucketFor&lt;void const*&gt; (10 samples, 0.37%)</title><rect x="1056.9" y="549" width="4.4" height="15.0" fill="rgb(221,26,27)" rx="2" ry="2" />
<text  x="1059.93" y="559.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="907.6" y="469" width="0.4" height="15.0" fill="rgb(207,137,31)" rx="2" ry="2" />
<text  x="910.56" y="479.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl (1 samples, 0.04%)</title><rect x="1099.7" y="805" width="0.4" height="15.0" fill="rgb(222,191,30)" rx="2" ry="2" />
<text  x="1102.67" y="815.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType (2 samples, 0.07%)</title><rect x="1141.1" y="949" width="0.9" height="15.0" fill="rgb(208,113,26)" rx="2" ry="2" />
<text  x="1144.09" y="959.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (1 samples, 0.04%)</title><rect x="1147.7" y="693" width="0.4" height="15.0" fill="rgb(234,84,35)" rx="2" ry="2" />
<text  x="1150.70" y="703.5" ></text>
</g>
<g >
<title>frombuf (1 samples, 0.04%)</title><rect x="646.7" y="869" width="0.4" height="15.0" fill="rgb(208,106,19)" rx="2" ry="2" />
<text  x="649.71" y="879.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnModule (1 samples, 0.04%)</title><rect x="1152.1" y="853" width="0.4" height="15.0" fill="rgb(252,64,34)" rx="2" ry="2" />
<text  x="1155.11" y="863.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord (1 samples, 0.04%)</title><rect x="1137.1" y="597" width="0.5" height="15.0" fill="rgb(246,105,37)" rx="2" ry="2" />
<text  x="1140.12" y="607.5" ></text>
</g>
<g >
<title>uncompress (1 samples, 0.04%)</title><rect x="1137.6" y="533" width="0.4" height="15.0" fill="rgb(219,36,11)" rx="2" ry="2" />
<text  x="1140.57" y="543.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (2 samples, 0.07%)</title><rect x="1152.5" y="821" width="0.9" height="15.0" fill="rgb(218,199,50)" rx="2" ry="2" />
<text  x="1155.55" y="831.5" ></text>
</g>
<g >
<title>clang::Sema::LookupQualifiedName (1 samples, 0.04%)</title><rect x="1143.7" y="693" width="0.5" height="15.0" fill="rgb(245,202,5)" rx="2" ry="2" />
<text  x="1146.73" y="703.5" ></text>
</g>
<g >
<title>llvm::PMTopLevelManager::findAnalysisPass (1 samples, 0.04%)</title><rect x="1048.6" y="581" width="0.4" height="15.0" fill="rgb(221,26,1)" rx="2" ry="2" />
<text  x="1051.56" y="591.5" ></text>
</g>
<g >
<title>clang::ASTReader::readTypeRecord (1 samples, 0.04%)</title><rect x="1100.6" y="757" width="0.4" height="15.0" fill="rgb(254,189,5)" rx="2" ry="2" />
<text  x="1103.55" y="767.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1171.9" y="821" width="0.5" height="15.0" fill="rgb(248,7,10)" rx="2" ry="2" />
<text  x="1174.93" y="831.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (1 samples, 0.04%)</title><rect x="1151.2" y="837" width="0.5" height="15.0" fill="rgb(247,199,44)" rx="2" ry="2" />
<text  x="1154.22" y="847.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject&lt;std::shared_ptr&lt;llvm::RuntimeDyld::MemoryManager&gt; &gt;::getSymbolMaterializer(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda()#1}&gt;::_M_invoke (2 samples, 0.07%)</title><rect x="1144.2" y="933" width="0.9" height="15.0" fill="rgb(229,7,46)" rx="2" ry="2" />
<text  x="1147.17" y="943.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="12.6" y="309" width="0.5" height="15.0" fill="rgb(240,26,28)" rx="2" ry="2" />
<text  x="15.64" y="319.5" ></text>
</g>
<g >
<title>llvm::MemorySSA::MemorySSA (1 samples, 0.04%)</title><rect x="1151.2" y="789" width="0.5" height="15.0" fill="rgb(228,97,52)" rx="2" ry="2" />
<text  x="1154.22" y="799.5" ></text>
</g>
<g >
<title>_dl_start (5 samples, 0.19%)</title><rect x="1164.4" y="949" width="2.2" height="15.0" fill="rgb(244,223,15)" rx="2" ry="2" />
<text  x="1167.44" y="959.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadExpr (1 samples, 0.04%)</title><rect x="1155.2" y="565" width="0.4" height="15.0" fill="rgb(230,142,30)" rx="2" ry="2" />
<text  x="1158.19" y="575.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.04%)</title><rect x="1142.9" y="901" width="0.4" height="15.0" fill="rgb(252,18,5)" rx="2" ry="2" />
<text  x="1145.85" y="911.5" ></text>
</g>
<g >
<title>clang::VarDecl::isOutOfLine (1 samples, 0.04%)</title><rect x="1141.1" y="613" width="0.4" height="15.0" fill="rgb(215,186,38)" rx="2" ry="2" />
<text  x="1144.09" y="623.5" ></text>
</g>
<g >
<title>computeKnownBits (1 samples, 0.04%)</title><rect x="893.9" y="597" width="0.4" height="15.0" fill="rgb(217,200,21)" rx="2" ry="2" />
<text  x="896.90" y="607.5" ></text>
</g>
<g >
<title>llvm::BasicAAWrapperPass::runOnFunction (1 samples, 0.04%)</title><rect x="699.6" y="757" width="0.4" height="15.0" fill="rgb(253,92,47)" rx="2" ry="2" />
<text  x="702.58" y="767.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateArgument (1 samples, 0.04%)</title><rect x="1139.3" y="901" width="0.5" height="15.0" fill="rgb(224,205,14)" rx="2" ry="2" />
<text  x="1142.33" y="911.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Value*, std::unique_ptr&lt;(anonymous namespace)::LazyValueInfoCache::ValueCacheEntryTy, std::default_delete&lt;(anonymous namespace)::LazyValueInfoCache::ValueCacheEntryTy&gt; &gt;, llvm::DenseMapInfo&lt;llvm::Value*&gt;, llvm::detail::DenseMapPair&lt;llvm::Value*, std::unique_ptr&lt;(anonymous namespace)::LazyValueInfoCache::ValueCacheEntryTy, std::default_delete&lt;(anonymous namespace)::LazyValueInfoCache::ValueCacheEntryTy&gt; &gt; &gt; &gt;, llvm::Value*, std::unique_ptr&lt;(anonymous namespace)::LazyValueInfoCache::ValueCacheEntryTy, std::default_delete&lt;(anonymous namespace)::LazyValueInfoCache::ValueCacheEntryTy&gt; &gt;, llvm::DenseMapInfo&lt;llvm::Value*&gt;, llvm::detail::DenseMapPair&lt;llvm::Value*, std::unique_ptr&lt;(anonymous namespace)::LazyValueInfoCache::ValueCacheEntryTy, std::default_delete&lt;(anonymous namespace)::LazyValueInfoCache::ValueCacheEntryTy&gt; &gt; &gt; &gt;::LookupBucketFor&lt;llvm::Value*&gt; (1 samples, 0.04%)</title><rect x="896.1" y="661" width="0.4" height="15.0" fill="rgb(250,50,8)" rx="2" ry="2" />
<text  x="899.10" y="671.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::SelectAllBasicBlocks (1 samples, 0.04%)</title><rect x="844.5" y="549" width="0.5" height="15.0" fill="rgb(251,38,42)" rx="2" ry="2" />
<text  x="847.55" y="559.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1046.4" y="501" width="0.4" height="15.0" fill="rgb(205,142,7)" rx="2" ry="2" />
<text  x="1049.36" y="511.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentScopeDeclRefExpr (1 samples, 0.04%)</title><rect x="1122.1" y="773" width="0.5" height="15.0" fill="rgb(253,176,39)" rx="2" ry="2" />
<text  x="1125.14" y="783.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::CompleteType (1 samples, 0.04%)</title><rect x="1137.6" y="709" width="0.4" height="15.0" fill="rgb(232,181,34)" rx="2" ry="2" />
<text  x="1140.57" y="719.5" ></text>
</g>
<g >
<title>TClass::BuildRealData (1 samples, 0.04%)</title><rect x="905.4" y="677" width="0.4" height="15.0" fill="rgb(226,81,38)" rx="2" ry="2" />
<text  x="908.35" y="687.5" ></text>
</g>
<g >
<title>EmitCleanup (1 samples, 0.04%)</title><rect x="1115.5" y="853" width="0.5" height="15.0" fill="rgb(224,174,29)" rx="2" ry="2" />
<text  x="1118.53" y="863.5" ></text>
</g>
<g >
<title>llvm::AttributeList::addAttributes (1 samples, 0.04%)</title><rect x="1105.0" y="869" width="0.4" height="15.0" fill="rgb(216,24,54)" rx="2" ry="2" />
<text  x="1107.96" y="879.5" ></text>
</g>
<g >
<title>llvm::InstrEmitter::AddOperand (1 samples, 0.04%)</title><rect x="700.9" y="645" width="0.4" height="15.0" fill="rgb(223,4,48)" rx="2" ry="2" />
<text  x="703.90" y="655.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1168.4" y="821" width="0.4" height="15.0" fill="rgb(242,225,49)" rx="2" ry="2" />
<text  x="1171.41" y="831.5" ></text>
</g>
<g >
<title>llvm::SimplifyInstruction (1 samples, 0.04%)</title><rect x="889.9" y="661" width="0.5" height="15.0" fill="rgb(246,133,19)" rx="2" ry="2" />
<text  x="892.93" y="671.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="10.4" y="405" width="0.5" height="15.0" fill="rgb(242,108,21)" rx="2" ry="2" />
<text  x="13.44" y="415.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::GetExternalCXXBaseSpecifiers (1 samples, 0.04%)</title><rect x="1142.9" y="741" width="0.4" height="15.0" fill="rgb(215,195,14)" rx="2" ry="2" />
<text  x="1145.85" y="751.5" ></text>
</g>
<g >
<title>TFile::Init (2 samples, 0.07%)</title><rect x="783.7" y="853" width="0.9" height="15.0" fill="rgb(232,42,50)" rx="2" ry="2" />
<text  x="786.74" y="863.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (1 samples, 0.04%)</title><rect x="1033.6" y="613" width="0.4" height="15.0" fill="rgb(223,209,52)" rx="2" ry="2" />
<text  x="1036.58" y="623.5" ></text>
</g>
<g >
<title>[bash] (15 samples, 0.56%)</title><rect x="12.6" y="437" width="6.7" height="15.0" fill="rgb(214,69,13)" rx="2" ry="2" />
<text  x="15.64" y="447.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitStmt (1 samples, 0.04%)</title><rect x="1102.3" y="949" width="0.5" height="15.0" fill="rgb(223,56,21)" rx="2" ry="2" />
<text  x="1105.32" y="959.5" ></text>
</g>
<g >
<title>parse_and_execute (4 samples, 0.15%)</title><rect x="22.3" y="357" width="1.8" height="15.0" fill="rgb(221,141,2)" rx="2" ry="2" />
<text  x="25.34" y="367.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (3 samples, 0.11%)</title><rect x="689.0" y="757" width="1.3" height="15.0" fill="rgb(222,77,30)" rx="2" ry="2" />
<text  x="692.01" y="767.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobal (1 samples, 0.04%)</title><rect x="1133.2" y="837" width="0.4" height="15.0" fill="rgb(248,24,31)" rx="2" ry="2" />
<text  x="1136.16" y="847.5" ></text>
</g>
<g >
<title>[bash] (15 samples, 0.56%)</title><rect x="12.6" y="453" width="6.7" height="15.0" fill="rgb(245,148,53)" rx="2" ry="2" />
<text  x="15.64" y="463.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::GetOrCreateLLVMFunction (1 samples, 0.04%)</title><rect x="1149.9" y="597" width="0.4" height="15.0" fill="rgb(242,198,39)" rx="2" ry="2" />
<text  x="1152.90" y="607.5" ></text>
</g>
<g >
<title>__GI__IO_default_uflow (6 samples, 0.22%)</title><rect x="1090.4" y="821" width="2.7" height="15.0" fill="rgb(214,115,49)" rx="2" ry="2" />
<text  x="1093.42" y="831.5" ></text>
</g>
<g >
<title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::MachineBasicBlock, false&gt; &gt;::CalculateFromScratch (1 samples, 0.04%)</title><rect x="841.9" y="549" width="0.4" height="15.0" fill="rgb(253,221,40)" rx="2" ry="2" />
<text  x="844.90" y="559.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="431.2" y="773" width="0.5" height="15.0" fill="rgb(245,134,39)" rx="2" ry="2" />
<text  x="434.24" y="783.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject&lt;std::shared_ptr&lt;llvm::RuntimeDyld::MemoryManager&gt; &gt;::getSymbolMaterializer(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda()#1}&gt;::_M_invoke (52 samples, 1.94%)</title><rect x="867.0" y="645" width="22.9" height="15.0" fill="rgb(245,139,16)" rx="2" ry="2" />
<text  x="870.02" y="655.5" >s..</text>
</g>
<g >
<title>llvm::Value::setValueName (1 samples, 0.04%)</title><rect x="1050.3" y="501" width="0.5" height="15.0" fill="rgb(243,48,17)" rx="2" ry="2" />
<text  x="1053.32" y="511.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.04%)</title><rect x="785.9" y="933" width="0.5" height="15.0" fill="rgb(205,87,50)" rx="2" ry="2" />
<text  x="788.94" y="943.5" ></text>
</g>
<g >
<title>HandleInterpreterException (85 samples, 3.17%)</title><rect x="1028.7" y="853" width="37.5" height="15.0" fill="rgb(246,93,32)" rx="2" ry="2" />
<text  x="1031.73" y="863.5" >Han..</text>
</g>
<g >
<title>cling::Interpreter::EvaluateInternal (2 samples, 0.07%)</title><rect x="684.6" y="885" width="0.9" height="15.0" fill="rgb(230,65,17)" rx="2" ry="2" />
<text  x="687.60" y="895.5" ></text>
</g>
<g >
<title>TryUserDefinedConversion (2 samples, 0.07%)</title><rect x="1097.9" y="965" width="0.9" height="15.0" fill="rgb(232,108,39)" rx="2" ry="2" />
<text  x="1100.91" y="975.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1127.0" y="821" width="0.4" height="15.0" fill="rgb(230,131,14)" rx="2" ry="2" />
<text  x="1129.99" y="831.5" ></text>
</g>
<g >
<title>llvm::SelectionDAG::Combine (8 samples, 0.30%)</title><rect x="1159.6" y="709" width="3.5" height="15.0" fill="rgb(206,215,15)" rx="2" ry="2" />
<text  x="1162.60" y="719.5" ></text>
</g>
<g >
<title>rebuildPotentialResultsAsNonOdrUsed(clang::Sema&amp;, clang::Expr*, clang::NonOdrUseReason)::{lambda(clang::NamedDecl*)#2}::operator() (1 samples, 0.04%)</title><rect x="1125.2" y="869" width="0.5" height="15.0" fill="rgb(254,150,33)" rx="2" ry="2" />
<text  x="1128.23" y="879.5" ></text>
</g>
<g >
<title>llvm::object::ELFObjectFile&lt;llvm::object::ELFType&lt;(llvm::support::endianness)1, true&gt; &gt;::getRelocationType (1 samples, 0.04%)</title><rect x="868.3" y="565" width="0.5" height="15.0" fill="rgb(237,168,1)" rx="2" ry="2" />
<text  x="871.34" y="575.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::verifyPreservedAnalysis (28 samples, 1.05%)</title><rect x="852.0" y="581" width="12.4" height="15.0" fill="rgb(219,21,41)" rx="2" ry="2" />
<text  x="855.04" y="591.5" ></text>
</g>
<g >
<title>clang::ASTReader::finishPendingActions (1 samples, 0.04%)</title><rect x="1118.2" y="741" width="0.4" height="15.0" fill="rgb(216,107,35)" rx="2" ry="2" />
<text  x="1121.18" y="751.5" ></text>
</g>
<g >
<title>llvm::PMTopLevelManager::findAnalysisUsage (1 samples, 0.04%)</title><rect x="1044.2" y="613" width="0.4" height="15.0" fill="rgb(210,9,24)" rx="2" ry="2" />
<text  x="1047.15" y="623.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.04%)</title><rect x="1150.3" y="565" width="0.5" height="15.0" fill="rgb(234,0,11)" rx="2" ry="2" />
<text  x="1153.34" y="575.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="10.4" y="309" width="0.5" height="15.0" fill="rgb(216,118,2)" rx="2" ry="2" />
<text  x="13.44" y="319.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::TargetTransformInfo (llvm::Function const&amp;), llvm::TargetMachine::getTargetIRAnalysis()::{lambda(llvm::Function const&amp;)#1}&gt;::_M_invoke (3 samples, 0.11%)</title><rect x="1061.8" y="597" width="1.3" height="15.0" fill="rgb(244,175,50)" rx="2" ry="2" />
<text  x="1064.78" y="607.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCall (1 samples, 0.04%)</title><rect x="1107.2" y="805" width="0.4" height="15.0" fill="rgb(223,192,13)" rx="2" ry="2" />
<text  x="1110.16" y="815.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (1 samples, 0.04%)</title><rect x="1142.0" y="677" width="0.4" height="15.0" fill="rgb(229,58,4)" rx="2" ry="2" />
<text  x="1144.97" y="687.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateArgument (1 samples, 0.04%)</title><rect x="1135.4" y="677" width="0.4" height="15.0" fill="rgb(232,91,11)" rx="2" ry="2" />
<text  x="1138.36" y="687.5" ></text>
</g>
<g >
<title>llvm::PMTopLevelManager::findAnalysisPass (1 samples, 0.04%)</title><rect x="1064.9" y="597" width="0.4" height="15.0" fill="rgb(252,84,8)" rx="2" ry="2" />
<text  x="1067.86" y="607.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitDeclRefLValue (1 samples, 0.04%)</title><rect x="1101.9" y="821" width="0.4" height="15.0" fill="rgb(237,136,2)" rx="2" ry="2" />
<text  x="1104.87" y="831.5" ></text>
</g>
<g >
<title>llvm::MachineRegisterInfo::isPhysRegModified (1 samples, 0.04%)</title><rect x="702.7" y="709" width="0.4" height="15.0" fill="rgb(237,45,5)" rx="2" ry="2" />
<text  x="705.67" y="719.5" ></text>
</g>
<g >
<title>_dl_open (1 samples, 0.04%)</title><rect x="1149.5" y="389" width="0.4" height="15.0" fill="rgb(217,68,39)" rx="2" ry="2" />
<text  x="1152.46" y="399.5" ></text>
</g>
<g >
<title>clang::Preprocessor::Lex (1 samples, 0.04%)</title><rect x="1071.0" y="693" width="0.5" height="15.0" fill="rgb(240,66,6)" rx="2" ry="2" />
<text  x="1074.03" y="703.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1168.0" y="917" width="0.4" height="15.0" fill="rgb(232,150,16)" rx="2" ry="2" />
<text  x="1170.97" y="927.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;std::add_pointer, (anonymous namespace)::ScalarExprEmitter, llvm::Value*&gt;::Visit (1 samples, 0.04%)</title><rect x="1102.3" y="869" width="0.5" height="15.0" fill="rgb(228,81,32)" rx="2" ry="2" />
<text  x="1105.32" y="879.5" ></text>
</g>
<g >
<title>llvm::orc::lookupWithLegacyFn&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}::operator()(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;) const::{lambda(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)#1}&gt; (2 samples, 0.07%)</title><rect x="684.6" y="725" width="0.9" height="15.0" fill="rgb(205,111,17)" rx="2" ry="2" />
<text  x="687.60" y="735.5" ></text>
</g>
<g >
<title>clang::LinkageComputer::getLVForNamespaceScopeDecl (1 samples, 0.04%)</title><rect x="1103.2" y="613" width="0.4" height="15.0" fill="rgb(228,55,30)" rx="2" ry="2" />
<text  x="1106.20" y="623.5" ></text>
</g>
<g >
<title>llvm::scc_iterator&lt;llvm::CallGraph*, llvm::GraphTraits&lt;llvm::CallGraph*&gt; &gt;::GetNextSCC (1 samples, 0.04%)</title><rect x="1063.5" y="597" width="0.5" height="15.0" fill="rgb(226,119,18)" rx="2" ry="2" />
<text  x="1066.54" y="607.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (1 samples, 0.04%)</title><rect x="1127.9" y="725" width="0.4" height="15.0" fill="rgb(216,218,2)" rx="2" ry="2" />
<text  x="1130.87" y="735.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyld::finalizeWithMemoryManagerLocking (2 samples, 0.07%)</title><rect x="684.6" y="805" width="0.9" height="15.0" fill="rgb(208,225,15)" rx="2" ry="2" />
<text  x="687.60" y="815.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyld::finalizeWithMemoryManagerLocking (1 samples, 0.04%)</title><rect x="1146.8" y="901" width="0.5" height="15.0" fill="rgb(245,57,15)" rx="2" ry="2" />
<text  x="1149.82" y="911.5" ></text>
</g>
<g >
<title>TPluginHandler::CanHandle (1 samples, 0.04%)</title><rect x="784.6" y="853" width="0.5" height="15.0" fill="rgb(230,68,41)" rx="2" ry="2" />
<text  x="787.62" y="863.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitLValue (1 samples, 0.04%)</title><rect x="1101.4" y="869" width="0.5" height="15.0" fill="rgb(252,87,30)" rx="2" ry="2" />
<text  x="1104.43" y="879.5" ></text>
</g>
<g >
<title>llvm::SelectionDAG::getConstant (2 samples, 0.07%)</title><rect x="1153.4" y="869" width="0.9" height="15.0" fill="rgb(205,189,7)" rx="2" ry="2" />
<text  x="1156.43" y="879.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetType (1 samples, 0.04%)</title><rect x="1100.6" y="853" width="0.4" height="15.0" fill="rgb(218,17,49)" rx="2" ry="2" />
<text  x="1103.55" y="863.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1127.4" y="773" width="0.5" height="15.0" fill="rgb(243,76,36)" rx="2" ry="2" />
<text  x="1130.43" y="783.5" ></text>
</g>
<g >
<title>llvm::Module::getFunction (1 samples, 0.04%)</title><rect x="897.0" y="629" width="0.4" height="15.0" fill="rgb(210,125,29)" rx="2" ry="2" />
<text  x="899.98" y="639.5" ></text>
</g>
<g >
<title>clang::LinkageComputer::getLVForDecl (1 samples, 0.04%)</title><rect x="1108.9" y="885" width="0.5" height="15.0" fill="rgb(248,72,47)" rx="2" ry="2" />
<text  x="1111.92" y="895.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_erase (1 samples, 0.04%)</title><rect x="1112.0" y="549" width="0.4" height="15.0" fill="rgb(249,185,35)" rx="2" ry="2" />
<text  x="1115.01" y="559.5" ></text>
</g>
<g >
<title>TLeafI::GetMaximum (14 samples, 0.52%)</title><rect x="1020.8" y="965" width="6.2" height="15.0" fill="rgb(222,50,8)" rx="2" ry="2" />
<text  x="1023.80" y="975.5" ></text>
</g>
<g >
<title>execute_command (4 samples, 0.15%)</title><rect x="22.3" y="821" width="1.8" height="15.0" fill="rgb(254,57,49)" rx="2" ry="2" />
<text  x="25.34" y="831.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddDeclarationNameImpl (1 samples, 0.04%)</title><rect x="1123.0" y="501" width="0.5" height="15.0" fill="rgb(231,24,34)" rx="2" ry="2" />
<text  x="1126.02" y="511.5" ></text>
</g>
<g >
<title>clang::Lexer::LexTokenInternal (1 samples, 0.04%)</title><rect x="1071.0" y="661" width="0.5" height="15.0" fill="rgb(219,186,0)" rx="2" ry="2" />
<text  x="1074.03" y="671.5" ></text>
</g>
<g >
<title>llvm::MachineFunctionPass::runOnFunction (2 samples, 0.07%)</title><rect x="1144.2" y="741" width="0.9" height="15.0" fill="rgb(208,161,1)" rx="2" ry="2" />
<text  x="1147.17" y="751.5" ></text>
</g>
<g >
<title>TBranch::GetBasketAndFirst (466 samples, 17.40%)</title><rect x="443.1" y="933" width="205.4" height="15.0" fill="rgb(230,43,51)" rx="2" ry="2" />
<text  x="446.14" y="943.5" >TBranch::GetBasketAndFirst</text>
</g>
<g >
<title>clang::Sema::SubstBaseSpecifiers (1 samples, 0.04%)</title><rect x="1139.3" y="741" width="0.5" height="15.0" fill="rgb(217,118,10)" rx="2" ry="2" />
<text  x="1142.33" y="751.5" ></text>
</g>
<g >
<title>operator new[] (1 samples, 0.04%)</title><rect x="1113.3" y="725" width="0.5" height="15.0" fill="rgb(221,56,46)" rx="2" ry="2" />
<text  x="1116.33" y="735.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertType (1 samples, 0.04%)</title><rect x="1117.3" y="933" width="0.4" height="15.0" fill="rgb(219,81,28)" rx="2" ry="2" />
<text  x="1120.30" y="943.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveRelocations (7 samples, 0.26%)</title><rect x="905.8" y="773" width="3.1" height="15.0" fill="rgb(212,57,34)" rx="2" ry="2" />
<text  x="908.80" y="783.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTemplateIdType (1 samples, 0.04%)</title><rect x="1127.4" y="805" width="0.5" height="15.0" fill="rgb(214,167,47)" rx="2" ry="2" />
<text  x="1130.43" y="815.5" ></text>
</g>
<g >
<title>evalstring (4 samples, 0.15%)</title><rect x="22.3" y="197" width="1.8" height="15.0" fill="rgb(227,0,15)" rx="2" ry="2" />
<text  x="25.34" y="207.5" ></text>
</g>
<g >
<title>llvm::AnalysisResolver::getAnalysisIfAvailable (1 samples, 0.04%)</title><rect x="1033.1" y="613" width="0.5" height="15.0" fill="rgb(247,109,10)" rx="2" ry="2" />
<text  x="1036.14" y="623.5" ></text>
</g>
<g >
<title>clang::CXXConstructorDecl::init_begin (1 samples, 0.04%)</title><rect x="1114.7" y="821" width="0.4" height="15.0" fill="rgb(217,155,25)" rx="2" ry="2" />
<text  x="1117.65" y="831.5" ></text>
</g>
<g >
<title>parse_and_execute (1 samples, 0.04%)</title><rect x="21.9" y="437" width="0.4" height="15.0" fill="rgb(222,25,13)" rx="2" ry="2" />
<text  x="24.90" y="447.5" ></text>
</g>
<g >
<title>ROOT::TGenericClassInfo::CreateRuleSet (1 samples, 0.04%)</title><rect x="786.4" y="453" width="0.4" height="15.0" fill="rgb(248,190,52)" rx="2" ry="2" />
<text  x="789.39" y="463.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (5 samples, 0.19%)</title><rect x="901.4" y="693" width="2.2" height="15.0" fill="rgb(224,148,36)" rx="2" ry="2" />
<text  x="904.39" y="703.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl (1 samples, 0.04%)</title><rect x="1124.8" y="917" width="0.4" height="15.0" fill="rgb(232,147,21)" rx="2" ry="2" />
<text  x="1127.79" y="927.5" ></text>
</g>
<g >
<title>llvm::orc::SimpleCompiler::operator() (2 samples, 0.07%)</title><rect x="684.6" y="693" width="0.9" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="687.60" y="703.5" ></text>
</g>
<g >
<title>llvm::GlobalDCEPass::MarkLive (1 samples, 0.04%)</title><rect x="698.7" y="773" width="0.4" height="15.0" fill="rgb(220,147,47)" rx="2" ry="2" />
<text  x="701.70" y="783.5" ></text>
</g>
<g >
<title>clang::Sema::AddFunctionCandidates (1 samples, 0.04%)</title><rect x="1118.6" y="901" width="0.5" height="15.0" fill="rgb(251,203,25)" rx="2" ry="2" />
<text  x="1121.62" y="911.5" ></text>
</g>
<g >
<title>execute_command_internal (21 samples, 0.78%)</title><rect x="12.6" y="661" width="9.3" height="15.0" fill="rgb(248,71,36)" rx="2" ry="2" />
<text  x="15.64" y="671.5" ></text>
</g>
<g >
<title>clang::Sema::SubstBaseSpecifiers (1 samples, 0.04%)</title><rect x="1139.8" y="757" width="0.4" height="15.0" fill="rgb(238,139,27)" rx="2" ry="2" />
<text  x="1142.77" y="767.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGBuilder::LowerCallTo (2 samples, 0.07%)</title><rect x="1153.4" y="965" width="0.9" height="15.0" fill="rgb(241,144,42)" rx="2" ry="2" />
<text  x="1156.43" y="975.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.04%)</title><rect x="1133.6" y="757" width="0.4" height="15.0" fill="rgb(231,16,41)" rx="2" ry="2" />
<text  x="1136.60" y="767.5" ></text>
</g>
<g >
<title>cling::MetaParser::isCommand (2 samples, 0.07%)</title><rect x="684.6" y="933" width="0.9" height="15.0" fill="rgb(240,124,17)" rx="2" ry="2" />
<text  x="687.60" y="943.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::SimplifyDemandedBits (1 samples, 0.04%)</title><rect x="893.5" y="613" width="0.4" height="15.0" fill="rgb(212,48,47)" rx="2" ry="2" />
<text  x="896.46" y="623.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetType (1 samples, 0.04%)</title><rect x="1100.6" y="805" width="0.4" height="15.0" fill="rgb(206,67,4)" rx="2" ry="2" />
<text  x="1103.55" y="815.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveRelocations (3 samples, 0.11%)</title><rect x="867.0" y="613" width="1.3" height="15.0" fill="rgb(213,35,46)" rx="2" ry="2" />
<text  x="870.02" y="623.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXConstructorCall (1 samples, 0.04%)</title><rect x="1102.8" y="677" width="0.4" height="15.0" fill="rgb(240,126,43)" rx="2" ry="2" />
<text  x="1105.76" y="687.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::MakeAddrLValue (1 samples, 0.04%)</title><rect x="1101.4" y="837" width="0.5" height="15.0" fill="rgb(252,60,26)" rx="2" ry="2" />
<text  x="1104.43" y="847.5" ></text>
</g>
<g >
<title>DeduceTemplateArguments (1 samples, 0.04%)</title><rect x="1142.4" y="789" width="0.5" height="15.0" fill="rgb(209,167,49)" rx="2" ry="2" />
<text  x="1145.41" y="799.5" ></text>
</g>
<g >
<title>ROOT::Internal::VecOps::SmallVectorBase::set_size (8 samples, 0.30%)</title><rect x="824.7" y="917" width="3.5" height="15.0" fill="rgb(241,49,25)" rx="2" ry="2" />
<text  x="827.72" y="927.5" ></text>
</g>
<g >
<title>llvm::AttributeList::get (1 samples, 0.04%)</title><rect x="1108.0" y="597" width="0.5" height="15.0" fill="rgb(231,201,10)" rx="2" ry="2" />
<text  x="1111.04" y="607.5" ></text>
</g>
<g >
<title>clang::Sema::LookupName (1 samples, 0.04%)</title><rect x="784.2" y="517" width="0.4" height="15.0" fill="rgb(231,153,27)" rx="2" ry="2" />
<text  x="787.18" y="527.5" ></text>
</g>
<g >
<title>llvm::object::ELFObjectFile&lt;llvm::object::ELFType&lt;(llvm::support::endianness)1, true&gt; &gt;::moveSectionNext (2 samples, 0.07%)</title><rect x="888.2" y="533" width="0.9" height="15.0" fill="rgb(205,72,14)" rx="2" ry="2" />
<text  x="891.17" y="543.5" ></text>
</g>
<g >
<title>cling::Interpreter::DeclareInternal (24 samples, 0.90%)</title><rect x="889.9" y="805" width="10.6" height="15.0" fill="rgb(251,54,43)" rx="2" ry="2" />
<text  x="892.93" y="815.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.11%)</title><rect x="22.8" y="53" width="1.3" height="15.0" fill="rgb(232,168,17)" rx="2" ry="2" />
<text  x="25.78" y="63.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::destroyCXXObject (1 samples, 0.04%)</title><rect x="1115.5" y="821" width="0.5" height="15.0" fill="rgb(242,108,40)" rx="2" ry="2" />
<text  x="1118.53" y="831.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1020.4" y="773" width="0.4" height="15.0" fill="rgb(232,70,37)" rx="2" ry="2" />
<text  x="1023.36" y="783.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertTypeForMem (1 samples, 0.04%)</title><rect x="1117.7" y="645" width="0.5" height="15.0" fill="rgb(241,85,45)" rx="2" ry="2" />
<text  x="1120.74" y="655.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddTemplateArgument (1 samples, 0.04%)</title><rect x="1131.0" y="565" width="0.4" height="15.0" fill="rgb(218,27,50)" rx="2" ry="2" />
<text  x="1133.96" y="575.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTSIInObjectScope (1 samples, 0.04%)</title><rect x="1137.6" y="869" width="0.4" height="15.0" fill="rgb(249,79,7)" rx="2" ry="2" />
<text  x="1140.57" y="879.5" ></text>
</g>
<g >
<title>TBranch::ReadLeaves1Impl (2 samples, 0.07%)</title><rect x="660.4" y="917" width="0.8" height="15.0" fill="rgb(219,221,15)" rx="2" ry="2" />
<text  x="663.37" y="927.5" ></text>
</g>
<g >
<title>TClass::LoadClassDefault (1 samples, 0.04%)</title><rect x="786.4" y="501" width="0.4" height="15.0" fill="rgb(220,154,49)" rx="2" ry="2" />
<text  x="789.39" y="511.5" ></text>
</g>
<g >
<title>clang::ASTRecordReader::readRecord (1 samples, 0.04%)</title><rect x="1155.2" y="533" width="0.4" height="15.0" fill="rgb(210,200,38)" rx="2" ry="2" />
<text  x="1158.19" y="543.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertType (1 samples, 0.04%)</title><rect x="1117.7" y="501" width="0.5" height="15.0" fill="rgb(227,149,30)" rx="2" ry="2" />
<text  x="1120.74" y="511.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.04%)</title><rect x="1152.5" y="677" width="0.5" height="15.0" fill="rgb(216,97,39)" rx="2" ry="2" />
<text  x="1155.55" y="687.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="21.9" y="245" width="0.4" height="15.0" fill="rgb(244,88,15)" rx="2" ry="2" />
<text  x="24.90" y="255.5" ></text>
</g>
<g >
<title>llvm::EHStreamer::computeCallSiteTable (1 samples, 0.04%)</title><rect x="1144.6" y="677" width="0.5" height="15.0" fill="rgb(248,206,19)" rx="2" ry="2" />
<text  x="1147.62" y="687.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType (1 samples, 0.04%)</title><rect x="1143.3" y="901" width="0.4" height="15.0" fill="rgb(251,42,52)" rx="2" ry="2" />
<text  x="1146.29" y="911.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::visitLoadInst (1 samples, 0.04%)</title><rect x="902.7" y="597" width="0.5" height="15.0" fill="rgb(231,165,12)" rx="2" ry="2" />
<text  x="905.71" y="607.5" ></text>
</g>
<g >
<title>clang::CXXScopeSpec::Extend (1 samples, 0.04%)</title><rect x="1122.1" y="741" width="0.5" height="15.0" fill="rgb(206,104,16)" rx="2" ry="2" />
<text  x="1125.14" y="751.5" ></text>
</g>
<g >
<title>_dl_open (1 samples, 0.04%)</title><rect x="904.9" y="773" width="0.5" height="15.0" fill="rgb(211,151,14)" rx="2" ry="2" />
<text  x="907.91" y="783.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (8 samples, 0.30%)</title><rect x="1109.8" y="837" width="3.5" height="15.0" fill="rgb(235,187,3)" rx="2" ry="2" />
<text  x="1112.81" y="847.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1143.3" y="757" width="0.4" height="15.0" fill="rgb(244,10,7)" rx="2" ry="2" />
<text  x="1146.29" y="767.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::CodeGenAndEmitDAG (1 samples, 0.04%)</title><rect x="1152.1" y="773" width="0.4" height="15.0" fill="rgb(228,5,19)" rx="2" ry="2" />
<text  x="1155.11" y="783.5" ></text>
</g>
<g >
<title>ROOT::VecOps::RVec&lt;float&gt;::RVec (7 samples, 0.26%)</title><rect x="798.7" y="933" width="3.1" height="15.0" fill="rgb(245,174,33)" rx="2" ry="2" />
<text  x="801.72" y="943.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;inferAttrsFromFunctionBodies(llvm::SmallSetVector&lt;llvm::Function*, 8u&gt; const&amp;)::{lambda(llvm::Instruction&amp;)#5}&gt;::_M_manager (1 samples, 0.04%)</title><rect x="890.8" y="693" width="0.5" height="15.0" fill="rgb(228,92,19)" rx="2" ry="2" />
<text  x="893.81" y="703.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentScopeDeclRefExpr (2 samples, 0.07%)</title><rect x="1139.8" y="965" width="0.8" height="15.0" fill="rgb(227,190,46)" rx="2" ry="2" />
<text  x="1142.77" y="975.5" ></text>
</g>
<g >
<title>llvm::AttributeList::getAttribute (1 samples, 0.04%)</title><rect x="707.1" y="741" width="0.4" height="15.0" fill="rgb(249,133,21)" rx="2" ry="2" />
<text  x="710.07" y="751.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDeclStmt (1 samples, 0.04%)</title><rect x="1128.3" y="853" width="0.5" height="15.0" fill="rgb(210,103,46)" rx="2" ry="2" />
<text  x="1131.31" y="863.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.04%)</title><rect x="1139.3" y="869" width="0.5" height="15.0" fill="rgb(237,79,23)" rx="2" ry="2" />
<text  x="1142.33" y="879.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;, void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;::LookupBucketFor&lt;void const*&gt; (1 samples, 0.04%)</title><rect x="1039.3" y="597" width="0.4" height="15.0" fill="rgb(211,188,47)" rx="2" ry="2" />
<text  x="1042.31" y="607.5" ></text>
</g>
<g >
<title>llvm::FoldingSetBase::FindNodeOrInsertPos (1 samples, 0.04%)</title><rect x="1134.9" y="597" width="0.5" height="15.0" fill="rgb(228,9,44)" rx="2" ry="2" />
<text  x="1137.92" y="607.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitClassTemplateDecl (1 samples, 0.04%)</title><rect x="1099.2" y="581" width="0.5" height="15.0" fill="rgb(234,204,51)" rx="2" ry="2" />
<text  x="1102.23" y="591.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization (1 samples, 0.04%)</title><rect x="1124.8" y="901" width="0.4" height="15.0" fill="rgb(219,61,3)" rx="2" ry="2" />
<text  x="1127.79" y="911.5" ></text>
</g>
<g >
<title>llvm::ScheduleDAGSDNodes::EmitSchedule (1 samples, 0.04%)</title><rect x="700.9" y="693" width="0.4" height="15.0" fill="rgb(214,20,13)" rx="2" ry="2" />
<text  x="703.90" y="703.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXOperatorMemberCallExpr (1 samples, 0.04%)</title><rect x="1105.4" y="741" width="0.4" height="15.0" fill="rgb(249,43,27)" rx="2" ry="2" />
<text  x="1108.40" y="751.5" ></text>
</g>
<g >
<title>clang::Sema::PerformPendingInstantiations (1 samples, 0.04%)</title><rect x="785.1" y="693" width="0.4" height="15.0" fill="rgb(229,121,31)" rx="2" ry="2" />
<text  x="788.06" y="703.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl (1 samples, 0.04%)</title><rect x="1099.7" y="709" width="0.4" height="15.0" fill="rgb(239,106,42)" rx="2" ry="2" />
<text  x="1102.67" y="719.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadTemplateArgumentList (1 samples, 0.04%)</title><rect x="1100.6" y="741" width="0.4" height="15.0" fill="rgb(211,164,28)" rx="2" ry="2" />
<text  x="1103.55" y="751.5" ></text>
</g>
<g >
<title>llvm::post_order&lt;llvm::BasicBlock*&gt; (1 samples, 0.04%)</title><rect x="833.5" y="533" width="0.5" height="15.0" fill="rgb(245,81,43)" rx="2" ry="2" />
<text  x="836.53" y="543.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitLValue (1 samples, 0.04%)</title><rect x="1102.8" y="853" width="0.4" height="15.0" fill="rgb(241,18,12)" rx="2" ry="2" />
<text  x="1105.76" y="863.5" ></text>
</g>
<g >
<title>llvm::X86RegisterInfo::eliminateFrameIndex (1 samples, 0.04%)</title><rect x="908.4" y="597" width="0.5" height="15.0" fill="rgb(206,61,40)" rx="2" ry="2" />
<text  x="911.44" y="607.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1164.0" y="853" width="0.4" height="15.0" fill="rgb(236,129,38)" rx="2" ry="2" />
<text  x="1167.00" y="863.5" ></text>
</g>
<g >
<title>llvm::LoopInfoWrapperPass::runOnFunction (1 samples, 0.04%)</title><rect x="901.8" y="661" width="0.5" height="15.0" fill="rgb(244,119,36)" rx="2" ry="2" />
<text  x="904.83" y="671.5" ></text>
</g>
<g >
<title>TChain::LoadTree (4 samples, 0.15%)</title><rect x="783.3" y="901" width="1.8" height="15.0" fill="rgb(250,153,38)" rx="2" ry="2" />
<text  x="786.30" y="911.5" ></text>
</g>
<g >
<title>llvm::Expected&lt;llvm::ArrayRef&lt;llvm::object::Elf_Shdr_Impl&lt;llvm::object::ELFType&lt;(llvm::support::endianness)1, true&gt; &gt; &gt; &gt;::~Expected (1 samples, 0.04%)</title><rect x="878.0" y="517" width="0.5" height="15.0" fill="rgb(254,111,42)" rx="2" ry="2" />
<text  x="881.04" y="527.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="21.9" y="709" width="0.4" height="15.0" fill="rgb(225,11,43)" rx="2" ry="2" />
<text  x="24.90" y="719.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass (1 samples, 0.04%)</title><rect x="1131.4" y="757" width="0.4" height="15.0" fill="rgb(219,100,23)" rx="2" ry="2" />
<text  x="1134.40" y="767.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="12.2" y="261" width="0.4" height="15.0" fill="rgb(215,172,6)" rx="2" ry="2" />
<text  x="15.20" y="271.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::SetFunctionAttributes (1 samples, 0.04%)</title><rect x="1105.8" y="709" width="0.5" height="15.0" fill="rgb(223,0,22)" rx="2" ry="2" />
<text  x="1108.84" y="719.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentScopeDeclRefExpr (1 samples, 0.04%)</title><rect x="1135.4" y="741" width="0.4" height="15.0" fill="rgb(253,93,3)" rx="2" ry="2" />
<text  x="1138.36" y="751.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="21.9" y="293" width="0.4" height="15.0" fill="rgb(234,118,17)" rx="2" ry="2" />
<text  x="24.90" y="303.5" ></text>
</g>
<g >
<title>clang::Sema::CXXCheckConditionalOperands (1 samples, 0.04%)</title><rect x="1134.0" y="661" width="0.5" height="15.0" fill="rgb(249,170,28)" rx="2" ry="2" />
<text  x="1137.04" y="671.5" ></text>
</g>
<g >
<title>ROOT::Internal::HasConsistentHashMember (1 samples, 0.04%)</title><rect x="786.4" y="709" width="0.4" height="15.0" fill="rgb(219,173,29)" rx="2" ry="2" />
<text  x="789.39" y="719.5" ></text>
</g>
<g >
<title>execute_command_internal (4 samples, 0.15%)</title><rect x="22.3" y="773" width="1.8" height="15.0" fill="rgb(219,198,23)" rx="2" ry="2" />
<text  x="25.34" y="783.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1172.4" y="757" width="0.4" height="15.0" fill="rgb(221,178,32)" rx="2" ry="2" />
<text  x="1175.37" y="767.5" ></text>
</g>
<g >
<title>llvm::runIPSCCP (1 samples, 0.04%)</title><rect x="1145.5" y="869" width="0.4" height="15.0" fill="rgb(228,149,27)" rx="2" ry="2" />
<text  x="1148.50" y="879.5" ></text>
</g>
<g >
<title>cling::MetaParser::isCommand (1 samples, 0.04%)</title><rect x="903.6" y="757" width="0.4" height="15.0" fill="rgb(254,49,50)" rx="2" ry="2" />
<text  x="906.59" y="767.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="842.3" y="533" width="0.5" height="15.0" fill="rgb(223,82,35)" rx="2" ry="2" />
<text  x="845.35" y="543.5" ></text>
</g>
<g >
<title>llvm::simplifyUsersOfIV (1 samples, 0.04%)</title><rect x="909.8" y="709" width="0.4" height="15.0" fill="rgb(248,160,2)" rx="2" ry="2" />
<text  x="912.76" y="719.5" ></text>
</g>
<g >
<title>llvm::GlobalsAAWrapperPass::runOnModule (1 samples, 0.04%)</title><rect x="1063.5" y="645" width="0.5" height="15.0" fill="rgb(248,9,5)" rx="2" ry="2" />
<text  x="1066.54" y="655.5" ></text>
</g>
<g >
<title>clang::RedeclarableTemplateDecl::findSpecializationImpl&lt;clang::FunctionTemplateSpecializationInfo&gt; (1 samples, 0.04%)</title><rect x="1122.6" y="821" width="0.4" height="15.0" fill="rgb(207,112,12)" rx="2" ry="2" />
<text  x="1125.58" y="831.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.04%)</title><rect x="892.6" y="549" width="0.4" height="15.0" fill="rgb(215,160,46)" rx="2" ry="2" />
<text  x="895.58" y="559.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddTemplateArgument (1 samples, 0.04%)</title><rect x="1123.0" y="661" width="0.5" height="15.0" fill="rgb(231,91,26)" rx="2" ry="2" />
<text  x="1126.02" y="671.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteDeclContext (2 samples, 0.07%)</title><rect x="1142.0" y="885" width="0.9" height="15.0" fill="rgb(207,130,15)" rx="2" ry="2" />
<text  x="1144.97" y="895.5" ></text>
</g>
<g >
<title>llvm::X86FrameLowering::getFrameIndexReference (1 samples, 0.04%)</title><rect x="908.4" y="581" width="0.5" height="15.0" fill="rgb(234,61,9)" rx="2" ry="2" />
<text  x="911.44" y="591.5" ></text>
</g>
<g >
<title>TBranch::GetBasketAndFirst@plt (3 samples, 0.11%)</title><rect x="414.9" y="837" width="1.4" height="15.0" fill="rgb(220,183,52)" rx="2" ry="2" />
<text  x="417.94" y="847.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization (1 samples, 0.04%)</title><rect x="1128.8" y="789" width="0.4" height="15.0" fill="rgb(210,225,53)" rx="2" ry="2" />
<text  x="1131.75" y="799.5" ></text>
</g>
<g >
<title>cling::MetaSema::actOnxCommand (1 samples, 0.04%)</title><rect x="1027.4" y="805" width="0.4" height="15.0" fill="rgb(229,198,33)" rx="2" ry="2" />
<text  x="1030.41" y="815.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.04%)</title><rect x="786.4" y="341" width="0.4" height="15.0" fill="rgb(214,189,36)" rx="2" ry="2" />
<text  x="789.39" y="351.5" ></text>
</g>
<g >
<title>clang::VarDecl::isOutOfLine (1 samples, 0.04%)</title><rect x="1125.2" y="773" width="0.5" height="15.0" fill="rgb(210,206,54)" rx="2" ry="2" />
<text  x="1128.23" y="783.5" ></text>
</g>
<g >
<title>llvm::FoldingSetBase::FindNodeOrInsertPos (1 samples, 0.04%)</title><rect x="1112.9" y="709" width="0.4" height="15.0" fill="rgb(241,112,27)" rx="2" ry="2" />
<text  x="1115.89" y="719.5" ></text>
</g>
<g >
<title>llvm::LazyValueInfo::getConstantOnEdge (1 samples, 0.04%)</title><rect x="902.3" y="645" width="0.4" height="15.0" fill="rgb(250,77,45)" rx="2" ry="2" />
<text  x="905.27" y="655.5" ></text>
</g>
<g >
<title>clang::ASTReader::readTypeRecord (1 samples, 0.04%)</title><rect x="1099.7" y="917" width="0.4" height="15.0" fill="rgb(219,97,42)" rx="2" ry="2" />
<text  x="1102.67" y="927.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (2 samples, 0.07%)</title><rect x="1144.2" y="789" width="0.9" height="15.0" fill="rgb(253,12,0)" rx="2" ry="2" />
<text  x="1147.17" y="799.5" ></text>
</g>
<g >
<title>__GI___fork (20 samples, 0.75%)</title><rect x="1078.5" y="821" width="8.8" height="15.0" fill="rgb(215,58,3)" rx="2" ry="2" />
<text  x="1081.52" y="831.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertType (1 samples, 0.04%)</title><rect x="1117.3" y="821" width="0.4" height="15.0" fill="rgb(232,24,42)" rx="2" ry="2" />
<text  x="1120.30" y="831.5" ></text>
</g>
<g >
<title>clang::Sema::FixOverloadedFunctionReference (2 samples, 0.07%)</title><rect x="1121.7" y="933" width="0.9" height="15.0" fill="rgb(243,96,11)" rx="2" ry="2" />
<text  x="1124.70" y="943.5" ></text>
</g>
<g >
<title>clang::DeclContext::LoadLexicalDeclsFromExternalStorage (1 samples, 0.04%)</title><rect x="1097.5" y="821" width="0.4" height="15.0" fill="rgb(242,80,50)" rx="2" ry="2" />
<text  x="1100.47" y="831.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="846.3" y="549" width="0.5" height="15.0" fill="rgb(223,218,17)" rx="2" ry="2" />
<text  x="849.31" y="559.5" ></text>
</g>
<g >
<title>llvm::orc::SimpleCompiler::operator() (1 samples, 0.04%)</title><rect x="1147.7" y="741" width="0.4" height="15.0" fill="rgb(235,65,35)" rx="2" ry="2" />
<text  x="1150.70" y="751.5" ></text>
</g>
<g >
<title>StoreAnyExprIntoOneUnit (1 samples, 0.04%)</title><rect x="1102.8" y="757" width="0.4" height="15.0" fill="rgb(233,45,7)" rx="2" ry="2" />
<text  x="1105.76" y="767.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::Compile (5 samples, 0.19%)</title><rect x="908.9" y="821" width="2.2" height="15.0" fill="rgb(248,216,36)" rx="2" ry="2" />
<text  x="911.88" y="831.5" ></text>
</g>
<g >
<title>fgets (2 samples, 0.07%)</title><rect x="1075.0" y="837" width="0.9" height="15.0" fill="rgb(218,32,50)" rx="2" ry="2" />
<text  x="1078.00" y="847.5" ></text>
</g>
<g >
<title>cling::Interpreter::executeTransaction (1 samples, 0.04%)</title><rect x="1145.5" y="917" width="0.4" height="15.0" fill="rgb(219,132,30)" rx="2" ry="2" />
<text  x="1148.50" y="927.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddTemplateArgument (1 samples, 0.04%)</title><rect x="1128.3" y="597" width="0.5" height="15.0" fill="rgb(219,3,1)" rx="2" ry="2" />
<text  x="1131.31" y="607.5" ></text>
</g>
<g >
<title>TFile::Open (3 samples, 0.11%)</title><rect x="783.7" y="885" width="1.4" height="15.0" fill="rgb(254,94,16)" rx="2" ry="2" />
<text  x="786.74" y="895.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::destroyCXXObject (1 samples, 0.04%)</title><rect x="1108.0" y="661" width="0.5" height="15.0" fill="rgb(223,7,41)" rx="2" ry="2" />
<text  x="1111.04" y="671.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddType (1 samples, 0.04%)</title><rect x="1103.2" y="373" width="0.4" height="15.0" fill="rgb(243,108,10)" rx="2" ry="2" />
<text  x="1106.20" y="383.5" ></text>
</g>
<g >
<title>TBranch::GetEntry (20 samples, 0.75%)</title><rect x="648.5" y="933" width="8.8" height="15.0" fill="rgb(238,212,15)" rx="2" ry="2" />
<text  x="651.47" y="943.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalDefinition (1 samples, 0.04%)</title><rect x="1115.1" y="933" width="0.4" height="15.0" fill="rgb(225,192,53)" rx="2" ry="2" />
<text  x="1118.09" y="943.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1176.8" y="789" width="0.4" height="15.0" fill="rgb(206,210,8)" rx="2" ry="2" />
<text  x="1179.78" y="799.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition (1 samples, 0.04%)</title><rect x="1112.4" y="805" width="0.5" height="15.0" fill="rgb(232,30,25)" rx="2" ry="2" />
<text  x="1115.45" y="815.5" ></text>
</g>
<g >
<title>llvm::AttributeList::getAttribute (1 samples, 0.04%)</title><rect x="845.9" y="501" width="0.4" height="15.0" fill="rgb(215,92,21)" rx="2" ry="2" />
<text  x="848.87" y="511.5" ></text>
</g>
<g >
<title>llvm::AttributeList::getAttribute (1 samples, 0.04%)</title><rect x="901.4" y="565" width="0.4" height="15.0" fill="rgb(225,26,47)" rx="2" ry="2" />
<text  x="904.39" y="575.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformNestedNameSpecifierLoc (1 samples, 0.04%)</title><rect x="1124.3" y="757" width="0.5" height="15.0" fill="rgb(239,115,11)" rx="2" ry="2" />
<text  x="1127.35" y="767.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1143.3" y="709" width="0.4" height="15.0" fill="rgb(235,40,54)" rx="2" ry="2" />
<text  x="1146.29" y="719.5" ></text>
</g>
<g >
<title>llvm::SelectionDAG::LegalizeOp (1 samples, 0.04%)</title><rect x="1157.0" y="789" width="0.4" height="15.0" fill="rgb(218,133,17)" rx="2" ry="2" />
<text  x="1159.95" y="799.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (2 samples, 0.07%)</title><rect x="16.6" y="309" width="0.9" height="15.0" fill="rgb(220,142,4)" rx="2" ry="2" />
<text  x="19.61" y="319.5" ></text>
</g>
<g >
<title>llvm::FoldingSet&lt;clang::NestedNameSpecifier&gt;::NodeEquals (1 samples, 0.04%)</title><rect x="1100.1" y="565" width="0.5" height="15.0" fill="rgb(233,115,9)" rx="2" ry="2" />
<text  x="1103.11" y="575.5" ></text>
</g>
<g >
<title>TChain::TChain (1 samples, 0.04%)</title><rect x="786.4" y="821" width="0.4" height="15.0" fill="rgb(223,10,35)" rx="2" ry="2" />
<text  x="789.39" y="831.5" ></text>
</g>
<g >
<title>_nl_make_l10nflist.localalias.0 (1 samples, 0.04%)</title><rect x="1168.8" y="853" width="0.5" height="15.0" fill="rgb(205,27,13)" rx="2" ry="2" />
<text  x="1171.85" y="863.5" ></text>
</g>
<g >
<title>computeKnownBits (1 samples, 0.04%)</title><rect x="696.1" y="661" width="0.4" height="15.0" fill="rgb(242,90,23)" rx="2" ry="2" />
<text  x="699.06" y="671.5" ></text>
</g>
<g >
<title>clang::Parser::TryAnnotateTypeOrScopeToken (1 samples, 0.04%)</title><rect x="1118.2" y="901" width="0.4" height="15.0" fill="rgb(207,118,42)" rx="2" ry="2" />
<text  x="1121.18" y="911.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="18.8" y="245" width="0.5" height="15.0" fill="rgb(247,72,12)" rx="2" ry="2" />
<text  x="21.81" y="255.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentNameType (1 samples, 0.04%)</title><rect x="1138.9" y="901" width="0.4" height="15.0" fill="rgb(212,184,2)" rx="2" ry="2" />
<text  x="1141.89" y="911.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass (2 samples, 0.07%)</title><rect x="1128.8" y="869" width="0.8" height="15.0" fill="rgb(210,185,10)" rx="2" ry="2" />
<text  x="1131.75" y="879.5" ></text>
</g>
<g >
<title>clang::InitializationKind::CreateForInit (1 samples, 0.04%)</title><rect x="1120.4" y="933" width="0.4" height="15.0" fill="rgb(214,139,39)" rx="2" ry="2" />
<text  x="1123.38" y="943.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.04%)</title><rect x="1103.6" y="837" width="0.5" height="15.0" fill="rgb(209,77,9)" rx="2" ry="2" />
<text  x="1106.64" y="847.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::SelectAllBasicBlocks (2 samples, 0.07%)</title><rect x="684.6" y="597" width="0.9" height="15.0" fill="rgb(239,80,21)" rx="2" ry="2" />
<text  x="687.60" y="607.5" ></text>
</g>
<g >
<title>clang::DeclContext::makeDeclVisibleInContextImpl (1 samples, 0.04%)</title><rect x="1129.6" y="645" width="0.5" height="15.0" fill="rgb(238,6,39)" rx="2" ry="2" />
<text  x="1132.63" y="655.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadExpr (1 samples, 0.04%)</title><rect x="786.4" y="149" width="0.4" height="15.0" fill="rgb(228,31,46)" rx="2" ry="2" />
<text  x="789.39" y="159.5" ></text>
</g>
<g >
<title>TryCopyInitialization (1 samples, 0.04%)</title><rect x="1126.5" y="917" width="0.5" height="15.0" fill="rgb(228,202,39)" rx="2" ry="2" />
<text  x="1129.55" y="927.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;std::add_pointer, (anonymous namespace)::ScalarExprEmitter, llvm::Value*&gt;::Visit (2 samples, 0.07%)</title><rect x="1105.8" y="821" width="0.9" height="15.0" fill="rgb(251,158,23)" rx="2" ry="2" />
<text  x="1108.84" y="831.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord (1 samples, 0.04%)</title><rect x="1099.7" y="789" width="0.4" height="15.0" fill="rgb(208,213,23)" rx="2" ry="2" />
<text  x="1102.67" y="799.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformCompoundStmt (1 samples, 0.04%)</title><rect x="1135.8" y="933" width="0.4" height="15.0" fill="rgb(211,68,27)" rx="2" ry="2" />
<text  x="1138.80" y="943.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned (1 samples, 0.04%)</title><rect x="834.0" y="549" width="0.4" height="15.0" fill="rgb(209,120,21)" rx="2" ry="2" />
<text  x="836.97" y="559.5" ></text>
</g>
<g >
<title>clang::Sema::buildOverloadedCallSet (1 samples, 0.04%)</title><rect x="1122.6" y="949" width="0.4" height="15.0" fill="rgb(240,41,22)" rx="2" ry="2" />
<text  x="1125.58" y="959.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::removeDeadPasses (3 samples, 0.11%)</title><rect x="849.4" y="581" width="1.3" height="15.0" fill="rgb(209,79,47)" rx="2" ry="2" />
<text  x="852.40" y="591.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.07%)</title><rect x="1188.7" y="805" width="0.9" height="15.0" fill="rgb(244,145,3)" rx="2" ry="2" />
<text  x="1191.68" y="815.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1123.0" y="837" width="0.5" height="15.0" fill="rgb(243,209,12)" rx="2" ry="2" />
<text  x="1126.02" y="847.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1127.0" y="773" width="0.4" height="15.0" fill="rgb(223,214,24)" rx="2" ry="2" />
<text  x="1129.99" y="783.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="21.5" y="485" width="0.4" height="15.0" fill="rgb(242,218,2)" rx="2" ry="2" />
<text  x="24.46" y="495.5" ></text>
</g>
<g >
<title>printf_builtin (1 samples, 0.04%)</title><rect x="19.3" y="485" width="0.4" height="15.0" fill="rgb(213,0,42)" rx="2" ry="2" />
<text  x="22.25" y="495.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::DoInstructionSelection (1 samples, 0.04%)</title><rect x="1154.7" y="917" width="0.5" height="15.0" fill="rgb(249,147,26)" rx="2" ry="2" />
<text  x="1157.75" y="927.5" ></text>
</g>
<g >
<title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::CalculateFromScratch (1 samples, 0.04%)</title><rect x="1049.0" y="597" width="0.4" height="15.0" fill="rgb(243,99,7)" rx="2" ry="2" />
<text  x="1052.00" y="607.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="431.2" y="725" width="0.5" height="15.0" fill="rgb(252,100,11)" rx="2" ry="2" />
<text  x="434.24" y="735.5" ></text>
</g>
<g >
<title>clang::VarDecl::isThisDeclarationADefinition (1 samples, 0.04%)</title><rect x="1130.1" y="565" width="0.4" height="15.0" fill="rgb(229,168,14)" rx="2" ry="2" />
<text  x="1133.07" y="575.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EvaluateExprAsBool (1 samples, 0.04%)</title><rect x="1102.3" y="901" width="0.5" height="15.0" fill="rgb(205,9,51)" rx="2" ry="2" />
<text  x="1105.32" y="911.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitAnyExpr (1 samples, 0.04%)</title><rect x="1102.8" y="821" width="0.4" height="15.0" fill="rgb(228,103,7)" rx="2" ry="2" />
<text  x="1105.76" y="831.5" ></text>
</g>
<g >
<title>llvm::SROA::runImpl (2 samples, 0.07%)</title><rect x="1029.2" y="581" width="0.9" height="15.0" fill="rgb(238,177,0)" rx="2" ry="2" />
<text  x="1032.17" y="591.5" ></text>
</g>
<g >
<title>execute_command (15 samples, 0.56%)</title><rect x="12.6" y="533" width="6.7" height="15.0" fill="rgb(225,134,32)" rx="2" ry="2" />
<text  x="15.64" y="543.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformParenListExpr (1 samples, 0.04%)</title><rect x="1134.0" y="757" width="0.5" height="15.0" fill="rgb(225,68,9)" rx="2" ry="2" />
<text  x="1137.04" y="767.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl (1 samples, 0.04%)</title><rect x="1127.4" y="645" width="0.5" height="15.0" fill="rgb(235,14,21)" rx="2" ry="2" />
<text  x="1130.43" y="655.5" ></text>
</g>
<g >
<title>llvm::IVUsers::AddUsersIfInteresting (1 samples, 0.04%)</title><rect x="1159.2" y="709" width="0.4" height="15.0" fill="rgb(206,125,21)" rx="2" ry="2" />
<text  x="1162.16" y="719.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitRedeclarableTemplateDecl (1 samples, 0.04%)</title><rect x="1099.7" y="741" width="0.4" height="15.0" fill="rgb(237,206,16)" rx="2" ry="2" />
<text  x="1102.67" y="751.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_erase (1 samples, 0.04%)</title><rect x="1112.0" y="629" width="0.4" height="15.0" fill="rgb(238,81,28)" rx="2" ry="2" />
<text  x="1115.01" y="639.5" ></text>
</g>
<g >
<title>clang::Parser::ConsumeToken (1 samples, 0.04%)</title><rect x="1071.0" y="805" width="0.5" height="15.0" fill="rgb(220,114,4)" rx="2" ry="2" />
<text  x="1074.03" y="815.5" ></text>
</g>
<g >
<title>TBufferFile::ApplySequence (1 samples, 0.04%)</title><rect x="905.4" y="789" width="0.4" height="15.0" fill="rgb(227,102,29)" rx="2" ry="2" />
<text  x="908.35" y="799.5" ></text>
</g>
<g >
<title>TCling::LazyFunctionCreatorAutoload (1 samples, 0.04%)</title><rect x="1149.5" y="581" width="0.4" height="15.0" fill="rgb(212,35,50)" rx="2" ry="2" />
<text  x="1152.46" y="591.5" ></text>
</g>
<g >
<title>TTree::GetLeaf (1 samples, 0.04%)</title><rect x="785.9" y="869" width="0.5" height="15.0" fill="rgb(247,40,51)" rx="2" ry="2" />
<text  x="788.94" y="879.5" ></text>
</g>
<g >
<title>llvm::orc::lookupWithLegacyFn&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}::operator()(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;) const::{lambda(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)#1}&gt; (1 samples, 0.04%)</title><rect x="1146.8" y="821" width="0.5" height="15.0" fill="rgb(245,1,50)" rx="2" ry="2" />
<text  x="1149.82" y="831.5" ></text>
</g>
<g >
<title>TPluginManager::LoadHandlersFromPluginDirs (1 samples, 0.04%)</title><rect x="903.6" y="901" width="0.4" height="15.0" fill="rgb(213,184,11)" rx="2" ry="2" />
<text  x="906.59" y="911.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.11%)</title><rect x="1166.6" y="933" width="1.4" height="15.0" fill="rgb(232,215,12)" rx="2" ry="2" />
<text  x="1169.65" y="943.5" ></text>
</g>
<g >
<title>clang::Type::isAnyPointerType (1 samples, 0.04%)</title><rect x="1134.0" y="565" width="0.5" height="15.0" fill="rgb(214,201,28)" rx="2" ry="2" />
<text  x="1137.04" y="575.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1097.0" y="789" width="0.5" height="15.0" fill="rgb(218,185,45)" rx="2" ry="2" />
<text  x="1100.03" y="799.5" ></text>
</g>
<g >
<title>llvm::AttributeSet::get (1 samples, 0.04%)</title><rect x="1102.3" y="709" width="0.5" height="15.0" fill="rgb(217,154,22)" rx="2" ry="2" />
<text  x="1105.32" y="719.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass (1 samples, 0.04%)</title><rect x="1123.9" y="773" width="0.4" height="15.0" fill="rgb(240,120,13)" rx="2" ry="2" />
<text  x="1126.91" y="783.5" ></text>
</g>
<g >
<title>close_buffered_fd (1 samples, 0.04%)</title><rect x="12.2" y="389" width="0.4" height="15.0" fill="rgb(229,86,31)" rx="2" ry="2" />
<text  x="15.20" y="399.5" ></text>
</g>
<g >
<title>clang::Sema::SubstType (1 samples, 0.04%)</title><rect x="1139.3" y="725" width="0.5" height="15.0" fill="rgb(243,4,30)" rx="2" ry="2" />
<text  x="1142.33" y="735.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::GetAddrOfGlobal (1 samples, 0.04%)</title><rect x="1149.9" y="629" width="0.4" height="15.0" fill="rgb(223,2,32)" rx="2" ry="2" />
<text  x="1152.90" y="639.5" ></text>
</g>
<g >
<title>llvm::orc::lookupWithLegacyFn&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}::operator()(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;) const::{lambda(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)#1}&gt; (7 samples, 0.26%)</title><rect x="905.8" y="709" width="3.1" height="15.0" fill="rgb(239,153,33)" rx="2" ry="2" />
<text  x="908.80" y="719.5" ></text>
</g>
<g >
<title>unlink_chunk.isra.2 (1 samples, 0.04%)</title><rect x="1152.5" y="661" width="0.5" height="15.0" fill="rgb(240,6,45)" rx="2" ry="2" />
<text  x="1155.55" y="671.5" ></text>
</g>
<g >
<title>TListOfDataMembers::Load (1 samples, 0.04%)</title><rect x="786.4" y="389" width="0.4" height="15.0" fill="rgb(236,19,51)" rx="2" ry="2" />
<text  x="789.39" y="399.5" ></text>
</g>
<g >
<title>clang::MultiplexConsumer::HandleTopLevelDecl (1 samples, 0.04%)</title><rect x="1133.2" y="885" width="0.4" height="15.0" fill="rgb(232,58,37)" rx="2" ry="2" />
<text  x="1136.16" y="895.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::MakeAddrLValue (1 samples, 0.04%)</title><rect x="1106.3" y="725" width="0.4" height="15.0" fill="rgb(207,145,0)" rx="2" ry="2" />
<text  x="1109.28" y="735.5" ></text>
</g>
<g >
<title>TPluginManager::LoadHandlerMacros (1 samples, 0.04%)</title><rect x="904.0" y="901" width="0.5" height="15.0" fill="rgb(251,1,52)" rx="2" ry="2" />
<text  x="907.03" y="911.5" ></text>
</g>
<g >
<title>llvm::JumpThreadingPass::runImpl (1 samples, 0.04%)</title><rect x="691.7" y="773" width="0.4" height="15.0" fill="rgb(224,3,26)" rx="2" ry="2" />
<text  x="694.65" y="783.5" ></text>
</g>
<g >
<title>[bash] (4 samples, 0.15%)</title><rect x="22.3" y="485" width="1.8" height="15.0" fill="rgb(253,109,50)" rx="2" ry="2" />
<text  x="25.34" y="495.5" ></text>
</g>
<g >
<title>clang::Sema::computeDeclContext (1 samples, 0.04%)</title><rect x="1139.3" y="629" width="0.5" height="15.0" fill="rgb(221,42,17)" rx="2" ry="2" />
<text  x="1142.33" y="639.5" ></text>
</g>
<g >
<title>cling::BackendPasses::runOnModule (3 samples, 0.11%)</title><rect x="689.0" y="805" width="1.3" height="15.0" fill="rgb(234,38,25)" rx="2" ry="2" />
<text  x="692.01" y="815.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnModule (1 samples, 0.04%)</title><rect x="1158.7" y="917" width="0.5" height="15.0" fill="rgb(224,163,26)" rx="2" ry="2" />
<text  x="1161.72" y="927.5" ></text>
</g>
<g >
<title>ROOT::Detail::RDF::RLoopManager::RunTreeReader (170 samples, 6.35%)</title><rect x="708.4" y="949" width="74.9" height="15.0" fill="rgb(208,5,26)" rx="2" ry="2" />
<text  x="711.39" y="959.5" >ROOT::De..</text>
</g>
<g >
<title>clang::RecordDecl::field_begin (1 samples, 0.04%)</title><rect x="1117.3" y="581" width="0.4" height="15.0" fill="rgb(227,191,53)" rx="2" ry="2" />
<text  x="1120.30" y="591.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.04%)</title><rect x="1134.0" y="709" width="0.5" height="15.0" fill="rgb(226,96,16)" rx="2" ry="2" />
<text  x="1137.04" y="719.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::codegenCXXStructor (1 samples, 0.04%)</title><rect x="1113.8" y="837" width="0.4" height="15.0" fill="rgb(215,212,19)" rx="2" ry="2" />
<text  x="1116.77" y="847.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1138.4" y="709" width="0.5" height="15.0" fill="rgb(242,204,45)" rx="2" ry="2" />
<text  x="1141.45" y="719.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGBuilder::getValue (1 samples, 0.04%)</title><rect x="1148.6" y="549" width="0.4" height="15.0" fill="rgb(237,185,50)" rx="2" ry="2" />
<text  x="1151.58" y="559.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTBAA::getBaseTypeInfoHelper (1 samples, 0.04%)</title><rect x="1103.2" y="821" width="0.4" height="15.0" fill="rgb(245,76,16)" rx="2" ry="2" />
<text  x="1106.20" y="831.5" ></text>
</g>
<g >
<title>clang::Sema::ActOnStartOfFunctionDef (1 samples, 0.04%)</title><rect x="908.9" y="709" width="0.4" height="15.0" fill="rgb(235,35,54)" rx="2" ry="2" />
<text  x="911.88" y="719.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::recordAvailableAnalysis (3 samples, 0.11%)</title><rect x="848.1" y="581" width="1.3" height="15.0" fill="rgb(231,92,9)" rx="2" ry="2" />
<text  x="851.07" y="591.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.04%)</title><rect x="1137.6" y="821" width="0.4" height="15.0" fill="rgb(223,211,2)" rx="2" ry="2" />
<text  x="1140.57" y="831.5" ></text>
</g>
<g >
<title>clang::Sema::SubstStmt (1 samples, 0.04%)</title><rect x="1135.4" y="853" width="0.4" height="15.0" fill="rgb(246,185,51)" rx="2" ry="2" />
<text  x="1138.36" y="863.5" ></text>
</g>
<g >
<title>clang::SourceManager::getFileIDLoaded (1 samples, 0.04%)</title><rect x="1137.6" y="629" width="0.4" height="15.0" fill="rgb(221,228,11)" rx="2" ry="2" />
<text  x="1140.57" y="639.5" ></text>
</g>
<g >
<title>clang::NamedDecl::getLinkageAndVisibility (1 samples, 0.04%)</title><rect x="1105.8" y="661" width="0.5" height="15.0" fill="rgb(218,107,5)" rx="2" ry="2" />
<text  x="1108.84" y="671.5" ></text>
</g>
<g >
<title>llvm::DAGTypeLegalizer::AnalyzeNewNode (1 samples, 0.04%)</title><rect x="1157.8" y="725" width="0.5" height="15.0" fill="rgb(242,79,28)" rx="2" ry="2" />
<text  x="1160.83" y="735.5" ></text>
</g>
<g >
<title>llvm::AttributeList::removeAttribute (1 samples, 0.04%)</title><rect x="1111.6" y="645" width="0.4" height="15.0" fill="rgb(218,122,35)" rx="2" ry="2" />
<text  x="1114.57" y="655.5" ></text>
</g>
<g >
<title>ComputeNumSignBitsImpl (1 samples, 0.04%)</title><rect x="829.6" y="805" width="0.4" height="15.0" fill="rgb(239,32,38)" rx="2" ry="2" />
<text  x="832.57" y="815.5" ></text>
</g>
<g >
<title>llvm::ExecutionDomainFix::runOnMachineFunction (1 samples, 0.04%)</title><rect x="841.5" y="565" width="0.4" height="15.0" fill="rgb(227,68,14)" rx="2" ry="2" />
<text  x="844.46" y="575.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertTypeForMem (1 samples, 0.04%)</title><rect x="1117.7" y="741" width="0.5" height="15.0" fill="rgb(246,180,28)" rx="2" ry="2" />
<text  x="1120.74" y="751.5" ></text>
</g>
<g >
<title>llvm::AttributeList::addAttributes (1 samples, 0.04%)</title><rect x="1112.4" y="757" width="0.5" height="15.0" fill="rgb(239,215,0)" rx="2" ry="2" />
<text  x="1115.45" y="767.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="21.9" y="101" width="0.4" height="15.0" fill="rgb(215,218,11)" rx="2" ry="2" />
<text  x="24.90" y="111.5" ></text>
</g>
<g >
<title>expand_string_assignment (4 samples, 0.15%)</title><rect x="22.3" y="437" width="1.8" height="15.0" fill="rgb(248,62,45)" rx="2" ry="2" />
<text  x="25.34" y="447.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (79 samples, 2.95%)</title><rect x="831.8" y="597" width="34.8" height="15.0" fill="rgb(250,44,22)" rx="2" ry="2" />
<text  x="834.77" y="607.5" >ll..</text>
</g>
<g >
<title>__reclaim_stacks (1 samples, 0.04%)</title><rect x="1168.4" y="917" width="0.4" height="15.0" fill="rgb(238,219,19)" rx="2" ry="2" />
<text  x="1171.41" y="927.5" ></text>
</g>
<g >
<title>llvm::TargetTransformInfoWrapperPass::getTTI (3 samples, 0.11%)</title><rect x="1061.8" y="613" width="1.3" height="15.0" fill="rgb(230,24,45)" rx="2" ry="2" />
<text  x="1064.78" y="623.5" ></text>
</g>
<g >
<title>TCling::ProcessLine (1 samples, 0.04%)</title><rect x="904.0" y="821" width="0.5" height="15.0" fill="rgb(250,115,20)" rx="2" ry="2" />
<text  x="907.03" y="831.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentScopeDeclRefExpr (1 samples, 0.04%)</title><rect x="1137.6" y="789" width="0.4" height="15.0" fill="rgb(224,205,1)" rx="2" ry="2" />
<text  x="1140.57" y="799.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.04%)</title><rect x="786.4" y="933" width="0.4" height="15.0" fill="rgb(228,118,14)" rx="2" ry="2" />
<text  x="789.39" y="943.5" ></text>
</g>
<g >
<title>?? (2 samples, 0.07%)</title><rect x="1027.8" y="837" width="0.9" height="15.0" fill="rgb(254,49,22)" rx="2" ry="2" />
<text  x="1030.85" y="847.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke (1 samples, 0.04%)</title><rect x="1150.8" y="901" width="0.4" height="15.0" fill="rgb(216,39,33)" rx="2" ry="2" />
<text  x="1153.78" y="911.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateArgument (1 samples, 0.04%)</title><rect x="1143.3" y="949" width="0.4" height="15.0" fill="rgb(223,148,41)" rx="2" ry="2" />
<text  x="1146.29" y="959.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt;, llvm::DenseMapInfo&lt;llvm::BasicBlock*&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt; &gt; &gt;, llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt;, llvm::DenseMapInfo&lt;llvm::BasicBlock*&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt; &gt; &gt;::find (1 samples, 0.04%)</title><rect x="1051.6" y="565" width="0.5" height="15.0" fill="rgb(211,215,2)" rx="2" ry="2" />
<text  x="1054.64" y="575.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::getSCEV (1 samples, 0.04%)</title><rect x="1159.2" y="677" width="0.4" height="15.0" fill="rgb(216,12,47)" rx="2" ry="2" />
<text  x="1162.16" y="687.5" ></text>
</g>
<g >
<title>TCling::LoadEnums (1 samples, 0.04%)</title><rect x="904.5" y="885" width="0.4" height="15.0" fill="rgb(216,187,48)" rx="2" ry="2" />
<text  x="907.47" y="895.5" ></text>
</g>
<g >
<title>cling::Interpreter::RunFunction (4 samples, 0.15%)</title><rect x="1148.1" y="885" width="1.8" height="15.0" fill="rgb(221,68,24)" rx="2" ry="2" />
<text  x="1151.14" y="895.5" ></text>
</g>
<g >
<title>clang::DeclContext::buildLookup (1 samples, 0.04%)</title><rect x="1129.6" y="677" width="0.5" height="15.0" fill="rgb(227,153,35)" rx="2" ry="2" />
<text  x="1132.63" y="687.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1097.5" y="533" width="0.4" height="15.0" fill="rgb(220,197,28)" rx="2" ry="2" />
<text  x="1100.47" y="543.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetType (1 samples, 0.04%)</title><rect x="1140.6" y="773" width="0.5" height="15.0" fill="rgb(214,177,39)" rx="2" ry="2" />
<text  x="1143.65" y="783.5" ></text>
</g>
<g >
<title>llvm::AttributeList::hasAttribute (1 samples, 0.04%)</title><rect x="900.9" y="581" width="0.5" height="15.0" fill="rgb(252,81,46)" rx="2" ry="2" />
<text  x="903.95" y="591.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;std::add_pointer, (anonymous namespace)::AggExprEmitter, void&gt;::Visit (1 samples, 0.04%)</title><rect x="1102.8" y="725" width="0.4" height="15.0" fill="rgb(243,172,38)" rx="2" ry="2" />
<text  x="1105.76" y="735.5" ></text>
</g>
<g >
<title>TFile::ReadStreamerInfo (2 samples, 0.07%)</title><rect x="783.7" y="837" width="0.9" height="15.0" fill="rgb(242,69,50)" rx="2" ry="2" />
<text  x="786.74" y="847.5" ></text>
</g>
<g >
<title>__memchr_avx2 (2 samples, 0.07%)</title><rect x="1093.1" y="821" width="0.8" height="15.0" fill="rgb(208,76,48)" rx="2" ry="2" />
<text  x="1096.06" y="831.5" ></text>
</g>
<g >
<title>clang::ASTContext::getCanonicalTemplateSpecializationType (1 samples, 0.04%)</title><rect x="1100.1" y="757" width="0.5" height="15.0" fill="rgb(240,159,35)" rx="2" ry="2" />
<text  x="1103.11" y="767.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl (1 samples, 0.04%)</title><rect x="1132.3" y="677" width="0.4" height="15.0" fill="rgb(227,22,25)" rx="2" ry="2" />
<text  x="1135.28" y="687.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXMemberCallExpr (1 samples, 0.04%)</title><rect x="1116.0" y="613" width="0.4" height="15.0" fill="rgb(249,153,18)" rx="2" ry="2" />
<text  x="1118.97" y="623.5" ></text>
</g>
<g >
<title>execute_command_internal (15 samples, 0.56%)</title><rect x="12.6" y="485" width="6.7" height="15.0" fill="rgb(224,135,5)" rx="2" ry="2" />
<text  x="15.64" y="495.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformNestedNameSpecifierLoc (1 samples, 0.04%)</title><rect x="1143.7" y="821" width="0.5" height="15.0" fill="rgb(220,215,3)" rx="2" ry="2" />
<text  x="1146.73" y="831.5" ></text>
</g>
<g >
<title>clang::ASTRecordReader::readRecord (1 samples, 0.04%)</title><rect x="1099.7" y="677" width="0.4" height="15.0" fill="rgb(252,191,6)" rx="2" ry="2" />
<text  x="1102.67" y="687.5" ></text>
</g>
<g >
<title>llvm::SimpleBitstreamCursor::JumpToBit (1 samples, 0.04%)</title><rect x="1126.1" y="821" width="0.4" height="15.0" fill="rgb(219,33,33)" rx="2" ry="2" />
<text  x="1129.11" y="831.5" ></text>
</g>
<g >
<title>TClass::GetCheckSum (1 samples, 0.04%)</title><rect x="783.7" y="805" width="0.5" height="15.0" fill="rgb(239,36,15)" rx="2" ry="2" />
<text  x="786.74" y="815.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::verifyPreservedAnalysis (6 samples, 0.22%)</title><rect x="704.0" y="757" width="2.6" height="15.0" fill="rgb(205,203,41)" rx="2" ry="2" />
<text  x="706.99" y="767.5" ></text>
</g>
<g >
<title>std::__stable_sort_adaptive&lt;llvm::MachineBasicBlock**, llvm::MachineBasicBlock**, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;(anonymous namespace)::MachineSinking::GetAllSortedSuccessors(llvm::MachineInstr&amp;, llvm::MachineBasicBlock*, std::map&lt;llvm::MachineBasicBlock*, llvm::SmallVector&lt;llvm::MachineBasicBlock*, 4u&gt;, std::less&lt;llvm::MachineBasicBlock*&gt;, std::allocator&lt;std::pair&lt;llvm::MachineBasicBlock* const, llvm::SmallVector&lt;llvm::MachineBasicBlock*, 4u&gt; &gt; &gt; &gt;&amp;) const::{lambda(llvm::MachineBasicBlock const*, llvm::MachineBasicBlock const*)#1}&gt; &gt; (1 samples, 0.04%)</title><rect x="846.8" y="565" width="0.4" height="15.0" fill="rgb(209,144,47)" rx="2" ry="2" />
<text  x="849.75" y="575.5" ></text>
</g>
<g >
<title>parse_and_execute (4 samples, 0.15%)</title><rect x="22.3" y="181" width="1.8" height="15.0" fill="rgb(242,33,48)" rx="2" ry="2" />
<text  x="25.34" y="191.5" ></text>
</g>
<g >
<title>llvm::ReachingDefAnalysis::runOnMachineFunction (1 samples, 0.04%)</title><rect x="843.2" y="565" width="0.5" height="15.0" fill="rgb(245,64,7)" rx="2" ry="2" />
<text  x="846.23" y="575.5" ></text>
</g>
<g >
<title>[bash] (15 samples, 0.56%)</title><rect x="12.6" y="373" width="6.7" height="15.0" fill="rgb(214,209,3)" rx="2" ry="2" />
<text  x="15.64" y="383.5" ></text>
</g>
<g >
<title>clang::RecordDecl::field_begin (1 samples, 0.04%)</title><rect x="1109.8" y="453" width="0.4" height="15.0" fill="rgb(232,165,45)" rx="2" ry="2" />
<text  x="1112.81" y="463.5" ></text>
</g>
<g >
<title>_dl_relocate_object (1 samples, 0.04%)</title><rect x="1094.8" y="757" width="0.5" height="15.0" fill="rgb(215,163,53)" rx="2" ry="2" />
<text  x="1097.82" y="767.5" ></text>
</g>
<g >
<title>TFileCacheRead::ReadBuffer (1 samples, 0.04%)</title><rect x="414.5" y="773" width="0.4" height="15.0" fill="rgb(222,133,29)" rx="2" ry="2" />
<text  x="417.50" y="783.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::getRangeRef (1 samples, 0.04%)</title><rect x="1159.2" y="517" width="0.4" height="15.0" fill="rgb(205,70,21)" rx="2" ry="2" />
<text  x="1162.16" y="527.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadSLocEntry (1 samples, 0.04%)</title><rect x="908.9" y="597" width="0.4" height="15.0" fill="rgb(210,4,50)" rx="2" ry="2" />
<text  x="911.88" y="607.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTBAA::getBaseTypeInfo (1 samples, 0.04%)</title><rect x="1101.4" y="773" width="0.5" height="15.0" fill="rgb(209,187,19)" rx="2" ry="2" />
<text  x="1104.43" y="783.5" ></text>
</g>
<g >
<title>llvm::ConstantFoldConstant (1 samples, 0.04%)</title><rect x="910.6" y="661" width="0.5" height="15.0" fill="rgb(229,139,19)" rx="2" ry="2" />
<text  x="913.64" y="671.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType (1 samples, 0.04%)</title><rect x="1141.5" y="805" width="0.5" height="15.0" fill="rgb(229,120,47)" rx="2" ry="2" />
<text  x="1144.53" y="815.5" ></text>
</g>
<g >
<title>TTree::Dictionary (1 samples, 0.04%)</title><rect x="786.4" y="485" width="0.4" height="15.0" fill="rgb(244,86,30)" rx="2" ry="2" />
<text  x="789.39" y="495.5" ></text>
</g>
<g >
<title>clang::RedeclarableTemplateDecl::addSpecializationImpl&lt;clang::ClassTemplateDecl, clang::ClassTemplateSpecializationDecl&gt; (1 samples, 0.04%)</title><rect x="1128.3" y="661" width="0.5" height="15.0" fill="rgb(231,196,12)" rx="2" ry="2" />
<text  x="1131.31" y="671.5" ></text>
</g>
<g >
<title>llvm::SelectionDAG::Combine (2 samples, 0.07%)</title><rect x="1152.5" y="741" width="0.9" height="15.0" fill="rgb(236,72,53)" rx="2" ry="2" />
<text  x="1155.55" y="751.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.04%)</title><rect x="1146.8" y="645" width="0.5" height="15.0" fill="rgb(248,130,50)" rx="2" ry="2" />
<text  x="1149.82" y="655.5" ></text>
</g>
<g >
<title>clang::Sema::ArgumentDependentLookup (1 samples, 0.04%)</title><rect x="1126.1" y="933" width="0.4" height="15.0" fill="rgb(232,96,30)" rx="2" ry="2" />
<text  x="1129.11" y="943.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="18.8" y="229" width="0.5" height="15.0" fill="rgb(210,164,44)" rx="2" ry="2" />
<text  x="21.81" y="239.5" ></text>
</g>
<g >
<title>llvm::X86RegisterInfo::getReservedRegs (1 samples, 0.04%)</title><rect x="700.5" y="725" width="0.4" height="15.0" fill="rgb(237,166,14)" rx="2" ry="2" />
<text  x="703.46" y="735.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="21.9" y="693" width="0.4" height="15.0" fill="rgb(253,155,3)" rx="2" ry="2" />
<text  x="24.90" y="703.5" ></text>
</g>
<g >
<title>cling::MetaProcessor::process (1 samples, 0.04%)</title><rect x="903.6" y="773" width="0.4" height="15.0" fill="rgb(226,164,9)" rx="2" ry="2" />
<text  x="906.59" y="783.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertRecordDeclType (1 samples, 0.04%)</title><rect x="1117.3" y="805" width="0.4" height="15.0" fill="rgb(234,20,24)" rx="2" ry="2" />
<text  x="1120.30" y="815.5" ></text>
</g>
<g >
<title>clang::LinkageComputer::mergeTemplateLV (1 samples, 0.04%)</title><rect x="1105.8" y="549" width="0.5" height="15.0" fill="rgb(209,228,21)" rx="2" ry="2" />
<text  x="1108.84" y="559.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1164.0" y="917" width="0.4" height="15.0" fill="rgb(214,142,13)" rx="2" ry="2" />
<text  x="1167.00" y="927.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType (1 samples, 0.04%)</title><rect x="1138.4" y="869" width="0.5" height="15.0" fill="rgb(232,14,37)" rx="2" ry="2" />
<text  x="1141.45" y="879.5" ></text>
</g>
<g >
<title>TClass::CreateListOfDataMembers (1 samples, 0.04%)</title><rect x="783.7" y="773" width="0.5" height="15.0" fill="rgb(241,84,33)" rx="2" ry="2" />
<text  x="786.74" y="783.5" ></text>
</g>
<g >
<title>ROOT::Internal::TTreeReaderValueBase::ProxyReadTemplate&lt;&amp;ROOT::Detail::TBranchProxy::ReadNoParentNoBranchCountNoCollection&gt; (154 samples, 5.75%)</title><rect x="363.4" y="869" width="67.8" height="15.0" fill="rgb(247,51,3)" rx="2" ry="2" />
<text  x="366.38" y="879.5" >ROOT::I..</text>
</g>
<g >
<title>llvm::object::ELFObjectFile&lt;llvm::object::ELFType&lt;(llvm::support::endianness)1, true&gt; &gt;::getSymbolName (1 samples, 0.04%)</title><rect x="830.0" y="629" width="0.4" height="15.0" fill="rgb(228,10,47)" rx="2" ry="2" />
<text  x="833.01" y="639.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::runStaticInitializersOnce (23 samples, 0.86%)</title><rect x="689.0" y="821" width="10.1" height="15.0" fill="rgb(211,135,50)" rx="2" ry="2" />
<text  x="692.01" y="831.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.04%)</title><rect x="900.1" y="533" width="0.4" height="15.0" fill="rgb(214,2,9)" rx="2" ry="2" />
<text  x="903.07" y="543.5" ></text>
</g>
<g >
<title>llvm::SROA::runImpl (1 samples, 0.04%)</title><rect x="900.5" y="613" width="0.4" height="15.0" fill="rgb(252,8,9)" rx="2" ry="2" />
<text  x="903.51" y="623.5" ></text>
</g>
<g >
<title>clang::Sema::BuildMemberReferenceExpr (1 samples, 0.04%)</title><rect x="1133.6" y="725" width="0.4" height="15.0" fill="rgb(233,8,0)" rx="2" ry="2" />
<text  x="1136.60" y="735.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke (7 samples, 0.26%)</title><rect x="905.8" y="821" width="3.1" height="15.0" fill="rgb(214,129,45)" rx="2" ry="2" />
<text  x="908.80" y="831.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::SelectCodeCommon (3 samples, 0.11%)</title><rect x="1155.6" y="821" width="1.4" height="15.0" fill="rgb(230,204,18)" rx="2" ry="2" />
<text  x="1158.63" y="831.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1164.0" y="837" width="0.4" height="15.0" fill="rgb(207,183,23)" rx="2" ry="2" />
<text  x="1167.00" y="847.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadStmtFromStream (1 samples, 0.04%)</title><rect x="1155.2" y="549" width="0.4" height="15.0" fill="rgb(215,113,18)" rx="2" ry="2" />
<text  x="1158.19" y="559.5" ></text>
</g>
<g >
<title>clang::TemplateDeclInstantiator::InstantiateTypedefNameDecl (1 samples, 0.04%)</title><rect x="1131.0" y="821" width="0.4" height="15.0" fill="rgb(228,183,36)" rx="2" ry="2" />
<text  x="1133.96" y="831.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformInitializer (1 samples, 0.04%)</title><rect x="1122.1" y="805" width="0.5" height="15.0" fill="rgb(242,192,53)" rx="2" ry="2" />
<text  x="1125.14" y="815.5" ></text>
</g>
<g >
<title>cling::Interpreter::loadHeader (7 samples, 0.26%)</title><rect x="900.5" y="789" width="3.1" height="15.0" fill="rgb(254,147,1)" rx="2" ry="2" />
<text  x="903.51" y="799.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1172.8" y="661" width="0.5" height="15.0" fill="rgb(246,191,54)" rx="2" ry="2" />
<text  x="1175.82" y="671.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddDecl (1 samples, 0.04%)</title><rect x="1128.3" y="517" width="0.5" height="15.0" fill="rgb(247,117,6)" rx="2" ry="2" />
<text  x="1131.31" y="527.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertType (1 samples, 0.04%)</title><rect x="1117.7" y="821" width="0.5" height="15.0" fill="rgb(239,120,37)" rx="2" ry="2" />
<text  x="1120.74" y="831.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1067.9" y="629" width="0.5" height="15.0" fill="rgb(233,204,39)" rx="2" ry="2" />
<text  x="1070.95" y="639.5" ></text>
</g>
<g >
<title>clang::ASTStmtReader::VisitOverloadExpr (1 samples, 0.04%)</title><rect x="1132.7" y="869" width="0.5" height="15.0" fill="rgb(205,40,28)" rx="2" ry="2" />
<text  x="1135.72" y="879.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="21.9" y="85" width="0.4" height="15.0" fill="rgb(220,107,43)" rx="2" ry="2" />
<text  x="24.90" y="95.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::findOrEmitSection (23 samples, 0.86%)</title><rect x="878.9" y="581" width="10.2" height="15.0" fill="rgb(238,227,54)" rx="2" ry="2" />
<text  x="881.92" y="591.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (19 samples, 0.71%)</title><rect x="699.1" y="805" width="8.4" height="15.0" fill="rgb(211,28,18)" rx="2" ry="2" />
<text  x="702.14" y="815.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::~CodeGenModule (1 samples, 0.04%)</title><rect x="903.6" y="581" width="0.4" height="15.0" fill="rgb(207,147,46)" rx="2" ry="2" />
<text  x="906.59" y="591.5" ></text>
</g>
<g >
<title>cling::DynamicLibraryManager::loadLibrary (1 samples, 0.04%)</title><rect x="904.9" y="885" width="0.5" height="15.0" fill="rgb(222,20,46)" rx="2" ry="2" />
<text  x="907.91" y="895.5" ></text>
</g>
<g >
<title>clang::Sema::SubstDecl (1 samples, 0.04%)</title><rect x="1128.3" y="837" width="0.5" height="15.0" fill="rgb(237,186,32)" rx="2" ry="2" />
<text  x="1131.31" y="847.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTSIInObjectScope (1 samples, 0.04%)</title><rect x="1138.9" y="869" width="0.4" height="15.0" fill="rgb(219,229,26)" rx="2" ry="2" />
<text  x="1141.89" y="879.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::CodeGenAndEmitDAG (10 samples, 0.37%)</title><rect x="1159.6" y="725" width="4.4" height="15.0" fill="rgb(243,67,27)" rx="2" ry="2" />
<text  x="1162.60" y="735.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::~ScalarEvolution (1 samples, 0.04%)</title><rect x="1054.7" y="565" width="0.5" height="15.0" fill="rgb(254,97,9)" rx="2" ry="2" />
<text  x="1057.73" y="575.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveRelocations (1 samples, 0.04%)</title><rect x="1149.5" y="677" width="0.4" height="15.0" fill="rgb(215,209,28)" rx="2" ry="2" />
<text  x="1152.46" y="687.5" ></text>
</g>
<g >
<title>llvm::EHStreamer::emitExceptionTable (1 samples, 0.04%)</title><rect x="1144.6" y="693" width="0.5" height="15.0" fill="rgb(232,226,9)" rx="2" ry="2" />
<text  x="1147.62" y="703.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="21.9" y="885" width="0.4" height="15.0" fill="rgb(212,107,48)" rx="2" ry="2" />
<text  x="24.90" y="895.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord (1 samples, 0.04%)</title><rect x="904.5" y="517" width="0.4" height="15.0" fill="rgb(235,216,49)" rx="2" ry="2" />
<text  x="907.47" y="527.5" ></text>
</g>
<g >
<title>TChain::LoadTree (69 samples, 2.58%)</title><rect x="730.0" y="885" width="30.4" height="15.0" fill="rgb(217,99,18)" rx="2" ry="2" />
<text  x="732.99" y="895.5" >TC..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="11.8" y="341" width="0.4" height="15.0" fill="rgb(220,70,0)" rx="2" ry="2" />
<text  x="14.76" y="351.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::codegenCXXStructor (1 samples, 0.04%)</title><rect x="1112.9" y="805" width="0.4" height="15.0" fill="rgb(206,28,50)" rx="2" ry="2" />
<text  x="1115.89" y="815.5" ></text>
</g>
<g >
<title>clang::ASTContext::getTypeSizeInChars (1 samples, 0.04%)</title><rect x="1101.9" y="757" width="0.4" height="15.0" fill="rgb(254,80,21)" rx="2" ry="2" />
<text  x="1104.87" y="767.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.07%)</title><rect x="1164.9" y="853" width="0.9" height="15.0" fill="rgb(220,75,37)" rx="2" ry="2" />
<text  x="1167.88" y="863.5" ></text>
</g>
<g >
<title>ROOT::Internal::GetROOT2 (65 samples, 2.43%)</title><rect x="1066.2" y="933" width="28.6" height="15.0" fill="rgb(208,136,37)" rx="2" ry="2" />
<text  x="1069.18" y="943.5" >RO..</text>
</g>
<g >
<title>llvm::RuntimeDyld::finalizeWithMemoryManagerLocking (136 samples, 5.08%)</title><rect x="830.0" y="757" width="59.9" height="15.0" fill="rgb(218,229,10)" rx="2" ry="2" />
<text  x="833.01" y="767.5" >llvm::..</text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitAnyExprToTemp (1 samples, 0.04%)</title><rect x="1106.7" y="677" width="0.5" height="15.0" fill="rgb(205,150,19)" rx="2" ry="2" />
<text  x="1109.72" y="687.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.04%)</title><rect x="1103.6" y="853" width="0.5" height="15.0" fill="rgb(230,148,4)" rx="2" ry="2" />
<text  x="1106.64" y="863.5" ></text>
</g>
<g >
<title>clang::Decl::isWeakImported (1 samples, 0.04%)</title><rect x="1125.2" y="821" width="0.5" height="15.0" fill="rgb(242,88,48)" rx="2" ry="2" />
<text  x="1128.23" y="831.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyld::finalizeWithMemoryManagerLocking (10 samples, 0.37%)</title><rect x="1159.6" y="949" width="4.4" height="15.0" fill="rgb(244,199,18)" rx="2" ry="2" />
<text  x="1162.60" y="959.5" ></text>
</g>
<g >
<title>clang::Sema::BuildPossibleImplicitMemberExpr (1 samples, 0.04%)</title><rect x="1130.1" y="741" width="0.4" height="15.0" fill="rgb(221,199,19)" rx="2" ry="2" />
<text  x="1133.07" y="751.5" ></text>
</g>
<g >
<title>computeKnownBits (1 samples, 0.04%)</title><rect x="893.9" y="565" width="0.4" height="15.0" fill="rgb(228,120,22)" rx="2" ry="2" />
<text  x="896.90" y="575.5" ></text>
</g>
<g >
<title>execute_command_internal (26 samples, 0.97%)</title><rect x="10.4" y="741" width="11.5" height="15.0" fill="rgb(206,206,43)" rx="2" ry="2" />
<text  x="13.44" y="751.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke (1 samples, 0.04%)</title><rect x="1146.8" y="805" width="0.5" height="15.0" fill="rgb(210,77,16)" rx="2" ry="2" />
<text  x="1149.82" y="815.5" ></text>
</g>
<g >
<title>clang::Sema::CheckUnsequencedOperations (1 samples, 0.04%)</title><rect x="1134.5" y="709" width="0.4" height="15.0" fill="rgb(214,16,18)" rx="2" ry="2" />
<text  x="1137.48" y="719.5" ></text>
</g>
<g >
<title>clang::LinkageComputer::computeLVForDecl (1 samples, 0.04%)</title><rect x="1102.8" y="629" width="0.4" height="15.0" fill="rgb(220,172,32)" rx="2" ry="2" />
<text  x="1105.76" y="639.5" ></text>
</g>
<g >
<title>llvm::IVUsers::IVUsers (1 samples, 0.04%)</title><rect x="1159.2" y="725" width="0.4" height="15.0" fill="rgb(223,85,48)" rx="2" ry="2" />
<text  x="1162.16" y="735.5" ></text>
</g>
<g >
<title>clang::Preprocessor::~Preprocessor (1 samples, 0.04%)</title><rect x="1027.8" y="709" width="0.5" height="15.0" fill="rgb(245,39,37)" rx="2" ry="2" />
<text  x="1030.85" y="719.5" ></text>
</g>
<g >
<title>cling::utils::platform::DLOpen (1 samples, 0.04%)</title><rect x="1149.5" y="485" width="0.4" height="15.0" fill="rgb(233,14,45)" rx="2" ry="2" />
<text  x="1152.46" y="495.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="15.7" y="229" width="0.5" height="15.0" fill="rgb(246,39,46)" rx="2" ry="2" />
<text  x="18.73" y="239.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.15%)</title><rect x="1083.8" y="773" width="1.8" height="15.0" fill="rgb(232,207,17)" rx="2" ry="2" />
<text  x="1086.81" y="783.5" ></text>
</g>
<g >
<title>llvm::InstrEmitter::EmitMachineNode (1 samples, 0.04%)</title><rect x="700.9" y="661" width="0.4" height="15.0" fill="rgb(253,57,25)" rx="2" ry="2" />
<text  x="703.90" y="671.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass (1 samples, 0.04%)</title><rect x="1131.0" y="853" width="0.4" height="15.0" fill="rgb(242,183,41)" rx="2" ry="2" />
<text  x="1133.96" y="863.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTBAA::getBaseTypeInfoHelper (1 samples, 0.04%)</title><rect x="1103.2" y="757" width="0.4" height="15.0" fill="rgb(237,28,12)" rx="2" ry="2" />
<text  x="1106.20" y="767.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.11%)</title><rect x="1086.0" y="773" width="1.3" height="15.0" fill="rgb(247,202,27)" rx="2" ry="2" />
<text  x="1089.01" y="783.5" ></text>
</g>
<g >
<title>llvm::PMTopLevelManager::findAnalysisPass (6 samples, 0.22%)</title><rect x="704.0" y="725" width="2.6" height="15.0" fill="rgb(221,66,34)" rx="2" ry="2" />
<text  x="706.99" y="735.5" ></text>
</g>
<g >
<title>llvm::sroa::SROALegacyPass::runOnFunction (1 samples, 0.04%)</title><rect x="900.5" y="629" width="0.4" height="15.0" fill="rgb(235,126,35)" rx="2" ry="2" />
<text  x="903.51" y="639.5" ></text>
</g>
<g >
<title>cling::MetaProcessor::process (1 samples, 0.04%)</title><rect x="904.0" y="789" width="0.5" height="15.0" fill="rgb(235,96,23)" rx="2" ry="2" />
<text  x="907.03" y="799.5" ></text>
</g>
<g >
<title>TClass::CallShowMembers (1 samples, 0.04%)</title><rect x="905.4" y="645" width="0.4" height="15.0" fill="rgb(215,218,39)" rx="2" ry="2" />
<text  x="908.35" y="655.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization (1 samples, 0.04%)</title><rect x="1155.2" y="725" width="0.4" height="15.0" fill="rgb(226,49,23)" rx="2" ry="2" />
<text  x="1158.19" y="735.5" ></text>
</g>
<g >
<title>ROOT::Internal::RDF::GetBranchNames[abi:cxx11] (4 samples, 0.15%)</title><rect x="783.3" y="933" width="1.8" height="15.0" fill="rgb(227,94,41)" rx="2" ry="2" />
<text  x="786.30" y="943.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (2 samples, 0.07%)</title><rect x="1139.8" y="917" width="0.8" height="15.0" fill="rgb(226,142,14)" rx="2" ry="2" />
<text  x="1142.77" y="927.5" ></text>
</g>
<g >
<title>llvm::Expected&lt;unsigned long&gt;::~Expected (1 samples, 0.04%)</title><rect x="1100.6" y="645" width="0.4" height="15.0" fill="rgb(219,23,4)" rx="2" ry="2" />
<text  x="1103.55" y="655.5" ></text>
</g>
<g >
<title>cling::MetaParser::isXCommand (1 samples, 0.04%)</title><rect x="1027.0" y="821" width="0.4" height="15.0" fill="rgb(234,179,11)" rx="2" ry="2" />
<text  x="1029.97" y="831.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="21.9" y="805" width="0.4" height="15.0" fill="rgb(251,152,19)" rx="2" ry="2" />
<text  x="24.90" y="815.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1095.3" y="789" width="0.4" height="15.0" fill="rgb(225,225,6)" rx="2" ry="2" />
<text  x="1098.27" y="799.5" ></text>
</g>
<g >
<title>clang::SourceManager::getFileCharacteristic (1 samples, 0.04%)</title><rect x="1137.6" y="645" width="0.4" height="15.0" fill="rgb(213,153,0)" rx="2" ry="2" />
<text  x="1140.57" y="655.5" ></text>
</g>
<g >
<title>llvm::llvm_is_multithreaded (1 samples, 0.04%)</title><rect x="697.8" y="709" width="0.5" height="15.0" fill="rgb(244,85,36)" rx="2" ry="2" />
<text  x="700.82" y="719.5" ></text>
</g>
<g >
<title>llvm::orc::LambdaSymbolResolver&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt; const&amp;)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}&gt;::lookup (2 samples, 0.07%)</title><rect x="1152.5" y="917" width="0.9" height="15.0" fill="rgb(227,53,8)" rx="2" ry="2" />
<text  x="1155.55" y="927.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.04%)</title><rect x="786.4" y="885" width="0.4" height="15.0" fill="rgb(205,64,29)" rx="2" ry="2" />
<text  x="789.39" y="895.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXMemberOrOperatorMemberCallExpr (1 samples, 0.04%)</title><rect x="1101.9" y="853" width="0.4" height="15.0" fill="rgb(235,33,24)" rx="2" ry="2" />
<text  x="1104.87" y="863.5" ></text>
</g>
<g >
<title>cling::MetaSema::actOnLCommand (1 samples, 0.04%)</title><rect x="1151.2" y="949" width="0.5" height="15.0" fill="rgb(213,29,41)" rx="2" ry="2" />
<text  x="1154.22" y="959.5" ></text>
</g>
<g >
<title>cling::MetaParser::isCommand (12 samples, 0.45%)</title><rect x="905.8" y="917" width="5.3" height="15.0" fill="rgb(205,47,30)" rx="2" ry="2" />
<text  x="908.80" y="927.5" ></text>
</g>
<g >
<title>cling::Interpreter::loadHeader (1 samples, 0.04%)</title><rect x="1147.3" y="965" width="0.4" height="15.0" fill="rgb(233,223,48)" rx="2" ry="2" />
<text  x="1150.26" y="975.5" ></text>
</g>
<g >
<title>execute_command_internal (4 samples, 0.15%)</title><rect x="22.3" y="549" width="1.8" height="15.0" fill="rgb(215,124,44)" rx="2" ry="2" />
<text  x="25.34" y="559.5" ></text>
</g>
<g >
<title>llvm::AttributeSetNode::get (1 samples, 0.04%)</title><rect x="695.2" y="677" width="0.4" height="15.0" fill="rgb(227,22,15)" rx="2" ry="2" />
<text  x="698.18" y="687.5" ></text>
</g>
<g >
<title>ROOT::Detail::VecOps::RVecImpl&lt;float&gt;::operator=@plt (2 samples, 0.07%)</title><rect x="828.7" y="933" width="0.9" height="15.0" fill="rgb(243,165,0)" rx="2" ry="2" />
<text  x="831.69" y="943.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="21.9" y="741" width="0.4" height="15.0" fill="rgb(239,104,54)" rx="2" ry="2" />
<text  x="24.90" y="751.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.04%)</title><rect x="1124.3" y="805" width="0.5" height="15.0" fill="rgb(224,164,4)" rx="2" ry="2" />
<text  x="1127.35" y="815.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::CodeGenAndEmitDAG (1 samples, 0.04%)</title><rect x="1158.7" y="837" width="0.5" height="15.0" fill="rgb(244,225,17)" rx="2" ry="2" />
<text  x="1161.72" y="847.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (1 samples, 0.04%)</title><rect x="698.3" y="741" width="0.4" height="15.0" fill="rgb(208,189,29)" rx="2" ry="2" />
<text  x="701.26" y="751.5" ></text>
</g>
<g >
<title>_nl_find_locale (1 samples, 0.04%)</title><rect x="25.9" y="901" width="0.4" height="15.0" fill="rgb(213,75,22)" rx="2" ry="2" />
<text  x="28.86" y="911.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.04%)</title><rect x="1135.4" y="789" width="0.4" height="15.0" fill="rgb(220,145,34)" rx="2" ry="2" />
<text  x="1138.36" y="799.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl (1 samples, 0.04%)</title><rect x="1132.7" y="485" width="0.5" height="15.0" fill="rgb(243,224,8)" rx="2" ry="2" />
<text  x="1135.72" y="495.5" ></text>
</g>
<g >
<title>llvm::BlockFrequencyInfoImpl&lt;llvm::BasicBlock&gt;::calculate (1 samples, 0.04%)</title><rect x="1034.0" y="597" width="0.5" height="15.0" fill="rgb(213,60,38)" rx="2" ry="2" />
<text  x="1037.02" y="607.5" ></text>
</g>
<g >
<title>llvm::SelectionDAG::getConstant (2 samples, 0.07%)</title><rect x="1153.4" y="885" width="0.9" height="15.0" fill="rgb(209,110,7)" rx="2" ry="2" />
<text  x="1156.43" y="895.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddType (1 samples, 0.04%)</title><rect x="1140.2" y="629" width="0.4" height="15.0" fill="rgb(247,46,12)" rx="2" ry="2" />
<text  x="1143.21" y="639.5" ></text>
</g>
<g >
<title>cling::MetaSema::actOnLCommand (5 samples, 0.19%)</title><rect x="908.9" y="869" width="2.2" height="15.0" fill="rgb(234,174,34)" rx="2" ry="2" />
<text  x="911.88" y="879.5" ></text>
</g>
<g >
<title>clang::ExternalASTSource::getGeneration (1 samples, 0.04%)</title><rect x="1122.6" y="757" width="0.4" height="15.0" fill="rgb(222,13,26)" rx="2" ry="2" />
<text  x="1125.58" y="767.5" ></text>
</g>
<g >
<title>[bash] (39 samples, 1.46%)</title><rect x="1172.4" y="917" width="17.2" height="15.0" fill="rgb(206,105,10)" rx="2" ry="2" />
<text  x="1175.37" y="927.5" ></text>
</g>
<g >
<title>__GI__IO_file_underflow (1 samples, 0.04%)</title><rect x="1068.4" y="725" width="0.4" height="15.0" fill="rgb(246,149,4)" rx="2" ry="2" />
<text  x="1071.39" y="735.5" ></text>
</g>
<g >
<title>llvm::UnrollLoop (1 samples, 0.04%)</title><rect x="899.6" y="645" width="0.5" height="15.0" fill="rgb(212,67,27)" rx="2" ry="2" />
<text  x="902.63" y="655.5" ></text>
</g>
<g >
<title>TryCopyInitialization (1 samples, 0.04%)</title><rect x="1119.5" y="885" width="0.4" height="15.0" fill="rgb(249,99,49)" rx="2" ry="2" />
<text  x="1122.50" y="895.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1020.4" y="837" width="0.4" height="15.0" fill="rgb(231,64,10)" rx="2" ry="2" />
<text  x="1023.36" y="847.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;std::add_pointer, (anonymous namespace)::ScalarExprEmitter, llvm::Value*&gt;::Visit (1 samples, 0.04%)</title><rect x="1107.2" y="837" width="0.4" height="15.0" fill="rgb(228,56,22)" rx="2" ry="2" />
<text  x="1110.16" y="847.5" ></text>
</g>
<g >
<title>clang::DeclContext::LoadLexicalDeclsFromExternalStorage (1 samples, 0.04%)</title><rect x="786.4" y="261" width="0.4" height="15.0" fill="rgb(226,4,2)" rx="2" ry="2" />
<text  x="789.39" y="271.5" ></text>
</g>
<g >
<title>llvm::scc_iterator&lt;llvm::Function const*, llvm::GraphTraits&lt;llvm::Function const*&gt; &gt;::GetNextSCC (1 samples, 0.04%)</title><rect x="1034.5" y="597" width="0.4" height="15.0" fill="rgb(210,25,53)" rx="2" ry="2" />
<text  x="1037.46" y="607.5" ></text>
</g>
<g >
<title>_IO_new_proc_open (20 samples, 0.75%)</title><rect x="1078.5" y="837" width="8.8" height="15.0" fill="rgb(210,193,9)" rx="2" ry="2" />
<text  x="1081.52" y="847.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::getAddExpr (1 samples, 0.04%)</title><rect x="829.6" y="933" width="0.4" height="15.0" fill="rgb(249,181,9)" rx="2" ry="2" />
<text  x="832.57" y="943.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1097.9" y="837" width="0.4" height="15.0" fill="rgb(235,112,41)" rx="2" ry="2" />
<text  x="1100.91" y="847.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformNestedNameSpecifierLoc (1 samples, 0.04%)</title><rect x="1124.3" y="869" width="0.5" height="15.0" fill="rgb(253,145,1)" rx="2" ry="2" />
<text  x="1127.35" y="879.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;llvm::make_const_ptr, (anonymous namespace)::StmtProfiler, void&gt;::Visit (1 samples, 0.04%)</title><rect x="1100.1" y="661" width="0.5" height="15.0" fill="rgb(250,14,7)" rx="2" ry="2" />
<text  x="1103.11" y="671.5" ></text>
</g>
<g >
<title>llvm::PredicateInfo::~PredicateInfo (1 samples, 0.04%)</title><rect x="1145.1" y="917" width="0.4" height="15.0" fill="rgb(216,97,24)" rx="2" ry="2" />
<text  x="1148.06" y="927.5" ></text>
</g>
<g >
<title>clang::TemplateDeclInstantiator::VisitFunctionDecl (1 samples, 0.04%)</title><rect x="1122.6" y="837" width="0.4" height="15.0" fill="rgb(229,104,31)" rx="2" ry="2" />
<text  x="1125.58" y="847.5" ></text>
</g>
<g >
<title>llvm::Value::~Value (1 samples, 0.04%)</title><rect x="689.9" y="661" width="0.4" height="15.0" fill="rgb(231,79,44)" rx="2" ry="2" />
<text  x="692.89" y="671.5" ></text>
</g>
<g >
<title>[bash] (5 samples, 0.19%)</title><rect x="10.4" y="549" width="2.2" height="15.0" fill="rgb(226,41,14)" rx="2" ry="2" />
<text  x="13.44" y="559.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXConstructorCall (1 samples, 0.04%)</title><rect x="1101.4" y="965" width="0.5" height="15.0" fill="rgb(221,83,7)" rx="2" ry="2" />
<text  x="1104.43" y="975.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::operator= (1 samples, 0.04%)</title><rect x="1101.0" y="693" width="0.4" height="15.0" fill="rgb(206,167,34)" rx="2" ry="2" />
<text  x="1103.99" y="703.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (5 samples, 0.19%)</title><rect x="1109.8" y="709" width="2.2" height="15.0" fill="rgb(233,144,13)" rx="2" ry="2" />
<text  x="1112.81" y="719.5" ></text>
</g>
<g >
<title>clang::Stmt::getBeginLoc (1 samples, 0.04%)</title><rect x="1120.4" y="917" width="0.4" height="15.0" fill="rgb(227,135,43)" rx="2" ry="2" />
<text  x="1123.38" y="927.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_insert_node (1 samples, 0.04%)</title><rect x="1103.6" y="453" width="0.5" height="15.0" fill="rgb(213,71,52)" rx="2" ry="2" />
<text  x="1106.64" y="463.5" ></text>
</g>
<g >
<title>clang::Sema::BuildPossibleImplicitMemberExpr (1 samples, 0.04%)</title><rect x="1141.1" y="805" width="0.4" height="15.0" fill="rgb(247,136,19)" rx="2" ry="2" />
<text  x="1144.09" y="815.5" ></text>
</g>
<g >
<title>clang::DeclContext::addDecl (1 samples, 0.04%)</title><rect x="1127.9" y="629" width="0.4" height="15.0" fill="rgb(206,175,49)" rx="2" ry="2" />
<text  x="1130.87" y="639.5" ></text>
</g>
<g >
<title>TRint::ProcessLineNr (1 samples, 0.04%)</title><rect x="1027.4" y="965" width="0.4" height="15.0" fill="rgb(220,108,40)" rx="2" ry="2" />
<text  x="1030.41" y="975.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke (1 samples, 0.04%)</title><rect x="1147.7" y="885" width="0.4" height="15.0" fill="rgb(238,195,25)" rx="2" ry="2" />
<text  x="1150.70" y="895.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::verifyPreservedAnalysis (3 samples, 0.11%)</title><rect x="693.0" y="773" width="1.3" height="15.0" fill="rgb(225,175,18)" rx="2" ry="2" />
<text  x="695.97" y="783.5" ></text>
</g>
<g >
<title>llvm::FoldingSetBase::FindNodeOrInsertPos (1 samples, 0.04%)</title><rect x="1153.9" y="837" width="0.4" height="15.0" fill="rgb(210,114,54)" rx="2" ry="2" />
<text  x="1156.87" y="847.5" ></text>
</g>
<g >
<title>execute_command_internal (4 samples, 0.15%)</title><rect x="22.3" y="693" width="1.8" height="15.0" fill="rgb(236,45,23)" rx="2" ry="2" />
<text  x="25.34" y="703.5" ></text>
</g>
<g >
<title>cling::MetaSema::actOnLCommand (1 samples, 0.04%)</title><rect x="903.6" y="709" width="0.4" height="15.0" fill="rgb(231,130,33)" rx="2" ry="2" />
<text  x="906.59" y="719.5" ></text>
</g>
<g >
<title>TH1::Fill (228 samples, 8.51%)</title><rect x="920.3" y="949" width="100.5" height="15.0" fill="rgb(217,20,4)" rx="2" ry="2" />
<text  x="923.34" y="959.5" >TH1::Fill</text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallExpr (1 samples, 0.04%)</title><rect x="1105.8" y="789" width="0.5" height="15.0" fill="rgb(214,2,37)" rx="2" ry="2" />
<text  x="1108.84" y="799.5" ></text>
</g>
<g >
<title>llvm::DominatorTreeWrapperPass::releaseMemory (1 samples, 0.04%)</title><rect x="1054.3" y="581" width="0.4" height="15.0" fill="rgb(207,78,2)" rx="2" ry="2" />
<text  x="1057.29" y="591.5" ></text>
</g>
<g >
<title>llvm::OptimizationRemarkEmitterWrapperPass::runOnFunction (1 samples, 0.04%)</title><rect x="697.4" y="757" width="0.4" height="15.0" fill="rgb(232,102,12)" rx="2" ry="2" />
<text  x="700.38" y="767.5" ></text>
</g>
<g >
<title>llvm::Use::getUser (1 samples, 0.04%)</title><rect x="1145.5" y="853" width="0.4" height="15.0" fill="rgb(219,33,13)" rx="2" ry="2" />
<text  x="1148.50" y="863.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (4 samples, 0.15%)</title><rect x="24.1" y="933" width="1.8" height="15.0" fill="rgb(211,46,45)" rx="2" ry="2" />
<text  x="27.10" y="943.5" ></text>
</g>
<g >
<title>?? (9 samples, 0.34%)</title><rect x="794.8" y="933" width="3.9" height="15.0" fill="rgb(243,211,21)" rx="2" ry="2" />
<text  x="797.76" y="943.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (1 samples, 0.04%)</title><rect x="1131.8" y="709" width="0.5" height="15.0" fill="rgb(223,212,41)" rx="2" ry="2" />
<text  x="1134.84" y="719.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::CodeGenAndEmitDAG (1 samples, 0.04%)</title><rect x="1144.2" y="693" width="0.4" height="15.0" fill="rgb(220,20,47)" rx="2" ry="2" />
<text  x="1147.17" y="703.5" ></text>
</g>
<g >
<title>_dl_open (1 samples, 0.04%)</title><rect x="1094.8" y="805" width="0.5" height="15.0" fill="rgb(215,159,11)" rx="2" ry="2" />
<text  x="1097.82" y="815.5" ></text>
</g>
<g >
<title>llvm::Use::getUser (1 samples, 0.04%)</title><rect x="1027.4" y="581" width="0.4" height="15.0" fill="rgb(205,168,22)" rx="2" ry="2" />
<text  x="1030.41" y="591.5" ></text>
</g>
<g >
<title>clang::Sema::BuildReferenceType (1 samples, 0.04%)</title><rect x="1131.4" y="581" width="0.4" height="15.0" fill="rgb(218,124,3)" rx="2" ry="2" />
<text  x="1134.40" y="591.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="21.9" y="725" width="0.4" height="15.0" fill="rgb(242,90,29)" rx="2" ry="2" />
<text  x="24.90" y="735.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::commitTransaction (85 samples, 3.17%)</title><rect x="1028.7" y="709" width="37.5" height="15.0" fill="rgb(217,71,27)" rx="2" ry="2" />
<text  x="1031.73" y="719.5" >cli..</text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::setNonAliasAttributes (1 samples, 0.04%)</title><rect x="1113.8" y="821" width="0.4" height="15.0" fill="rgb(215,186,7)" rx="2" ry="2" />
<text  x="1116.77" y="831.5" ></text>
</g>
<g >
<title>clang::Sema::AddArgumentDependentLookupCandidates (1 samples, 0.04%)</title><rect x="1126.1" y="949" width="0.4" height="15.0" fill="rgb(211,214,34)" rx="2" ry="2" />
<text  x="1129.11" y="959.5" ></text>
</g>
<g >
<title>__GI__dl_catch_error (1 samples, 0.04%)</title><rect x="1094.8" y="853" width="0.5" height="15.0" fill="rgb(254,135,46)" rx="2" ry="2" />
<text  x="1097.82" y="863.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertTypeForMem (1 samples, 0.04%)</title><rect x="1117.7" y="485" width="0.5" height="15.0" fill="rgb(205,78,0)" rx="2" ry="2" />
<text  x="1120.74" y="495.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitRedeclarableTemplateDecl (1 samples, 0.04%)</title><rect x="1099.2" y="949" width="0.5" height="15.0" fill="rgb(254,182,36)" rx="2" ry="2" />
<text  x="1102.23" y="959.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::RebuildDependentNameType (1 samples, 0.04%)</title><rect x="1143.3" y="661" width="0.4" height="15.0" fill="rgb(246,118,18)" rx="2" ry="2" />
<text  x="1146.29" y="671.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateArgument (1 samples, 0.04%)</title><rect x="1131.0" y="741" width="0.4" height="15.0" fill="rgb(240,40,29)" rx="2" ry="2" />
<text  x="1133.96" y="751.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1143.7" y="885" width="0.5" height="15.0" fill="rgb(236,51,28)" rx="2" ry="2" />
<text  x="1146.73" y="895.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddDeclarationNameImpl (1 samples, 0.04%)</title><rect x="1124.3" y="581" width="0.5" height="15.0" fill="rgb(232,143,8)" rx="2" ry="2" />
<text  x="1127.35" y="591.5" ></text>
</g>
<g >
<title>clang::NestedNameSpecifier::FindOrInsert (1 samples, 0.04%)</title><rect x="1122.1" y="693" width="0.5" height="15.0" fill="rgb(233,121,14)" rx="2" ry="2" />
<text  x="1125.14" y="703.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (1 samples, 0.04%)</title><rect x="1027.4" y="677" width="0.4" height="15.0" fill="rgb(228,130,46)" rx="2" ry="2" />
<text  x="1030.41" y="687.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.04%)</title><rect x="1065.7" y="645" width="0.5" height="15.0" fill="rgb(219,191,21)" rx="2" ry="2" />
<text  x="1068.74" y="655.5" ></text>
</g>
<g >
<title>clang::Sema::SubstType (1 samples, 0.04%)</title><rect x="1127.4" y="901" width="0.5" height="15.0" fill="rgb(209,138,44)" rx="2" ry="2" />
<text  x="1130.43" y="911.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::isImpliedCondOperands (1 samples, 0.04%)</title><rect x="692.1" y="629" width="0.4" height="15.0" fill="rgb(228,97,10)" rx="2" ry="2" />
<text  x="695.09" y="639.5" ></text>
</g>
<g >
<title>llvm::FoldingSetBase::FindNodeOrInsertPos (1 samples, 0.04%)</title><rect x="1151.7" y="837" width="0.4" height="15.0" fill="rgb(216,71,32)" rx="2" ry="2" />
<text  x="1154.67" y="847.5" ></text>
</g>
<g >
<title>cling::MetaParser::isCommand (1 samples, 0.04%)</title><rect x="904.0" y="773" width="0.5" height="15.0" fill="rgb(217,167,24)" rx="2" ry="2" />
<text  x="907.03" y="783.5" ></text>
</g>
<g >
<title>__GI__dl_catch_error (1 samples, 0.04%)</title><rect x="1149.5" y="437" width="0.4" height="15.0" fill="rgb(230,147,4)" rx="2" ry="2" />
<text  x="1152.46" y="447.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTBAA::getBaseTypeInfo (1 samples, 0.04%)</title><rect x="1103.2" y="805" width="0.4" height="15.0" fill="rgb(220,190,21)" rx="2" ry="2" />
<text  x="1106.20" y="815.5" ></text>
</g>
<g >
<title>clang::Sema::CheckShadowInheritedFields (1 samples, 0.04%)</title><rect x="908.9" y="677" width="0.4" height="15.0" fill="rgb(223,119,12)" rx="2" ry="2" />
<text  x="911.88" y="687.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.04%)</title><rect x="1134.9" y="725" width="0.5" height="15.0" fill="rgb(209,178,32)" rx="2" ry="2" />
<text  x="1137.92" y="735.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::CreateTempAlloca (1 samples, 0.04%)</title><rect x="1106.7" y="661" width="0.5" height="15.0" fill="rgb(221,22,18)" rx="2" ry="2" />
<text  x="1109.72" y="671.5" ></text>
</g>
<g >
<title>do_lookup_x (1 samples, 0.04%)</title><rect x="1094.8" y="725" width="0.5" height="15.0" fill="rgb(254,167,24)" rx="2" ry="2" />
<text  x="1097.82" y="735.5" ></text>
</g>
<g >
<title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::CalculateFromScratch (1 samples, 0.04%)</title><rect x="1158.3" y="885" width="0.4" height="15.0" fill="rgb(210,103,38)" rx="2" ry="2" />
<text  x="1161.27" y="895.5" ></text>
</g>
<g >
<title>clang::Sema::CheckCompletedCXXClass (1 samples, 0.04%)</title><rect x="1128.8" y="661" width="0.4" height="15.0" fill="rgb(252,177,14)" rx="2" ry="2" />
<text  x="1131.75" y="671.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::getSCEV (1 samples, 0.04%)</title><rect x="1159.2" y="501" width="0.4" height="15.0" fill="rgb(222,128,52)" rx="2" ry="2" />
<text  x="1162.16" y="511.5" ></text>
</g>
<g >
<title>llvm::BranchFolder::TailMergeBlocks (1 samples, 0.04%)</title><rect x="841.0" y="549" width="0.5" height="15.0" fill="rgb(234,134,13)" rx="2" ry="2" />
<text  x="844.02" y="559.5" ></text>
</g>
<g >
<title>clang::ASTReader::FinishedDeserializing (1 samples, 0.04%)</title><rect x="1104.5" y="869" width="0.5" height="15.0" fill="rgb(238,133,13)" rx="2" ry="2" />
<text  x="1107.52" y="879.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::IncrementalParser (3 samples, 0.11%)</title><rect x="1069.7" y="821" width="1.3" height="15.0" fill="rgb(209,4,18)" rx="2" ry="2" />
<text  x="1072.71" y="831.5" ></text>
</g>
<g >
<title>TClass::GetDataMember (1 samples, 0.04%)</title><rect x="786.4" y="421" width="0.4" height="15.0" fill="rgb(241,33,32)" rx="2" ry="2" />
<text  x="789.39" y="431.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1123.0" y="821" width="0.5" height="15.0" fill="rgb(222,34,23)" rx="2" ry="2" />
<text  x="1126.02" y="831.5" ></text>
</g>
<g >
<title>llvm::TargetMachine::resetTargetOptions (2 samples, 0.07%)</title><rect x="845.0" y="549" width="0.9" height="15.0" fill="rgb(254,112,25)" rx="2" ry="2" />
<text  x="847.99" y="559.5" ></text>
</g>
<g >
<title>clang::CodeGeneratorImpl::HandleTranslationUnit (1 samples, 0.04%)</title><rect x="1149.9" y="805" width="0.4" height="15.0" fill="rgb(213,221,2)" rx="2" ry="2" />
<text  x="1152.90" y="815.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (1 samples, 0.04%)</title><rect x="1052.5" y="597" width="0.5" height="15.0" fill="rgb(221,180,22)" rx="2" ry="2" />
<text  x="1055.52" y="607.5" ></text>
</g>
<g >
<title>llvm::DenseMap&lt;llvm::SDNode*, unsigned int, llvm::DenseMapInfo&lt;llvm::SDNode*&gt;, llvm::detail::DenseMapPair&lt;llvm::SDNode*, unsigned int&gt; &gt;::grow (1 samples, 0.04%)</title><rect x="1152.5" y="725" width="0.5" height="15.0" fill="rgb(253,212,11)" rx="2" ry="2" />
<text  x="1155.55" y="735.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.04%)</title><rect x="1109.8" y="549" width="0.4" height="15.0" fill="rgb(245,87,1)" rx="2" ry="2" />
<text  x="1112.81" y="559.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="21.9" y="965" width="0.4" height="15.0" fill="rgb(231,72,17)" rx="2" ry="2" />
<text  x="24.90" y="975.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::codeGenTransaction (1 samples, 0.04%)</title><rect x="909.3" y="789" width="0.5" height="15.0" fill="rgb(253,125,40)" rx="2" ry="2" />
<text  x="912.32" y="799.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.11%)</title><rect x="1164.4" y="933" width="1.4" height="15.0" fill="rgb(233,213,43)" rx="2" ry="2" />
<text  x="1167.44" y="943.5" ></text>
</g>
<g >
<title>llvm::orc::SimpleCompiler::operator() (7 samples, 0.26%)</title><rect x="905.8" y="677" width="3.1" height="15.0" fill="rgb(221,30,50)" rx="2" ry="2" />
<text  x="908.80" y="687.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTSIInObjectScope (1 samples, 0.04%)</title><rect x="1143.7" y="805" width="0.5" height="15.0" fill="rgb(218,148,34)" rx="2" ry="2" />
<text  x="1146.73" y="815.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType (1 samples, 0.04%)</title><rect x="1139.3" y="917" width="0.5" height="15.0" fill="rgb(241,147,8)" rx="2" ry="2" />
<text  x="1142.33" y="927.5" ></text>
</g>
<g >
<title>TBranch::GetMother (1 samples, 0.04%)</title><rect x="785.9" y="789" width="0.5" height="15.0" fill="rgb(226,81,30)" rx="2" ry="2" />
<text  x="788.94" y="799.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.04%)</title><rect x="1143.7" y="757" width="0.5" height="15.0" fill="rgb(226,222,12)" rx="2" ry="2" />
<text  x="1146.73" y="767.5" ></text>
</g>
<g >
<title>clang::DeclContext::decls_begin (1 samples, 0.04%)</title><rect x="786.4" y="277" width="0.4" height="15.0" fill="rgb(244,17,22)" rx="2" ry="2" />
<text  x="789.39" y="287.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="11.8" y="325" width="0.4" height="15.0" fill="rgb(239,32,43)" rx="2" ry="2" />
<text  x="14.76" y="335.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::executeWrapper (7 samples, 0.26%)</title><rect x="905.8" y="837" width="3.1" height="15.0" fill="rgb(214,91,38)" rx="2" ry="2" />
<text  x="908.80" y="847.5" ></text>
</g>
<g >
<title>clang::LinkageComputer::getLVForDecl (1 samples, 0.04%)</title><rect x="1102.8" y="645" width="0.4" height="15.0" fill="rgb(238,179,16)" rx="2" ry="2" />
<text  x="1105.76" y="655.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::removeDeadPasses (1 samples, 0.04%)</title><rect x="1028.7" y="597" width="0.5" height="15.0" fill="rgb(244,16,54)" rx="2" ry="2" />
<text  x="1031.73" y="607.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1097.0" y="805" width="0.5" height="15.0" fill="rgb(234,71,44)" rx="2" ry="2" />
<text  x="1100.03" y="815.5" ></text>
</g>
<g >
<title>cling::BackendPasses::runOnModule (2 samples, 0.07%)</title><rect x="900.5" y="693" width="0.9" height="15.0" fill="rgb(254,56,19)" rx="2" ry="2" />
<text  x="903.51" y="703.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformNestedNameSpecifierLoc (2 samples, 0.07%)</title><rect x="1131.8" y="853" width="0.9" height="15.0" fill="rgb(207,122,34)" rx="2" ry="2" />
<text  x="1134.84" y="863.5" ></text>
</g>
<g >
<title>clang::Sema::BuildQualifiedDeclarationNameExpr (2 samples, 0.07%)</title><rect x="1139.8" y="949" width="0.8" height="15.0" fill="rgb(212,40,42)" rx="2" ry="2" />
<text  x="1142.77" y="959.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::~CodeGenTypes (1 samples, 0.04%)</title><rect x="903.6" y="565" width="0.4" height="15.0" fill="rgb(251,6,30)" rx="2" ry="2" />
<text  x="906.59" y="575.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::HandleCXXStaticMemberVarInstantiation (1 samples, 0.04%)</title><rect x="1141.1" y="661" width="0.4" height="15.0" fill="rgb(208,164,31)" rx="2" ry="2" />
<text  x="1144.09" y="671.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertTypeForMem (1 samples, 0.04%)</title><rect x="1117.3" y="869" width="0.4" height="15.0" fill="rgb(216,148,1)" rx="2" ry="2" />
<text  x="1120.30" y="879.5" ></text>
</g>
<g >
<title>iterativelySimplifyCFG (1 samples, 0.04%)</title><rect x="900.1" y="661" width="0.4" height="15.0" fill="rgb(232,174,25)" rx="2" ry="2" />
<text  x="903.07" y="671.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.04%)</title><rect x="1149.9" y="645" width="0.4" height="15.0" fill="rgb(216,107,13)" rx="2" ry="2" />
<text  x="1152.90" y="655.5" ></text>
</g>
<g >
<title>llvm::MachineFunctionPass::runOnFunction (1 samples, 0.04%)</title><rect x="1158.7" y="885" width="0.5" height="15.0" fill="rgb(229,190,43)" rx="2" ry="2" />
<text  x="1161.72" y="895.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::CodeGenAndEmitDAG (2 samples, 0.07%)</title><rect x="906.2" y="565" width="0.9" height="15.0" fill="rgb(246,37,38)" rx="2" ry="2" />
<text  x="909.24" y="575.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadStmtFromStream (1 samples, 0.04%)</title><rect x="1100.6" y="693" width="0.4" height="15.0" fill="rgb(225,182,46)" rx="2" ry="2" />
<text  x="1103.55" y="703.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1171.9" y="789" width="0.5" height="15.0" fill="rgb(212,53,8)" rx="2" ry="2" />
<text  x="1174.93" y="799.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization (1 samples, 0.04%)</title><rect x="1139.8" y="789" width="0.4" height="15.0" fill="rgb(221,208,33)" rx="2" ry="2" />
<text  x="1142.77" y="799.5" ></text>
</g>
<g >
<title>clang::Preprocessor::Lex (1 samples, 0.04%)</title><rect x="1071.0" y="789" width="0.5" height="15.0" fill="rgb(251,52,24)" rx="2" ry="2" />
<text  x="1074.03" y="799.5" ></text>
</g>
<g >
<title>execute_command (5 samples, 0.19%)</title><rect x="10.4" y="677" width="2.2" height="15.0" fill="rgb(247,33,9)" rx="2" ry="2" />
<text  x="13.44" y="687.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadCXXBaseSpecifier (1 samples, 0.04%)</title><rect x="1142.9" y="709" width="0.4" height="15.0" fill="rgb(230,179,38)" rx="2" ry="2" />
<text  x="1145.85" y="719.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit (1 samples, 0.04%)</title><rect x="1137.1" y="581" width="0.5" height="15.0" fill="rgb(213,175,28)" rx="2" ry="2" />
<text  x="1140.12" y="591.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentNameType (1 samples, 0.04%)</title><rect x="1140.2" y="789" width="0.4" height="15.0" fill="rgb(222,196,16)" rx="2" ry="2" />
<text  x="1143.21" y="799.5" ></text>
</g>
<g >
<title>llvm::orc::lookupWithLegacyFn&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}::operator()(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;) const::{lambda(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)#1}&gt; (1 samples, 0.04%)</title><rect x="1147.7" y="773" width="0.4" height="15.0" fill="rgb(243,141,43)" rx="2" ry="2" />
<text  x="1150.70" y="783.5" ></text>
</g>
<g >
<title>cling::Interpreter::DeclareInternal (7 samples, 0.26%)</title><rect x="900.5" y="773" width="3.1" height="15.0" fill="rgb(208,204,36)" rx="2" ry="2" />
<text  x="903.51" y="783.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::codegenCXXStructor (1 samples, 0.04%)</title><rect x="1111.1" y="661" width="0.5" height="15.0" fill="rgb(226,205,36)" rx="2" ry="2" />
<text  x="1114.13" y="671.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddType (1 samples, 0.04%)</title><rect x="1131.0" y="485" width="0.4" height="15.0" fill="rgb(243,105,7)" rx="2" ry="2" />
<text  x="1133.96" y="495.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallExpr (1 samples, 0.04%)</title><rect x="1102.3" y="837" width="0.5" height="15.0" fill="rgb(252,28,20)" rx="2" ry="2" />
<text  x="1105.32" y="847.5" ></text>
</g>
<g >
<title>clang::LinkageComputer::getLVForNamespaceScopeDecl (1 samples, 0.04%)</title><rect x="1105.4" y="485" width="0.4" height="15.0" fill="rgb(236,121,19)" rx="2" ry="2" />
<text  x="1108.40" y="495.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1143.7" y="949" width="0.5" height="15.0" fill="rgb(228,190,10)" rx="2" ry="2" />
<text  x="1146.73" y="959.5" ></text>
</g>
<g >
<title>computeKnownBits (1 samples, 0.04%)</title><rect x="893.0" y="581" width="0.5" height="15.0" fill="rgb(222,182,46)" rx="2" ry="2" />
<text  x="896.02" y="591.5" ></text>
</g>
<g >
<title>llvm::Pass::getAnalysisIfAvailable&lt;llvm::objcarc::ObjCARCAAWrapperPass&gt; (1 samples, 0.04%)</title><rect x="1064.9" y="629" width="0.4" height="15.0" fill="rgb(209,200,33)" rx="2" ry="2" />
<text  x="1067.86" y="639.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallExprLValue (1 samples, 0.04%)</title><rect x="1116.0" y="645" width="0.4" height="15.0" fill="rgb(206,83,17)" rx="2" ry="2" />
<text  x="1118.97" y="655.5" ></text>
</g>
<g >
<title>isSafeToConvert (1 samples, 0.04%)</title><rect x="1117.3" y="597" width="0.4" height="15.0" fill="rgb(226,76,15)" rx="2" ry="2" />
<text  x="1120.30" y="607.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke (136 samples, 5.08%)</title><rect x="830.0" y="661" width="59.9" height="15.0" fill="rgb(229,91,17)" rx="2" ry="2" />
<text  x="833.01" y="671.5" >std::_..</text>
</g>
<g >
<title>clang::ASTReader::ReadExpr (1 samples, 0.04%)</title><rect x="1100.6" y="709" width="0.4" height="15.0" fill="rgb(227,104,2)" rx="2" ry="2" />
<text  x="1103.55" y="719.5" ></text>
</g>
<g >
<title>llvm::MachineOptimizationRemarkEmitterPass::runOnMachineFunction (1 samples, 0.04%)</title><rect x="842.3" y="565" width="0.5" height="15.0" fill="rgb(237,184,14)" rx="2" ry="2" />
<text  x="845.35" y="575.5" ></text>
</g>
<g >
<title>TBranch::GetEntry (140 samples, 5.23%)</title><rect x="369.6" y="853" width="61.6" height="15.0" fill="rgb(226,210,11)" rx="2" ry="2" />
<text  x="372.55" y="863.5" >TBranc..</text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitLValue (1 samples, 0.04%)</title><rect x="1101.9" y="949" width="0.4" height="15.0" fill="rgb(234,113,36)" rx="2" ry="2" />
<text  x="1104.87" y="959.5" ></text>
</g>
<g >
<title>clang::Sema::SubstType (1 samples, 0.04%)</title><rect x="1142.0" y="789" width="0.4" height="15.0" fill="rgb(252,24,51)" rx="2" ry="2" />
<text  x="1144.97" y="799.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddType (1 samples, 0.04%)</title><rect x="1103.2" y="325" width="0.4" height="15.0" fill="rgb(228,52,39)" rx="2" ry="2" />
<text  x="1106.20" y="335.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::isImpliedCond (1 samples, 0.04%)</title><rect x="692.1" y="661" width="0.4" height="15.0" fill="rgb(239,44,18)" rx="2" ry="2" />
<text  x="695.09" y="671.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddTemplateArgument (1 samples, 0.04%)</title><rect x="1131.0" y="453" width="0.4" height="15.0" fill="rgb(232,33,19)" rx="2" ry="2" />
<text  x="1133.96" y="463.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl (1 samples, 0.04%)</title><rect x="1131.4" y="789" width="0.4" height="15.0" fill="rgb(230,164,16)" rx="2" ry="2" />
<text  x="1134.40" y="799.5" ></text>
</g>
<g >
<title>llvm::TargetOptions::DisableFramePointerElim (1 samples, 0.04%)</title><rect x="845.9" y="517" width="0.4" height="15.0" fill="rgb(225,151,2)" rx="2" ry="2" />
<text  x="848.87" y="527.5" ></text>
</g>
<g >
<title>llvm::MCStreamer::Finish (2 samples, 0.07%)</title><rect x="830.9" y="581" width="0.9" height="15.0" fill="rgb(229,187,32)" rx="2" ry="2" />
<text  x="833.89" y="591.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformElaboratedType (1 samples, 0.04%)</title><rect x="1127.4" y="853" width="0.5" height="15.0" fill="rgb(238,113,22)" rx="2" ry="2" />
<text  x="1130.43" y="863.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (4 samples, 0.15%)</title><rect x="1109.8" y="693" width="1.8" height="15.0" fill="rgb(216,37,15)" rx="2" ry="2" />
<text  x="1112.81" y="703.5" ></text>
</g>
<g >
<title>llvm::object::ELFFile&lt;llvm::object::ELFType&lt;(llvm::support::endianness)1, true&gt; &gt;::getSection (4 samples, 0.15%)</title><rect x="875.0" y="533" width="1.7" height="15.0" fill="rgb(235,130,37)" rx="2" ry="2" />
<text  x="877.95" y="543.5" ></text>
</g>
<g >
<title>clang::DeclContext::addHiddenDecl (1 samples, 0.04%)</title><rect x="1127.9" y="613" width="0.4" height="15.0" fill="rgb(239,194,13)" rx="2" ry="2" />
<text  x="1130.87" y="623.5" ></text>
</g>
<g >
<title>FinishOverloadedCallExpr (2 samples, 0.07%)</title><rect x="1121.7" y="949" width="0.9" height="15.0" fill="rgb(223,115,37)" rx="2" ry="2" />
<text  x="1124.70" y="959.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::codegenCXXStructor (1 samples, 0.04%)</title><rect x="1103.6" y="565" width="0.5" height="15.0" fill="rgb(251,204,48)" rx="2" ry="2" />
<text  x="1106.64" y="575.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertRecordDeclType (1 samples, 0.04%)</title><rect x="1117.3" y="629" width="0.4" height="15.0" fill="rgb(211,205,13)" rx="2" ry="2" />
<text  x="1120.30" y="639.5" ></text>
</g>
<g >
<title>[bash] (4 samples, 0.15%)</title><rect x="22.3" y="453" width="1.8" height="15.0" fill="rgb(252,121,32)" rx="2" ry="2" />
<text  x="25.34" y="463.5" ></text>
</g>
<g >
<title>clang::LinkageComputer::getLVForDecl (1 samples, 0.04%)</title><rect x="1105.4" y="565" width="0.4" height="15.0" fill="rgb(215,80,25)" rx="2" ry="2" />
<text  x="1108.40" y="575.5" ></text>
</g>
<g >
<title>dl_open_worker (1 samples, 0.04%)</title><rect x="904.9" y="533" width="0.5" height="15.0" fill="rgb(232,53,33)" rx="2" ry="2" />
<text  x="907.91" y="543.5" ></text>
</g>
<g >
<title>msort_with_tmp.part.0 (1 samples, 0.04%)</title><rect x="25.9" y="805" width="0.4" height="15.0" fill="rgb(205,53,23)" rx="2" ry="2" />
<text  x="28.86" y="815.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddType (1 samples, 0.04%)</title><rect x="1124.3" y="629" width="0.5" height="15.0" fill="rgb(213,72,35)" rx="2" ry="2" />
<text  x="1127.35" y="639.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddTemplateArgument (1 samples, 0.04%)</title><rect x="1140.2" y="645" width="0.4" height="15.0" fill="rgb(220,30,8)" rx="2" ry="2" />
<text  x="1143.21" y="655.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (40 samples, 1.49%)</title><rect x="1030.5" y="645" width="17.6" height="15.0" fill="rgb(231,157,33)" rx="2" ry="2" />
<text  x="1033.49" y="655.5" ></text>
</g>
<g >
<title>cling::MetaParser::isXCommand (6 samples, 0.22%)</title><rect x="1148.1" y="933" width="2.7" height="15.0" fill="rgb(254,170,0)" rx="2" ry="2" />
<text  x="1151.14" y="943.5" ></text>
</g>
<g >
<title>llvm::TargetTransformInfoWrapperPass::getTTI (1 samples, 0.04%)</title><rect x="906.7" y="549" width="0.4" height="15.0" fill="rgb(230,197,10)" rx="2" ry="2" />
<text  x="909.68" y="559.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertType (1 samples, 0.04%)</title><rect x="1117.7" y="565" width="0.5" height="15.0" fill="rgb(222,61,26)" rx="2" ry="2" />
<text  x="1120.74" y="575.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::run (1 samples, 0.04%)</title><rect x="901.4" y="629" width="0.4" height="15.0" fill="rgb(211,160,14)" rx="2" ry="2" />
<text  x="904.39" y="639.5" ></text>
</g>
<g >
<title>__dlopen_check (1 samples, 0.04%)</title><rect x="904.9" y="853" width="0.5" height="15.0" fill="rgb(229,80,20)" rx="2" ry="2" />
<text  x="907.91" y="863.5" ></text>
</g>
<g >
<title>openaux (1 samples, 0.04%)</title><rect x="904.9" y="485" width="0.5" height="15.0" fill="rgb(208,163,4)" rx="2" ry="2" />
<text  x="907.91" y="495.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalDefinition (1 samples, 0.04%)</title><rect x="1112.0" y="709" width="0.4" height="15.0" fill="rgb(224,101,24)" rx="2" ry="2" />
<text  x="1115.01" y="719.5" ></text>
</g>
<g >
<title>TCling::~TCling (2 samples, 0.07%)</title><rect x="1027.8" y="869" width="0.9" height="15.0" fill="rgb(230,76,6)" rx="2" ry="2" />
<text  x="1030.85" y="879.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1172.4" y="821" width="0.4" height="15.0" fill="rgb(252,67,6)" rx="2" ry="2" />
<text  x="1175.37" y="831.5" ></text>
</g>
<g >
<title>LookupMemberExpr (1 samples, 0.04%)</title><rect x="1133.6" y="709" width="0.4" height="15.0" fill="rgb(210,205,45)" rx="2" ry="2" />
<text  x="1136.60" y="719.5" ></text>
</g>
<g >
<title>execute_command (4 samples, 0.15%)</title><rect x="22.3" y="293" width="1.8" height="15.0" fill="rgb(245,32,7)" rx="2" ry="2" />
<text  x="25.34" y="303.5" ></text>
</g>
<g >
<title>llvm::object::ELFObjectFile&lt;llvm::object::ELFType&lt;(llvm::support::endianness)1, true&gt; &gt;::getRelocatedSection (15 samples, 0.56%)</title><rect x="881.6" y="533" width="6.6" height="15.0" fill="rgb(247,15,30)" rx="2" ry="2" />
<text  x="884.56" y="543.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::FindExternalLexicalDecls (1 samples, 0.04%)</title><rect x="905.4" y="437" width="0.4" height="15.0" fill="rgb(245,108,44)" rx="2" ry="2" />
<text  x="908.35" y="447.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass (1 samples, 0.04%)</title><rect x="1128.8" y="773" width="0.4" height="15.0" fill="rgb(226,144,27)" rx="2" ry="2" />
<text  x="1131.75" y="783.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization (2 samples, 0.07%)</title><rect x="1142.0" y="837" width="0.9" height="15.0" fill="rgb(205,191,21)" rx="2" ry="2" />
<text  x="1144.97" y="847.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitParmDecl (1 samples, 0.04%)</title><rect x="1116.9" y="901" width="0.4" height="15.0" fill="rgb(209,139,7)" rx="2" ry="2" />
<text  x="1119.86" y="911.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit (1 samples, 0.04%)</title><rect x="786.4" y="181" width="0.4" height="15.0" fill="rgb(253,187,49)" rx="2" ry="2" />
<text  x="789.39" y="191.5" ></text>
</g>
<g >
<title>clang::Sema::SubstType (1 samples, 0.04%)</title><rect x="1137.1" y="853" width="0.5" height="15.0" fill="rgb(241,191,18)" rx="2" ry="2" />
<text  x="1140.12" y="863.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (1 samples, 0.04%)</title><rect x="1094.4" y="757" width="0.4" height="15.0" fill="rgb(219,186,47)" rx="2" ry="2" />
<text  x="1097.38" y="767.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallArgs&lt;clang::FunctionProtoType&gt; (1 samples, 0.04%)</title><rect x="1106.7" y="725" width="0.5" height="15.0" fill="rgb(235,76,44)" rx="2" ry="2" />
<text  x="1109.72" y="735.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::freePass (4 samples, 0.15%)</title><rect x="1053.4" y="597" width="1.8" height="15.0" fill="rgb(218,44,37)" rx="2" ry="2" />
<text  x="1056.41" y="607.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.04%)</title><rect x="1141.5" y="901" width="0.5" height="15.0" fill="rgb(237,52,33)" rx="2" ry="2" />
<text  x="1144.53" y="911.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.04%)</title><rect x="1149.9" y="725" width="0.4" height="15.0" fill="rgb(243,9,46)" rx="2" ry="2" />
<text  x="1152.90" y="735.5" ></text>
</g>
<g >
<title>TCling::ProcessLineSynch (85 samples, 3.17%)</title><rect x="1028.7" y="885" width="37.5" height="15.0" fill="rgb(251,190,8)" rx="2" ry="2" />
<text  x="1031.73" y="895.5" >TCl..</text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::GetOrCreateLLVMFunction (1 samples, 0.04%)</title><rect x="1105.8" y="725" width="0.5" height="15.0" fill="rgb(209,126,36)" rx="2" ry="2" />
<text  x="1108.84" y="735.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::Release (13 samples, 0.49%)</title><rect x="1109.8" y="965" width="5.7" height="15.0" fill="rgb(243,13,16)" rx="2" ry="2" />
<text  x="1112.81" y="975.5" ></text>
</g>
<g >
<title>[bash] (4 samples, 0.15%)</title><rect x="22.3" y="405" width="1.8" height="15.0" fill="rgb(241,48,45)" rx="2" ry="2" />
<text  x="25.34" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (4 samples, 0.15%)</title><rect x="1076.8" y="821" width="1.7" height="15.0" fill="rgb(212,194,46)" rx="2" ry="2" />
<text  x="1079.76" y="831.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadExpr (1 samples, 0.04%)</title><rect x="1099.7" y="869" width="0.4" height="15.0" fill="rgb(238,77,48)" rx="2" ry="2" />
<text  x="1102.67" y="879.5" ></text>
</g>
<g >
<title>llvm::PMTopLevelManager::collectLastUses (1 samples, 0.04%)</title><rect x="1055.2" y="597" width="0.4" height="15.0" fill="rgb(220,23,12)" rx="2" ry="2" />
<text  x="1058.17" y="607.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;std::add_pointer, (anonymous namespace)::SequenceChecker, void&gt;::Visit (1 samples, 0.04%)</title><rect x="1134.5" y="661" width="0.4" height="15.0" fill="rgb(243,27,13)" rx="2" ry="2" />
<text  x="1137.48" y="671.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::GetOrCreateLLVMFunction (1 samples, 0.04%)</title><rect x="1105.4" y="693" width="0.4" height="15.0" fill="rgb(210,183,8)" rx="2" ry="2" />
<text  x="1108.40" y="703.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1176.8" y="821" width="0.4" height="15.0" fill="rgb(229,35,49)" rx="2" ry="2" />
<text  x="1179.78" y="831.5" ></text>
</g>
<g >
<title>TClass::GetStreamerInfo (1 samples, 0.04%)</title><rect x="784.2" y="805" width="0.4" height="15.0" fill="rgb(247,198,38)" rx="2" ry="2" />
<text  x="787.18" y="815.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::commitTransaction (23 samples, 0.86%)</title><rect x="689.0" y="853" width="10.1" height="15.0" fill="rgb(230,138,17)" rx="2" ry="2" />
<text  x="692.01" y="863.5" ></text>
</g>
<g >
<title>TRint::Run (87 samples, 3.25%)</title><rect x="1027.8" y="965" width="38.4" height="15.0" fill="rgb(213,5,32)" rx="2" ry="2" />
<text  x="1030.85" y="975.5" >TRi..</text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallExpr (1 samples, 0.04%)</title><rect x="1116.0" y="741" width="0.4" height="15.0" fill="rgb(242,227,27)" rx="2" ry="2" />
<text  x="1118.97" y="751.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass (1 samples, 0.04%)</title><rect x="1131.8" y="661" width="0.5" height="15.0" fill="rgb(230,196,7)" rx="2" ry="2" />
<text  x="1134.84" y="671.5" ></text>
</g>
<g >
<title>llvm::legacy::FunctionPassManager::run (3 samples, 0.11%)</title><rect x="689.0" y="789" width="1.3" height="15.0" fill="rgb(252,5,39)" rx="2" ry="2" />
<text  x="692.01" y="799.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.04%)</title><rect x="786.4" y="949" width="0.4" height="15.0" fill="rgb(240,138,49)" rx="2" ry="2" />
<text  x="789.39" y="959.5" ></text>
</g>
<g >
<title>getExternalLinkageFor (1 samples, 0.04%)</title><rect x="1108.9" y="837" width="0.5" height="15.0" fill="rgb(205,220,18)" rx="2" ry="2" />
<text  x="1111.92" y="847.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition (1 samples, 0.04%)</title><rect x="1114.2" y="885" width="0.5" height="15.0" fill="rgb(252,121,3)" rx="2" ry="2" />
<text  x="1117.21" y="895.5" ></text>
</g>
<g >
<title>TClingDataMemberInfo::TClingDataMemberInfo (1 samples, 0.04%)</title><rect x="783.7" y="725" width="0.5" height="15.0" fill="rgb(250,84,46)" rx="2" ry="2" />
<text  x="786.74" y="735.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="12.2" y="373" width="0.4" height="15.0" fill="rgb(236,37,32)" rx="2" ry="2" />
<text  x="15.20" y="383.5" ></text>
</g>
<g >
<title>clang::DiagnosticIDs::getDiagnosticSeverity (1 samples, 0.04%)</title><rect x="908.9" y="661" width="0.4" height="15.0" fill="rgb(234,222,47)" rx="2" ry="2" />
<text  x="911.88" y="671.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveExternalSymbols (1 samples, 0.04%)</title><rect x="1149.5" y="661" width="0.4" height="15.0" fill="rgb(235,57,8)" rx="2" ry="2" />
<text  x="1152.46" y="671.5" ></text>
</g>
<g >
<title>__GI___read (1 samples, 0.04%)</title><rect x="1098.8" y="949" width="0.4" height="15.0" fill="rgb(246,58,37)" rx="2" ry="2" />
<text  x="1101.79" y="959.5" ></text>
</g>
<g >
<title>llvm::X86AsmPrinter::runOnMachineFunction (1 samples, 0.04%)</title><rect x="908.0" y="597" width="0.4" height="15.0" fill="rgb(239,210,24)" rx="2" ry="2" />
<text  x="911.00" y="607.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::CreateTempAllocaWithoutCast (1 samples, 0.04%)</title><rect x="1115.1" y="725" width="0.4" height="15.0" fill="rgb(232,214,8)" rx="2" ry="2" />
<text  x="1118.09" y="735.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1164.0" y="773" width="0.4" height="15.0" fill="rgb(222,99,29)" rx="2" ry="2" />
<text  x="1167.00" y="783.5" ></text>
</g>
<g >
<title>LookupDirect (1 samples, 0.04%)</title><rect x="1118.2" y="837" width="0.4" height="15.0" fill="rgb(250,165,23)" rx="2" ry="2" />
<text  x="1121.18" y="847.5" ></text>
</g>
<g >
<title>.annobin_rtld.c (1 samples, 0.04%)</title><rect x="334.7" y="965" width="0.5" height="15.0" fill="rgb(212,9,27)" rx="2" ry="2" />
<text  x="337.74" y="975.5" ></text>
</g>
<g >
<title>llvm::MachineFunctionPass::runOnFunction (2 samples, 0.07%)</title><rect x="684.6" y="629" width="0.9" height="15.0" fill="rgb(217,93,18)" rx="2" ry="2" />
<text  x="687.60" y="639.5" ></text>
</g>
<g >
<title>llvm::FoldingSetNodeID::AddInteger (1 samples, 0.04%)</title><rect x="1153.4" y="837" width="0.5" height="15.0" fill="rgb(241,66,54)" rx="2" ry="2" />
<text  x="1156.43" y="847.5" ></text>
</g>
<g >
<title>llvm::DominatorTreeWrapperPass::runOnFunction (1 samples, 0.04%)</title><rect x="1049.0" y="613" width="0.4" height="15.0" fill="rgb(252,124,6)" rx="2" ry="2" />
<text  x="1052.00" y="623.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformCXXDependentScopeMemberExpr (1 samples, 0.04%)</title><rect x="1133.6" y="741" width="0.4" height="15.0" fill="rgb(246,78,44)" rx="2" ry="2" />
<text  x="1136.60" y="751.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1176.3" y="789" width="0.5" height="15.0" fill="rgb(212,47,54)" rx="2" ry="2" />
<text  x="1179.34" y="799.5" ></text>
</g>
<g >
<title>execute_command_internal (26 samples, 0.97%)</title><rect x="10.4" y="885" width="11.5" height="15.0" fill="rgb(206,222,30)" rx="2" ry="2" />
<text  x="13.44" y="895.5" ></text>
</g>
<g >
<title>llvm::BranchProbabilityInfoWrapperPass::runOnFunction (1 samples, 0.04%)</title><rect x="833.1" y="581" width="0.4" height="15.0" fill="rgb(205,117,39)" rx="2" ry="2" />
<text  x="836.09" y="591.5" ></text>
</g>
<g >
<title>cling::MultiplexInterpreterCallbacks::LookupObject (1 samples, 0.04%)</title><rect x="784.2" y="485" width="0.4" height="15.0" fill="rgb(234,25,2)" rx="2" ry="2" />
<text  x="787.18" y="495.5" ></text>
</g>
<g >
<title>markTails (1 samples, 0.04%)</title><rect x="891.7" y="677" width="0.4" height="15.0" fill="rgb(251,84,51)" rx="2" ry="2" />
<text  x="894.70" y="687.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::Compile (85 samples, 3.17%)</title><rect x="1028.7" y="725" width="37.5" height="15.0" fill="rgb(207,56,48)" rx="2" ry="2" />
<text  x="1031.73" y="735.5" >cli..</text>
</g>
<g >
<title>_dlerror_run (1 samples, 0.04%)</title><rect x="1094.8" y="869" width="0.5" height="15.0" fill="rgb(250,181,54)" rx="2" ry="2" />
<text  x="1097.82" y="879.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.04%)</title><rect x="865.7" y="517" width="0.4" height="15.0" fill="rgb(232,74,43)" rx="2" ry="2" />
<text  x="868.70" y="527.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1124.8" y="709" width="0.4" height="15.0" fill="rgb(239,112,50)" rx="2" ry="2" />
<text  x="1127.79" y="719.5" ></text>
</g>
<g >
<title>clang::ASTReader::readTypeRecord (1 samples, 0.04%)</title><rect x="905.4" y="341" width="0.4" height="15.0" fill="rgb(253,184,1)" rx="2" ry="2" />
<text  x="908.35" y="351.5" ></text>
</g>
<g >
<title>clang::Redeclarable&lt;clang::TagDecl&gt;::DeclLink::getPrevious (1 samples, 0.04%)</title><rect x="1103.2" y="469" width="0.4" height="15.0" fill="rgb(225,150,34)" rx="2" ry="2" />
<text  x="1106.20" y="479.5" ></text>
</g>
<g >
<title>cling::Interpreter::EvaluateInternal (7 samples, 0.26%)</title><rect x="905.8" y="869" width="3.1" height="15.0" fill="rgb(216,161,5)" rx="2" ry="2" />
<text  x="908.80" y="879.5" ></text>
</g>
<g >
<title>clang::DeclContext::lookup (1 samples, 0.04%)</title><rect x="1118.2" y="805" width="0.4" height="15.0" fill="rgb(220,106,19)" rx="2" ry="2" />
<text  x="1121.18" y="815.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetTypeSourceInfo (1 samples, 0.04%)</title><rect x="1100.6" y="901" width="0.4" height="15.0" fill="rgb(239,205,4)" rx="2" ry="2" />
<text  x="1103.55" y="911.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke (2 samples, 0.07%)</title><rect x="684.6" y="709" width="0.9" height="15.0" fill="rgb(207,74,31)" rx="2" ry="2" />
<text  x="687.60" y="719.5" ></text>
</g>
<g >
<title>TClass::SetRuntimeProperties (1 samples, 0.04%)</title><rect x="786.4" y="645" width="0.4" height="15.0" fill="rgb(208,72,40)" rx="2" ry="2" />
<text  x="789.39" y="655.5" ></text>
</g>
<g >
<title>runImpl (4 samples, 0.15%)</title><rect x="895.7" y="693" width="1.7" height="15.0" fill="rgb(231,189,23)" rx="2" ry="2" />
<text  x="898.66" y="703.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="895.7" y="629" width="0.4" height="15.0" fill="rgb(213,128,14)" rx="2" ry="2" />
<text  x="898.66" y="639.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetType (1 samples, 0.04%)</title><rect x="1099.7" y="933" width="0.4" height="15.0" fill="rgb(225,175,18)" rx="2" ry="2" />
<text  x="1102.67" y="943.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::FindExternalVisibleDeclsByName (1 samples, 0.04%)</title><rect x="1126.1" y="901" width="0.4" height="15.0" fill="rgb(245,0,41)" rx="2" ry="2" />
<text  x="1129.11" y="911.5" ></text>
</g>
<g >
<title>llvm::dyn_cast&lt;clang::BuiltinType, clang::QualType&gt; (1 samples, 0.04%)</title><rect x="1106.3" y="661" width="0.4" height="15.0" fill="rgb(211,132,42)" rx="2" ry="2" />
<text  x="1109.28" y="671.5" ></text>
</g>
<g >
<title>clang::Sema::AddOverloadCandidate (1 samples, 0.04%)</title><rect x="1120.8" y="917" width="0.5" height="15.0" fill="rgb(241,106,39)" rx="2" ry="2" />
<text  x="1123.82" y="927.5" ></text>
</g>
<g >
<title>clang::Type::isUnionType (1 samples, 0.04%)</title><rect x="1130.5" y="629" width="0.5" height="15.0" fill="rgb(205,16,42)" rx="2" ry="2" />
<text  x="1133.52" y="639.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.04%)</title><rect x="19.3" y="533" width="0.4" height="15.0" fill="rgb(250,209,22)" rx="2" ry="2" />
<text  x="22.25" y="543.5" ></text>
</g>
<g >
<title>TBranch::GetSubBranch (1 samples, 0.04%)</title><rect x="785.9" y="773" width="0.5" height="15.0" fill="rgb(236,93,10)" rx="2" ry="2" />
<text  x="788.94" y="783.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::ConstructAttributeList (1 samples, 0.04%)</title><rect x="1115.5" y="741" width="0.5" height="15.0" fill="rgb(214,149,26)" rx="2" ry="2" />
<text  x="1118.53" y="751.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentNameType (1 samples, 0.04%)</title><rect x="1143.3" y="677" width="0.4" height="15.0" fill="rgb(210,139,41)" rx="2" ry="2" />
<text  x="1146.29" y="687.5" ></text>
</g>
<g >
<title>clang::ASTContext::getTypeInfoImpl (1 samples, 0.04%)</title><rect x="1123.5" y="741" width="0.4" height="15.0" fill="rgb(228,71,11)" rx="2" ry="2" />
<text  x="1126.47" y="751.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::CallGraphNode*, unsigned int, llvm::DenseMapInfo&lt;llvm::CallGraphNode*&gt;, llvm::detail::DenseMapPair&lt;llvm::CallGraphNode*, unsigned int&gt; &gt;, llvm::CallGraphNode*, unsigned int, llvm::DenseMapInfo&lt;llvm::CallGraphNode*&gt;, llvm::detail::DenseMapPair&lt;llvm::CallGraphNode*, unsigned int&gt; &gt;::LookupBucketFor&lt;llvm::CallGraphNode*&gt; (1 samples, 0.04%)</title><rect x="1063.5" y="581" width="0.5" height="15.0" fill="rgb(217,195,31)" rx="2" ry="2" />
<text  x="1066.54" y="591.5" ></text>
</g>
<g >
<title>llvm::DenseMapIterator&lt;llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt;, llvm::DenseMapInfo&lt;llvm::BasicBlock*&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt; &gt;, true&gt;::AdvancePastEmptyBuckets (1 samples, 0.04%)</title><rect x="1047.7" y="581" width="0.4" height="15.0" fill="rgb(230,178,37)" rx="2" ry="2" />
<text  x="1050.68" y="591.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (1 samples, 0.04%)</title><rect x="1158.3" y="917" width="0.4" height="15.0" fill="rgb(239,181,37)" rx="2" ry="2" />
<text  x="1161.27" y="927.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitScalarExpr (1 samples, 0.04%)</title><rect x="1102.8" y="805" width="0.4" height="15.0" fill="rgb(244,40,14)" rx="2" ry="2" />
<text  x="1105.76" y="815.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.04%)</title><rect x="1124.3" y="789" width="0.5" height="15.0" fill="rgb(216,57,24)" rx="2" ry="2" />
<text  x="1127.35" y="799.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTSIInObjectScope (1 samples, 0.04%)</title><rect x="1124.3" y="741" width="0.5" height="15.0" fill="rgb(222,36,54)" rx="2" ry="2" />
<text  x="1127.35" y="751.5" ></text>
</g>
<g >
<title>clang::Sema::AddTemplateOverloadCandidate (1 samples, 0.04%)</title><rect x="1136.7" y="949" width="0.4" height="15.0" fill="rgb(241,80,49)" rx="2" ry="2" />
<text  x="1139.68" y="959.5" ></text>
</g>
<g >
<title>clang::Sema::SubstFunctionDeclType (1 samples, 0.04%)</title><rect x="1129.2" y="821" width="0.4" height="15.0" fill="rgb(238,140,3)" rx="2" ry="2" />
<text  x="1132.19" y="831.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::getAddExpr (1 samples, 0.04%)</title><rect x="829.6" y="901" width="0.4" height="15.0" fill="rgb(235,18,37)" rx="2" ry="2" />
<text  x="832.57" y="911.5" ></text>
</g>
<g >
<title>AddReachableCodeToWorklist (1 samples, 0.04%)</title><rect x="910.6" y="677" width="0.5" height="15.0" fill="rgb(217,7,47)" rx="2" ry="2" />
<text  x="913.64" y="687.5" ></text>
</g>
<g >
<title>clang::LinkageComputer::getLVForDecl (1 samples, 0.04%)</title><rect x="1105.8" y="597" width="0.5" height="15.0" fill="rgb(231,66,4)" rx="2" ry="2" />
<text  x="1108.84" y="607.5" ></text>
</g>
<g >
<title>llvm::Function::addAttributes (1 samples, 0.04%)</title><rect x="1112.9" y="773" width="0.4" height="15.0" fill="rgb(216,98,19)" rx="2" ry="2" />
<text  x="1115.89" y="783.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::codeGenTransaction (1 samples, 0.04%)</title><rect x="903.6" y="629" width="0.4" height="15.0" fill="rgb(233,192,17)" rx="2" ry="2" />
<text  x="906.59" y="639.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1168.4" y="885" width="0.4" height="15.0" fill="rgb(225,227,21)" rx="2" ry="2" />
<text  x="1171.41" y="895.5" ></text>
</g>
<g >
<title>llvm::BlockFrequencyInfoImpl&lt;llvm::BasicBlock&gt;::tryToComputeMassInFunction (1 samples, 0.04%)</title><rect x="832.7" y="549" width="0.4" height="15.0" fill="rgb(228,4,8)" rx="2" ry="2" />
<text  x="835.65" y="559.5" ></text>
</g>
<g >
<title>clang::CodeGen::EHScopeStack::pushFilter (1 samples, 0.04%)</title><rect x="1113.3" y="757" width="0.5" height="15.0" fill="rgb(215,111,50)" rx="2" ry="2" />
<text  x="1116.33" y="767.5" ></text>
</g>
<g >
<title>llvm::SelectionDAG::LegalizeTypes (2 samples, 0.07%)</title><rect x="1163.1" y="709" width="0.9" height="15.0" fill="rgb(250,176,33)" rx="2" ry="2" />
<text  x="1166.12" y="719.5" ></text>
</g>
<g >
<title>_dl_open (1 samples, 0.04%)</title><rect x="904.9" y="565" width="0.5" height="15.0" fill="rgb(220,62,13)" rx="2" ry="2" />
<text  x="907.91" y="575.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (10 samples, 0.37%)</title><rect x="1039.7" y="581" width="4.5" height="15.0" fill="rgb(236,137,51)" rx="2" ry="2" />
<text  x="1042.75" y="591.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.04%)</title><rect x="21.9" y="757" width="0.4" height="15.0" fill="rgb(236,139,37)" rx="2" ry="2" />
<text  x="24.90" y="767.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::isKnownPredicate (1 samples, 0.04%)</title><rect x="909.8" y="693" width="0.4" height="15.0" fill="rgb(245,143,47)" rx="2" ry="2" />
<text  x="912.76" y="703.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitFunctionTemplateDecl (1 samples, 0.04%)</title><rect x="1132.7" y="805" width="0.5" height="15.0" fill="rgb(226,89,51)" rx="2" ry="2" />
<text  x="1135.72" y="815.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1098.3" y="853" width="0.5" height="15.0" fill="rgb(243,119,25)" rx="2" ry="2" />
<text  x="1101.35" y="863.5" ></text>
</g>
<g >
<title>getPatternForClassTemplateSpecialization (1 samples, 0.04%)</title><rect x="1142.0" y="629" width="0.4" height="15.0" fill="rgb(235,21,52)" rx="2" ry="2" />
<text  x="1144.97" y="639.5" ></text>
</g>
<g >
<title>llvm::ScheduleDAGSDNodes::EmitSchedule (1 samples, 0.04%)</title><rect x="1144.2" y="677" width="0.4" height="15.0" fill="rgb(228,195,49)" rx="2" ry="2" />
<text  x="1147.17" y="687.5" ></text>
</g>
<g >
<title>clang::VarDecl::getDefinition (1 samples, 0.04%)</title><rect x="1130.1" y="581" width="0.4" height="15.0" fill="rgb(215,59,10)" rx="2" ry="2" />
<text  x="1133.07" y="591.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1171.9" y="885" width="0.5" height="15.0" fill="rgb(206,62,50)" rx="2" ry="2" />
<text  x="1174.93" y="895.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertType (1 samples, 0.04%)</title><rect x="1117.7" y="725" width="0.5" height="15.0" fill="rgb(228,112,1)" rx="2" ry="2" />
<text  x="1120.74" y="735.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTBAA::getBaseTypeInfoHelper (1 samples, 0.04%)</title><rect x="1101.4" y="757" width="0.5" height="15.0" fill="rgb(217,197,19)" rx="2" ry="2" />
<text  x="1104.43" y="767.5" ></text>
</g>
<g >
<title>clang::ASTReader::FinishedDeserializing (1 samples, 0.04%)</title><rect x="1142.9" y="645" width="0.4" height="15.0" fill="rgb(208,198,20)" rx="2" ry="2" />
<text  x="1145.85" y="655.5" ></text>
</g>
<g >
<title>llvm::MachineFunctionPass::runOnFunction (3 samples, 0.11%)</title><rect x="1157.0" y="869" width="1.3" height="15.0" fill="rgb(213,69,13)" rx="2" ry="2" />
<text  x="1159.95" y="879.5" ></text>
</g>
<g >
<title>reader_loop (26 samples, 0.97%)</title><rect x="10.4" y="917" width="11.5" height="15.0" fill="rgb(242,10,28)" rx="2" ry="2" />
<text  x="13.44" y="927.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::PopCleanupBlock (1 samples, 0.04%)</title><rect x="1116.4" y="869" width="0.5" height="15.0" fill="rgb(245,75,54)" rx="2" ry="2" />
<text  x="1119.42" y="879.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitStmt (7 samples, 0.26%)</title><rect x="1105.4" y="901" width="3.1" height="15.0" fill="rgb(238,184,5)" rx="2" ry="2" />
<text  x="1108.40" y="911.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::StartFunction (1 samples, 0.04%)</title><rect x="1105.0" y="917" width="0.4" height="15.0" fill="rgb(247,117,47)" rx="2" ry="2" />
<text  x="1107.96" y="927.5" ></text>
</g>
<g >
<title>llvm::MachineFunctionPass::runOnFunction (29 samples, 1.08%)</title><rect x="834.4" y="581" width="12.8" height="15.0" fill="rgb(254,17,41)" rx="2" ry="2" />
<text  x="837.41" y="591.5" ></text>
</g>
<g >
<title>isKnownNonZero (1 samples, 0.04%)</title><rect x="893.0" y="597" width="0.5" height="15.0" fill="rgb(240,148,54)" rx="2" ry="2" />
<text  x="896.02" y="607.5" ></text>
</g>
<g >
<title>cling::MetaParser::isXCommand (2 samples, 0.07%)</title><rect x="684.6" y="917" width="0.9" height="15.0" fill="rgb(253,63,31)" rx="2" ry="2" />
<text  x="687.60" y="927.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitFunctionProlog (1 samples, 0.04%)</title><rect x="1104.1" y="901" width="0.4" height="15.0" fill="rgb(219,42,35)" rx="2" ry="2" />
<text  x="1107.08" y="911.5" ></text>
</g>
<g >
<title>ClingMemberIterInternal::DCIter::DCIter (1 samples, 0.04%)</title><rect x="905.4" y="485" width="0.4" height="15.0" fill="rgb(247,2,54)" rx="2" ry="2" />
<text  x="908.35" y="495.5" ></text>
</g>
<g >
<title>TCling::Initialize (11 samples, 0.41%)</title><rect x="1071.5" y="885" width="4.8" height="15.0" fill="rgb(217,148,32)" rx="2" ry="2" />
<text  x="1074.47" y="895.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="849.8" y="501" width="0.5" height="15.0" fill="rgb(234,215,38)" rx="2" ry="2" />
<text  x="852.84" y="511.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl (1 samples, 0.04%)</title><rect x="1139.8" y="613" width="0.4" height="15.0" fill="rgb(205,97,8)" rx="2" ry="2" />
<text  x="1142.77" y="623.5" ></text>
</g>
<g >
<title>clang::TemplateDeclInstantiator::VisitFieldDecl (1 samples, 0.04%)</title><rect x="1155.2" y="805" width="0.4" height="15.0" fill="rgb(239,182,49)" rx="2" ry="2" />
<text  x="1158.19" y="815.5" ></text>
</g>
<g >
<title>clang::Sema::SubstType (1 samples, 0.04%)</title><rect x="1131.4" y="917" width="0.4" height="15.0" fill="rgb(214,169,38)" rx="2" ry="2" />
<text  x="1134.40" y="927.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.07%)</title><rect x="11.3" y="373" width="0.9" height="15.0" fill="rgb(254,74,21)" rx="2" ry="2" />
<text  x="14.32" y="383.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::freePass (3 samples, 0.11%)</title><rect x="849.4" y="565" width="1.3" height="15.0" fill="rgb(230,16,6)" rx="2" ry="2" />
<text  x="852.40" y="575.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.04%)</title><rect x="905.4" y="517" width="0.4" height="15.0" fill="rgb(248,17,1)" rx="2" ry="2" />
<text  x="908.35" y="527.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::~PassManagerImpl (1 samples, 0.04%)</title><rect x="904.0" y="645" width="0.5" height="15.0" fill="rgb(231,173,21)" rx="2" ry="2" />
<text  x="907.03" y="655.5" ></text>
</g>
<g >
<title>TBufferFile::ReadArray (7 samples, 0.26%)</title><rect x="644.1" y="885" width="3.0" height="15.0" fill="rgb(238,60,30)" rx="2" ry="2" />
<text  x="647.06" y="895.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGBuilder::visitSwitchCase (1 samples, 0.04%)</title><rect x="907.1" y="517" width="0.5" height="15.0" fill="rgb(248,143,51)" rx="2" ry="2" />
<text  x="910.12" y="527.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (2 samples, 0.07%)</title><rect x="1128.8" y="917" width="0.8" height="15.0" fill="rgb(212,95,38)" rx="2" ry="2" />
<text  x="1131.75" y="927.5" ></text>
</g>
<g >
<title>TBufferFile::ReadObjectAny (1 samples, 0.04%)</title><rect x="905.4" y="725" width="0.4" height="15.0" fill="rgb(208,16,21)" rx="2" ry="2" />
<text  x="908.35" y="735.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTemplateIdType (1 samples, 0.04%)</title><rect x="1143.3" y="885" width="0.4" height="15.0" fill="rgb(247,26,15)" rx="2" ry="2" />
<text  x="1146.29" y="895.5" ></text>
</g>
<g >
<title>ROOT::Internal::RDF::ColumnName2ColumnTypeName (1 samples, 0.04%)</title><rect x="785.9" y="901" width="0.5" height="15.0" fill="rgb(249,20,16)" rx="2" ry="2" />
<text  x="788.94" y="911.5" ></text>
</g>
<g >
<title>llvm::GlobalsAAResult::CollectSCCMembership (1 samples, 0.04%)</title><rect x="1063.5" y="613" width="0.5" height="15.0" fill="rgb(226,29,15)" rx="2" ry="2" />
<text  x="1066.54" y="623.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition (1 samples, 0.04%)</title><rect x="1110.7" y="661" width="0.4" height="15.0" fill="rgb(235,117,24)" rx="2" ry="2" />
<text  x="1113.69" y="671.5" ></text>
</g>
<g >
<title>clang::Expr::EvaluateAsConstantExpr (1 samples, 0.04%)</title><rect x="1123.5" y="885" width="0.4" height="15.0" fill="rgb(223,218,54)" rx="2" ry="2" />
<text  x="1126.47" y="895.5" ></text>
</g>
<g >
<title>TBufferFile::ReadInt (4 samples, 0.15%)</title><rect x="425.5" y="837" width="1.8" height="15.0" fill="rgb(245,129,30)" rx="2" ry="2" />
<text  x="428.51" y="847.5" ></text>
</g>
<g >
<title>clang::OverloadCandidateSet::isNewCandidate (1 samples, 0.04%)</title><rect x="1119.9" y="885" width="0.5" height="15.0" fill="rgb(241,46,22)" rx="2" ry="2" />
<text  x="1122.94" y="895.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1188.2" y="757" width="0.5" height="15.0" fill="rgb(229,84,2)" rx="2" ry="2" />
<text  x="1191.24" y="767.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::getTBAAAccessInfo (1 samples, 0.04%)</title><rect x="1103.2" y="885" width="0.4" height="15.0" fill="rgb(229,165,3)" rx="2" ry="2" />
<text  x="1106.20" y="895.5" ></text>
</g>
<g >
<title>eliminateTailRecursion (1 samples, 0.04%)</title><rect x="891.7" y="693" width="0.4" height="15.0" fill="rgb(231,76,12)" rx="2" ry="2" />
<text  x="894.70" y="703.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke (1 samples, 0.04%)</title><rect x="1146.8" y="933" width="0.5" height="15.0" fill="rgb(217,214,4)" rx="2" ry="2" />
<text  x="1149.82" y="943.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="10.9" y="341" width="0.4" height="15.0" fill="rgb(249,217,9)" rx="2" ry="2" />
<text  x="13.88" y="351.5" ></text>
</g>
<g >
<title>llvm::DAGTypeLegalizer::ReplaceValueWith (1 samples, 0.04%)</title><rect x="1157.4" y="757" width="0.4" height="15.0" fill="rgb(210,98,20)" rx="2" ry="2" />
<text  x="1160.39" y="767.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.04%)</title><rect x="414.5" y="741" width="0.4" height="15.0" fill="rgb(217,53,42)" rx="2" ry="2" />
<text  x="417.50" y="751.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitSimpleStmt (1 samples, 0.04%)</title><rect x="1102.8" y="933" width="0.4" height="15.0" fill="rgb(240,219,25)" rx="2" ry="2" />
<text  x="1105.76" y="943.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::setNonAliasAttributes (1 samples, 0.04%)</title><rect x="1103.6" y="549" width="0.5" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1106.64" y="559.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.11%)</title><rect x="22.8" y="69" width="1.3" height="15.0" fill="rgb(245,150,51)" rx="2" ry="2" />
<text  x="25.78" y="79.5" ></text>
</g>
<g >
<title>_start (40 samples, 1.49%)</title><rect x="1172.4" y="965" width="17.6" height="15.0" fill="rgb(244,162,42)" rx="2" ry="2" />
<text  x="1175.37" y="975.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.04%)</title><rect x="1110.7" y="565" width="0.4" height="15.0" fill="rgb(205,205,9)" rx="2" ry="2" />
<text  x="1113.69" y="575.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformInitializer (1 samples, 0.04%)</title><rect x="1134.0" y="789" width="0.5" height="15.0" fill="rgb(248,142,36)" rx="2" ry="2" />
<text  x="1137.04" y="799.5" ></text>
</g>
<g >
<title>clang::CXXRecordDecl::lookupInBases (1 samples, 0.04%)</title><rect x="1143.7" y="677" width="0.5" height="15.0" fill="rgb(230,149,19)" rx="2" ry="2" />
<text  x="1146.73" y="687.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (6 samples, 0.22%)</title><rect x="1109.8" y="789" width="2.6" height="15.0" fill="rgb(223,112,27)" rx="2" ry="2" />
<text  x="1112.81" y="799.5" ></text>
</g>
<g >
<title>TApplication::Terminate (2 samples, 0.07%)</title><rect x="1027.8" y="949" width="0.9" height="15.0" fill="rgb(227,176,39)" rx="2" ry="2" />
<text  x="1030.85" y="959.5" ></text>
</g>
<g >
<title>clang::VarDecl::getDefinition (1 samples, 0.04%)</title><rect x="1141.1" y="645" width="0.4" height="15.0" fill="rgb(206,83,36)" rx="2" ry="2" />
<text  x="1144.09" y="655.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitRedeclarable&lt;clang::RedeclarableTemplateDecl&gt; (1 samples, 0.04%)</title><rect x="904.5" y="725" width="0.4" height="15.0" fill="rgb(217,69,43)" rx="2" ry="2" />
<text  x="907.47" y="735.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1129.2" y="709" width="0.4" height="15.0" fill="rgb(251,88,46)" rx="2" ry="2" />
<text  x="1132.19" y="719.5" ></text>
</g>
<g >
<title>cling::Interpreter::executeTransaction (1 samples, 0.04%)</title><rect x="1027.4" y="709" width="0.4" height="15.0" fill="rgb(231,54,37)" rx="2" ry="2" />
<text  x="1030.41" y="719.5" ></text>
</g>
<g >
<title>llvm::orc::SimpleCompiler::operator() (3 samples, 0.11%)</title><rect x="1155.6" y="965" width="1.4" height="15.0" fill="rgb(228,42,49)" rx="2" ry="2" />
<text  x="1158.63" y="975.5" ></text>
</g>
<g >
<title>execute_command_internal (26 samples, 0.97%)</title><rect x="10.4" y="837" width="11.5" height="15.0" fill="rgb(243,11,46)" rx="2" ry="2" />
<text  x="13.44" y="847.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke (4 samples, 0.15%)</title><rect x="1148.1" y="725" width="1.8" height="15.0" fill="rgb(241,219,41)" rx="2" ry="2" />
<text  x="1151.14" y="735.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::CodeGenAndEmitDAG (3 samples, 0.11%)</title><rect x="1155.6" y="853" width="1.4" height="15.0" fill="rgb(233,102,34)" rx="2" ry="2" />
<text  x="1158.63" y="863.5" ></text>
</g>
<g >
<title>_nl_find_locale (1 samples, 0.04%)</title><rect x="1189.6" y="885" width="0.4" height="15.0" fill="rgb(220,21,35)" rx="2" ry="2" />
<text  x="1192.56" y="895.5" ></text>
</g>
<g >
<title>__GI___getpid (2 samples, 0.07%)</title><rect x="1187.8" y="837" width="0.9" height="15.0" fill="rgb(228,178,4)" rx="2" ry="2" />
<text  x="1190.80" y="847.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.11%)</title><rect x="1066.6" y="661" width="1.3" height="15.0" fill="rgb(227,36,36)" rx="2" ry="2" />
<text  x="1069.62" y="671.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertRecordDeclType (1 samples, 0.04%)</title><rect x="1117.7" y="613" width="0.5" height="15.0" fill="rgb(206,174,15)" rx="2" ry="2" />
<text  x="1120.74" y="623.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (1 samples, 0.04%)</title><rect x="1137.1" y="741" width="0.5" height="15.0" fill="rgb(242,186,25)" rx="2" ry="2" />
<text  x="1140.12" y="751.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.04%)</title><rect x="1103.6" y="885" width="0.5" height="15.0" fill="rgb(247,206,12)" rx="2" ry="2" />
<text  x="1106.64" y="895.5" ></text>
</g>
<g >
<title>llvm::BitstreamCursor::readRecord (1 samples, 0.04%)</title><rect x="1099.2" y="485" width="0.5" height="15.0" fill="rgb(212,129,29)" rx="2" ry="2" />
<text  x="1102.23" y="495.5" ></text>
</g>
<g >
<title>[bash] (9 samples, 0.34%)</title><rect x="1172.8" y="837" width="4.0" height="15.0" fill="rgb(224,197,23)" rx="2" ry="2" />
<text  x="1175.82" y="847.5" ></text>
</g>
<g >
<title>TApplication::TApplication (65 samples, 2.43%)</title><rect x="1066.2" y="949" width="28.6" height="15.0" fill="rgb(222,108,29)" rx="2" ry="2" />
<text  x="1069.18" y="959.5" >TA..</text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.04%)</title><rect x="1134.9" y="757" width="0.5" height="15.0" fill="rgb(252,150,53)" rx="2" ry="2" />
<text  x="1137.92" y="767.5" ></text>
</g>
<g >
<title>DynamicPath (40 samples, 1.49%)</title><rect x="1076.3" y="869" width="17.6" height="15.0" fill="rgb(241,98,14)" rx="2" ry="2" />
<text  x="1079.32" y="879.5" ></text>
</g>
<g >
<title>ROOT::Detail::RDF::RLoopManager::RunAndCheckFilters@plt (1 samples, 0.04%)</title><rect x="782.4" y="933" width="0.5" height="15.0" fill="rgb(235,36,50)" rx="2" ry="2" />
<text  x="785.42" y="943.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTemplateIdType (1 samples, 0.04%)</title><rect x="1128.3" y="677" width="0.5" height="15.0" fill="rgb(220,223,0)" rx="2" ry="2" />
<text  x="1131.31" y="687.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddTemplateArgument (1 samples, 0.04%)</title><rect x="1103.2" y="389" width="0.4" height="15.0" fill="rgb(216,136,3)" rx="2" ry="2" />
<text  x="1106.20" y="399.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.04%)</title><rect x="1078.1" y="773" width="0.4" height="15.0" fill="rgb(252,193,42)" rx="2" ry="2" />
<text  x="1081.08" y="783.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1169.3" y="821" width="0.4" height="15.0" fill="rgb(233,2,6)" rx="2" ry="2" />
<text  x="1172.29" y="831.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitDeclaratorDecl (1 samples, 0.04%)</title><rect x="1117.3" y="453" width="0.4" height="15.0" fill="rgb(231,180,8)" rx="2" ry="2" />
<text  x="1120.30" y="463.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::GetExternalDeclStmt (1 samples, 0.04%)</title><rect x="1121.3" y="837" width="0.4" height="15.0" fill="rgb(234,57,29)" rx="2" ry="2" />
<text  x="1124.26" y="847.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (3 samples, 0.11%)</title><rect x="1071.5" y="789" width="1.3" height="15.0" fill="rgb(220,185,13)" rx="2" ry="2" />
<text  x="1074.47" y="799.5" ></text>
</g>
<g >
<title>make_child (8 samples, 0.30%)</title><rect x="1173.3" y="821" width="3.5" height="15.0" fill="rgb(212,183,17)" rx="2" ry="2" />
<text  x="1176.26" y="831.5" ></text>
</g>
<g >
<title>cling::Interpreter::RunFunction (1 samples, 0.04%)</title><rect x="1150.8" y="933" width="0.4" height="15.0" fill="rgb(233,133,33)" rx="2" ry="2" />
<text  x="1153.78" y="943.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.07%)</title><rect x="1175.5" y="629" width="0.8" height="15.0" fill="rgb(238,185,15)" rx="2" ry="2" />
<text  x="1178.46" y="639.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl (1 samples, 0.04%)</title><rect x="1099.2" y="821" width="0.5" height="15.0" fill="rgb(250,149,54)" rx="2" ry="2" />
<text  x="1102.23" y="831.5" ></text>
</g>
<g >
<title>cling::Interpreter::EvaluateInternal (1 samples, 0.04%)</title><rect x="904.0" y="725" width="0.5" height="15.0" fill="rgb(240,200,40)" rx="2" ry="2" />
<text  x="907.03" y="735.5" ></text>
</g>
<g >
<title>[unknown] (12 samples, 0.45%)</title><rect x="1078.5" y="805" width="5.3" height="15.0" fill="rgb(217,68,1)" rx="2" ry="2" />
<text  x="1081.52" y="815.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition (1 samples, 0.04%)</title><rect x="1128.3" y="901" width="0.5" height="15.0" fill="rgb(210,102,27)" rx="2" ry="2" />
<text  x="1131.31" y="911.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (1 samples, 0.04%)</title><rect x="10.0" y="933" width="0.4" height="15.0" fill="rgb(213,29,12)" rx="2" ry="2" />
<text  x="13.00" y="943.5" ></text>
</g>
<g >
<title>TBranch::GetFullName (1 samples, 0.04%)</title><rect x="785.9" y="821" width="0.5" height="15.0" fill="rgb(217,116,31)" rx="2" ry="2" />
<text  x="788.94" y="831.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1097.5" y="581" width="0.4" height="15.0" fill="rgb(205,72,32)" rx="2" ry="2" />
<text  x="1100.47" y="591.5" ></text>
</g>
<g >
<title>clang::ASTReader::finishPendingActions (1 samples, 0.04%)</title><rect x="1142.9" y="629" width="0.4" height="15.0" fill="rgb(208,192,47)" rx="2" ry="2" />
<text  x="1145.85" y="639.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformCompoundStmt (1 samples, 0.04%)</title><rect x="1134.5" y="773" width="0.4" height="15.0" fill="rgb(251,135,3)" rx="2" ry="2" />
<text  x="1137.48" y="783.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentScopeDeclRefExpr (1 samples, 0.04%)</title><rect x="1124.3" y="773" width="0.5" height="15.0" fill="rgb(233,194,11)" rx="2" ry="2" />
<text  x="1127.35" y="783.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="11.8" y="293" width="0.4" height="15.0" fill="rgb(215,130,32)" rx="2" ry="2" />
<text  x="14.76" y="303.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1124.3" y="917" width="0.5" height="15.0" fill="rgb(229,68,8)" rx="2" ry="2" />
<text  x="1127.35" y="927.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentNameType (2 samples, 0.07%)</title><rect x="1131.8" y="869" width="0.9" height="15.0" fill="rgb(208,98,7)" rx="2" ry="2" />
<text  x="1134.84" y="879.5" ></text>
</g>
<g >
<title>clang::LinkageComputer::getLVForClosure (1 samples, 0.04%)</title><rect x="1105.4" y="533" width="0.4" height="15.0" fill="rgb(214,58,31)" rx="2" ry="2" />
<text  x="1108.40" y="543.5" ></text>
</g>
<g >
<title>execute_command_internal (4 samples, 0.15%)</title><rect x="22.3" y="165" width="1.8" height="15.0" fill="rgb(207,66,49)" rx="2" ry="2" />
<text  x="25.34" y="175.5" ></text>
</g>
<g >
<title>clang::MultiplexConsumer::HandleCXXStaticMemberVarInstantiation (1 samples, 0.04%)</title><rect x="1130.1" y="629" width="0.4" height="15.0" fill="rgb(215,131,21)" rx="2" ry="2" />
<text  x="1133.07" y="639.5" ></text>
</g>
<g >
<title>clang::Sema::LookupName (1 samples, 0.04%)</title><rect x="784.2" y="437" width="0.4" height="15.0" fill="rgb(205,44,7)" rx="2" ry="2" />
<text  x="787.18" y="447.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnModule (1 samples, 0.04%)</title><rect x="902.7" y="677" width="0.5" height="15.0" fill="rgb(230,71,31)" rx="2" ry="2" />
<text  x="905.71" y="687.5" ></text>
</g>
<g >
<title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::ApplyUpdates (1 samples, 0.04%)</title><rect x="899.6" y="597" width="0.5" height="15.0" fill="rgb(237,128,51)" rx="2" ry="2" />
<text  x="902.63" y="607.5" ></text>
</g>
<g >
<title>expand_string_assignment (1 samples, 0.04%)</title><rect x="21.9" y="517" width="0.4" height="15.0" fill="rgb(235,124,35)" rx="2" ry="2" />
<text  x="24.90" y="527.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl (1 samples, 0.04%)</title><rect x="1104.5" y="821" width="0.5" height="15.0" fill="rgb(216,149,7)" rx="2" ry="2" />
<text  x="1107.52" y="831.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl (1 samples, 0.04%)</title><rect x="904.5" y="613" width="0.4" height="15.0" fill="rgb(223,105,18)" rx="2" ry="2" />
<text  x="907.47" y="623.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddType (1 samples, 0.04%)</title><rect x="1131.0" y="533" width="0.4" height="15.0" fill="rgb(228,227,7)" rx="2" ry="2" />
<text  x="1133.96" y="543.5" ></text>
</g>
<g >
<title>cling::MetaParser::isCommand (1 samples, 0.04%)</title><rect x="1027.4" y="837" width="0.4" height="15.0" fill="rgb(239,175,31)" rx="2" ry="2" />
<text  x="1030.41" y="847.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.11%)</title><rect x="1069.7" y="725" width="1.3" height="15.0" fill="rgb(235,42,12)" rx="2" ry="2" />
<text  x="1072.71" y="735.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke (2 samples, 0.07%)</title><rect x="684.6" y="837" width="0.9" height="15.0" fill="rgb(241,90,25)" rx="2" ry="2" />
<text  x="687.60" y="847.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertType (1 samples, 0.04%)</title><rect x="1117.7" y="949" width="0.5" height="15.0" fill="rgb(237,172,1)" rx="2" ry="2" />
<text  x="1120.74" y="959.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1168.4" y="901" width="0.4" height="15.0" fill="rgb(242,227,23)" rx="2" ry="2" />
<text  x="1171.41" y="911.5" ></text>
</g>
<g >
<title>make_child (1 samples, 0.04%)</title><rect x="21.9" y="213" width="0.4" height="15.0" fill="rgb(210,7,42)" rx="2" ry="2" />
<text  x="24.90" y="223.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetType (1 samples, 0.04%)</title><rect x="1100.1" y="869" width="0.5" height="15.0" fill="rgb(239,217,49)" rx="2" ry="2" />
<text  x="1103.11" y="879.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformNestedNameSpecifierLoc (1 samples, 0.04%)</title><rect x="1138.9" y="885" width="0.4" height="15.0" fill="rgb(215,201,51)" rx="2" ry="2" />
<text  x="1141.89" y="895.5" ></text>
</g>
<g >
<title>llvm::isKnownNonZero (1 samples, 0.04%)</title><rect x="893.0" y="613" width="0.5" height="15.0" fill="rgb(253,191,51)" rx="2" ry="2" />
<text  x="896.02" y="623.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (3 samples, 0.11%)</title><rect x="1129.6" y="901" width="1.4" height="15.0" fill="rgb(218,59,36)" rx="2" ry="2" />
<text  x="1132.63" y="911.5" ></text>
</g>
<g >
<title>llvm::BasicBlock::getTerminator (1 samples, 0.04%)</title><rect x="832.7" y="517" width="0.4" height="15.0" fill="rgb(219,37,34)" rx="2" ry="2" />
<text  x="835.65" y="527.5" ></text>
</g>
<g >
<title>call_init.part.0 (1 samples, 0.04%)</title><rect x="1171.9" y="933" width="0.5" height="15.0" fill="rgb(248,78,3)" rx="2" ry="2" />
<text  x="1174.93" y="943.5" ></text>
</g>
<g >
<title>command_substitute (14 samples, 0.52%)</title><rect x="13.1" y="341" width="6.2" height="15.0" fill="rgb(246,115,32)" rx="2" ry="2" />
<text  x="16.08" y="351.5" ></text>
</g>
<g >
<title>FinishOverloadedCallExpr (1 samples, 0.04%)</title><rect x="1121.3" y="933" width="0.4" height="15.0" fill="rgb(248,196,31)" rx="2" ry="2" />
<text  x="1124.26" y="943.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::GenerateCode (8 samples, 0.30%)</title><rect x="1105.4" y="949" width="3.5" height="15.0" fill="rgb(212,215,9)" rx="2" ry="2" />
<text  x="1108.40" y="959.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTypenameType (1 samples, 0.04%)</title><rect x="1132.3" y="725" width="0.4" height="15.0" fill="rgb(206,113,27)" rx="2" ry="2" />
<text  x="1135.28" y="735.5" ></text>
</g>
<g >
<title>TCling::InspectMembers (1 samples, 0.04%)</title><rect x="784.2" y="693" width="0.4" height="15.0" fill="rgb(224,106,42)" rx="2" ry="2" />
<text  x="787.18" y="703.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.04%)</title><rect x="1134.9" y="709" width="0.5" height="15.0" fill="rgb(222,102,31)" rx="2" ry="2" />
<text  x="1137.92" y="719.5" ></text>
</g>
<g >
<title>llvm::ValueHandleBase::AddToExistingUseList (1 samples, 0.04%)</title><rect x="895.2" y="661" width="0.5" height="15.0" fill="rgb(247,49,49)" rx="2" ry="2" />
<text  x="898.22" y="671.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGBuilderTy::CreateStore (1 samples, 0.04%)</title><rect x="1108.5" y="885" width="0.4" height="15.0" fill="rgb(223,217,16)" rx="2" ry="2" />
<text  x="1111.48" y="895.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl (1 samples, 0.04%)</title><rect x="1130.5" y="709" width="0.5" height="15.0" fill="rgb(206,159,10)" rx="2" ry="2" />
<text  x="1133.52" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;llvm::BranchProbability, std::allocator&lt;llvm::BranchProbability&gt; &gt;::_M_realloc_insert&lt;llvm::BranchProbability const&amp;&gt; (1 samples, 0.04%)</title><rect x="907.6" y="501" width="0.4" height="15.0" fill="rgb(218,162,40)" rx="2" ry="2" />
<text  x="910.56" y="511.5" ></text>
</g>
<g >
<title>__GI___read (1 samples, 0.04%)</title><rect x="1092.6" y="789" width="0.5" height="15.0" fill="rgb(207,155,47)" rx="2" ry="2" />
<text  x="1095.62" y="799.5" ></text>
</g>
<g >
<title>clang::DeclContext::decls_begin (1 samples, 0.04%)</title><rect x="905.4" y="469" width="0.4" height="15.0" fill="rgb(212,92,54)" rx="2" ry="2" />
<text  x="908.35" y="479.5" ></text>
</g>
<g >
<title>clang::Sema::IsPointerConversion (1 samples, 0.04%)</title><rect x="1155.2" y="885" width="0.4" height="15.0" fill="rgb(254,133,29)" rx="2" ry="2" />
<text  x="1158.19" y="895.5" ></text>
</g>
<g >
<title>inflate (1 samples, 0.04%)</title><rect x="1137.6" y="501" width="0.4" height="15.0" fill="rgb(235,189,31)" rx="2" ry="2" />
<text  x="1140.57" y="511.5" ></text>
</g>
<g >
<title>cling::Interpreter::RunFunction (2 samples, 0.07%)</title><rect x="684.6" y="869" width="0.9" height="15.0" fill="rgb(240,188,18)" rx="2" ry="2" />
<text  x="687.60" y="879.5" ></text>
</g>
<g >
<title>llvm::IVUsers::AddUsersImpl (1 samples, 0.04%)</title><rect x="1159.2" y="693" width="0.4" height="15.0" fill="rgb(252,7,51)" rx="2" ry="2" />
<text  x="1162.16" y="703.5" ></text>
</g>
<g >
<title>llvm::orc::JITSymbolResolverAdapter::lookup (1 samples, 0.04%)</title><rect x="1159.2" y="885" width="0.4" height="15.0" fill="rgb(237,206,23)" rx="2" ry="2" />
<text  x="1162.16" y="895.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::~FPPassManager (1 samples, 0.04%)</title><rect x="904.0" y="581" width="0.5" height="15.0" fill="rgb(242,166,51)" rx="2" ry="2" />
<text  x="907.03" y="591.5" ></text>
</g>
<g >
<title>llvm::LazyValueInfo::releaseMemory (1 samples, 0.04%)</title><rect x="1037.5" y="597" width="0.5" height="15.0" fill="rgb(221,217,37)" rx="2" ry="2" />
<text  x="1040.54" y="607.5" ></text>
</g>
<g >
<title>llvm::orc::LambdaSymbolResolver&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt; const&amp;)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}&gt;::lookup (1 samples, 0.04%)</title><rect x="1150.8" y="805" width="0.4" height="15.0" fill="rgb(245,189,29)" rx="2" ry="2" />
<text  x="1153.78" y="815.5" ></text>
</g>
<g >
<title>TRint::TRint (71 samples, 2.65%)</title><rect x="1066.2" y="965" width="31.3" height="15.0" fill="rgb(249,215,24)" rx="2" ry="2" />
<text  x="1069.18" y="975.5" >TR..</text>
</g>
<g >
<title>clang::ASTReader::readTypeRecord (1 samples, 0.04%)</title><rect x="1132.7" y="501" width="0.5" height="15.0" fill="rgb(252,82,6)" rx="2" ry="2" />
<text  x="1135.72" y="511.5" ></text>
</g>
<g >
<title>clang::Sema::LookupQualifiedName (1 samples, 0.04%)</title><rect x="1140.6" y="917" width="0.5" height="15.0" fill="rgb(234,196,9)" rx="2" ry="2" />
<text  x="1143.65" y="927.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyld::finalizeWithMemoryManagerLocking (1 samples, 0.04%)</title><rect x="1150.8" y="869" width="0.4" height="15.0" fill="rgb(216,158,26)" rx="2" ry="2" />
<text  x="1153.78" y="879.5" ></text>
</g>
<g >
<title>clang::LinkageComputer::getLVForNamespaceScopeDecl (1 samples, 0.04%)</title><rect x="1105.8" y="565" width="0.5" height="15.0" fill="rgb(217,38,6)" rx="2" ry="2" />
<text  x="1108.84" y="575.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::PoisoningVH&lt;llvm::BasicBlock&gt;, llvm::SmallPtrSet&lt;llvm::Value*, 4u&gt;, llvm::DenseMapInfo&lt;llvm::PoisoningVH&lt;llvm::BasicBlock&gt; &gt;, llvm::detail::DenseMapPair&lt;llvm::PoisoningVH&lt;llvm::BasicBlock&gt;, llvm::SmallPtrSet&lt;llvm::Value*, 4u&gt; &gt; &gt;, llvm::PoisoningVH&lt;llvm::BasicBlock&gt;, llvm::SmallPtrSet&lt;llvm::Value*, 4u&gt;, llvm::DenseMapInfo&lt;llvm::PoisoningVH&lt;llvm::BasicBlock&gt; &gt;, llvm::detail::DenseMapPair&lt;llvm::PoisoningVH&lt;llvm::BasicBlock&gt;, llvm::SmallPtrSet&lt;llvm::Value*, 4u&gt; &gt; &gt;::initEmpty (1 samples, 0.04%)</title><rect x="896.5" y="645" width="0.5" height="15.0" fill="rgb(205,34,1)" rx="2" ry="2" />
<text  x="899.54" y="655.5" ></text>
</g>
<g >
<title>llvm::SetVector&lt;llvm::Function*, llvm::SmallVector&lt;llvm::Function*, 8u&gt;, llvm::SmallDenseSet&lt;llvm::Function*, 8u, llvm::DenseMapInfo&lt;llvm::Function*&gt; &gt; &gt;::SetVector (1 samples, 0.04%)</title><rect x="690.8" y="757" width="0.4" height="15.0" fill="rgb(249,33,17)" rx="2" ry="2" />
<text  x="693.77" y="767.5" ></text>
</g>
<g >
<title>ROOT::Internal::TTreeReaderValueBase::ProxyReadTemplate&lt;&amp;ROOT::Detail::TBranchProxy::ReadNoParentNoBranchCountNoCollection&gt; (188 samples, 7.02%)</title><rect x="348.8" y="885" width="82.9" height="15.0" fill="rgb(242,12,15)" rx="2" ry="2" />
<text  x="351.84" y="895.5" >ROOT::Int..</text>
</g>
<g >
<title>clang::ASTReader::GetExternalDeclStmt (1 samples, 0.04%)</title><rect x="1104.5" y="885" width="0.5" height="15.0" fill="rgb(209,109,9)" rx="2" ry="2" />
<text  x="1107.52" y="895.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::SetLLVMFunctionAttributes (1 samples, 0.04%)</title><rect x="1115.5" y="757" width="0.5" height="15.0" fill="rgb(210,156,29)" rx="2" ry="2" />
<text  x="1118.53" y="767.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadSLocEntry (1 samples, 0.04%)</title><rect x="1137.6" y="597" width="0.4" height="15.0" fill="rgb(222,6,15)" rx="2" ry="2" />
<text  x="1140.57" y="607.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::SetFunctionAttributes (1 samples, 0.04%)</title><rect x="1101.0" y="757" width="0.4" height="15.0" fill="rgb(241,220,0)" rx="2" ry="2" />
<text  x="1103.99" y="767.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.04%)</title><rect x="844.1" y="501" width="0.4" height="15.0" fill="rgb(216,15,25)" rx="2" ry="2" />
<text  x="847.11" y="511.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitRedeclarableTemplateDecl (1 samples, 0.04%)</title><rect x="1099.2" y="853" width="0.5" height="15.0" fill="rgb(215,49,20)" rx="2" ry="2" />
<text  x="1102.23" y="863.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertRecordDeclType (1 samples, 0.04%)</title><rect x="1117.3" y="725" width="0.4" height="15.0" fill="rgb(205,95,50)" rx="2" ry="2" />
<text  x="1120.30" y="735.5" ></text>
</g>
<g >
<title>getLabelOffset (1 samples, 0.04%)</title><rect x="905.8" y="565" width="0.4" height="15.0" fill="rgb(218,61,15)" rx="2" ry="2" />
<text  x="908.80" y="575.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::RebuildDependentNameType (1 samples, 0.04%)</title><rect x="1132.3" y="741" width="0.4" height="15.0" fill="rgb(239,24,18)" rx="2" ry="2" />
<text  x="1135.28" y="751.5" ></text>
</g>
<g >
<title>clang::ASTContext::getTypeInfoInChars (1 samples, 0.04%)</title><rect x="1116.4" y="805" width="0.5" height="15.0" fill="rgb(237,55,5)" rx="2" ry="2" />
<text  x="1119.42" y="815.5" ></text>
</g>
<g >
<title>clang::RedeclarableTemplateDecl::findSpecializationImpl&lt;clang::ClassTemplateSpecializationDecl&gt; (1 samples, 0.04%)</title><rect x="1128.3" y="645" width="0.5" height="15.0" fill="rgb(231,67,44)" rx="2" ry="2" />
<text  x="1131.31" y="655.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.04%)</title><rect x="1137.6" y="805" width="0.4" height="15.0" fill="rgb(238,87,23)" rx="2" ry="2" />
<text  x="1140.57" y="815.5" ></text>
</g>
<g >
<title>clang::ASTContext::getLValueReferenceType (1 samples, 0.04%)</title><rect x="1131.4" y="565" width="0.4" height="15.0" fill="rgb(234,222,23)" rx="2" ry="2" />
<text  x="1134.40" y="575.5" ></text>
</g>
<g >
<title>llvm::Attribute::hasAttribute (1 samples, 0.04%)</title><rect x="1046.4" y="533" width="0.4" height="15.0" fill="rgb(224,171,50)" rx="2" ry="2" />
<text  x="1049.36" y="543.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadTemplateArgumentList (1 samples, 0.04%)</title><rect x="1132.7" y="565" width="0.5" height="15.0" fill="rgb(205,210,17)" rx="2" ry="2" />
<text  x="1135.72" y="575.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::getAddrAndTypeOfCXXStructor (1 samples, 0.04%)</title><rect x="1149.9" y="613" width="0.4" height="15.0" fill="rgb(219,139,43)" rx="2" ry="2" />
<text  x="1152.90" y="623.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl (1 samples, 0.04%)</title><rect x="1139.3" y="789" width="0.5" height="15.0" fill="rgb(252,20,52)" rx="2" ry="2" />
<text  x="1142.33" y="799.5" ></text>
</g>
<g >
<title>llvm::object::ELFObjectFile&lt;llvm::object::ELFType&lt;(llvm::support::endianness)1, true&gt; &gt;::section_end (5 samples, 0.19%)</title><rect x="876.7" y="533" width="2.2" height="15.0" fill="rgb(216,150,28)" rx="2" ry="2" />
<text  x="879.71" y="543.5" ></text>
</g>
<g >
<title>llvm::Use::getUser (1 samples, 0.04%)</title><rect x="691.7" y="725" width="0.4" height="15.0" fill="rgb(244,135,30)" rx="2" ry="2" />
<text  x="694.65" y="735.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject&lt;std::shared_ptr&lt;llvm::RuntimeDyld::MemoryManager&gt; &gt;::getSymbolMaterializer(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda()#1}&gt;::_M_invoke (1 samples, 0.04%)</title><rect x="1159.2" y="949" width="0.4" height="15.0" fill="rgb(242,199,35)" rx="2" ry="2" />
<text  x="1162.16" y="959.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::setGVPropertiesAux (1 samples, 0.04%)</title><rect x="1105.4" y="661" width="0.4" height="15.0" fill="rgb(250,51,46)" rx="2" ry="2" />
<text  x="1108.40" y="671.5" ></text>
</g>
<g >
<title>TDirectoryFile::GetObjectChecked (1 samples, 0.04%)</title><rect x="905.4" y="933" width="0.4" height="15.0" fill="rgb(231,8,51)" rx="2" ry="2" />
<text  x="908.35" y="943.5" ></text>
</g>
<g >
<title>_dlerror_run (1 samples, 0.04%)</title><rect x="904.9" y="629" width="0.5" height="15.0" fill="rgb(250,71,39)" rx="2" ry="2" />
<text  x="907.91" y="639.5" ></text>
</g>
<g >
<title>clang::VarDecl::isOutOfLine (1 samples, 0.04%)</title><rect x="1130.1" y="549" width="0.4" height="15.0" fill="rgb(238,170,19)" rx="2" ry="2" />
<text  x="1133.07" y="559.5" ></text>
</g>
<g >
<title>clang::LinkageComputer::getLVForClassMember (1 samples, 0.04%)</title><rect x="1102.8" y="613" width="0.4" height="15.0" fill="rgb(210,85,20)" rx="2" ry="2" />
<text  x="1105.76" y="623.5" ></text>
</g>
<g >
<title>clang::TemplateDeclInstantiator::VisitStaticAssertDecl (1 samples, 0.04%)</title><rect x="1128.3" y="821" width="0.5" height="15.0" fill="rgb(221,6,7)" rx="2" ry="2" />
<text  x="1131.31" y="831.5" ></text>
</g>
<g >
<title>TCling::Load (1 samples, 0.04%)</title><rect x="904.9" y="901" width="0.5" height="15.0" fill="rgb(223,206,37)" rx="2" ry="2" />
<text  x="907.91" y="911.5" ></text>
</g>
<g >
<title>llvm::DAGTypeLegalizer::PromoteIntegerOperand (1 samples, 0.04%)</title><rect x="1157.4" y="773" width="0.4" height="15.0" fill="rgb(218,102,21)" rx="2" ry="2" />
<text  x="1160.39" y="783.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (1 samples, 0.04%)</title><rect x="1123.0" y="933" width="0.5" height="15.0" fill="rgb(214,60,39)" rx="2" ry="2" />
<text  x="1126.02" y="943.5" ></text>
</g>
<g >
<title>__nptl_set_robust (1 samples, 0.04%)</title><rect x="1074.6" y="789" width="0.4" height="15.0" fill="rgb(244,53,43)" rx="2" ry="2" />
<text  x="1077.56" y="799.5" ></text>
</g>
<g >
<title>TBuildRealData::Inspect (1 samples, 0.04%)</title><rect x="784.2" y="677" width="0.4" height="15.0" fill="rgb(252,97,29)" rx="2" ry="2" />
<text  x="787.18" y="687.5" ></text>
</g>
<g >
<title>clang::Sema::CheckConditionalOperands (1 samples, 0.04%)</title><rect x="1134.0" y="677" width="0.5" height="15.0" fill="rgb(250,89,22)" rx="2" ry="2" />
<text  x="1137.04" y="687.5" ></text>
</g>
<g >
<title>TApplication::ExecuteFile (1 samples, 0.04%)</title><rect x="903.6" y="837" width="0.4" height="15.0" fill="rgb(239,113,14)" rx="2" ry="2" />
<text  x="906.59" y="847.5" ></text>
</g>
<g >
<title>HandleInterpreterException (1 samples, 0.04%)</title><rect x="1027.4" y="869" width="0.4" height="15.0" fill="rgb(216,23,9)" rx="2" ry="2" />
<text  x="1030.41" y="879.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitRedeclarable&lt;clang::RedeclarableTemplateDecl&gt; (1 samples, 0.04%)</title><rect x="1099.2" y="933" width="0.5" height="15.0" fill="rgb(224,185,54)" rx="2" ry="2" />
<text  x="1102.23" y="943.5" ></text>
</g>
<g >
<title>clang::Sema::CheckParmsForFunctionDef (1 samples, 0.04%)</title><rect x="908.9" y="693" width="0.4" height="15.0" fill="rgb(222,181,34)" rx="2" ry="2" />
<text  x="911.88" y="703.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddTemplateArgument (1 samples, 0.04%)</title><rect x="1131.0" y="549" width="0.4" height="15.0" fill="rgb(208,1,16)" rx="2" ry="2" />
<text  x="1133.96" y="559.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXMemberOrOperatorMemberCallExpr (1 samples, 0.04%)</title><rect x="1138.0" y="917" width="0.4" height="15.0" fill="rgb(252,29,28)" rx="2" ry="2" />
<text  x="1141.01" y="927.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallExpr (1 samples, 0.04%)</title><rect x="1138.0" y="949" width="0.4" height="15.0" fill="rgb(253,18,33)" rx="2" ry="2" />
<text  x="1141.01" y="959.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::SelectBasicBlock (2 samples, 0.07%)</title><rect x="907.1" y="565" width="0.9" height="15.0" fill="rgb(234,121,13)" rx="2" ry="2" />
<text  x="910.12" y="575.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.07%)</title><rect x="1167.1" y="885" width="0.9" height="15.0" fill="rgb(241,109,27)" rx="2" ry="2" />
<text  x="1170.09" y="895.5" ></text>
</g>
<g >
<title>_dl_start (4 samples, 0.15%)</title><rect x="24.1" y="949" width="1.8" height="15.0" fill="rgb(233,53,43)" rx="2" ry="2" />
<text  x="27.10" y="959.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::runOnMachineFunction (2 samples, 0.07%)</title><rect x="1152.5" y="789" width="0.9" height="15.0" fill="rgb(215,213,16)" rx="2" ry="2" />
<text  x="1155.55" y="799.5" ></text>
</g>
<g >
<title>llvm::orc::JITSymbolResolverAdapter::lookup (4 samples, 0.15%)</title><rect x="1148.1" y="773" width="1.8" height="15.0" fill="rgb(212,185,8)" rx="2" ry="2" />
<text  x="1151.14" y="783.5" ></text>
</g>
<g >
<title>clang::Sema::PerformPendingInstantiations (5 samples, 0.19%)</title><rect x="1133.6" y="917" width="2.2" height="15.0" fill="rgb(210,58,26)" rx="2" ry="2" />
<text  x="1136.60" y="927.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.04%)</title><rect x="1112.0" y="581" width="0.4" height="15.0" fill="rgb(210,107,17)" rx="2" ry="2" />
<text  x="1115.01" y="591.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitStoreOfScalar (1 samples, 0.04%)</title><rect x="1116.9" y="885" width="0.4" height="15.0" fill="rgb(217,51,12)" rx="2" ry="2" />
<text  x="1119.86" y="895.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="843.7" y="549" width="0.4" height="15.0" fill="rgb(215,57,8)" rx="2" ry="2" />
<text  x="846.67" y="559.5" ></text>
</g>
<g >
<title>?? (3 samples, 0.11%)</title><rect x="1071.5" y="837" width="1.3" height="15.0" fill="rgb(244,30,6)" rx="2" ry="2" />
<text  x="1074.47" y="847.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.04%)</title><rect x="1149.9" y="741" width="0.4" height="15.0" fill="rgb(247,188,7)" rx="2" ry="2" />
<text  x="1152.90" y="751.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass (1 samples, 0.04%)</title><rect x="1137.1" y="693" width="0.5" height="15.0" fill="rgb(232,205,22)" rx="2" ry="2" />
<text  x="1140.12" y="703.5" ></text>
</g>
<g >
<title>execute_command_internal (4 samples, 0.15%)</title><rect x="22.3" y="517" width="1.8" height="15.0" fill="rgb(236,217,7)" rx="2" ry="2" />
<text  x="25.34" y="527.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::SelectCodeCommon (1 samples, 0.04%)</title><rect x="1151.7" y="869" width="0.4" height="15.0" fill="rgb(219,210,1)" rx="2" ry="2" />
<text  x="1154.67" y="879.5" ></text>
</g>
<g >
<title>llvm::orc::SimpleCompiler::operator() (3 samples, 0.11%)</title><rect x="1157.0" y="933" width="1.3" height="15.0" fill="rgb(253,186,30)" rx="2" ry="2" />
<text  x="1159.95" y="943.5" ></text>
</g>
<g >
<title>llvm::object::ELFObjectFile&lt;llvm::object::ELFType&lt;(llvm::support::endianness)1, true&gt; &gt;::getRela (1 samples, 0.04%)</title><rect x="868.3" y="549" width="0.5" height="15.0" fill="rgb(229,177,49)" rx="2" ry="2" />
<text  x="871.34" y="559.5" ></text>
</g>
<g >
<title>clang::ModuleMap::~ModuleMap (1 samples, 0.04%)</title><rect x="1027.8" y="693" width="0.5" height="15.0" fill="rgb(249,85,30)" rx="2" ry="2" />
<text  x="1030.85" y="703.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::createSCEV (1 samples, 0.04%)</title><rect x="1159.2" y="597" width="0.4" height="15.0" fill="rgb(228,145,14)" rx="2" ry="2" />
<text  x="1162.16" y="607.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::Compile (1 samples, 0.04%)</title><rect x="1151.2" y="901" width="0.5" height="15.0" fill="rgb(237,99,22)" rx="2" ry="2" />
<text  x="1154.22" y="911.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (1 samples, 0.04%)</title><rect x="1150.8" y="741" width="0.4" height="15.0" fill="rgb(254,220,26)" rx="2" ry="2" />
<text  x="1153.78" y="751.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.04%)</title><rect x="1020.4" y="901" width="0.4" height="15.0" fill="rgb(248,228,5)" rx="2" ry="2" />
<text  x="1023.36" y="911.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::getTBAAAccessInfo (1 samples, 0.04%)</title><rect x="1101.9" y="789" width="0.4" height="15.0" fill="rgb(230,172,20)" rx="2" ry="2" />
<text  x="1104.87" y="799.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::visitCallBase (2 samples, 0.07%)</title><rect x="892.6" y="629" width="0.9" height="15.0" fill="rgb(243,180,37)" rx="2" ry="2" />
<text  x="895.58" y="639.5" ></text>
</g>
<g >
<title>__libc_start_main (1 samples, 0.04%)</title><rect x="25.9" y="949" width="0.4" height="15.0" fill="rgb(205,183,34)" rx="2" ry="2" />
<text  x="28.86" y="959.5" ></text>
</g>
<g >
<title>clang::ASTReader::FindExternalVisibleDeclsByName (1 samples, 0.04%)</title><rect x="1126.1" y="885" width="0.4" height="15.0" fill="rgb(221,22,31)" rx="2" ry="2" />
<text  x="1129.11" y="895.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.11%)</title><rect x="22.8" y="85" width="1.3" height="15.0" fill="rgb(209,226,37)" rx="2" ry="2" />
<text  x="25.78" y="95.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitConstructorBody (1 samples, 0.04%)</title><rect x="1114.7" y="853" width="0.4" height="15.0" fill="rgb(217,193,28)" rx="2" ry="2" />
<text  x="1117.65" y="863.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::GetOrCreateLLVMFunction (1 samples, 0.04%)</title><rect x="1102.3" y="773" width="0.5" height="15.0" fill="rgb(212,189,5)" rx="2" ry="2" />
<text  x="1105.32" y="783.5" ></text>
</g>
<g >
<title>make_child (5 samples, 0.19%)</title><rect x="19.7" y="597" width="2.2" height="15.0" fill="rgb(238,162,10)" rx="2" ry="2" />
<text  x="22.69" y="607.5" ></text>
</g>
<g >
<title>llvm::MCAssembler::layoutOnce (1 samples, 0.04%)</title><rect x="830.9" y="533" width="0.4" height="15.0" fill="rgb(248,52,23)" rx="2" ry="2" />
<text  x="833.89" y="543.5" ></text>
</g>
<g >
<title>cling::Interpreter::RunFunction (7 samples, 0.26%)</title><rect x="905.8" y="853" width="3.1" height="15.0" fill="rgb(240,195,19)" rx="2" ry="2" />
<text  x="908.80" y="863.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTypenameType (1 samples, 0.04%)</title><rect x="1143.3" y="645" width="0.4" height="15.0" fill="rgb(236,55,22)" rx="2" ry="2" />
<text  x="1146.29" y="655.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTemplateArgument (1 samples, 0.04%)</title><rect x="1123.5" y="949" width="0.4" height="15.0" fill="rgb(244,40,7)" rx="2" ry="2" />
<text  x="1126.47" y="959.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::getSignExtendExpr (1 samples, 0.04%)</title><rect x="692.1" y="725" width="0.4" height="15.0" fill="rgb(242,13,48)" rx="2" ry="2" />
<text  x="695.09" y="735.5" ></text>
</g>
<g >
<title>cling::Interpreter::~Interpreter (2 samples, 0.07%)</title><rect x="1027.8" y="805" width="0.9" height="15.0" fill="rgb(222,67,2)" rx="2" ry="2" />
<text  x="1030.85" y="815.5" ></text>
</g>
<g >
<title>TROOT::InitInterpreter (65 samples, 2.43%)</title><rect x="1066.2" y="917" width="28.6" height="15.0" fill="rgb(215,191,41)" rx="2" ry="2" />
<text  x="1069.18" y="927.5" >TR..</text>
</g>
<g >
<title>__GI___getpid (1 samples, 0.04%)</title><rect x="1176.3" y="805" width="0.5" height="15.0" fill="rgb(238,107,51)" rx="2" ry="2" />
<text  x="1179.34" y="815.5" ></text>
</g>
<g >
<title>TCling::ProcessLineSynch (1 samples, 0.04%)</title><rect x="904.0" y="837" width="0.5" height="15.0" fill="rgb(237,151,50)" rx="2" ry="2" />
<text  x="907.03" y="847.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetExternalCXXBaseSpecifiers (1 samples, 0.04%)</title><rect x="1123.5" y="645" width="0.4" height="15.0" fill="rgb(208,209,47)" rx="2" ry="2" />
<text  x="1126.47" y="655.5" ></text>
</g>
<g >
<title>MarkExprReferenced (1 samples, 0.04%)</title><rect x="1121.3" y="885" width="0.4" height="15.0" fill="rgb(247,155,13)" rx="2" ry="2" />
<text  x="1124.26" y="895.5" ></text>
</g>
<g >
<title>execute_command_internal (26 samples, 0.97%)</title><rect x="10.4" y="853" width="11.5" height="15.0" fill="rgb(230,219,43)" rx="2" ry="2" />
<text  x="13.44" y="863.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.04%)</title><rect x="1149.9" y="661" width="0.4" height="15.0" fill="rgb(250,82,24)" rx="2" ry="2" />
<text  x="1152.90" y="671.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXMemberOrOperatorMemberCallExpr (1 samples, 0.04%)</title><rect x="1105.8" y="757" width="0.5" height="15.0" fill="rgb(229,177,52)" rx="2" ry="2" />
<text  x="1108.84" y="767.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.04%)</title><rect x="895.7" y="613" width="0.4" height="15.0" fill="rgb(251,84,23)" rx="2" ry="2" />
<text  x="898.66" y="623.5" ></text>
</g>
<g >
<title>TClassEdit::GetNormalizedName (1 samples, 0.04%)</title><rect x="783.3" y="725" width="0.4" height="15.0" fill="rgb(237,174,13)" rx="2" ry="2" />
<text  x="786.30" y="735.5" ></text>
</g>
<g >
<title>simplifyFunctionCFG (1 samples, 0.04%)</title><rect x="900.9" y="629" width="0.5" height="15.0" fill="rgb(226,66,48)" rx="2" ry="2" />
<text  x="903.95" y="639.5" ></text>
</g>
<g >
<title>llvm::TargetLowering::LowerCallTo (2 samples, 0.07%)</title><rect x="1153.4" y="933" width="0.9" height="15.0" fill="rgb(229,220,47)" rx="2" ry="2" />
<text  x="1156.43" y="943.5" ></text>
</g>
<g >
<title>clang::Sema::SubstStmt (1 samples, 0.04%)</title><rect x="1128.3" y="885" width="0.5" height="15.0" fill="rgb(237,93,6)" rx="2" ry="2" />
<text  x="1131.31" y="895.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitNamedDecl (1 samples, 0.04%)</title><rect x="1132.7" y="661" width="0.5" height="15.0" fill="rgb(241,224,6)" rx="2" ry="2" />
<text  x="1135.72" y="671.5" ></text>
</g>
<g >
<title>dl_open_worker (1 samples, 0.04%)</title><rect x="1149.5" y="357" width="0.4" height="15.0" fill="rgb(224,97,48)" rx="2" ry="2" />
<text  x="1152.46" y="367.5" ></text>
</g>
<g >
<title>clang::DeclContext::lookup (1 samples, 0.04%)</title><rect x="1139.3" y="565" width="0.5" height="15.0" fill="rgb(215,106,40)" rx="2" ry="2" />
<text  x="1142.33" y="575.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallArgs (1 samples, 0.04%)</title><rect x="1106.7" y="709" width="0.5" height="15.0" fill="rgb(206,10,15)" rx="2" ry="2" />
<text  x="1109.72" y="719.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTemplateArgument (1 samples, 0.04%)</title><rect x="1141.5" y="757" width="0.5" height="15.0" fill="rgb(224,6,27)" rx="2" ry="2" />
<text  x="1144.53" y="767.5" ></text>
</g>
<g >
<title>TStreamerInfo::Build (1 samples, 0.04%)</title><rect x="784.2" y="773" width="0.4" height="15.0" fill="rgb(219,84,4)" rx="2" ry="2" />
<text  x="787.18" y="783.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.04%)</title><rect x="21.9" y="405" width="0.4" height="15.0" fill="rgb(220,105,54)" rx="2" ry="2" />
<text  x="24.90" y="415.5" ></text>
</g>
<g >
<title>cling::utils::platform::DLOpen (1 samples, 0.04%)</title><rect x="904.9" y="869" width="0.5" height="15.0" fill="rgb(253,178,27)" rx="2" ry="2" />
<text  x="907.91" y="879.5" ></text>
</g>
<g >
<title>llvm::AAResults::pointsToConstantMemory (2 samples, 0.07%)</title><rect x="894.3" y="629" width="0.9" height="15.0" fill="rgb(252,157,31)" rx="2" ry="2" />
<text  x="897.34" y="639.5" ></text>
</g>
<g >
<title>cling::Interpreter::loadHeader (2 samples, 0.07%)</title><rect x="1149.9" y="885" width="0.9" height="15.0" fill="rgb(233,209,28)" rx="2" ry="2" />
<text  x="1152.90" y="895.5" ></text>
</g>
<g >
<title>llvm::SimpleBitstreamCursor::Read (1 samples, 0.04%)</title><rect x="1126.1" y="805" width="0.4" height="15.0" fill="rgb(247,143,15)" rx="2" ry="2" />
<text  x="1129.11" y="815.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType (1 samples, 0.04%)</title><rect x="1138.4" y="757" width="0.5" height="15.0" fill="rgb(230,64,12)" rx="2" ry="2" />
<text  x="1141.45" y="767.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::runStaticInitializersOnce (3 samples, 0.11%)</title><rect x="909.8" y="773" width="1.3" height="15.0" fill="rgb(235,3,20)" rx="2" ry="2" />
<text  x="912.76" y="783.5" ></text>
</g>
<g >
<title>llvm::DemandedBits::isInstructionDead (1 samples, 0.04%)</title><rect x="691.2" y="757" width="0.5" height="15.0" fill="rgb(239,76,3)" rx="2" ry="2" />
<text  x="694.21" y="767.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::FindExternalLexicalDecls (1 samples, 0.04%)</title><rect x="1137.1" y="645" width="0.5" height="15.0" fill="rgb(253,106,16)" rx="2" ry="2" />
<text  x="1140.12" y="655.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitStmt (1 samples, 0.04%)</title><rect x="1116.0" y="821" width="0.4" height="15.0" fill="rgb(214,98,18)" rx="2" ry="2" />
<text  x="1118.97" y="831.5" ></text>
</g>
<g >
<title>llvm::TargetLibraryInfoImpl::getLibFunc (1 samples, 0.04%)</title><rect x="892.6" y="581" width="0.4" height="15.0" fill="rgb(230,177,52)" rx="2" ry="2" />
<text  x="895.58" y="591.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnModule (2 samples, 0.07%)</title><rect x="1144.2" y="773" width="0.9" height="15.0" fill="rgb(211,205,22)" rx="2" ry="2" />
<text  x="1147.17" y="783.5" ></text>
</g>
<g >
<title>clang::Sema::SubstBaseSpecifiers (2 samples, 0.07%)</title><rect x="1139.8" y="853" width="0.8" height="15.0" fill="rgb(242,203,16)" rx="2" ry="2" />
<text  x="1142.77" y="863.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.04%)</title><rect x="1103.6" y="693" width="0.5" height="15.0" fill="rgb(230,124,7)" rx="2" ry="2" />
<text  x="1106.64" y="703.5" ></text>
</g>
<g >
<title>llvm::AttributeSetNode::get (1 samples, 0.04%)</title><rect x="1113.8" y="757" width="0.4" height="15.0" fill="rgb(219,89,19)" rx="2" ry="2" />
<text  x="1116.77" y="767.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::getRangeRef (1 samples, 0.04%)</title><rect x="829.6" y="853" width="0.4" height="15.0" fill="rgb(239,78,15)" rx="2" ry="2" />
<text  x="832.57" y="863.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitLValue (1 samples, 0.04%)</title><rect x="1106.3" y="757" width="0.4" height="15.0" fill="rgb(208,119,32)" rx="2" ry="2" />
<text  x="1109.28" y="767.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::SelectAllBasicBlocks (2 samples, 0.07%)</title><rect x="1145.9" y="677" width="0.9" height="15.0" fill="rgb(227,14,34)" rx="2" ry="2" />
<text  x="1148.94" y="687.5" ></text>
</g>
<g >
<title>clang::NamedDecl::getLinkageInternal (1 samples, 0.04%)</title><rect x="1108.9" y="901" width="0.5" height="15.0" fill="rgb(208,181,35)" rx="2" ry="2" />
<text  x="1111.92" y="911.5" ></text>
</g>
<g >
<title>clang::LinkageComputer::computeLVForDecl (1 samples, 0.04%)</title><rect x="1103.2" y="677" width="0.4" height="15.0" fill="rgb(247,157,3)" rx="2" ry="2" />
<text  x="1106.20" y="687.5" ></text>
</g>
<g >
<title>TCling::~TCling (2 samples, 0.07%)</title><rect x="1027.8" y="853" width="0.9" height="15.0" fill="rgb(221,78,19)" rx="2" ry="2" />
<text  x="1030.85" y="863.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTSIInObjectScope (1 samples, 0.04%)</title><rect x="1128.3" y="709" width="0.5" height="15.0" fill="rgb(225,205,3)" rx="2" ry="2" />
<text  x="1131.31" y="719.5" ></text>
</g>
<g >
<title>do_lookup_x (1 samples, 0.04%)</title><rect x="1149.5" y="309" width="0.4" height="15.0" fill="rgb(247,213,2)" rx="2" ry="2" />
<text  x="1152.46" y="319.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::findOrEmitSection (1 samples, 0.04%)</title><rect x="708.0" y="757" width="0.4" height="15.0" fill="rgb(254,44,18)" rx="2" ry="2" />
<text  x="710.95" y="767.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord (1 samples, 0.04%)</title><rect x="1099.2" y="709" width="0.5" height="15.0" fill="rgb(229,25,25)" rx="2" ry="2" />
<text  x="1102.23" y="719.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.04%)</title><rect x="1143.7" y="965" width="0.5" height="15.0" fill="rgb(232,59,33)" rx="2" ry="2" />
<text  x="1146.73" y="975.5" ></text>
</g>
<g >
<title>__memchr_avx2 (1 samples, 0.04%)</title><rect x="1075.4" y="805" width="0.5" height="15.0" fill="rgb(232,98,54)" rx="2" ry="2" />
<text  x="1078.44" y="815.5" ></text>
</g>
<g >
<title>clang::ASTReader::CompleteRedeclChain (1 samples, 0.04%)</title><rect x="1139.3" y="581" width="0.5" height="15.0" fill="rgb(253,158,32)" rx="2" ry="2" />
<text  x="1142.33" y="591.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetTypeSourceInfo (1 samples, 0.04%)</title><rect x="1140.6" y="789" width="0.5" height="15.0" fill="rgb(241,81,31)" rx="2" ry="2" />
<text  x="1143.65" y="799.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::commitTransaction (24 samples, 0.90%)</title><rect x="889.9" y="773" width="10.6" height="15.0" fill="rgb(249,99,34)" rx="2" ry="2" />
<text  x="892.93" y="783.5" ></text>
</g>
<g >
<title>cling::MetaParser::isCommand (85 samples, 3.17%)</title><rect x="1028.7" y="821" width="37.5" height="15.0" fill="rgb(243,51,16)" rx="2" ry="2" />
<text  x="1031.73" y="831.5" >cli..</text>
</g>
<g >
<title>main (4 samples, 0.15%)</title><rect x="22.3" y="965" width="1.8" height="15.0" fill="rgb(213,86,28)" rx="2" ry="2" />
<text  x="25.34" y="975.5" ></text>
</g>
<g >
<title>cling::utils::Lookup::Named (1 samples, 0.04%)</title><rect x="784.2" y="533" width="0.4" height="15.0" fill="rgb(232,179,50)" rx="2" ry="2" />
<text  x="787.18" y="543.5" ></text>
</g>
<g >
<title>__GI_setlocale (1 samples, 0.04%)</title><rect x="1189.6" y="901" width="0.4" height="15.0" fill="rgb(218,10,37)" rx="2" ry="2" />
<text  x="1192.56" y="911.5" ></text>
</g>
<g >
<title>execute_command (26 samples, 0.97%)</title><rect x="10.4" y="789" width="11.5" height="15.0" fill="rgb(213,209,54)" rx="2" ry="2" />
<text  x="13.44" y="799.5" ></text>
</g>
<g >
<title>llvm::AssumptionCacheTracker::releaseMemory (1 samples, 0.04%)</title><rect x="866.6" y="581" width="0.4" height="15.0" fill="rgb(215,60,38)" rx="2" ry="2" />
<text  x="869.58" y="591.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXMemberCallExpr (1 samples, 0.04%)</title><rect x="1138.0" y="933" width="0.4" height="15.0" fill="rgb(226,86,44)" rx="2" ry="2" />
<text  x="1141.01" y="943.5" ></text>
</g>
<g >
<title>clang::CXXBasePaths::lookupInBases (1 samples, 0.04%)</title><rect x="1143.7" y="661" width="0.5" height="15.0" fill="rgb(232,125,0)" rx="2" ry="2" />
<text  x="1146.73" y="671.5" ></text>
</g>
</g>
</svg>
