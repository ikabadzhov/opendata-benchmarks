<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1030" onload="init(evt)" viewBox="0 0 1200 1030" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1030.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1013" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1013" > </text>
<g id="frames">
<g >
<title>clang::CodeGen::CodeGenTypes::ComputeRecordLayout (1 samples, 0.08%)</title><rect x="1049.6" y="853" width="0.9" height="15.0" fill="rgb(216,116,18)" rx="2" ry="2" />
<text  x="1052.59" y="863.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadMacroRecord (1 samples, 0.08%)</title><rect x="942.5" y="469" width="0.9" height="15.0" fill="rgb(206,84,34)" rx="2" ry="2" />
<text  x="945.48" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;unsigned int&gt; &gt;::_M_erase (1 samples, 0.08%)</title><rect x="689.6" y="501" width="0.9" height="15.0" fill="rgb(209,154,34)" rx="2" ry="2" />
<text  x="692.56" y="511.5" ></text>
</g>
<g >
<title>clang::Parser::TryAnnotateTypeOrScopeToken (1 samples, 0.08%)</title><rect x="1109.0" y="677" width="0.9" height="15.0" fill="rgb(213,205,11)" rx="2" ry="2" />
<text  x="1111.99" y="687.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTemplateIdType (1 samples, 0.08%)</title><rect x="1058.6" y="725" width="0.9" height="15.0" fill="rgb(243,213,14)" rx="2" ry="2" />
<text  x="1061.59" y="735.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::GetMinTrailingZeros (1 samples, 0.08%)</title><rect x="1129.7" y="453" width="0.9" height="15.0" fill="rgb(230,47,22)" rx="2" ry="2" />
<text  x="1132.69" y="463.5" ></text>
</g>
<g >
<title>cling::Interpreter::EvaluateInternal (1 samples, 0.08%)</title><rect x="854.3" y="837" width="0.9" height="15.0" fill="rgb(250,157,34)" rx="2" ry="2" />
<text  x="857.27" y="847.5" ></text>
</g>
<g >
<title>llvm::simplifyCFG (1 samples, 0.08%)</title><rect x="834.5" y="613" width="0.9" height="15.0" fill="rgb(233,64,40)" rx="2" ry="2" />
<text  x="837.47" y="623.5" ></text>
</g>
<g >
<title>llvm::PMTopLevelManager::findAnalysisPass (1 samples, 0.08%)</title><rect x="900.2" y="549" width="0.9" height="15.0" fill="rgb(236,7,19)" rx="2" ry="2" />
<text  x="903.18" y="559.5" ></text>
</g>
<g >
<title>llvm::FoldingSet&lt;clang::TemplateTypeParmType&gt;::NodeEquals (1 samples, 0.08%)</title><rect x="1010.9" y="677" width="0.9" height="15.0" fill="rgb(220,197,21)" rx="2" ry="2" />
<text  x="1013.88" y="687.5" ></text>
</g>
<g >
<title>TClass::CallShowMembers (1 samples, 0.08%)</title><rect x="1118.9" y="533" width="0.9" height="15.0" fill="rgb(232,112,0)" rx="2" ry="2" />
<text  x="1121.89" y="543.5" ></text>
</g>
<g >
<title>llvm::BasicAAWrapperPass::runOnFunction (1 samples, 0.08%)</title><rect x="679.7" y="565" width="0.9" height="15.0" fill="rgb(205,174,54)" rx="2" ry="2" />
<text  x="682.66" y="575.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="957.8" y="789" width="0.9" height="15.0" fill="rgb(239,22,28)" rx="2" ry="2" />
<text  x="960.78" y="799.5" ></text>
</g>
<g >
<title>TLeafF::ReadBasket (12 samples, 0.92%)</title><rect x="659.9" y="869" width="10.8" height="15.0" fill="rgb(207,122,14)" rx="2" ry="2" />
<text  x="662.86" y="879.5" ></text>
</g>
<g >
<title>__run_fork_handlers (3 samples, 0.23%)</title><rect x="973.1" y="789" width="2.7" height="15.0" fill="rgb(248,167,5)" rx="2" ry="2" />
<text  x="976.08" y="799.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformReferenceType (1 samples, 0.08%)</title><rect x="1092.8" y="581" width="0.9" height="15.0" fill="rgb(249,40,29)" rx="2" ry="2" />
<text  x="1095.79" y="591.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="43.3" y="725" width="0.9" height="15.0" fill="rgb(210,102,32)" rx="2" ry="2" />
<text  x="46.30" y="735.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass (1 samples, 0.08%)</title><rect x="1075.7" y="645" width="0.9" height="15.0" fill="rgb(242,75,6)" rx="2" ry="2" />
<text  x="1078.69" y="655.5" ></text>
</g>
<g >
<title>TClass::CallShowMembers (1 samples, 0.08%)</title><rect x="1118.9" y="517" width="0.9" height="15.0" fill="rgb(249,135,27)" rx="2" ry="2" />
<text  x="1121.89" y="527.5" ></text>
</g>
<g >
<title>llvm::Function::dropAllReferences (1 samples, 0.08%)</title><rect x="859.7" y="693" width="0.9" height="15.0" fill="rgb(245,66,26)" rx="2" ry="2" />
<text  x="862.67" y="703.5" ></text>
</g>
<g >
<title>llvm::JumpThreadingPass::ComputeValueKnownInPredecessorsImpl (1 samples, 0.08%)</title><rect x="815.6" y="581" width="0.9" height="15.0" fill="rgb(240,23,45)" rx="2" ry="2" />
<text  x="818.57" y="591.5" ></text>
</g>
<g >
<title>clang::Sema::computeDeclContext (1 samples, 0.08%)</title><rect x="1062.2" y="773" width="0.9" height="15.0" fill="rgb(205,108,3)" rx="2" ry="2" />
<text  x="1065.19" y="783.5" ></text>
</g>
<g >
<title>TSystem::DynamicPathName (40 samples, 3.05%)</title><rect x="953.3" y="885" width="36.0" height="15.0" fill="rgb(209,70,13)" rx="2" ry="2" />
<text  x="956.28" y="895.5" >TSy..</text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;, void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;::LookupBucketFor&lt;void const*&gt; (1 samples, 0.08%)</title><rect x="911.9" y="549" width="0.9" height="15.0" fill="rgb(230,187,0)" rx="2" ry="2" />
<text  x="914.88" y="559.5" ></text>
</g>
<g >
<title>clang::Sema::SubstExceptionSpec (1 samples, 0.08%)</title><rect x="1062.2" y="853" width="0.9" height="15.0" fill="rgb(211,104,43)" rx="2" ry="2" />
<text  x="1065.19" y="863.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::getAddExpr (1 samples, 0.08%)</title><rect x="852.5" y="613" width="0.9" height="15.0" fill="rgb(225,129,44)" rx="2" ry="2" />
<text  x="855.47" y="623.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::runStaticInitializersOnce (3 samples, 0.23%)</title><rect x="851.6" y="757" width="2.7" height="15.0" fill="rgb(209,50,33)" rx="2" ry="2" />
<text  x="854.57" y="767.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::executeWrapper (2 samples, 0.15%)</title><rect x="212.5" y="853" width="1.8" height="15.0" fill="rgb(212,190,9)" rx="2" ry="2" />
<text  x="215.52" y="863.5" ></text>
</g>
<g >
<title>__GI___libc_sigaction (1 samples, 0.08%)</title><rect x="35.2" y="149" width="0.9" height="15.0" fill="rgb(213,127,34)" rx="2" ry="2" />
<text  x="38.20" y="159.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::createSCEV (1 samples, 0.08%)</title><rect x="852.5" y="661" width="0.9" height="15.0" fill="rgb(244,226,18)" rx="2" ry="2" />
<text  x="855.47" y="671.5" ></text>
</g>
<g >
<title>TApplication::ProcessLine (7 samples, 0.53%)</title><rect x="831.8" y="949" width="6.3" height="15.0" fill="rgb(244,200,32)" rx="2" ry="2" />
<text  x="834.77" y="959.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddType (1 samples, 0.08%)</title><rect x="1058.6" y="549" width="0.9" height="15.0" fill="rgb(220,9,54)" rx="2" ry="2" />
<text  x="1061.59" y="559.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject&lt;std::shared_ptr&lt;llvm::RuntimeDyld::MemoryManager&gt; &gt;::getSymbolMaterializer(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda()#1}&gt;::_M_invoke (57 samples, 4.35%)</title><rect x="747.2" y="629" width="51.3" height="15.0" fill="rgb(250,221,51)" rx="2" ry="2" />
<text  x="750.16" y="639.5" >std::..</text>
</g>
<g >
<title>llvm::AAResultsWrapperPass::runOnFunction (3 samples, 0.23%)</title><rect x="867.8" y="613" width="2.7" height="15.0" fill="rgb(235,204,15)" rx="2" ry="2" />
<text  x="870.77" y="623.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;, void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;::LookupBucketFor&lt;void const*&gt; (2 samples, 0.15%)</title><rect x="256.6" y="677" width="1.8" height="15.0" fill="rgb(241,93,21)" rx="2" ry="2" />
<text  x="259.62" y="687.5" ></text>
</g>
<g >
<title>llvm::AliasSetTracker::add (1 samples, 0.08%)</title><rect x="829.1" y="645" width="0.9" height="15.0" fill="rgb(213,158,25)" rx="2" ry="2" />
<text  x="832.07" y="655.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="34.3" y="405" width="0.9" height="15.0" fill="rgb(210,217,31)" rx="2" ry="2" />
<text  x="37.30" y="415.5" ></text>
</g>
<g >
<title>clang::DependentScopeDeclRefExpr::DependentScopeDeclRefExpr (1 samples, 0.08%)</title><rect x="1009.1" y="357" width="0.9" height="15.0" fill="rgb(233,57,18)" rx="2" ry="2" />
<text  x="1012.08" y="367.5" ></text>
</g>
<g >
<title>cling::Interpreter::RunFunction (1 samples, 0.08%)</title><rect x="1110.8" y="901" width="0.9" height="15.0" fill="rgb(236,148,4)" rx="2" ry="2" />
<text  x="1113.79" y="911.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition (2 samples, 0.15%)</title><rect x="798.5" y="677" width="1.8" height="15.0" fill="rgb(215,209,48)" rx="2" ry="2" />
<text  x="801.47" y="687.5" ></text>
</g>
<g >
<title>clang::Sema::CreateBuiltinBinOp (1 samples, 0.08%)</title><rect x="1099.1" y="901" width="0.9" height="15.0" fill="rgb(230,120,19)" rx="2" ry="2" />
<text  x="1102.09" y="911.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXMemberOrOperatorMemberCallExpr (1 samples, 0.08%)</title><rect x="1090.1" y="821" width="0.9" height="15.0" fill="rgb(211,102,49)" rx="2" ry="2" />
<text  x="1093.09" y="831.5" ></text>
</g>
<g >
<title>make_child (10 samples, 0.76%)</title><rect x="1152.2" y="805" width="9.0" height="15.0" fill="rgb(245,73,36)" rx="2" ry="2" />
<text  x="1155.20" y="815.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (3 samples, 0.23%)</title><rect x="1033.4" y="645" width="2.7" height="15.0" fill="rgb(222,8,1)" rx="2" ry="2" />
<text  x="1036.39" y="655.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitTypeAliasDecl (1 samples, 0.08%)</title><rect x="1009.1" y="565" width="0.9" height="15.0" fill="rgb(235,212,33)" rx="2" ry="2" />
<text  x="1012.08" y="575.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::loadObjectImpl (53 samples, 4.04%)</title><rect x="750.8" y="581" width="47.7" height="15.0" fill="rgb(239,80,47)" rx="2" ry="2" />
<text  x="753.76" y="591.5" >llvm..</text>
</g>
<g >
<title>clang::RedeclarableTemplateDecl::loadLazySpecializationsImpl (1 samples, 0.08%)</title><rect x="1072.1" y="725" width="0.9" height="15.0" fill="rgb(210,190,4)" rx="2" ry="2" />
<text  x="1075.09" y="735.5" ></text>
</g>
<g >
<title>llvm::MCContext::createTempSymbol (2 samples, 0.15%)</title><rect x="711.2" y="517" width="1.8" height="15.0" fill="rgb(216,142,43)" rx="2" ry="2" />
<text  x="714.16" y="527.5" ></text>
</g>
<g >
<title>TBufferFile::ReadClassBuffer (1 samples, 0.08%)</title><rect x="447.4" y="821" width="0.9" height="15.0" fill="rgb(238,226,35)" rx="2" ry="2" />
<text  x="450.44" y="831.5" ></text>
</g>
<g >
<title>__GI__dl_catch_error (1 samples, 0.08%)</title><rect x="202.6" y="405" width="0.9" height="15.0" fill="rgb(248,118,0)" rx="2" ry="2" />
<text  x="205.62" y="415.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformInitializer (1 samples, 0.08%)</title><rect x="1084.7" y="661" width="0.9" height="15.0" fill="rgb(239,196,5)" rx="2" ry="2" />
<text  x="1087.69" y="671.5" ></text>
</g>
<g >
<title>llvm::FoldingSetNodeID::operator== (1 samples, 0.08%)</title><rect x="1042.4" y="693" width="0.9" height="15.0" fill="rgb(242,79,40)" rx="2" ry="2" />
<text  x="1045.39" y="703.5" ></text>
</g>
<g >
<title>llvm::ReachingDefAnalysis::processBasicBlock (1 samples, 0.08%)</title><rect x="707.6" y="533" width="0.9" height="15.0" fill="rgb(230,93,28)" rx="2" ry="2" />
<text  x="710.56" y="543.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnModule (1 samples, 0.08%)</title><rect x="449.2" y="805" width="0.9" height="15.0" fill="rgb(232,15,43)" rx="2" ry="2" />
<text  x="452.24" y="815.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertType (1 samples, 0.08%)</title><rect x="1048.7" y="725" width="0.9" height="15.0" fill="rgb(254,225,28)" rx="2" ry="2" />
<text  x="1051.69" y="735.5" ></text>
</g>
<g >
<title>[libnss_sss.so.2] (4 samples, 0.31%)</title><rect x="1002.8" y="693" width="3.6" height="15.0" fill="rgb(243,186,41)" rx="2" ry="2" />
<text  x="1005.78" y="703.5" ></text>
</g>
<g >
<title>llvm::IVUsers::getExpr (1 samples, 0.08%)</title><rect x="670.7" y="933" width="0.9" height="15.0" fill="rgb(234,214,18)" rx="2" ry="2" />
<text  x="673.66" y="943.5" ></text>
</g>
<g >
<title>PerformConstructorInitialization (1 samples, 0.08%)</title><rect x="201.7" y="917" width="0.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="204.72" y="927.5" ></text>
</g>
<g >
<title>llvm::orc::SimpleCompiler::operator() (1 samples, 0.08%)</title><rect x="1120.7" y="853" width="0.9" height="15.0" fill="rgb(253,165,49)" rx="2" ry="2" />
<text  x="1123.69" y="863.5" ></text>
</g>
<g >
<title>cling::MetaSema::actOnLCommand (1 samples, 0.08%)</title><rect x="1118.0" y="933" width="0.9" height="15.0" fill="rgb(245,205,25)" rx="2" ry="2" />
<text  x="1120.99" y="943.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::computeExitLimitFromICmp (1 samples, 0.08%)</title><rect x="1129.7" y="549" width="0.9" height="15.0" fill="rgb(230,228,22)" rx="2" ry="2" />
<text  x="1132.69" y="559.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetTemplateArgumentLocInfo (1 samples, 0.08%)</title><rect x="1009.1" y="421" width="0.9" height="15.0" fill="rgb(214,80,3)" rx="2" ry="2" />
<text  x="1012.08" y="431.5" ></text>
</g>
<g >
<title>clang::Sema::PerformImplicitConversion (1 samples, 0.08%)</title><rect x="1001.0" y="917" width="0.9" height="15.0" fill="rgb(232,50,18)" rx="2" ry="2" />
<text  x="1003.98" y="927.5" ></text>
</g>
<g >
<title>llvm::SelectionDAG::DeallocateNode (1 samples, 0.08%)</title><rect x="841.7" y="501" width="0.9" height="15.0" fill="rgb(217,58,51)" rx="2" ry="2" />
<text  x="844.67" y="511.5" ></text>
</g>
<g >
<title>clang::Sema::ActOnFields (1 samples, 0.08%)</title><rect x="1055.0" y="949" width="0.9" height="15.0" fill="rgb(234,98,28)" rx="2" ry="2" />
<text  x="1057.99" y="959.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitLValue (1 samples, 0.08%)</title><rect x="1014.5" y="549" width="0.9" height="15.0" fill="rgb(248,34,15)" rx="2" ry="2" />
<text  x="1017.49" y="559.5" ></text>
</g>
<g >
<title>llvm::FindAvailableLoadedValue (1 samples, 0.08%)</title><rect x="814.7" y="613" width="0.9" height="15.0" fill="rgb(211,136,42)" rx="2" ry="2" />
<text  x="817.67" y="623.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;llvm::make_const_ptr, (anonymous namespace)::LValueExprEvaluator, bool&gt;::Visit (1 samples, 0.08%)</title><rect x="1021.7" y="709" width="0.9" height="15.0" fill="rgb(211,212,7)" rx="2" ry="2" />
<text  x="1024.69" y="719.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitVarDecl (1 samples, 0.08%)</title><rect x="1023.5" y="821" width="0.9" height="15.0" fill="rgb(243,143,41)" rx="2" ry="2" />
<text  x="1026.49" y="831.5" ></text>
</g>
<g >
<title>TChain::GetListOfBranches (1 samples, 0.08%)</title><rect x="838.1" y="949" width="0.9" height="15.0" fill="rgb(247,210,0)" rx="2" ry="2" />
<text  x="841.07" y="959.5" ></text>
</g>
<g >
<title>cling::MetaParser::isCommand (175 samples, 13.35%)</title><rect x="674.3" y="869" width="157.5" height="15.0" fill="rgb(212,210,24)" rx="2" ry="2" />
<text  x="677.26" y="879.5" >cling::MetaParser::i..</text>
</g>
<g >
<title>llvm::SelectionDAGISel::CodeGenAndEmitDAG (1 samples, 0.08%)</title><rect x="1120.7" y="741" width="0.9" height="15.0" fill="rgb(243,83,52)" rx="2" ry="2" />
<text  x="1123.69" y="751.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXConstructExpr (1 samples, 0.08%)</title><rect x="1014.5" y="725" width="0.9" height="15.0" fill="rgb(222,96,38)" rx="2" ry="2" />
<text  x="1017.49" y="735.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitTopLevelDecl (9 samples, 0.69%)</title><rect x="1025.3" y="949" width="8.1" height="15.0" fill="rgb(236,44,37)" rx="2" ry="2" />
<text  x="1028.29" y="959.5" ></text>
</g>
<g >
<title>llvm::AttributeList::hasAttribute (1 samples, 0.08%)</title><rect x="817.4" y="565" width="0.9" height="15.0" fill="rgb(231,200,15)" rx="2" ry="2" />
<text  x="820.37" y="575.5" ></text>
</g>
<g >
<title>execute_command_internal (22 samples, 1.68%)</title><rect x="15.4" y="709" width="19.8" height="15.0" fill="rgb(248,39,43)" rx="2" ry="2" />
<text  x="18.40" y="719.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.08%)</title><rect x="1001.9" y="725" width="0.9" height="15.0" fill="rgb(243,68,38)" rx="2" ry="2" />
<text  x="1004.88" y="735.5" ></text>
</g>
<g >
<title>llvm::SelectionDAG::Combine (1 samples, 0.08%)</title><rect x="449.2" y="709" width="0.9" height="15.0" fill="rgb(217,60,33)" rx="2" ry="2" />
<text  x="452.24" y="719.5" ></text>
</g>
<g >
<title>llvm::simplifyUsersOfIV (2 samples, 0.15%)</title><rect x="852.5" y="693" width="1.8" height="15.0" fill="rgb(254,122,52)" rx="2" ry="2" />
<text  x="855.47" y="703.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyld::finalizeWithMemoryManagerLocking (1 samples, 0.08%)</title><rect x="1107.2" y="885" width="0.9" height="15.0" fill="rgb(215,202,44)" rx="2" ry="2" />
<text  x="1110.19" y="895.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (8 samples, 0.61%)</title><rect x="1033.4" y="805" width="7.2" height="15.0" fill="rgb(254,132,53)" rx="2" ry="2" />
<text  x="1036.39" y="815.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (3 samples, 0.23%)</title><rect x="1056.8" y="917" width="2.7" height="15.0" fill="rgb(240,52,46)" rx="2" ry="2" />
<text  x="1059.79" y="927.5" ></text>
</g>
<g >
<title>clang::SourceManager::getFileIDLoaded (1 samples, 0.08%)</title><rect x="1082.9" y="837" width="0.9" height="15.0" fill="rgb(242,170,1)" rx="2" ry="2" />
<text  x="1085.89" y="847.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.08%)</title><rect x="902.0" y="565" width="0.9" height="15.0" fill="rgb(235,56,38)" rx="2" ry="2" />
<text  x="904.98" y="575.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::TargetTransformInfo (llvm::Function const&amp;), llvm::TargetMachine::getTargetIRAnalysis()::{lambda(llvm::Function const&amp;)#1}&gt;::_M_invoke (1 samples, 0.08%)</title><rect x="862.4" y="565" width="0.9" height="15.0" fill="rgb(236,105,39)" rx="2" ry="2" />
<text  x="865.37" y="575.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition (1 samples, 0.08%)</title><rect x="1015.4" y="629" width="0.9" height="15.0" fill="rgb(218,91,52)" rx="2" ry="2" />
<text  x="1018.39" y="639.5" ></text>
</g>
<g >
<title>clang::Sema::BuildVariableInstantiation (1 samples, 0.08%)</title><rect x="1084.7" y="709" width="0.9" height="15.0" fill="rgb(205,41,35)" rx="2" ry="2" />
<text  x="1087.69" y="719.5" ></text>
</g>
<g >
<title>execute_command_internal (4 samples, 0.31%)</title><rect x="36.1" y="597" width="3.6" height="15.0" fill="rgb(239,45,34)" rx="2" ry="2" />
<text  x="39.10" y="607.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;std::add_pointer, (anonymous namespace)::ScalarExprEmitter, llvm::Value*&gt;::Visit (1 samples, 0.08%)</title><rect x="1013.6" y="901" width="0.9" height="15.0" fill="rgb(233,160,15)" rx="2" ry="2" />
<text  x="1016.59" y="911.5" ></text>
</g>
<g >
<title>clang::TemplateDeclInstantiator::VisitFieldDecl (1 samples, 0.08%)</title><rect x="1061.3" y="821" width="0.9" height="15.0" fill="rgb(209,136,26)" rx="2" ry="2" />
<text  x="1064.29" y="831.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::commitTransaction (7 samples, 0.53%)</title><rect x="831.8" y="725" width="6.3" height="15.0" fill="rgb(206,64,41)" rx="2" ry="2" />
<text  x="834.77" y="735.5" ></text>
</g>
<g >
<title>llvm::dyn_cast&lt;clang::VarDecl, clang::NamedDecl const&gt; (1 samples, 0.08%)</title><rect x="1016.3" y="357" width="0.9" height="15.0" fill="rgb(250,26,52)" rx="2" ry="2" />
<text  x="1019.29" y="367.5" ></text>
</g>
<g >
<title>llvm::BitstreamCursor::advanceSkippingSubblocks (1 samples, 0.08%)</title><rect x="1059.5" y="661" width="0.9" height="15.0" fill="rgb(231,15,45)" rx="2" ry="2" />
<text  x="1062.49" y="671.5" ></text>
</g>
<g >
<title>llvm::raw_ostream::write (1 samples, 0.08%)</title><rect x="1025.3" y="837" width="0.9" height="15.0" fill="rgb(212,147,36)" rx="2" ry="2" />
<text  x="1028.29" y="847.5" ></text>
</g>
<g >
<title>llvm::BranchFolder::OptimizeBranches (2 samples, 0.15%)</title><rect x="690.5" y="533" width="1.8" height="15.0" fill="rgb(205,85,42)" rx="2" ry="2" />
<text  x="693.46" y="543.5" ></text>
</g>
<g >
<title>__GI___fork (19 samples, 1.45%)</title><rect x="958.7" y="805" width="17.1" height="15.0" fill="rgb(251,45,18)" rx="2" ry="2" />
<text  x="961.68" y="815.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::RebuildDependentNameType (1 samples, 0.08%)</title><rect x="1100.0" y="725" width="0.9" height="15.0" fill="rgb(244,123,36)" rx="2" ry="2" />
<text  x="1102.99" y="735.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition (1 samples, 0.08%)</title><rect x="1016.3" y="677" width="0.9" height="15.0" fill="rgb(219,199,18)" rx="2" ry="2" />
<text  x="1019.29" y="687.5" ></text>
</g>
<g >
<title>llvm::FoldingSetNodeID::AddInteger (1 samples, 0.08%)</title><rect x="1064.9" y="533" width="0.9" height="15.0" fill="rgb(254,71,13)" rx="2" ry="2" />
<text  x="1067.89" y="543.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXMemberOrOperatorMemberCallExpr (1 samples, 0.08%)</title><rect x="1013.6" y="853" width="0.9" height="15.0" fill="rgb(251,100,43)" rx="2" ry="2" />
<text  x="1016.59" y="863.5" ></text>
</g>
<g >
<title>clang::Sema::BuildDeclarationNameExpr (1 samples, 0.08%)</title><rect x="1080.2" y="629" width="0.9" height="15.0" fill="rgb(237,124,44)" rx="2" ry="2" />
<text  x="1083.19" y="639.5" ></text>
</g>
<g >
<title>llvm::SmallVectorTemplateBase&lt;clang::OverloadCandidate, false&gt;::grow (1 samples, 0.08%)</title><rect x="1069.4" y="885" width="0.9" height="15.0" fill="rgb(229,229,6)" rx="2" ry="2" />
<text  x="1072.39" y="895.5" ></text>
</g>
<g >
<title>expand_string_assignment (1 samples, 0.08%)</title><rect x="35.2" y="501" width="0.9" height="15.0" fill="rgb(209,68,53)" rx="2" ry="2" />
<text  x="38.20" y="511.5" ></text>
</g>
<g >
<title>llvm::orc::lookupWithLegacyFn&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}::operator()(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;) const::{lambda(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)#1}&gt; (8 samples, 0.61%)</title><rect x="1130.6" y="853" width="7.2" height="15.0" fill="rgb(229,117,0)" rx="2" ry="2" />
<text  x="1133.59" y="863.5" ></text>
</g>
<g >
<title>cling::BackendPasses::runOnModule (2 samples, 0.15%)</title><rect x="214.3" y="789" width="1.8" height="15.0" fill="rgb(219,164,46)" rx="2" ry="2" />
<text  x="217.32" y="799.5" ></text>
</g>
<g >
<title>llvm::ScheduleDAGSDNodes::EmitSchedule(llvm::MachineInstrBundleIterator&lt;llvm::MachineInstr, false&gt;&amp;)::{lambda(llvm::SDNode*, bool, bool, llvm::DenseMap&lt;llvm::SDValue, unsigned int, llvm::DenseMapInfo&lt;llvm::SDValue&gt;, llvm::detail::DenseMapPair&lt;llvm::SDValue, unsigned int&gt; &gt;&amp;)#1}::operator() (3 samples, 0.23%)</title><rect x="1113.5" y="597" width="2.7" height="15.0" fill="rgb(250,124,32)" rx="2" ry="2" />
<text  x="1116.49" y="607.5" ></text>
</g>
<g >
<title>cling::DynamicLibraryManager::searchLibrariesForSymbol[abi:cxx11] (3 samples, 0.23%)</title><rect x="747.2" y="469" width="2.7" height="15.0" fill="rgb(205,159,10)" rx="2" ry="2" />
<text  x="750.16" y="479.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition (1 samples, 0.08%)</title><rect x="1111.7" y="709" width="0.9" height="15.0" fill="rgb(245,217,33)" rx="2" ry="2" />
<text  x="1114.69" y="719.5" ></text>
</g>
<g >
<title>cling::MetaParser::isCommand (1 samples, 0.08%)</title><rect x="854.3" y="885" width="0.9" height="15.0" fill="rgb(218,157,53)" rx="2" ry="2" />
<text  x="857.27" y="895.5" ></text>
</g>
<g >
<title>do_lookup_x (1 samples, 0.08%)</title><rect x="1142.3" y="853" width="0.9" height="15.0" fill="rgb(239,202,44)" rx="2" ry="2" />
<text  x="1145.30" y="863.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="34.3" y="485" width="0.9" height="15.0" fill="rgb(227,201,47)" rx="2" ry="2" />
<text  x="37.30" y="495.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallee (1 samples, 0.08%)</title><rect x="1020.8" y="789" width="0.9" height="15.0" fill="rgb(207,26,3)" rx="2" ry="2" />
<text  x="1023.79" y="799.5" ></text>
</g>
<g >
<title>TClass::CallShowMembers (1 samples, 0.08%)</title><rect x="447.4" y="661" width="0.9" height="15.0" fill="rgb(235,147,51)" rx="2" ry="2" />
<text  x="450.44" y="671.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::runStaticInitializersOnce (1 samples, 0.08%)</title><rect x="1101.8" y="885" width="0.9" height="15.0" fill="rgb(212,216,25)" rx="2" ry="2" />
<text  x="1104.79" y="895.5" ></text>
</g>
<g >
<title>llvm::MemorySSA::locallyDominates (1 samples, 0.08%)</title><rect x="884.9" y="565" width="0.9" height="15.0" fill="rgb(240,189,21)" rx="2" ry="2" />
<text  x="887.87" y="575.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::runOnMachineFunction (3 samples, 0.23%)</title><rect x="1113.5" y="661" width="2.7" height="15.0" fill="rgb(207,62,16)" rx="2" ry="2" />
<text  x="1116.49" y="671.5" ></text>
</g>
<g >
<title>clang::Parser::ParseAssignmentExpression (1 samples, 0.08%)</title><rect x="1053.2" y="789" width="0.9" height="15.0" fill="rgb(210,49,48)" rx="2" ry="2" />
<text  x="1056.19" y="799.5" ></text>
</g>
<g >
<title>TBufferFile::ReadObjectAny (1 samples, 0.08%)</title><rect x="448.3" y="613" width="0.9" height="15.0" fill="rgb(220,80,50)" rx="2" ry="2" />
<text  x="451.34" y="623.5" ></text>
</g>
<g >
<title>clang::Expr::isEvaluatable (2 samples, 0.15%)</title><rect x="1021.7" y="853" width="1.8" height="15.0" fill="rgb(205,121,48)" rx="2" ry="2" />
<text  x="1024.69" y="863.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.08%)</title><rect x="1065.8" y="885" width="0.9" height="15.0" fill="rgb(235,185,2)" rx="2" ry="2" />
<text  x="1068.79" y="895.5" ></text>
</g>
<g >
<title>main (42 samples, 3.20%)</title><rect x="1152.2" y="917" width="37.8" height="15.0" fill="rgb(205,131,21)" rx="2" ry="2" />
<text  x="1155.20" y="927.5" >main</text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::FinishedDeserializing (1 samples, 0.08%)</title><rect x="1049.6" y="469" width="0.9" height="15.0" fill="rgb(227,169,49)" rx="2" ry="2" />
<text  x="1052.59" y="479.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.08%)</title><rect x="1086.5" y="789" width="0.9" height="15.0" fill="rgb(231,173,32)" rx="2" ry="2" />
<text  x="1089.49" y="799.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetType (1 samples, 0.08%)</title><rect x="1011.8" y="821" width="0.9" height="15.0" fill="rgb(235,147,4)" rx="2" ry="2" />
<text  x="1014.78" y="831.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::GetAddrOfFunction (1 samples, 0.08%)</title><rect x="1018.1" y="693" width="0.9" height="15.0" fill="rgb(240,204,34)" rx="2" ry="2" />
<text  x="1021.09" y="703.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;, void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;::LookupBucketFor&lt;void const*&gt; (1 samples, 0.08%)</title><rect x="918.2" y="565" width="0.9" height="15.0" fill="rgb(206,92,46)" rx="2" ry="2" />
<text  x="921.18" y="575.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadExpr (1 samples, 0.08%)</title><rect x="1083.8" y="597" width="0.9" height="15.0" fill="rgb(236,105,12)" rx="2" ry="2" />
<text  x="1086.79" y="607.5" ></text>
</g>
<g >
<title>defaultedSpecialMemberIsConstexpr (1 samples, 0.08%)</title><rect x="1055.0" y="901" width="0.9" height="15.0" fill="rgb(213,228,53)" rx="2" ry="2" />
<text  x="1057.99" y="911.5" ></text>
</g>
<g >
<title>__GI___getpid (2 samples, 0.15%)</title><rect x="1184.6" y="821" width="1.8" height="15.0" fill="rgb(205,124,17)" rx="2" ry="2" />
<text  x="1187.60" y="831.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="24.4" y="149" width="0.9" height="15.0" fill="rgb(220,22,1)" rx="2" ry="2" />
<text  x="27.40" y="159.5" ></text>
</g>
<g >
<title>TTree::LoadTree (12 samples, 0.92%)</title><rect x="329.5" y="853" width="10.8" height="15.0" fill="rgb(236,132,45)" rx="2" ry="2" />
<text  x="332.53" y="863.5" ></text>
</g>
<g >
<title>TRint::ProcessLineNr (76 samples, 5.80%)</title><rect x="860.6" y="933" width="68.4" height="15.0" fill="rgb(220,215,37)" rx="2" ry="2" />
<text  x="863.57" y="943.5" >TRint::..</text>
</g>
<g >
<title>clang::Sema::RequireCompleteDeclContext (2 samples, 0.15%)</title><rect x="1073.0" y="821" width="1.8" height="15.0" fill="rgb(235,63,26)" rx="2" ry="2" />
<text  x="1075.99" y="831.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl (1 samples, 0.08%)</title><rect x="1066.7" y="901" width="0.9" height="15.0" fill="rgb(209,104,2)" rx="2" ry="2" />
<text  x="1069.69" y="911.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentNameType (1 samples, 0.08%)</title><rect x="1093.7" y="949" width="0.9" height="15.0" fill="rgb(220,4,49)" rx="2" ry="2" />
<text  x="1096.69" y="959.5" ></text>
</g>
<g >
<title>multikeySort (1 samples, 0.08%)</title><rect x="839.9" y="533" width="0.9" height="15.0" fill="rgb(209,80,34)" rx="2" ry="2" />
<text  x="842.87" y="543.5" ></text>
</g>
<g >
<title>clang::ASTReader::readTypeRecord (1 samples, 0.08%)</title><rect x="1051.4" y="581" width="0.9" height="15.0" fill="rgb(251,154,43)" rx="2" ry="2" />
<text  x="1054.39" y="591.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.15%)</title><rect x="997.4" y="773" width="1.8" height="15.0" fill="rgb(211,53,22)" rx="2" ry="2" />
<text  x="1000.38" y="783.5" ></text>
</g>
<g >
<title>cling::Dyld::ContainsSymbol (3 samples, 0.23%)</title><rect x="747.2" y="437" width="2.7" height="15.0" fill="rgb(249,61,53)" rx="2" ry="2" />
<text  x="750.16" y="447.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="974.9" y="709" width="0.9" height="15.0" fill="rgb(227,51,4)" rx="2" ry="2" />
<text  x="977.88" y="719.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1074.8" y="549" width="0.9" height="15.0" fill="rgb(239,220,45)" rx="2" ry="2" />
<text  x="1077.79" y="559.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::computeExitLimit (1 samples, 0.08%)</title><rect x="1129.7" y="613" width="0.9" height="15.0" fill="rgb(206,171,49)" rx="2" ry="2" />
<text  x="1132.69" y="623.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;std::add_pointer, (anonymous namespace)::ScalarExprEmitter, llvm::Value*&gt;::Visit (1 samples, 0.08%)</title><rect x="1091.9" y="725" width="0.9" height="15.0" fill="rgb(253,71,30)" rx="2" ry="2" />
<text  x="1094.89" y="735.5" ></text>
</g>
<g >
<title>llvm::SimplifyInstruction (1 samples, 0.08%)</title><rect x="814.7" y="533" width="0.9" height="15.0" fill="rgb(206,130,32)" rx="2" ry="2" />
<text  x="817.67" y="543.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.23%)</title><rect x="31.6" y="533" width="2.7" height="15.0" fill="rgb(251,80,33)" rx="2" ry="2" />
<text  x="34.60" y="543.5" ></text>
</g>
<g >
<title>llvm::PMTopLevelManager::findAnalysisPass (4 samples, 0.31%)</title><rect x="919.1" y="565" width="3.6" height="15.0" fill="rgb(209,192,52)" rx="2" ry="2" />
<text  x="922.08" y="575.5" ></text>
</g>
<g >
<title>TClass::CreateListOfDataMembers (1 samples, 0.08%)</title><rect x="448.3" y="453" width="0.9" height="15.0" fill="rgb(210,49,23)" rx="2" ry="2" />
<text  x="451.34" y="463.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="939.8" y="709" width="0.9" height="15.0" fill="rgb(244,120,4)" rx="2" ry="2" />
<text  x="942.78" y="719.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::getSCEV (1 samples, 0.08%)</title><rect x="852.5" y="677" width="0.9" height="15.0" fill="rgb(219,80,2)" rx="2" ry="2" />
<text  x="855.47" y="687.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.08%)</title><rect x="820.1" y="597" width="0.9" height="15.0" fill="rgb(246,42,33)" rx="2" ry="2" />
<text  x="823.07" y="607.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyld::finalizeWithMemoryManagerLocking (5 samples, 0.38%)</title><rect x="1102.7" y="869" width="4.5" height="15.0" fill="rgb(224,14,20)" rx="2" ry="2" />
<text  x="1105.69" y="879.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (4 samples, 0.31%)</title><rect x="232.3" y="725" width="3.6" height="15.0" fill="rgb(248,66,6)" rx="2" ry="2" />
<text  x="235.32" y="735.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="957.8" y="741" width="0.9" height="15.0" fill="rgb(229,212,47)" rx="2" ry="2" />
<text  x="960.78" y="751.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit (1 samples, 0.08%)</title><rect x="1083.8" y="773" width="0.9" height="15.0" fill="rgb(215,204,32)" rx="2" ry="2" />
<text  x="1086.79" y="783.5" ></text>
</g>
<g >
<title>cling::Transaction::~Transaction (1 samples, 0.08%)</title><rect x="859.7" y="741" width="0.9" height="15.0" fill="rgb(217,82,16)" rx="2" ry="2" />
<text  x="862.67" y="751.5" ></text>
</g>
<g >
<title>TCling__UpdateClassInfo (1 samples, 0.08%)</title><rect x="237.7" y="773" width="0.9" height="15.0" fill="rgb(245,30,32)" rx="2" ry="2" />
<text  x="240.72" y="783.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadTemplateArgument (1 samples, 0.08%)</title><rect x="1011.8" y="773" width="0.9" height="15.0" fill="rgb(207,151,46)" rx="2" ry="2" />
<text  x="1014.78" y="783.5" ></text>
</g>
<g >
<title>TCling::ProcessLineSynch (175 samples, 13.35%)</title><rect x="674.3" y="933" width="157.5" height="15.0" fill="rgb(244,203,12)" rx="2" ry="2" />
<text  x="677.26" y="943.5" >TCling::ProcessLineS..</text>
</g>
<g >
<title>clang::Sema::SubstBaseSpecifiers (1 samples, 0.08%)</title><rect x="1075.7" y="629" width="0.9" height="15.0" fill="rgb(253,60,20)" rx="2" ry="2" />
<text  x="1078.69" y="639.5" ></text>
</g>
<g >
<title>cling::MetaParser::isXCommand (1 samples, 0.08%)</title><rect x="854.3" y="869" width="0.9" height="15.0" fill="rgb(219,122,44)" rx="2" ry="2" />
<text  x="857.27" y="879.5" ></text>
</g>
<g >
<title>execute_command (4 samples, 0.31%)</title><rect x="36.1" y="277" width="3.6" height="15.0" fill="rgb(241,30,6)" rx="2" ry="2" />
<text  x="39.10" y="287.5" ></text>
</g>
<g >
<title>llvm::TargetRegisterInfo::needsStackRealignment (1 samples, 0.08%)</title><rect x="848.0" y="549" width="0.9" height="15.0" fill="rgb(230,57,40)" rx="2" ry="2" />
<text  x="850.97" y="559.5" ></text>
</g>
<g >
<title>clang::Stmt::getBeginLoc (1 samples, 0.08%)</title><rect x="1014.5" y="485" width="0.9" height="15.0" fill="rgb(246,146,40)" rx="2" ry="2" />
<text  x="1017.49" y="495.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.08%)</title><rect x="1065.8" y="917" width="0.9" height="15.0" fill="rgb(220,212,50)" rx="2" ry="2" />
<text  x="1068.79" y="927.5" ></text>
</g>
<g >
<title>clang::LinkageComputer::getLVForTemplateArgumentList (1 samples, 0.08%)</title><rect x="1016.3" y="469" width="0.9" height="15.0" fill="rgb(231,63,4)" rx="2" ry="2" />
<text  x="1019.29" y="479.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.08%)</title><rect x="1086.5" y="805" width="0.9" height="15.0" fill="rgb(223,145,22)" rx="2" ry="2" />
<text  x="1089.49" y="815.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::SelectAllBasicBlocks (3 samples, 0.23%)</title><rect x="1113.5" y="645" width="2.7" height="15.0" fill="rgb(205,185,8)" rx="2" ry="2" />
<text  x="1116.49" y="655.5" ></text>
</g>
<g >
<title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::ChildrenGetter&lt;false&gt;::Get (1 samples, 0.08%)</title><rect x="904.7" y="565" width="0.9" height="15.0" fill="rgb(253,135,18)" rx="2" ry="2" />
<text  x="907.68" y="575.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.08%)</title><rect x="35.2" y="837" width="0.9" height="15.0" fill="rgb(242,220,3)" rx="2" ry="2" />
<text  x="38.20" y="847.5" ></text>
</g>
<g >
<title>llvm::SROA::runOnAlloca (2 samples, 0.15%)</title><rect x="800.3" y="613" width="1.8" height="15.0" fill="rgb(230,122,18)" rx="2" ry="2" />
<text  x="803.27" y="623.5" ></text>
</g>
<g >
<title>THashList::AddLast (1 samples, 0.08%)</title><rect x="1001.9" y="757" width="0.9" height="15.0" fill="rgb(231,41,22)" rx="2" ry="2" />
<text  x="1004.88" y="767.5" ></text>
</g>
<g >
<title>llvm::DominatorTreeWrapperPass::releaseMemory (1 samples, 0.08%)</title><rect x="913.7" y="565" width="0.9" height="15.0" fill="rgb(252,91,8)" rx="2" ry="2" />
<text  x="916.68" y="575.5" ></text>
</g>
<g >
<title>EvaluateInPlace (1 samples, 0.08%)</title><rect x="1021.7" y="693" width="0.9" height="15.0" fill="rgb(253,150,19)" rx="2" ry="2" />
<text  x="1024.69" y="703.5" ></text>
</g>
<g >
<title>llvm::TargetLowering::LowerCallTo (1 samples, 0.08%)</title><rect x="1122.5" y="853" width="0.9" height="15.0" fill="rgb(237,120,38)" rx="2" ry="2" />
<text  x="1125.49" y="863.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddTemplateArgument (1 samples, 0.08%)</title><rect x="1064.9" y="565" width="0.9" height="15.0" fill="rgb(242,219,53)" rx="2" ry="2" />
<text  x="1067.89" y="575.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitConstructorBody (2 samples, 0.15%)</title><rect x="1046.9" y="917" width="1.8" height="15.0" fill="rgb(221,48,18)" rx="2" ry="2" />
<text  x="1049.89" y="927.5" ></text>
</g>
<g >
<title>llvm::scc_iterator&lt;llvm::Function const*, llvm::GraphTraits&lt;llvm::Function const*&gt; &gt;::GetNextSCC (1 samples, 0.08%)</title><rect x="682.4" y="533" width="0.9" height="15.0" fill="rgb(208,120,22)" rx="2" ry="2" />
<text  x="685.36" y="543.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt;, llvm::DenseMapInfo&lt;llvm::BasicBlock*&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt; &gt; &gt;, llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt;, llvm::DenseMapInfo&lt;llvm::BasicBlock*&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt; &gt; &gt;::destroyAll (1 samples, 0.08%)</title><rect x="880.4" y="549" width="0.9" height="15.0" fill="rgb(254,10,48)" rx="2" ry="2" />
<text  x="883.37" y="559.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallExpr (1 samples, 0.08%)</title><rect x="1019.9" y="773" width="0.9" height="15.0" fill="rgb(241,99,52)" rx="2" ry="2" />
<text  x="1022.89" y="783.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallArgs&lt;clang::FunctionProtoType&gt; (1 samples, 0.08%)</title><rect x="1014.5" y="613" width="0.9" height="15.0" fill="rgb(243,11,22)" rx="2" ry="2" />
<text  x="1017.49" y="623.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::SetLLVMFunctionAttributesForDefinition (1 samples, 0.08%)</title><rect x="1036.1" y="645" width="0.9" height="15.0" fill="rgb(207,209,16)" rx="2" ry="2" />
<text  x="1039.09" y="655.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (6 samples, 0.46%)</title><rect x="832.7" y="677" width="5.4" height="15.0" fill="rgb(211,13,39)" rx="2" ry="2" />
<text  x="835.67" y="687.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.08%)</title><rect x="850.7" y="709" width="0.9" height="15.0" fill="rgb(218,209,18)" rx="2" ry="2" />
<text  x="853.67" y="719.5" ></text>
</g>
<g >
<title>TCling::ProcessLineSynch (2 samples, 0.15%)</title><rect x="855.2" y="837" width="1.8" height="15.0" fill="rgb(252,68,33)" rx="2" ry="2" />
<text  x="858.17" y="847.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (3 samples, 0.23%)</title><rect x="1015.4" y="853" width="2.7" height="15.0" fill="rgb(254,192,41)" rx="2" ry="2" />
<text  x="1018.39" y="863.5" ></text>
</g>
<g >
<title>clang::Sema::SubstType (1 samples, 0.08%)</title><rect x="1058.6" y="821" width="0.9" height="15.0" fill="rgb(234,147,32)" rx="2" ry="2" />
<text  x="1061.59" y="831.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadStmtFromStream (1 samples, 0.08%)</title><rect x="1077.5" y="853" width="0.9" height="15.0" fill="rgb(207,213,42)" rx="2" ry="2" />
<text  x="1080.49" y="863.5" ></text>
</g>
<g >
<title>clang::Parser::TryAnnotateCXXScopeToken (1 samples, 0.08%)</title><rect x="1109.0" y="933" width="0.9" height="15.0" fill="rgb(232,145,47)" rx="2" ry="2" />
<text  x="1111.99" y="943.5" ></text>
</g>
<g >
<title>TCling::ProcessLineSynch (7 samples, 0.53%)</title><rect x="831.8" y="901" width="6.3" height="15.0" fill="rgb(243,151,3)" rx="2" ry="2" />
<text  x="834.77" y="911.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitAnyExpr (1 samples, 0.08%)</title><rect x="1091.0" y="837" width="0.9" height="15.0" fill="rgb(250,55,1)" rx="2" ry="2" />
<text  x="1093.99" y="847.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::CodeGenAndEmitDAG (1 samples, 0.08%)</title><rect x="1110.8" y="613" width="0.9" height="15.0" fill="rgb(248,105,37)" rx="2" ry="2" />
<text  x="1113.79" y="623.5" ></text>
</g>
<g >
<title>llvm::simplifyUsersOfIV (1 samples, 0.08%)</title><rect x="1118.0" y="773" width="0.9" height="15.0" fill="rgb(242,189,51)" rx="2" ry="2" />
<text  x="1120.99" y="783.5" ></text>
</g>
<g >
<title>clang::Redeclarable&lt;clang::TagDecl&gt;::DeclLink::getPrevious (2 samples, 0.15%)</title><rect x="1029.8" y="837" width="1.8" height="15.0" fill="rgb(207,70,25)" rx="2" ry="2" />
<text  x="1032.79" y="847.5" ></text>
</g>
<g >
<title>clang::Sema::ActOnMemInitializers (1 samples, 0.08%)</title><rect x="1083.8" y="901" width="0.9" height="15.0" fill="rgb(207,217,12)" rx="2" ry="2" />
<text  x="1086.79" y="911.5" ></text>
</g>
<g >
<title>TCling::InspectMembers (1 samples, 0.08%)</title><rect x="447.4" y="757" width="0.9" height="15.0" fill="rgb(222,64,6)" rx="2" ry="2" />
<text  x="450.44" y="767.5" ></text>
</g>
<g >
<title>llvm::StringMapImpl::LookupBucketFor (1 samples, 0.08%)</title><rect x="712.1" y="485" width="0.9" height="15.0" fill="rgb(231,94,15)" rx="2" ry="2" />
<text  x="715.06" y="495.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveExternalSymbols (1 samples, 0.08%)</title><rect x="1120.7" y="933" width="0.9" height="15.0" fill="rgb(250,36,53)" rx="2" ry="2" />
<text  x="1123.69" y="943.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetType (1 samples, 0.08%)</title><rect x="1051.4" y="645" width="0.9" height="15.0" fill="rgb(207,117,1)" rx="2" ry="2" />
<text  x="1054.39" y="655.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;, void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;::LookupBucketFor&lt;void const*&gt; (2 samples, 0.15%)</title><rect x="868.7" y="549" width="1.8" height="15.0" fill="rgb(254,223,11)" rx="2" ry="2" />
<text  x="871.67" y="559.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.15%)</title><rect x="1150.4" y="821" width="1.8" height="15.0" fill="rgb(238,181,33)" rx="2" ry="2" />
<text  x="1153.40" y="831.5" ></text>
</g>
<g >
<title>llvm::MemorySSA::MemorySSA (1 samples, 0.08%)</title><rect x="817.4" y="661" width="0.9" height="15.0" fill="rgb(253,145,38)" rx="2" ry="2" />
<text  x="820.37" y="671.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::getMangledName (8 samples, 0.61%)</title><rect x="1026.2" y="917" width="7.2" height="15.0" fill="rgb(209,157,19)" rx="2" ry="2" />
<text  x="1029.19" y="927.5" ></text>
</g>
<g >
<title>llvm::X86TargetLowering::LowerCallResult (1 samples, 0.08%)</title><rect x="1121.6" y="885" width="0.9" height="15.0" fill="rgb(251,72,39)" rx="2" ry="2" />
<text  x="1124.59" y="895.5" ></text>
</g>
<g >
<title>llvm::TargetLibraryInfoImpl::getLibFunc (1 samples, 0.08%)</title><rect x="896.6" y="597" width="0.9" height="15.0" fill="rgb(232,23,22)" rx="2" ry="2" />
<text  x="899.58" y="607.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddType (1 samples, 0.08%)</title><rect x="1097.3" y="581" width="0.9" height="15.0" fill="rgb(240,130,31)" rx="2" ry="2" />
<text  x="1100.29" y="591.5" ></text>
</g>
<g >
<title>llvm::SmallVectorBase::grow_pod (1 samples, 0.08%)</title><rect x="936.2" y="741" width="0.9" height="15.0" fill="rgb(206,148,40)" rx="2" ry="2" />
<text  x="939.18" y="751.5" ></text>
</g>
<g >
<title>TUnixSystem::UnixHomedirectory (5 samples, 0.38%)</title><rect x="1002.8" y="789" width="4.5" height="15.0" fill="rgb(244,166,9)" rx="2" ry="2" />
<text  x="1005.78" y="799.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddTemplateArgument (1 samples, 0.08%)</title><rect x="1064.9" y="709" width="0.9" height="15.0" fill="rgb(246,48,36)" rx="2" ry="2" />
<text  x="1067.89" y="719.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.08%)</title><rect x="1065.8" y="773" width="0.9" height="15.0" fill="rgb(223,63,3)" rx="2" ry="2" />
<text  x="1068.79" y="783.5" ></text>
</g>
<g >
<title>llvm::FoldingSetBase::FindNodeOrInsertPos (1 samples, 0.08%)</title><rect x="1089.2" y="581" width="0.9" height="15.0" fill="rgb(234,126,13)" rx="2" ry="2" />
<text  x="1092.19" y="591.5" ></text>
</g>
<g >
<title>ROOT::Detail::RDF::RLoopManager::CheckFilters (9 samples, 0.69%)</title><rect x="204.4" y="949" width="8.1" height="15.0" fill="rgb(212,20,33)" rx="2" ry="2" />
<text  x="207.42" y="959.5" ></text>
</g>
<g >
<title>cling::Interpreter::DeclareInternal (37 samples, 2.82%)</title><rect x="798.5" y="789" width="33.3" height="15.0" fill="rgb(206,130,29)" rx="2" ry="2" />
<text  x="801.47" y="799.5" >cl..</text>
</g>
<g >
<title>clang::Parser::AnnotateTemplateIdTokenAsType (1 samples, 0.08%)</title><rect x="1109.0" y="645" width="0.9" height="15.0" fill="rgb(244,34,21)" rx="2" ry="2" />
<text  x="1111.99" y="655.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.08%)</title><rect x="1086.5" y="917" width="0.9" height="15.0" fill="rgb(219,89,7)" rx="2" ry="2" />
<text  x="1089.49" y="927.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddTemplateArgument (1 samples, 0.08%)</title><rect x="1072.1" y="629" width="0.9" height="15.0" fill="rgb(227,156,48)" rx="2" ry="2" />
<text  x="1075.09" y="639.5" ></text>
</g>
<g >
<title>TBufferFile::ReadObjectAny (1 samples, 0.08%)</title><rect x="448.3" y="677" width="0.9" height="15.0" fill="rgb(236,220,41)" rx="2" ry="2" />
<text  x="451.34" y="687.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="13.6" y="309" width="0.9" height="15.0" fill="rgb(254,192,0)" rx="2" ry="2" />
<text  x="16.60" y="319.5" ></text>
</g>
<g >
<title>clang::TemplateArgumentList::ComputeODRHash (1 samples, 0.08%)</title><rect x="1065.8" y="645" width="0.9" height="15.0" fill="rgb(233,110,36)" rx="2" ry="2" />
<text  x="1068.79" y="655.5" ></text>
</g>
<g >
<title>clang::Sema::PerformPendingInstantiations (1 samples, 0.08%)</title><rect x="1084.7" y="917" width="0.9" height="15.0" fill="rgb(244,195,12)" rx="2" ry="2" />
<text  x="1087.69" y="927.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateExceptionSpec (1 samples, 0.08%)</title><rect x="1062.2" y="885" width="0.9" height="15.0" fill="rgb(220,99,9)" rx="2" ry="2" />
<text  x="1065.19" y="895.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.08%)</title><rect x="35.2" y="213" width="0.9" height="15.0" fill="rgb(220,68,51)" rx="2" ry="2" />
<text  x="38.20" y="223.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (2 samples, 0.15%)</title><rect x="1073.0" y="805" width="1.8" height="15.0" fill="rgb(213,224,52)" rx="2" ry="2" />
<text  x="1075.99" y="815.5" ></text>
</g>
<g >
<title>cling::Interpreter::EvaluateInternal (138 samples, 10.53%)</title><rect x="674.3" y="821" width="124.2" height="15.0" fill="rgb(223,124,15)" rx="2" ry="2" />
<text  x="677.26" y="831.5" >cling::Interpre..</text>
</g>
<g >
<title>[bash] (1 samples, 0.08%)</title><rect x="35.2" y="533" width="0.9" height="15.0" fill="rgb(211,9,35)" rx="2" ry="2" />
<text  x="38.20" y="543.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::executeWrapper (1 samples, 0.08%)</title><rect x="854.3" y="805" width="0.9" height="15.0" fill="rgb(245,151,50)" rx="2" ry="2" />
<text  x="857.27" y="815.5" ></text>
</g>
<g >
<title>clang::Expr::Expr (1 samples, 0.08%)</title><rect x="1095.5" y="517" width="0.9" height="15.0" fill="rgb(248,70,37)" rx="2" ry="2" />
<text  x="1098.49" y="527.5" ></text>
</g>
<g >
<title>clang::Sema::AddBuiltinCandidate (1 samples, 0.08%)</title><rect x="1069.4" y="917" width="0.9" height="15.0" fill="rgb(234,176,2)" rx="2" ry="2" />
<text  x="1072.39" y="927.5" ></text>
</g>
<g >
<title>llvm::orc::lookupWithLegacyFn&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}::operator()(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;) const::{lambda(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)#1}&gt; (5 samples, 0.38%)</title><rect x="1113.5" y="773" width="4.5" height="15.0" fill="rgb(254,0,38)" rx="2" ry="2" />
<text  x="1116.49" y="783.5" ></text>
</g>
<g >
<title>clang::ASTContext::getTrivialTypeSourceInfo (1 samples, 0.08%)</title><rect x="855.2" y="485" width="0.9" height="15.0" fill="rgb(241,213,42)" rx="2" ry="2" />
<text  x="858.17" y="495.5" ></text>
</g>
<g >
<title>llvm::DominatorTreeWrapperPass::releaseMemory (1 samples, 0.08%)</title><rect x="880.4" y="581" width="0.9" height="15.0" fill="rgb(247,118,24)" rx="2" ry="2" />
<text  x="883.37" y="591.5" ></text>
</g>
<g >
<title>llvm::LPPassManager::runOnFunction (1 samples, 0.08%)</title><rect x="1129.7" y="869" width="0.9" height="15.0" fill="rgb(216,9,27)" rx="2" ry="2" />
<text  x="1132.69" y="879.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord (1 samples, 0.08%)</title><rect x="1011.8" y="709" width="0.9" height="15.0" fill="rgb(207,127,35)" rx="2" ry="2" />
<text  x="1014.78" y="719.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentScopeDeclRefExpr (1 samples, 0.08%)</title><rect x="673.4" y="677" width="0.9" height="15.0" fill="rgb(243,124,49)" rx="2" ry="2" />
<text  x="676.36" y="687.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.08%)</title><rect x="1112.6" y="661" width="0.9" height="15.0" fill="rgb(239,30,34)" rx="2" ry="2" />
<text  x="1115.59" y="671.5" ></text>
</g>
<g >
<title>llvm::AttrBuilder::addAttribute (1 samples, 0.08%)</title><rect x="1036.1" y="565" width="0.9" height="15.0" fill="rgb(225,100,33)" rx="2" ry="2" />
<text  x="1039.09" y="575.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::GetAddrOfFunction (1 samples, 0.08%)</title><rect x="1020.8" y="741" width="0.9" height="15.0" fill="rgb(233,139,10)" rx="2" ry="2" />
<text  x="1023.79" y="751.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.08%)</title><rect x="1118.9" y="245" width="0.9" height="15.0" fill="rgb(236,28,47)" rx="2" ry="2" />
<text  x="1121.89" y="255.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (8 samples, 0.61%)</title><rect x="1130.6" y="773" width="7.2" height="15.0" fill="rgb(213,197,16)" rx="2" ry="2" />
<text  x="1133.59" y="783.5" ></text>
</g>
<g >
<title>llvm::CallGraph::addToCallGraph (1 samples, 0.08%)</title><rect x="866.0" y="597" width="0.9" height="15.0" fill="rgb(224,206,16)" rx="2" ry="2" />
<text  x="868.97" y="607.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="21.7" y="277" width="0.9" height="15.0" fill="rgb(238,203,35)" rx="2" ry="2" />
<text  x="24.70" y="287.5" ></text>
</g>
<g >
<title>cling::Interpreter::loadHeader (1 samples, 0.08%)</title><rect x="1118.0" y="917" width="0.9" height="15.0" fill="rgb(244,208,39)" rx="2" ry="2" />
<text  x="1120.99" y="927.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (12 samples, 0.92%)</title><rect x="1033.4" y="853" width="10.8" height="15.0" fill="rgb(207,41,15)" rx="2" ry="2" />
<text  x="1036.39" y="863.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="957.8" y="805" width="0.9" height="15.0" fill="rgb(216,211,6)" rx="2" ry="2" />
<text  x="960.78" y="815.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::createNodeForPHI (1 samples, 0.08%)</title><rect x="1118.0" y="693" width="0.9" height="15.0" fill="rgb(244,69,27)" rx="2" ry="2" />
<text  x="1120.99" y="703.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::runOnMachineFunction (1 samples, 0.08%)</title><rect x="709.4" y="549" width="0.9" height="15.0" fill="rgb(207,1,5)" rx="2" ry="2" />
<text  x="712.36" y="559.5" ></text>
</g>
<g >
<title>tryToUnrollLoop (1 samples, 0.08%)</title><rect x="1109.9" y="725" width="0.9" height="15.0" fill="rgb(217,116,43)" rx="2" ry="2" />
<text  x="1112.89" y="735.5" ></text>
</g>
<g >
<title>combineInstructionsOverFunction (7 samples, 0.53%)</title><rect x="822.8" y="645" width="6.3" height="15.0" fill="rgb(247,37,29)" rx="2" ry="2" />
<text  x="825.77" y="655.5" ></text>
</g>
<g >
<title>root (11 samples, 0.84%)</title><rect x="1137.8" y="965" width="9.9" height="15.0" fill="rgb(233,28,41)" rx="2" ry="2" />
<text  x="1140.80" y="975.5" ></text>
</g>
<g >
<title>cling::Interpreter::DeclareInternal (1 samples, 0.08%)</title><rect x="942.5" y="821" width="0.9" height="15.0" fill="rgb(230,177,53)" rx="2" ry="2" />
<text  x="945.48" y="831.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGBuilder::lowerInvokable (2 samples, 0.15%)</title><rect x="1123.4" y="869" width="1.8" height="15.0" fill="rgb(207,106,35)" rx="2" ry="2" />
<text  x="1126.39" y="879.5" ></text>
</g>
<g >
<title>llvm::AAResultsWrapperPass::runOnFunction (1 samples, 0.08%)</title><rect x="228.7" y="741" width="0.9" height="15.0" fill="rgb(253,54,21)" rx="2" ry="2" />
<text  x="231.72" y="751.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::initializeAnalysisImpl (1 samples, 0.08%)</title><rect x="912.8" y="597" width="0.9" height="15.0" fill="rgb(211,93,25)" rx="2" ry="2" />
<text  x="915.78" y="607.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalDefinition (1 samples, 0.08%)</title><rect x="1037.0" y="709" width="0.9" height="15.0" fill="rgb(206,159,53)" rx="2" ry="2" />
<text  x="1039.99" y="719.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.08%)</title><rect x="1112.6" y="613" width="0.9" height="15.0" fill="rgb(221,5,16)" rx="2" ry="2" />
<text  x="1115.59" y="623.5" ></text>
</g>
<g >
<title>execute_command_internal (5 samples, 0.38%)</title><rect x="10.9" y="693" width="4.5" height="15.0" fill="rgb(241,202,30)" rx="2" ry="2" />
<text  x="13.90" y="703.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::recordAvailableAnalysis (1 samples, 0.08%)</title><rect x="838.1" y="565" width="0.9" height="15.0" fill="rgb(248,159,41)" rx="2" ry="2" />
<text  x="841.07" y="575.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord (1 samples, 0.08%)</title><rect x="1059.5" y="821" width="0.9" height="15.0" fill="rgb(219,163,14)" rx="2" ry="2" />
<text  x="1062.49" y="831.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalDefinition (1 samples, 0.08%)</title><rect x="1043.3" y="837" width="0.9" height="15.0" fill="rgb(216,20,17)" rx="2" ry="2" />
<text  x="1046.29" y="847.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.46%)</title><rect x="1154.9" y="773" width="5.4" height="15.0" fill="rgb(243,194,37)" rx="2" ry="2" />
<text  x="1157.90" y="783.5" ></text>
</g>
<g >
<title>llvm::LazyValueInfo::getConstant (1 samples, 0.08%)</title><rect x="816.5" y="581" width="0.9" height="15.0" fill="rgb(250,196,15)" rx="2" ry="2" />
<text  x="819.47" y="591.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::getSCEV (1 samples, 0.08%)</title><rect x="1118.0" y="757" width="0.9" height="15.0" fill="rgb(205,148,2)" rx="2" ry="2" />
<text  x="1120.99" y="767.5" ></text>
</g>
<g >
<title>cling::Interpreter::executeTransaction (26 samples, 1.98%)</title><rect x="214.3" y="821" width="23.4" height="15.0" fill="rgb(244,99,51)" rx="2" ry="2" />
<text  x="217.32" y="831.5" >c..</text>
</g>
<g >
<title>[unknown] (3 samples, 0.23%)</title><rect x="19.0" y="277" width="2.7" height="15.0" fill="rgb(244,88,7)" rx="2" ry="2" />
<text  x="22.00" y="287.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::commitTransaction (4 samples, 0.31%)</title><rect x="850.7" y="789" width="3.6" height="15.0" fill="rgb(231,51,21)" rx="2" ry="2" />
<text  x="853.67" y="799.5" ></text>
</g>
<g >
<title>TClingMemberIter::Advance (1 samples, 0.08%)</title><rect x="1118.9" y="357" width="0.9" height="15.0" fill="rgb(205,119,40)" rx="2" ry="2" />
<text  x="1121.89" y="367.5" ></text>
</g>
<g >
<title>clang::Sema::SubstType (1 samples, 0.08%)</title><rect x="1097.3" y="805" width="0.9" height="15.0" fill="rgb(227,227,30)" rx="2" ry="2" />
<text  x="1100.29" y="815.5" ></text>
</g>
<g >
<title>set_default_locale (2 samples, 0.15%)</title><rect x="1188.2" y="901" width="1.8" height="15.0" fill="rgb(253,179,36)" rx="2" ry="2" />
<text  x="1191.20" y="911.5" ></text>
</g>
<g >
<title>clang::Sema::ActOnIdExpression (1 samples, 0.08%)</title><rect x="1053.2" y="741" width="0.9" height="15.0" fill="rgb(248,101,52)" rx="2" ry="2" />
<text  x="1056.19" y="751.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.08%)</title><rect x="749.0" y="421" width="0.9" height="15.0" fill="rgb(236,11,14)" rx="2" ry="2" />
<text  x="751.96" y="431.5" ></text>
</g>
<g >
<title>clang::ASTReader::readTypeRecord (1 samples, 0.08%)</title><rect x="1009.1" y="725" width="0.9" height="15.0" fill="rgb(237,63,26)" rx="2" ry="2" />
<text  x="1012.08" y="735.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.08%)</title><rect x="1064.0" y="901" width="0.9" height="15.0" fill="rgb(241,127,7)" rx="2" ry="2" />
<text  x="1066.99" y="911.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalDefinition (2 samples, 0.15%)</title><rect x="1044.2" y="853" width="1.8" height="15.0" fill="rgb(233,115,28)" rx="2" ry="2" />
<text  x="1047.19" y="863.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXMemberCallExpr (1 samples, 0.08%)</title><rect x="1013.6" y="869" width="0.9" height="15.0" fill="rgb(251,113,18)" rx="2" ry="2" />
<text  x="1016.59" y="879.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit (1 samples, 0.08%)</title><rect x="1012.7" y="661" width="0.9" height="15.0" fill="rgb(212,65,1)" rx="2" ry="2" />
<text  x="1015.68" y="671.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::getSCEV (1 samples, 0.08%)</title><rect x="853.4" y="613" width="0.9" height="15.0" fill="rgb(207,148,28)" rx="2" ry="2" />
<text  x="856.37" y="623.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformCallExpr (1 samples, 0.08%)</title><rect x="1080.2" y="741" width="0.9" height="15.0" fill="rgb(225,87,6)" rx="2" ry="2" />
<text  x="1083.19" y="751.5" ></text>
</g>
<g >
<title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::CalculateFromScratch (2 samples, 0.15%)</title><rect x="683.3" y="549" width="1.8" height="15.0" fill="rgb(245,182,31)" rx="2" ry="2" />
<text  x="686.26" y="559.5" ></text>
</g>
<g >
<title>clang::Decl::castFromDeclContext (1 samples, 0.08%)</title><rect x="1032.5" y="869" width="0.9" height="15.0" fill="rgb(226,37,16)" rx="2" ry="2" />
<text  x="1035.49" y="879.5" ></text>
</g>
<g >
<title>llvm::orc::LambdaSymbolResolver&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt; const&amp;)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}&gt;::lookup (8 samples, 0.61%)</title><rect x="1130.6" y="869" width="7.2" height="15.0" fill="rgb(230,182,14)" rx="2" ry="2" />
<text  x="1133.59" y="879.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl (1 samples, 0.08%)</title><rect x="1085.6" y="949" width="0.9" height="15.0" fill="rgb(241,209,20)" rx="2" ry="2" />
<text  x="1088.59" y="959.5" ></text>
</g>
<g >
<title>EvaluateDirectiveSubExpr (1 samples, 0.08%)</title><rect x="942.5" y="645" width="0.9" height="15.0" fill="rgb(227,59,41)" rx="2" ry="2" />
<text  x="945.48" y="655.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::findOrEmitSection (2 samples, 0.15%)</title><rect x="260.2" y="741" width="1.8" height="15.0" fill="rgb(215,195,8)" rx="2" ry="2" />
<text  x="263.22" y="751.5" ></text>
</g>
<g >
<title>getAllocationDataForFunction (1 samples, 0.08%)</title><rect x="805.7" y="597" width="0.9" height="15.0" fill="rgb(236,178,24)" rx="2" ry="2" />
<text  x="808.67" y="607.5" ></text>
</g>
<g >
<title>clang::DeclContext::addDecl (1 samples, 0.08%)</title><rect x="1056.8" y="837" width="0.9" height="15.0" fill="rgb(246,74,11)" rx="2" ry="2" />
<text  x="1059.79" y="847.5" ></text>
</g>
<g >
<title>clang::Parser::ParseDeclGroup (1 samples, 0.08%)</title><rect x="1052.3" y="949" width="0.9" height="15.0" fill="rgb(228,72,41)" rx="2" ry="2" />
<text  x="1055.29" y="959.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (1 samples, 0.08%)</title><rect x="1119.8" y="853" width="0.9" height="15.0" fill="rgb(235,13,43)" rx="2" ry="2" />
<text  x="1122.79" y="863.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitDecl (1 samples, 0.08%)</title><rect x="1015.4" y="517" width="0.9" height="15.0" fill="rgb(213,94,46)" rx="2" ry="2" />
<text  x="1018.39" y="527.5" ></text>
</g>
<g >
<title>llvm::FoldingSetBase::FoldingSetBase (1 samples, 0.08%)</title><rect x="893.9" y="581" width="0.9" height="15.0" fill="rgb(226,107,0)" rx="2" ry="2" />
<text  x="896.87" y="591.5" ></text>
</g>
<g >
<title>clang::Sema::ActOnFinishFullExpr (1 samples, 0.08%)</title><rect x="1076.6" y="901" width="0.9" height="15.0" fill="rgb(220,163,41)" rx="2" ry="2" />
<text  x="1079.59" y="911.5" ></text>
</g>
<g >
<title>llvm::ScheduleDAGSDNodes::EmitSchedule(llvm::MachineInstrBundleIterator&lt;llvm::MachineInstr, false&gt;&amp;)::{lambda(llvm::SDNode*, bool, bool, llvm::DenseMap&lt;llvm::SDValue, unsigned int, llvm::DenseMapInfo&lt;llvm::SDValue&gt;, llvm::detail::DenseMapPair&lt;llvm::SDValue, unsigned int&gt; &gt;&amp;)#1}::operator() (3 samples, 0.23%)</title><rect x="1103.6" y="613" width="2.7" height="15.0" fill="rgb(206,46,30)" rx="2" ry="2" />
<text  x="1106.59" y="623.5" ></text>
</g>
<g >
<title>clang::ASTContext::toCharUnitsFromBits (1 samples, 0.08%)</title><rect x="1013.6" y="725" width="0.9" height="15.0" fill="rgb(222,75,32)" rx="2" ry="2" />
<text  x="1016.59" y="735.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadTypeLoc (1 samples, 0.08%)</title><rect x="1009.1" y="517" width="0.9" height="15.0" fill="rgb(208,217,8)" rx="2" ry="2" />
<text  x="1012.08" y="527.5" ></text>
</g>
<g >
<title>llvm::MachineBasicBlock::getSymbol (1 samples, 0.08%)</title><rect x="1116.2" y="613" width="0.9" height="15.0" fill="rgb(233,224,54)" rx="2" ry="2" />
<text  x="1119.19" y="623.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord (1 samples, 0.08%)</title><rect x="1022.6" y="645" width="0.9" height="15.0" fill="rgb(240,192,3)" rx="2" ry="2" />
<text  x="1025.59" y="655.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::doFinalization (2 samples, 0.15%)</title><rect x="676.1" y="597" width="1.8" height="15.0" fill="rgb(207,86,0)" rx="2" ry="2" />
<text  x="679.06" y="607.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::getAddExpr (1 samples, 0.08%)</title><rect x="852.5" y="597" width="0.9" height="15.0" fill="rgb(219,144,25)" rx="2" ry="2" />
<text  x="855.47" y="607.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.08%)</title><rect x="1058.6" y="789" width="0.9" height="15.0" fill="rgb(215,2,27)" rx="2" ry="2" />
<text  x="1061.59" y="799.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertTypeForMem (1 samples, 0.08%)</title><rect x="1048.7" y="933" width="0.9" height="15.0" fill="rgb(234,59,11)" rx="2" ry="2" />
<text  x="1051.69" y="943.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.08%)</title><rect x="1055.9" y="789" width="0.9" height="15.0" fill="rgb(238,18,31)" rx="2" ry="2" />
<text  x="1058.89" y="799.5" ></text>
</g>
<g >
<title>TBufferFile::ReadObjectAny (1 samples, 0.08%)</title><rect x="1118.9" y="597" width="0.9" height="15.0" fill="rgb(215,176,24)" rx="2" ry="2" />
<text  x="1121.89" y="607.5" ></text>
</g>
<g >
<title>llvm::X86AsmPrinter::runOnMachineFunction (3 samples, 0.23%)</title><rect x="249.4" y="725" width="2.7" height="15.0" fill="rgb(250,199,3)" rx="2" ry="2" />
<text  x="252.42" y="735.5" ></text>
</g>
<g >
<title>llvm::runIPSCCP (1 samples, 0.08%)</title><rect x="1100.9" y="869" width="0.9" height="15.0" fill="rgb(214,69,53)" rx="2" ry="2" />
<text  x="1103.89" y="879.5" ></text>
</g>
<g >
<title>llvm::BasicAAResult::getModRefBehavior (1 samples, 0.08%)</title><rect x="829.1" y="549" width="0.9" height="15.0" fill="rgb(233,89,31)" rx="2" ry="2" />
<text  x="832.07" y="559.5" ></text>
</g>
<g >
<title>__GI___fork (4 samples, 0.31%)</title><rect x="36.1" y="101" width="3.6" height="15.0" fill="rgb(209,119,45)" rx="2" ry="2" />
<text  x="39.10" y="111.5" ></text>
</g>
<g >
<title>clang::Sema::BuildBaseInitializer (1 samples, 0.08%)</title><rect x="1076.6" y="917" width="0.9" height="15.0" fill="rgb(252,177,9)" rx="2" ry="2" />
<text  x="1079.59" y="927.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.08%)</title><rect x="29.8" y="533" width="0.9" height="15.0" fill="rgb(211,110,40)" rx="2" ry="2" />
<text  x="32.80" y="543.5" ></text>
</g>
<g >
<title>llvm::PMTopLevelManager::findAnalysisPass (5 samples, 0.38%)</title><rect x="253.9" y="709" width="4.5" height="15.0" fill="rgb(231,37,15)" rx="2" ry="2" />
<text  x="256.92" y="719.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.08%)</title><rect x="29.8" y="517" width="0.9" height="15.0" fill="rgb(228,87,33)" rx="2" ry="2" />
<text  x="32.80" y="527.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.08%)</title><rect x="672.5" y="917" width="0.9" height="15.0" fill="rgb(238,128,32)" rx="2" ry="2" />
<text  x="675.46" y="927.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (9 samples, 0.69%)</title><rect x="822.8" y="677" width="8.1" height="15.0" fill="rgb(242,72,25)" rx="2" ry="2" />
<text  x="825.77" y="687.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadTemplateParameterList (1 samples, 0.08%)</title><rect x="1009.1" y="837" width="0.9" height="15.0" fill="rgb(207,86,16)" rx="2" ry="2" />
<text  x="1012.08" y="847.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnModule (1 samples, 0.08%)</title><rect x="1119.8" y="837" width="0.9" height="15.0" fill="rgb(223,6,0)" rx="2" ry="2" />
<text  x="1122.79" y="847.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType (1 samples, 0.08%)</title><rect x="1093.7" y="901" width="0.9" height="15.0" fill="rgb(253,69,48)" rx="2" ry="2" />
<text  x="1096.69" y="911.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (1 samples, 0.08%)</title><rect x="1092.8" y="805" width="0.9" height="15.0" fill="rgb(252,71,19)" rx="2" ry="2" />
<text  x="1095.79" y="815.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord (1 samples, 0.08%)</title><rect x="1071.2" y="741" width="0.9" height="15.0" fill="rgb(246,186,44)" rx="2" ry="2" />
<text  x="1074.19" y="751.5" ></text>
</g>
<g >
<title>computeKnownBits (1 samples, 0.08%)</title><rect x="836.3" y="533" width="0.9" height="15.0" fill="rgb(243,137,38)" rx="2" ry="2" />
<text  x="839.27" y="543.5" ></text>
</g>
<g >
<title>llvm::JumpThreadingPass::ProcessBlock (2 samples, 0.15%)</title><rect x="815.6" y="661" width="1.8" height="15.0" fill="rgb(214,41,11)" rx="2" ry="2" />
<text  x="818.57" y="671.5" ></text>
</g>
<g >
<title>?? (86 samples, 6.56%)</title><rect x="265.6" y="917" width="77.4" height="15.0" fill="rgb(205,112,6)" rx="2" ry="2" />
<text  x="268.62" y="927.5" >??</text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (1 samples, 0.08%)</title><rect x="1089.2" y="821" width="0.9" height="15.0" fill="rgb(244,109,5)" rx="2" ry="2" />
<text  x="1092.19" y="831.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.08%)</title><rect x="1089.2" y="677" width="0.9" height="15.0" fill="rgb(210,55,52)" rx="2" ry="2" />
<text  x="1092.19" y="687.5" ></text>
</g>
<g >
<title>llvm::TargetLibraryInfoImpl::getLibFunc (1 samples, 0.08%)</title><rect x="220.6" y="677" width="0.9" height="15.0" fill="rgb(206,94,6)" rx="2" ry="2" />
<text  x="223.62" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;llvm::MachineBasicBlock*, __gnu_cxx::__normal_iterator&lt;llvm::MachineBasicBlock**, std::vector&lt;llvm::MachineBasicBlock*, std::allocator&lt;llvm::MachineBasicBlock*&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;llvm::MachineBasicBlock*, __gnu_cxx::__normal_iterator&lt;llvm::MachineBasicBlock**, std::vector&lt;llvm::MachineBasicBlock*, std::allocator&lt;llvm::MachineBasicBlock*&gt; &gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;llvm::MachineBasicBlock*, __gnu_cxx::__normal_iterator&lt;llvm::MachineBasicBlock**, std::vector&lt;llvm::MachineBasicBlock*, std::allocator&lt;llvm::MachineBasicBlock*&gt; &gt; &gt; &gt; &gt; (1 samples, 0.08%)</title><rect x="241.3" y="661" width="0.9" height="15.0" fill="rgb(222,27,43)" rx="2" ry="2" />
<text  x="244.32" y="671.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1147.7" y="885" width="0.9" height="15.0" fill="rgb(248,174,18)" rx="2" ry="2" />
<text  x="1150.70" y="895.5" ></text>
</g>
<g >
<title>llvm::TargetOptions::DisableFramePointerElim (1 samples, 0.08%)</title><rect x="713.0" y="501" width="0.9" height="15.0" fill="rgb(212,45,40)" rx="2" ry="2" />
<text  x="715.96" y="511.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization (1 samples, 0.08%)</title><rect x="1086.5" y="693" width="0.9" height="15.0" fill="rgb(230,51,17)" rx="2" ry="2" />
<text  x="1089.49" y="703.5" ></text>
</g>
<g >
<title>DynamicPath (40 samples, 3.05%)</title><rect x="953.3" y="853" width="36.0" height="15.0" fill="rgb(254,146,27)" rx="2" ry="2" />
<text  x="956.28" y="863.5" >Dyn..</text>
</g>
<g >
<title>clang::Parser::ParseDeclarationAfterDeclaratorAndAttributes (1 samples, 0.08%)</title><rect x="1052.3" y="933" width="0.9" height="15.0" fill="rgb(213,131,13)" rx="2" ry="2" />
<text  x="1055.29" y="943.5" ></text>
</g>
<g >
<title>clang::DeclContext::lookup (1 samples, 0.08%)</title><rect x="1100.0" y="581" width="0.9" height="15.0" fill="rgb(221,81,24)" rx="2" ry="2" />
<text  x="1102.99" y="591.5" ></text>
</g>
<g >
<title>llvm::TargetPassConfig::addPass (1 samples, 0.08%)</title><rect x="675.2" y="549" width="0.9" height="15.0" fill="rgb(253,116,3)" rx="2" ry="2" />
<text  x="678.16" y="559.5" ></text>
</g>
<g >
<title>cling::Interpreter::executeTransaction (1 samples, 0.08%)</title><rect x="1109.9" y="821" width="0.9" height="15.0" fill="rgb(241,77,7)" rx="2" ry="2" />
<text  x="1112.89" y="831.5" ></text>
</g>
<g >
<title>llvm::canConstantFoldCallTo (1 samples, 0.08%)</title><rect x="219.7" y="677" width="0.9" height="15.0" fill="rgb(217,127,32)" rx="2" ry="2" />
<text  x="222.72" y="687.5" ></text>
</g>
<g >
<title>llvm::PMTopLevelManager::findAnalysisPass (1 samples, 0.08%)</title><rect x="678.8" y="533" width="0.9" height="15.0" fill="rgb(247,215,4)" rx="2" ry="2" />
<text  x="681.76" y="543.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.08%)</title><rect x="1092.8" y="597" width="0.9" height="15.0" fill="rgb(236,151,5)" rx="2" ry="2" />
<text  x="1095.79" y="607.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.23%)</title><rect x="929.0" y="645" width="2.7" height="15.0" fill="rgb(246,13,43)" rx="2" ry="2" />
<text  x="931.98" y="655.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition (1 samples, 0.08%)</title><rect x="1111.7" y="741" width="0.9" height="15.0" fill="rgb(218,104,34)" rx="2" ry="2" />
<text  x="1114.69" y="751.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitAutoVarAlloca (1 samples, 0.08%)</title><rect x="1015.4" y="469" width="0.9" height="15.0" fill="rgb(230,174,48)" rx="2" ry="2" />
<text  x="1018.39" y="479.5" ></text>
</g>
<g >
<title>clang::Stmt::getBeginLoc (1 samples, 0.08%)</title><rect x="1014.5" y="453" width="0.9" height="15.0" fill="rgb(215,167,38)" rx="2" ry="2" />
<text  x="1017.49" y="463.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (5 samples, 0.38%)</title><rect x="222.4" y="741" width="4.5" height="15.0" fill="rgb(225,15,53)" rx="2" ry="2" />
<text  x="225.42" y="751.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetType (1 samples, 0.08%)</title><rect x="1011.8" y="677" width="0.9" height="15.0" fill="rgb(231,127,20)" rx="2" ry="2" />
<text  x="1014.78" y="687.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1145.0" y="853" width="0.9" height="15.0" fill="rgb(240,98,17)" rx="2" ry="2" />
<text  x="1148.00" y="863.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetType (1 samples, 0.08%)</title><rect x="1009.1" y="741" width="0.9" height="15.0" fill="rgb(229,134,39)" rx="2" ry="2" />
<text  x="1012.08" y="751.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;std::add_pointer, (anonymous namespace)::AggExprEmitter, void&gt;::Visit (1 samples, 0.08%)</title><rect x="1091.9" y="917" width="0.9" height="15.0" fill="rgb(216,173,21)" rx="2" ry="2" />
<text  x="1094.89" y="927.5" ></text>
</g>
<g >
<title>TChain::GetListOfBranches (3 samples, 0.23%)</title><rect x="446.5" y="901" width="2.7" height="15.0" fill="rgb(246,134,24)" rx="2" ry="2" />
<text  x="449.54" y="911.5" ></text>
</g>
<g >
<title>clang::Parser::ParseOptionalCXXScopeSpecifier (1 samples, 0.08%)</title><rect x="1109.0" y="917" width="0.9" height="15.0" fill="rgb(249,88,52)" rx="2" ry="2" />
<text  x="1111.99" y="927.5" ></text>
</g>
<g >
<title>clang::Sema::setupImplicitSpecialMemberType (1 samples, 0.08%)</title><rect x="1082.0" y="917" width="0.9" height="15.0" fill="rgb(207,109,47)" rx="2" ry="2" />
<text  x="1084.99" y="927.5" ></text>
</g>
<g >
<title>TEnvParser::Parse (1 samples, 0.08%)</title><rect x="1001.9" y="773" width="0.9" height="15.0" fill="rgb(236,13,2)" rx="2" ry="2" />
<text  x="1004.88" y="783.5" ></text>
</g>
<g >
<title>clang::TemplateDeclInstantiator::SubstFunctionType (1 samples, 0.08%)</title><rect x="1092.8" y="693" width="0.9" height="15.0" fill="rgb(236,26,45)" rx="2" ry="2" />
<text  x="1095.79" y="703.5" ></text>
</g>
<g >
<title>__GI___open64_nocancel (2 samples, 0.15%)</title><rect x="1188.2" y="837" width="1.8" height="15.0" fill="rgb(247,18,23)" rx="2" ry="2" />
<text  x="1191.20" y="847.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.08%)</title><rect x="1088.3" y="821" width="0.9" height="15.0" fill="rgb(215,22,20)" rx="2" ry="2" />
<text  x="1091.29" y="831.5" ></text>
</g>
<g >
<title>clang::Sema::ImpCastExprToType (1 samples, 0.08%)</title><rect x="1082.9" y="901" width="0.9" height="15.0" fill="rgb(234,147,52)" rx="2" ry="2" />
<text  x="1085.89" y="911.5" ></text>
</g>
<g >
<title>ROOT::Internal::TTreeReaderValueBase::GetAddress (245 samples, 18.69%)</title><rect x="450.1" y="949" width="220.6" height="15.0" fill="rgb(215,72,37)" rx="2" ry="2" />
<text  x="453.14" y="959.5" >ROOT::Internal::TTreeReaderVa..</text>
</g>
<g >
<title>std::_Rb_tree&lt;void const*, void const*, std::_Identity&lt;void const*&gt;, std::less&lt;void const*&gt;, std::allocator&lt;void const*&gt; &gt;::_M_erase (1 samples, 0.08%)</title><rect x="928.1" y="565" width="0.9" height="15.0" fill="rgb(221,173,37)" rx="2" ry="2" />
<text  x="931.08" y="575.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferredVTables (1 samples, 0.08%)</title><rect x="1033.4" y="597" width="0.9" height="15.0" fill="rgb(206,82,43)" rx="2" ry="2" />
<text  x="1036.39" y="607.5" ></text>
</g>
<g >
<title>llvm::MCELFStreamer::EmitInstToData (1 samples, 0.08%)</title><rect x="1117.1" y="565" width="0.9" height="15.0" fill="rgb(247,148,30)" rx="2" ry="2" />
<text  x="1120.09" y="575.5" ></text>
</g>
<g >
<title>TCling::Calc (1 samples, 0.08%)</title><rect x="449.2" y="917" width="0.9" height="15.0" fill="rgb(212,157,11)" rx="2" ry="2" />
<text  x="452.24" y="927.5" ></text>
</g>
<g >
<title>llvm::DataLayout::getTypeAllocSize (1 samples, 0.08%)</title><rect x="818.3" y="645" width="0.9" height="15.0" fill="rgb(231,223,48)" rx="2" ry="2" />
<text  x="821.27" y="655.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType (1 samples, 0.08%)</title><rect x="1072.1" y="773" width="0.9" height="15.0" fill="rgb(249,51,16)" rx="2" ry="2" />
<text  x="1075.09" y="783.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition (1 samples, 0.08%)</title><rect x="849.8" y="709" width="0.9" height="15.0" fill="rgb(228,33,34)" rx="2" ry="2" />
<text  x="852.77" y="719.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.23%)</title><rect x="11.8" y="357" width="2.7" height="15.0" fill="rgb(251,91,7)" rx="2" ry="2" />
<text  x="14.80" y="367.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.08%)</title><rect x="1060.4" y="725" width="0.9" height="15.0" fill="rgb(226,19,49)" rx="2" ry="2" />
<text  x="1063.39" y="735.5" ></text>
</g>
<g >
<title>llvm::AttributeList::addAttributes (1 samples, 0.08%)</title><rect x="1041.5" y="725" width="0.9" height="15.0" fill="rgb(246,87,54)" rx="2" ry="2" />
<text  x="1044.49" y="735.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::ParseInternal (2 samples, 0.15%)</title><rect x="798.5" y="757" width="1.8" height="15.0" fill="rgb(230,51,34)" rx="2" ry="2" />
<text  x="801.47" y="767.5" ></text>
</g>
<g >
<title>llvm::DominatorTreeWrapperPass::runOnFunction (1 samples, 0.08%)</title><rect x="229.6" y="741" width="0.9" height="15.0" fill="rgb(208,78,47)" rx="2" ry="2" />
<text  x="232.62" y="751.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertTypeForMem (1 samples, 0.08%)</title><rect x="1049.6" y="901" width="0.9" height="15.0" fill="rgb(215,187,4)" rx="2" ry="2" />
<text  x="1052.59" y="911.5" ></text>
</g>
<g >
<title>__GI___fork (4 samples, 0.31%)</title><rect x="18.1" y="293" width="3.6" height="15.0" fill="rgb(239,151,25)" rx="2" ry="2" />
<text  x="21.10" y="303.5" ></text>
</g>
<g >
<title>cling::MultiplexInterpreterCallbacks::TransactionCommitted (1 samples, 0.08%)</title><rect x="237.7" y="821" width="0.9" height="15.0" fill="rgb(248,161,46)" rx="2" ry="2" />
<text  x="240.72" y="831.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (1 samples, 0.08%)</title><rect x="1149.5" y="869" width="0.9" height="15.0" fill="rgb(246,67,21)" rx="2" ry="2" />
<text  x="1152.50" y="879.5" ></text>
</g>
<g >
<title>EvaluateLValue (1 samples, 0.08%)</title><rect x="1021.7" y="773" width="0.9" height="15.0" fill="rgb(245,213,37)" rx="2" ry="2" />
<text  x="1024.69" y="783.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteDeclContext (1 samples, 0.08%)</title><rect x="1075.7" y="709" width="0.9" height="15.0" fill="rgb(238,94,30)" rx="2" ry="2" />
<text  x="1078.69" y="719.5" ></text>
</g>
<g >
<title>__nptl_set_robust (1 samples, 0.08%)</title><rect x="949.7" y="773" width="0.9" height="15.0" fill="rgb(250,130,41)" rx="2" ry="2" />
<text  x="952.68" y="783.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;std::add_pointer, (anonymous namespace)::AggExprEmitter, void&gt;::Visit (1 samples, 0.08%)</title><rect x="1014.5" y="757" width="0.9" height="15.0" fill="rgb(248,107,15)" rx="2" ry="2" />
<text  x="1017.49" y="767.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTemplateIdType (1 samples, 0.08%)</title><rect x="1065.8" y="693" width="0.9" height="15.0" fill="rgb(215,96,12)" rx="2" ry="2" />
<text  x="1068.79" y="703.5" ></text>
</g>
<g >
<title>llvm::LoopInfoBase&lt;llvm::MachineBasicBlock, llvm::MachineLoop&gt;::releaseMemory (1 samples, 0.08%)</title><rect x="716.6" y="533" width="0.9" height="15.0" fill="rgb(251,142,16)" rx="2" ry="2" />
<text  x="719.56" y="543.5" ></text>
</g>
<g >
<title>llvm::Value::getValueName (2 samples, 0.15%)</title><rect x="809.3" y="565" width="1.8" height="15.0" fill="rgb(248,6,18)" rx="2" ry="2" />
<text  x="812.27" y="575.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformInitializer (1 samples, 0.08%)</title><rect x="1096.4" y="901" width="0.9" height="15.0" fill="rgb(233,166,3)" rx="2" ry="2" />
<text  x="1099.39" y="911.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddDecl (1 samples, 0.08%)</title><rect x="1072.1" y="645" width="0.9" height="15.0" fill="rgb(214,110,12)" rx="2" ry="2" />
<text  x="1075.09" y="655.5" ></text>
</g>
<g >
<title>llvm::object::ELFObjectFile&lt;llvm::object::ELFType&lt;(llvm::support::endianness)1, true&gt; &gt;::moveSectionNext (2 samples, 0.15%)</title><rect x="794.9" y="517" width="1.8" height="15.0" fill="rgb(219,56,54)" rx="2" ry="2" />
<text  x="797.87" y="527.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.08%)</title><rect x="1112.6" y="677" width="0.9" height="15.0" fill="rgb(247,122,38)" rx="2" ry="2" />
<text  x="1115.59" y="687.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::runStaticInitializersOnce (1 samples, 0.08%)</title><rect x="1118.0" y="837" width="0.9" height="15.0" fill="rgb(235,201,4)" rx="2" ry="2" />
<text  x="1120.99" y="847.5" ></text>
</g>
<g >
<title>cling::Interpreter::EvaluateInternal (1 samples, 0.08%)</title><rect x="202.6" y="869" width="0.9" height="15.0" fill="rgb(206,56,53)" rx="2" ry="2" />
<text  x="205.62" y="879.5" ></text>
</g>
<g >
<title>clang::ASTReader::readTypeRecord (1 samples, 0.08%)</title><rect x="1051.4" y="629" width="0.9" height="15.0" fill="rgb(206,104,16)" rx="2" ry="2" />
<text  x="1054.39" y="639.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTypenameType (2 samples, 0.15%)</title><rect x="1073.0" y="837" width="1.8" height="15.0" fill="rgb(224,140,35)" rx="2" ry="2" />
<text  x="1075.99" y="847.5" ></text>
</g>
<g >
<title>llvm::Instruction::getNumSuccessors (1 samples, 0.08%)</title><rect x="822.8" y="613" width="0.9" height="15.0" fill="rgb(214,160,48)" rx="2" ry="2" />
<text  x="825.77" y="623.5" ></text>
</g>
<g >
<title>clang::DependentScopeDeclRefExpr::CreateEmpty (1 samples, 0.08%)</title><rect x="1009.1" y="373" width="0.9" height="15.0" fill="rgb(239,95,3)" rx="2" ry="2" />
<text  x="1012.08" y="383.5" ></text>
</g>
<g >
<title>TKey::ReadObjectAny (1 samples, 0.08%)</title><rect x="1118.9" y="789" width="0.9" height="15.0" fill="rgb(213,33,48)" rx="2" ry="2" />
<text  x="1121.89" y="799.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::StartFunction (1 samples, 0.08%)</title><rect x="1041.5" y="773" width="0.9" height="15.0" fill="rgb(229,133,26)" rx="2" ry="2" />
<text  x="1044.49" y="783.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnModule (1 samples, 0.08%)</title><rect x="1109.9" y="773" width="0.9" height="15.0" fill="rgb(249,220,2)" rx="2" ry="2" />
<text  x="1112.89" y="783.5" ></text>
</g>
<g >
<title>ROOT::Internal::RDF::InterpreterCalc (2 samples, 0.15%)</title><rect x="212.5" y="933" width="1.8" height="15.0" fill="rgb(214,89,25)" rx="2" ry="2" />
<text  x="215.52" y="943.5" ></text>
</g>
<g >
<title>llvm::MachineBlockFrequencyInfo::calculate (2 samples, 0.15%)</title><rect x="694.1" y="533" width="1.8" height="15.0" fill="rgb(210,167,1)" rx="2" ry="2" />
<text  x="697.06" y="543.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (14 samples, 1.07%)</title><rect x="1033.4" y="869" width="12.6" height="15.0" fill="rgb(238,58,21)" rx="2" ry="2" />
<text  x="1036.39" y="879.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::verifyPreservedAnalysis (5 samples, 0.38%)</title><rect x="253.9" y="741" width="4.5" height="15.0" fill="rgb(243,200,16)" rx="2" ry="2" />
<text  x="256.92" y="751.5" ></text>
</g>
<g >
<title>TCling::GetClassSharedLibs (1 samples, 0.08%)</title><rect x="1098.2" y="645" width="0.9" height="15.0" fill="rgb(219,94,44)" rx="2" ry="2" />
<text  x="1101.19" y="655.5" ></text>
</g>
<g >
<title>llvm::MCAssembler::layout (1 samples, 0.08%)</title><rect x="676.1" y="533" width="0.9" height="15.0" fill="rgb(232,127,27)" rx="2" ry="2" />
<text  x="679.06" y="543.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.08%)</title><rect x="1093.7" y="869" width="0.9" height="15.0" fill="rgb(245,2,26)" rx="2" ry="2" />
<text  x="1096.69" y="879.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformReferenceType (1 samples, 0.08%)</title><rect x="1089.2" y="645" width="0.9" height="15.0" fill="rgb(217,211,8)" rx="2" ry="2" />
<text  x="1092.19" y="655.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.23%)</title><rect x="996.5" y="821" width="2.7" height="15.0" fill="rgb(244,64,0)" rx="2" ry="2" />
<text  x="999.48" y="831.5" ></text>
</g>
<g >
<title>cling::MetaParser::isCommand (2 samples, 0.15%)</title><rect x="855.2" y="773" width="1.8" height="15.0" fill="rgb(212,30,46)" rx="2" ry="2" />
<text  x="858.17" y="783.5" ></text>
</g>
<g >
<title>cling::MetaSema::actOnxCommand (6 samples, 0.46%)</title><rect x="1113.5" y="949" width="5.4" height="15.0" fill="rgb(206,48,21)" rx="2" ry="2" />
<text  x="1116.49" y="959.5" ></text>
</g>
<g >
<title>__GI__IO_default_xsgetn (3 samples, 0.23%)</title><rect x="933.5" y="725" width="2.7" height="15.0" fill="rgb(215,210,33)" rx="2" ry="2" />
<text  x="936.48" y="735.5" ></text>
</g>
<g >
<title>llvm::AsmPrinter::EmitFunctionBody (2 samples, 0.15%)</title><rect x="846.2" y="565" width="1.8" height="15.0" fill="rgb(212,25,21)" rx="2" ry="2" />
<text  x="849.17" y="575.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1162.1" y="757" width="0.9" height="15.0" fill="rgb(209,123,45)" rx="2" ry="2" />
<text  x="1165.10" y="767.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldELF::loadObject (4 samples, 0.31%)</title><rect x="258.4" y="773" width="3.6" height="15.0" fill="rgb(228,199,7)" rx="2" ry="2" />
<text  x="261.42" y="783.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformNestedNameSpecifierLoc (1 samples, 0.08%)</title><rect x="1097.3" y="741" width="0.9" height="15.0" fill="rgb(228,63,52)" rx="2" ry="2" />
<text  x="1100.29" y="751.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord (1 samples, 0.08%)</title><rect x="1012.7" y="677" width="0.9" height="15.0" fill="rgb(214,193,21)" rx="2" ry="2" />
<text  x="1015.68" y="687.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass (1 samples, 0.08%)</title><rect x="1093.7" y="741" width="0.9" height="15.0" fill="rgb(234,53,32)" rx="2" ry="2" />
<text  x="1096.69" y="751.5" ></text>
</g>
<g >
<title>_dl_open (1 samples, 0.08%)</title><rect x="839.0" y="757" width="0.9" height="15.0" fill="rgb(218,46,24)" rx="2" ry="2" />
<text  x="841.97" y="767.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertTypeForMem (1 samples, 0.08%)</title><rect x="1048.7" y="565" width="0.9" height="15.0" fill="rgb(233,62,40)" rx="2" ry="2" />
<text  x="1051.69" y="575.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1161.2" y="741" width="0.9" height="15.0" fill="rgb(248,22,23)" rx="2" ry="2" />
<text  x="1164.20" y="751.5" ></text>
</g>
<g >
<title>EmitDirectCallee (1 samples, 0.08%)</title><rect x="1018.1" y="725" width="0.9" height="15.0" fill="rgb(237,205,7)" rx="2" ry="2" />
<text  x="1021.09" y="735.5" ></text>
</g>
<g >
<title>llvm::TargetLibraryInfoImpl::getLibFunc (1 samples, 0.08%)</title><rect x="896.6" y="581" width="0.9" height="15.0" fill="rgb(225,21,52)" rx="2" ry="2" />
<text  x="899.58" y="591.5" ></text>
</g>
<g >
<title>_nl_load_locale (2 samples, 0.15%)</title><rect x="1188.2" y="853" width="1.8" height="15.0" fill="rgb(237,88,41)" rx="2" ry="2" />
<text  x="1191.20" y="863.5" ></text>
</g>
<g >
<title>clang::Sema::BuildBuiltinOffsetOf (1 samples, 0.08%)</title><rect x="1098.2" y="805" width="0.9" height="15.0" fill="rgb(207,94,47)" rx="2" ry="2" />
<text  x="1101.19" y="815.5" ></text>
</g>
<g >
<title>cling::MetaSema::actOnLCommand (5 samples, 0.38%)</title><rect x="849.8" y="853" width="4.5" height="15.0" fill="rgb(212,15,19)" rx="2" ry="2" />
<text  x="852.77" y="863.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.15%)</title><rect x="1150.4" y="837" width="1.8" height="15.0" fill="rgb(224,83,31)" rx="2" ry="2" />
<text  x="1153.40" y="847.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (2 samples, 0.15%)</title><rect x="989.3" y="837" width="1.8" height="15.0" fill="rgb(215,47,43)" rx="2" ry="2" />
<text  x="992.28" y="847.5" ></text>
</g>
<g >
<title>llvm::AttributeList::addAttributes (1 samples, 0.08%)</title><rect x="1017.2" y="629" width="0.9" height="15.0" fill="rgb(216,184,3)" rx="2" ry="2" />
<text  x="1020.19" y="639.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization (1 samples, 0.08%)</title><rect x="1066.7" y="885" width="0.9" height="15.0" fill="rgb(241,42,16)" rx="2" ry="2" />
<text  x="1069.69" y="895.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateArgument (1 samples, 0.08%)</title><rect x="1093.7" y="885" width="0.9" height="15.0" fill="rgb(244,177,29)" rx="2" ry="2" />
<text  x="1096.69" y="895.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetTypeSourceInfo (1 samples, 0.08%)</title><rect x="1011.8" y="837" width="0.9" height="15.0" fill="rgb(231,157,30)" rx="2" ry="2" />
<text  x="1014.78" y="847.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyld::finalizeWithMemoryManagerLocking (4 samples, 0.31%)</title><rect x="747.2" y="613" width="3.6" height="15.0" fill="rgb(205,227,42)" rx="2" ry="2" />
<text  x="750.16" y="623.5" ></text>
</g>
<g >
<title>clang::Sema::SubstBaseSpecifiers (1 samples, 0.08%)</title><rect x="1093.7" y="629" width="0.9" height="15.0" fill="rgb(229,151,36)" rx="2" ry="2" />
<text  x="1096.69" y="639.5" ></text>
</g>
<g >
<title>_dl_check_all_versions (1 samples, 0.08%)</title><rect x="10.0" y="853" width="0.9" height="15.0" fill="rgb(213,32,45)" rx="2" ry="2" />
<text  x="13.00" y="863.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization (3 samples, 0.23%)</title><rect x="1056.8" y="885" width="2.7" height="15.0" fill="rgb(217,191,22)" rx="2" ry="2" />
<text  x="1059.79" y="895.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveExternalSymbols (8 samples, 0.61%)</title><rect x="1130.6" y="901" width="7.2" height="15.0" fill="rgb(221,175,45)" rx="2" ry="2" />
<text  x="1133.59" y="911.5" ></text>
</g>
<g >
<title>llvm::PopulateLoopsDFS&lt;llvm::MachineBasicBlock, llvm::MachineLoop&gt;::traverse (1 samples, 0.08%)</title><rect x="244.9" y="693" width="0.9" height="15.0" fill="rgb(231,129,19)" rx="2" ry="2" />
<text  x="247.92" y="703.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord (1 samples, 0.08%)</title><rect x="1009.1" y="917" width="0.9" height="15.0" fill="rgb(207,33,0)" rx="2" ry="2" />
<text  x="1012.08" y="927.5" ></text>
</g>
<g >
<title>llvm::BitstreamCursor::readRecord (1 samples, 0.08%)</title><rect x="1066.7" y="661" width="0.9" height="15.0" fill="rgb(253,217,12)" rx="2" ry="2" />
<text  x="1069.69" y="671.5" ></text>
</g>
<g >
<title>SimplifyGEPInst (1 samples, 0.08%)</title><rect x="818.3" y="661" width="0.9" height="15.0" fill="rgb(253,108,50)" rx="2" ry="2" />
<text  x="821.27" y="671.5" ></text>
</g>
<g >
<title>TCling::LazyFunctionCreatorAutoload (3 samples, 0.23%)</title><rect x="747.2" y="501" width="2.7" height="15.0" fill="rgb(234,12,13)" rx="2" ry="2" />
<text  x="750.16" y="511.5" ></text>
</g>
<g >
<title>llvm::InstrEmitter::EmitSpecialNode (1 samples, 0.08%)</title><rect x="1115.3" y="581" width="0.9" height="15.0" fill="rgb(242,28,14)" rx="2" ry="2" />
<text  x="1118.29" y="591.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="990.2" y="693" width="0.9" height="15.0" fill="rgb(245,60,9)" rx="2" ry="2" />
<text  x="993.18" y="703.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.08%)</title><rect x="1015.4" y="693" width="0.9" height="15.0" fill="rgb(229,147,9)" rx="2" ry="2" />
<text  x="1018.39" y="703.5" ></text>
</g>
<g >
<title>clang::NamedDecl::getLinkageAndVisibility (1 samples, 0.08%)</title><rect x="1016.3" y="597" width="0.9" height="15.0" fill="rgb(252,60,25)" rx="2" ry="2" />
<text  x="1019.29" y="607.5" ></text>
</g>
<g >
<title>llvm::AttributeSetNode::get (1 samples, 0.08%)</title><rect x="1045.1" y="741" width="0.9" height="15.0" fill="rgb(241,120,0)" rx="2" ry="2" />
<text  x="1048.09" y="751.5" ></text>
</g>
<g >
<title>getAllocationDataForFunction (1 samples, 0.08%)</title><rect x="907.4" y="501" width="0.9" height="15.0" fill="rgb(240,143,43)" rx="2" ry="2" />
<text  x="910.38" y="511.5" ></text>
</g>
<g >
<title>clang::NestedNameSpecifierLocBuilder::Extend (1 samples, 0.08%)</title><rect x="1087.4" y="549" width="0.9" height="15.0" fill="rgb(218,150,13)" rx="2" ry="2" />
<text  x="1090.39" y="559.5" ></text>
</g>
<g >
<title>ROOT::Internal::RDF::RJittedAction::Run (6 samples, 0.46%)</title><rect x="370.9" y="901" width="5.4" height="15.0" fill="rgb(253,205,24)" rx="2" ry="2" />
<text  x="373.93" y="911.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.08%)</title><rect x="1060.4" y="709" width="0.9" height="15.0" fill="rgb(223,214,54)" rx="2" ry="2" />
<text  x="1063.39" y="719.5" ></text>
</g>
<g >
<title>clang::Sema::SubstType (1 samples, 0.08%)</title><rect x="1086.5" y="933" width="0.9" height="15.0" fill="rgb(222,159,25)" rx="2" ry="2" />
<text  x="1089.49" y="943.5" ></text>
</g>
<g >
<title>llvm::PassRegistry::getPassInfo (1 samples, 0.08%)</title><rect x="675.2" y="501" width="0.9" height="15.0" fill="rgb(205,171,11)" rx="2" ry="2" />
<text  x="678.16" y="511.5" ></text>
</g>
<g >
<title>clang::Sema::BuildDeclRefExpr (1 samples, 0.08%)</title><rect x="1084.7" y="597" width="0.9" height="15.0" fill="rgb(230,129,46)" rx="2" ry="2" />
<text  x="1087.69" y="607.5" ></text>
</g>
<g >
<title>TTreeReader::SetEntryBase (84 samples, 6.41%)</title><rect x="267.4" y="885" width="75.6" height="15.0" fill="rgb(229,40,0)" rx="2" ry="2" />
<text  x="270.42" y="895.5" >TTreeRea..</text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalDefinition (1 samples, 0.08%)</title><rect x="1040.6" y="805" width="0.9" height="15.0" fill="rgb(233,215,30)" rx="2" ry="2" />
<text  x="1043.59" y="815.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass (1 samples, 0.08%)</title><rect x="1061.3" y="725" width="0.9" height="15.0" fill="rgb(246,92,0)" rx="2" ry="2" />
<text  x="1064.29" y="735.5" ></text>
</g>
<g >
<title>llvm::LoopVectorizePass::runImpl (1 samples, 0.08%)</title><rect x="830.0" y="661" width="0.9" height="15.0" fill="rgb(222,131,37)" rx="2" ry="2" />
<text  x="832.97" y="671.5" ></text>
</g>
<g >
<title>isSafeToConvert (1 samples, 0.08%)</title><rect x="1048.7" y="485" width="0.9" height="15.0" fill="rgb(216,105,50)" rx="2" ry="2" />
<text  x="1051.69" y="495.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.08%)</title><rect x="1073.9" y="709" width="0.9" height="15.0" fill="rgb(206,147,47)" rx="2" ry="2" />
<text  x="1076.89" y="719.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallArg (1 samples, 0.08%)</title><rect x="1091.9" y="837" width="0.9" height="15.0" fill="rgb(240,70,12)" rx="2" ry="2" />
<text  x="1094.89" y="847.5" ></text>
</g>
<g >
<title>TBufferFile::ReadObjectAny (1 samples, 0.08%)</title><rect x="448.3" y="661" width="0.9" height="15.0" fill="rgb(219,95,37)" rx="2" ry="2" />
<text  x="451.34" y="671.5" ></text>
</g>
<g >
<title>dl_main (1 samples, 0.08%)</title><rect x="200.8" y="901" width="0.9" height="15.0" fill="rgb(243,229,4)" rx="2" ry="2" />
<text  x="203.82" y="911.5" ></text>
</g>
<g >
<title>llvm::Value::getValueName (1 samples, 0.08%)</title><rect x="235.9" y="725" width="0.9" height="15.0" fill="rgb(234,43,22)" rx="2" ry="2" />
<text  x="238.92" y="735.5" ></text>
</g>
<g >
<title>clang::Sema::SubstStmt (2 samples, 0.15%)</title><rect x="1079.3" y="805" width="1.8" height="15.0" fill="rgb(209,62,24)" rx="2" ry="2" />
<text  x="1082.29" y="815.5" ></text>
</g>
<g >
<title>cling::MetaProcessor::process (7 samples, 0.53%)</title><rect x="831.8" y="853" width="6.3" height="15.0" fill="rgb(237,190,5)" rx="2" ry="2" />
<text  x="834.77" y="863.5" ></text>
</g>
<g >
<title>std::__insertion_sort&lt;llvm::Attribute*, __gnu_cxx::__ops::_Iter_less_iter&gt; (1 samples, 0.08%)</title><rect x="1017.2" y="581" width="0.9" height="15.0" fill="rgb(215,14,49)" rx="2" ry="2" />
<text  x="1020.19" y="591.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass (1 samples, 0.08%)</title><rect x="1097.3" y="837" width="0.9" height="15.0" fill="rgb(242,44,3)" rx="2" ry="2" />
<text  x="1100.29" y="847.5" ></text>
</g>
<g >
<title>TClass::CallShowMembers (1 samples, 0.08%)</title><rect x="448.3" y="533" width="0.9" height="15.0" fill="rgb(234,181,45)" rx="2" ry="2" />
<text  x="451.34" y="543.5" ></text>
</g>
<g >
<title>DynamicPath (3 samples, 0.23%)</title><rect x="943.4" y="805" width="2.7" height="15.0" fill="rgb(209,104,29)" rx="2" ry="2" />
<text  x="946.38" y="815.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::computeSectionStubBufSize (2 samples, 0.15%)</title><rect x="260.2" y="709" width="1.8" height="15.0" fill="rgb(220,207,40)" rx="2" ry="2" />
<text  x="263.22" y="719.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.15%)</title><rect x="1144.1" y="869" width="1.8" height="15.0" fill="rgb(217,18,34)" rx="2" ry="2" />
<text  x="1147.10" y="879.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitTemplateTypeParmDecl (1 samples, 0.08%)</title><rect x="1009.1" y="773" width="0.9" height="15.0" fill="rgb(218,64,49)" rx="2" ry="2" />
<text  x="1012.08" y="783.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (1 samples, 0.08%)</title><rect x="1107.2" y="757" width="0.9" height="15.0" fill="rgb(215,20,27)" rx="2" ry="2" />
<text  x="1110.19" y="767.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertTypeForMem (1 samples, 0.08%)</title><rect x="1049.6" y="773" width="0.9" height="15.0" fill="rgb(228,156,4)" rx="2" ry="2" />
<text  x="1052.59" y="783.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::RunCleanupsScope::ForceCleanup (1 samples, 0.08%)</title><rect x="1019.0" y="741" width="0.9" height="15.0" fill="rgb(207,107,5)" rx="2" ry="2" />
<text  x="1021.99" y="751.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (3 samples, 0.23%)</title><rect x="233.2" y="693" width="2.7" height="15.0" fill="rgb(237,204,29)" rx="2" ry="2" />
<text  x="236.22" y="703.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentScopeDeclRefExpr (1 samples, 0.08%)</title><rect x="1074.8" y="757" width="0.9" height="15.0" fill="rgb(212,177,2)" rx="2" ry="2" />
<text  x="1077.79" y="767.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDeclStmt (1 samples, 0.08%)</title><rect x="1084.7" y="757" width="0.9" height="15.0" fill="rgb(253,154,17)" rx="2" ry="2" />
<text  x="1087.69" y="767.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::LowerArguments (1 samples, 0.08%)</title><rect x="1106.3" y="645" width="0.9" height="15.0" fill="rgb(247,171,16)" rx="2" ry="2" />
<text  x="1109.29" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;llvm::BasicBlock*, llvm::SuccIterator&lt;llvm::Instruction, llvm::BasicBlock&gt; &gt;, std::allocator&lt;std::pair&lt;llvm::BasicBlock*, llvm::SuccIterator&lt;llvm::Instruction, llvm::BasicBlock&gt; &gt; &gt; &gt;::vector (1 samples, 0.08%)</title><rect x="239.5" y="693" width="0.9" height="15.0" fill="rgb(223,193,52)" rx="2" ry="2" />
<text  x="242.52" y="703.5" ></text>
</g>
<g >
<title>clang::Sema::SubstBaseSpecifiers (2 samples, 0.15%)</title><rect x="1073.0" y="741" width="1.8" height="15.0" fill="rgb(250,39,14)" rx="2" ry="2" />
<text  x="1075.99" y="751.5" ></text>
</g>
<g >
<title>clang::TemplateArgumentList::ComputeODRHash (1 samples, 0.08%)</title><rect x="1064.9" y="741" width="0.9" height="15.0" fill="rgb(210,76,33)" rx="2" ry="2" />
<text  x="1067.89" y="751.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.08%)</title><rect x="1080.2" y="757" width="0.9" height="15.0" fill="rgb(210,228,33)" rx="2" ry="2" />
<text  x="1083.19" y="767.5" ></text>
</g>
<g >
<title>_IO_new_popen (5 samples, 0.38%)</title><rect x="946.1" y="821" width="4.5" height="15.0" fill="rgb(244,101,45)" rx="2" ry="2" />
<text  x="949.08" y="831.5" ></text>
</g>
<g >
<title>llvm::AttrBuilder::addAttribute (1 samples, 0.08%)</title><rect x="1037.9" y="629" width="0.9" height="15.0" fill="rgb(247,209,6)" rx="2" ry="2" />
<text  x="1040.89" y="639.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl (1 samples, 0.08%)</title><rect x="1086.5" y="709" width="0.9" height="15.0" fill="rgb(253,113,19)" rx="2" ry="2" />
<text  x="1089.49" y="719.5" ></text>
</g>
<g >
<title>[bash] (4 samples, 0.31%)</title><rect x="36.1" y="485" width="3.6" height="15.0" fill="rgb(245,103,38)" rx="2" ry="2" />
<text  x="39.10" y="495.5" ></text>
</g>
<g >
<title>getCXXPersonality (1 samples, 0.08%)</title><rect x="1090.1" y="757" width="0.9" height="15.0" fill="rgb(244,40,6)" rx="2" ry="2" />
<text  x="1093.09" y="767.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="342.1" y="869" width="0.9" height="15.0" fill="rgb(220,201,5)" rx="2" ry="2" />
<text  x="345.13" y="879.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="999.2" y="805" width="0.9" height="15.0" fill="rgb(244,2,23)" rx="2" ry="2" />
<text  x="1002.18" y="815.5" ></text>
</g>
<g >
<title>llvm::orc::JITSymbolResolverAdapter::lookup (1 samples, 0.08%)</title><rect x="1119.8" y="933" width="0.9" height="15.0" fill="rgb(251,21,42)" rx="2" ry="2" />
<text  x="1122.79" y="943.5" ></text>
</g>
<g >
<title>ROOT::Internal::GetROOT1 (6 samples, 0.46%)</title><rect x="1001.9" y="853" width="5.4" height="15.0" fill="rgb(206,98,27)" rx="2" ry="2" />
<text  x="1004.88" y="863.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization (1 samples, 0.08%)</title><rect x="1092.8" y="757" width="0.9" height="15.0" fill="rgb(250,132,29)" rx="2" ry="2" />
<text  x="1095.79" y="767.5" ></text>
</g>
<g >
<title>call_init.part.0 (1 samples, 0.08%)</title><rect x="839.0" y="677" width="0.9" height="15.0" fill="rgb(220,69,12)" rx="2" ry="2" />
<text  x="841.97" y="687.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.08%)</title><rect x="673.4" y="805" width="0.9" height="15.0" fill="rgb(216,144,49)" rx="2" ry="2" />
<text  x="676.36" y="815.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="445.6" y="805" width="0.9" height="15.0" fill="rgb(240,128,4)" rx="2" ry="2" />
<text  x="448.64" y="815.5" ></text>
</g>
<g >
<title>_int_realloc (1 samples, 0.08%)</title><rect x="24.4" y="277" width="0.9" height="15.0" fill="rgb(248,131,27)" rx="2" ry="2" />
<text  x="27.40" y="287.5" ></text>
</g>
<g >
<title>combineInstructionsOverFunction (5 samples, 0.38%)</title><rect x="217.9" y="741" width="4.5" height="15.0" fill="rgb(232,162,54)" rx="2" ry="2" />
<text  x="220.92" y="751.5" ></text>
</g>
<g >
<title>clang::TemplateDeclInstantiator::VisitFieldDecl (1 samples, 0.08%)</title><rect x="1092.8" y="837" width="0.9" height="15.0" fill="rgb(226,165,13)" rx="2" ry="2" />
<text  x="1095.79" y="847.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.08%)</title><rect x="832.7" y="581" width="0.9" height="15.0" fill="rgb(231,191,18)" rx="2" ry="2" />
<text  x="835.67" y="591.5" ></text>
</g>
<g >
<title>clang::InitializationSequence::InitializeFrom (1 samples, 0.08%)</title><rect x="1051.4" y="949" width="0.9" height="15.0" fill="rgb(236,15,37)" rx="2" ry="2" />
<text  x="1054.39" y="959.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (1 samples, 0.08%)</title><rect x="1064.0" y="821" width="0.9" height="15.0" fill="rgb(226,147,10)" rx="2" ry="2" />
<text  x="1066.99" y="831.5" ></text>
</g>
<g >
<title>runImpl (1 samples, 0.08%)</title><rect x="896.6" y="613" width="0.9" height="15.0" fill="rgb(232,59,18)" rx="2" ry="2" />
<text  x="899.58" y="623.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.08%)</title><rect x="689.6" y="485" width="0.9" height="15.0" fill="rgb(226,116,13)" rx="2" ry="2" />
<text  x="692.56" y="495.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="21.7" y="245" width="0.9" height="15.0" fill="rgb(248,89,4)" rx="2" ry="2" />
<text  x="24.70" y="255.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformNestedNameSpecifierLoc (1 samples, 0.08%)</title><rect x="1088.3" y="789" width="0.9" height="15.0" fill="rgb(209,217,15)" rx="2" ry="2" />
<text  x="1091.29" y="799.5" ></text>
</g>
<g >
<title>clang::CanQual&lt;clang::Type&gt;::CreateUnsafe (1 samples, 0.08%)</title><rect x="1070.3" y="853" width="0.9" height="15.0" fill="rgb(217,133,32)" rx="2" ry="2" />
<text  x="1073.29" y="863.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitAggExpr (1 samples, 0.08%)</title><rect x="1091.0" y="821" width="0.9" height="15.0" fill="rgb(235,108,5)" rx="2" ry="2" />
<text  x="1093.99" y="831.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (2 samples, 0.15%)</title><rect x="1141.4" y="917" width="1.8" height="15.0" fill="rgb(233,6,35)" rx="2" ry="2" />
<text  x="1144.40" y="927.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddDecl (1 samples, 0.08%)</title><rect x="1072.1" y="549" width="0.9" height="15.0" fill="rgb(243,16,19)" rx="2" ry="2" />
<text  x="1075.09" y="559.5" ></text>
</g>
<g >
<title>isKnownNonZero (1 samples, 0.08%)</title><rect x="826.4" y="549" width="0.9" height="15.0" fill="rgb(224,43,6)" rx="2" ry="2" />
<text  x="829.37" y="559.5" ></text>
</g>
<g >
<title>llvm::SelectionDAG::getVTList (1 samples, 0.08%)</title><rect x="1121.6" y="869" width="0.9" height="15.0" fill="rgb(246,222,17)" rx="2" ry="2" />
<text  x="1124.59" y="879.5" ></text>
</g>
<g >
<title>llvm::CallBase::hasFnAttrOnCalledFunction (1 samples, 0.08%)</title><rect x="221.5" y="645" width="0.9" height="15.0" fill="rgb(209,155,33)" rx="2" ry="2" />
<text  x="224.52" y="655.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1189.1" y="677" width="0.9" height="15.0" fill="rgb(210,41,4)" rx="2" ry="2" />
<text  x="1192.10" y="687.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::getMinusSCEV (1 samples, 0.08%)</title><rect x="1109.9" y="581" width="0.9" height="15.0" fill="rgb(223,135,15)" rx="2" ry="2" />
<text  x="1112.89" y="591.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformCompoundStmt (2 samples, 0.15%)</title><rect x="1079.3" y="789" width="1.8" height="15.0" fill="rgb(230,48,17)" rx="2" ry="2" />
<text  x="1082.29" y="799.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentScopeDeclRefExpr (1 samples, 0.08%)</title><rect x="1100.0" y="917" width="0.9" height="15.0" fill="rgb(226,201,47)" rx="2" ry="2" />
<text  x="1102.99" y="927.5" ></text>
</g>
<g >
<title>optimizeGlobalsInModule (1 samples, 0.08%)</title><rect x="830.9" y="693" width="0.9" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="833.87" y="703.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (14 samples, 1.07%)</title><rect x="1033.4" y="917" width="12.6" height="15.0" fill="rgb(210,59,29)" rx="2" ry="2" />
<text  x="1036.39" y="927.5" ></text>
</g>
<g >
<title>clang::Sema::SubstBaseSpecifiers (1 samples, 0.08%)</title><rect x="1097.3" y="821" width="0.9" height="15.0" fill="rgb(210,222,38)" rx="2" ry="2" />
<text  x="1100.29" y="831.5" ></text>
</g>
<g >
<title>llvm::orc::JITSymbolResolverAdapter::lookup (1 samples, 0.08%)</title><rect x="202.6" y="741" width="0.9" height="15.0" fill="rgb(209,34,8)" rx="2" ry="2" />
<text  x="205.62" y="751.5" ></text>
</g>
<g >
<title>llvm::orc::JITSymbolResolverAdapter::lookup (1 samples, 0.08%)</title><rect x="854.3" y="709" width="0.9" height="15.0" fill="rgb(235,75,16)" rx="2" ry="2" />
<text  x="857.27" y="719.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition (1 samples, 0.08%)</title><rect x="1078.4" y="789" width="0.9" height="15.0" fill="rgb(219,37,51)" rx="2" ry="2" />
<text  x="1081.39" y="799.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (10 samples, 0.76%)</title><rect x="840.8" y="613" width="9.0" height="15.0" fill="rgb(234,59,5)" rx="2" ry="2" />
<text  x="843.77" y="623.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1074.8" y="485" width="0.9" height="15.0" fill="rgb(207,87,0)" rx="2" ry="2" />
<text  x="1077.79" y="495.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (79 samples, 6.03%)</title><rect x="676.1" y="613" width="71.1" height="15.0" fill="rgb(207,31,52)" rx="2" ry="2" />
<text  x="679.06" y="623.5" >llvm::le..</text>
</g>
<g >
<title>llvm::ConstantRange::multiply (1 samples, 0.08%)</title><rect x="1109.9" y="485" width="0.9" height="15.0" fill="rgb(228,143,28)" rx="2" ry="2" />
<text  x="1112.89" y="495.5" ></text>
</g>
<g >
<title>llvm::Module::getNamedValue (1 samples, 0.08%)</title><rect x="1047.8" y="837" width="0.9" height="15.0" fill="rgb(208,164,23)" rx="2" ry="2" />
<text  x="1050.79" y="847.5" ></text>
</g>
<g >
<title>clang::LinkageComputer::getLVForType (1 samples, 0.08%)</title><rect x="1016.3" y="453" width="0.9" height="15.0" fill="rgb(228,179,19)" rx="2" ry="2" />
<text  x="1019.29" y="463.5" ></text>
</g>
<g >
<title>execute_command_internal (22 samples, 1.68%)</title><rect x="15.4" y="645" width="19.8" height="15.0" fill="rgb(230,143,42)" rx="2" ry="2" />
<text  x="18.40" y="655.5" ></text>
</g>
<g >
<title>llvm::TargetLibraryInfoImpl::getLibFunc (1 samples, 0.08%)</title><rect x="812.9" y="533" width="0.9" height="15.0" fill="rgb(234,191,4)" rx="2" ry="2" />
<text  x="815.87" y="543.5" ></text>
</g>
<g >
<title>llvm::post_order&lt;llvm::BasicBlock const*&gt; (1 samples, 0.08%)</title><rect x="832.7" y="613" width="0.9" height="15.0" fill="rgb(242,213,11)" rx="2" ry="2" />
<text  x="835.67" y="623.5" ></text>
</g>
<g >
<title>clang::Sema::LookupConstructors (1 samples, 0.08%)</title><rect x="1051.4" y="917" width="0.9" height="15.0" fill="rgb(235,38,35)" rx="2" ry="2" />
<text  x="1054.39" y="927.5" ></text>
</g>
<g >
<title>__run_fork_handlers (1 samples, 0.08%)</title><rect x="940.7" y="725" width="0.9" height="15.0" fill="rgb(252,73,24)" rx="2" ry="2" />
<text  x="943.68" y="735.5" ></text>
</g>
<g >
<title>combineInstructionsOverFunction (8 samples, 0.61%)</title><rect x="808.4" y="661" width="7.2" height="15.0" fill="rgb(210,210,33)" rx="2" ry="2" />
<text  x="811.37" y="671.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::setNonAliasAttributes (1 samples, 0.08%)</title><rect x="1043.3" y="805" width="0.9" height="15.0" fill="rgb(247,68,2)" rx="2" ry="2" />
<text  x="1046.29" y="815.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (1 samples, 0.08%)</title><rect x="10.0" y="917" width="0.9" height="15.0" fill="rgb(247,152,30)" rx="2" ry="2" />
<text  x="13.00" y="927.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadExpr (1 samples, 0.08%)</title><rect x="1010.0" y="757" width="0.9" height="15.0" fill="rgb(234,77,53)" rx="2" ry="2" />
<text  x="1012.98" y="767.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.08%)</title><rect x="1087.4" y="757" width="0.9" height="15.0" fill="rgb(232,34,32)" rx="2" ry="2" />
<text  x="1090.39" y="767.5" ></text>
</g>
<g >
<title>llvm::JumpThreadingPass::ComputeValueKnownInPredecessorsImpl (1 samples, 0.08%)</title><rect x="815.6" y="565" width="0.9" height="15.0" fill="rgb(216,76,46)" rx="2" ry="2" />
<text  x="818.57" y="575.5" ></text>
</g>
<g >
<title>[unknown] (16 samples, 1.22%)</title><rect x="1169.3" y="789" width="14.4" height="15.0" fill="rgb(219,74,1)" rx="2" ry="2" />
<text  x="1172.30" y="799.5" ></text>
</g>
<g >
<title>llvm::AttributeSetNode::get (1 samples, 0.08%)</title><rect x="1017.2" y="613" width="0.9" height="15.0" fill="rgb(219,185,37)" rx="2" ry="2" />
<text  x="1020.19" y="623.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitReturnStmt (3 samples, 0.23%)</title><rect x="1020.8" y="869" width="2.7" height="15.0" fill="rgb(251,66,28)" rx="2" ry="2" />
<text  x="1023.79" y="879.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_erase (1 samples, 0.08%)</title><rect x="1037.0" y="581" width="0.9" height="15.0" fill="rgb(223,96,1)" rx="2" ry="2" />
<text  x="1039.99" y="591.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1152.2" y="773" width="0.9" height="15.0" fill="rgb(247,24,50)" rx="2" ry="2" />
<text  x="1155.20" y="783.5" ></text>
</g>
<g >
<title>clang::Sema::DeduceTemplateArguments (1 samples, 0.08%)</title><rect x="1089.2" y="757" width="0.9" height="15.0" fill="rgb(213,219,49)" rx="2" ry="2" />
<text  x="1092.19" y="767.5" ></text>
</g>
<g >
<title>clang::Sema::SubstInitializer (1 samples, 0.08%)</title><rect x="1084.7" y="677" width="0.9" height="15.0" fill="rgb(232,210,36)" rx="2" ry="2" />
<text  x="1087.69" y="687.5" ></text>
</g>
<g >
<title>TDirectoryFile::Get (2 samples, 0.15%)</title><rect x="446.5" y="869" width="1.8" height="15.0" fill="rgb(240,214,36)" rx="2" ry="2" />
<text  x="449.54" y="879.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::commitTransaction (1 samples, 0.08%)</title><rect x="1112.6" y="821" width="0.9" height="15.0" fill="rgb(223,13,46)" rx="2" ry="2" />
<text  x="1115.59" y="831.5" ></text>
</g>
<g >
<title>llvm::AAResults::Model&lt;llvm::BasicAAResult&gt;::~Model (1 samples, 0.08%)</title><rect x="217.0" y="725" width="0.9" height="15.0" fill="rgb(233,48,0)" rx="2" ry="2" />
<text  x="220.02" y="735.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit (1 samples, 0.08%)</title><rect x="1009.1" y="901" width="0.9" height="15.0" fill="rgb(211,145,6)" rx="2" ry="2" />
<text  x="1012.08" y="911.5" ></text>
</g>
<g >
<title>llvm::AttributeList::removeAttribute (1 samples, 0.08%)</title><rect x="1046.0" y="869" width="0.9" height="15.0" fill="rgb(244,79,53)" rx="2" ry="2" />
<text  x="1048.99" y="879.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.23%)</title><rect x="929.0" y="693" width="2.7" height="15.0" fill="rgb(250,200,31)" rx="2" ry="2" />
<text  x="931.98" y="703.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl (1 samples, 0.08%)</title><rect x="1007.3" y="757" width="0.9" height="15.0" fill="rgb(215,170,8)" rx="2" ry="2" />
<text  x="1010.28" y="767.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit (1 samples, 0.08%)</title><rect x="1059.5" y="725" width="0.9" height="15.0" fill="rgb(233,185,23)" rx="2" ry="2" />
<text  x="1062.49" y="735.5" ></text>
</g>
<g >
<title>clang::Sema::BuildDeclRefExpr (1 samples, 0.08%)</title><rect x="1084.7" y="581" width="0.9" height="15.0" fill="rgb(248,137,41)" rx="2" ry="2" />
<text  x="1087.69" y="591.5" ></text>
</g>
<g >
<title>llvm::BasicAAResult::getModRefInfo (1 samples, 0.08%)</title><rect x="814.7" y="565" width="0.9" height="15.0" fill="rgb(246,59,54)" rx="2" ry="2" />
<text  x="817.67" y="575.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.15%)</title><rect x="1188.2" y="757" width="1.8" height="15.0" fill="rgb(248,213,31)" rx="2" ry="2" />
<text  x="1191.20" y="767.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::SetFunctionAttributes (1 samples, 0.08%)</title><rect x="1020.8" y="709" width="0.9" height="15.0" fill="rgb(219,118,51)" rx="2" ry="2" />
<text  x="1023.79" y="719.5" ></text>
</g>
<g >
<title>clang::DeclContext::lookup (1 samples, 0.08%)</title><rect x="1018.1" y="533" width="0.9" height="15.0" fill="rgb(242,43,25)" rx="2" ry="2" />
<text  x="1021.09" y="543.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyld::finalizeWithMemoryManagerLocking (8 samples, 0.61%)</title><rect x="1130.6" y="933" width="7.2" height="15.0" fill="rgb(211,211,12)" rx="2" ry="2" />
<text  x="1133.59" y="943.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallExpr (1 samples, 0.08%)</title><rect x="1091.9" y="901" width="0.9" height="15.0" fill="rgb(220,43,32)" rx="2" ry="2" />
<text  x="1094.89" y="911.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalDefinition (1 samples, 0.08%)</title><rect x="1016.3" y="693" width="0.9" height="15.0" fill="rgb(218,203,54)" rx="2" ry="2" />
<text  x="1019.29" y="703.5" ></text>
</g>
<g >
<title>?? (3 samples, 0.23%)</title><rect x="943.4" y="821" width="2.7" height="15.0" fill="rgb(242,186,18)" rx="2" ry="2" />
<text  x="946.38" y="831.5" ></text>
</g>
<g >
<title>clang::Sema::SubstParmTypes (1 samples, 0.08%)</title><rect x="1055.9" y="901" width="0.9" height="15.0" fill="rgb(235,216,29)" rx="2" ry="2" />
<text  x="1058.89" y="911.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit (1 samples, 0.08%)</title><rect x="1071.2" y="821" width="0.9" height="15.0" fill="rgb(209,169,48)" rx="2" ry="2" />
<text  x="1074.19" y="831.5" ></text>
</g>
<g >
<title>clang::DeclContext::decls_begin (1 samples, 0.08%)</title><rect x="448.3" y="341" width="0.9" height="15.0" fill="rgb(209,154,43)" rx="2" ry="2" />
<text  x="451.34" y="351.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::getExistingSCEV (1 samples, 0.08%)</title><rect x="670.7" y="901" width="0.9" height="15.0" fill="rgb(250,61,28)" rx="2" ry="2" />
<text  x="673.66" y="911.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::commitTransaction (1 samples, 0.08%)</title><rect x="838.1" y="661" width="0.9" height="15.0" fill="rgb(232,17,26)" rx="2" ry="2" />
<text  x="841.07" y="671.5" ></text>
</g>
<g >
<title>TChain::LoadTree (1 samples, 0.08%)</title><rect x="838.1" y="933" width="0.9" height="15.0" fill="rgb(230,32,37)" rx="2" ry="2" />
<text  x="841.07" y="943.5" ></text>
</g>
<g >
<title>llvm::orc::JITSymbolResolverAdapter::getResponsibilitySet (1 samples, 0.08%)</title><rect x="797.6" y="565" width="0.9" height="15.0" fill="rgb(213,53,12)" rx="2" ry="2" />
<text  x="800.57" y="575.5" ></text>
</g>
<g >
<title>EmitCleanup (1 samples, 0.08%)</title><rect x="1019.0" y="677" width="0.9" height="15.0" fill="rgb(210,66,47)" rx="2" ry="2" />
<text  x="1021.99" y="687.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.08%)</title><rect x="1037.0" y="501" width="0.9" height="15.0" fill="rgb(234,3,47)" rx="2" ry="2" />
<text  x="1039.99" y="511.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;std::add_pointer, (anonymous namespace)::AggExprEmitter, void&gt;::Visit (1 samples, 0.08%)</title><rect x="1091.9" y="933" width="0.9" height="15.0" fill="rgb(227,12,53)" rx="2" ry="2" />
<text  x="1094.89" y="943.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="34.3" y="437" width="0.9" height="15.0" fill="rgb(243,11,12)" rx="2" ry="2" />
<text  x="37.30" y="447.5" ></text>
</g>
<g >
<title>cling::BackendPasses::runOnModule (2 samples, 0.15%)</title><rect x="800.3" y="709" width="1.8" height="15.0" fill="rgb(218,159,19)" rx="2" ry="2" />
<text  x="803.27" y="719.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitValueDecl (1 samples, 0.08%)</title><rect x="1051.4" y="661" width="0.9" height="15.0" fill="rgb(207,7,46)" rx="2" ry="2" />
<text  x="1054.39" y="671.5" ></text>
</g>
<g >
<title>getPatternForClassTemplateSpecialization (1 samples, 0.08%)</title><rect x="1089.2" y="773" width="0.9" height="15.0" fill="rgb(205,28,34)" rx="2" ry="2" />
<text  x="1092.19" y="783.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (1 samples, 0.08%)</title><rect x="449.2" y="789" width="0.9" height="15.0" fill="rgb(244,67,31)" rx="2" ry="2" />
<text  x="452.24" y="799.5" ></text>
</g>
<g >
<title>TBuildRealData::Inspect (1 samples, 0.08%)</title><rect x="447.4" y="613" width="0.9" height="15.0" fill="rgb(233,217,32)" rx="2" ry="2" />
<text  x="450.44" y="623.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.08%)</title><rect x="1098.2" y="901" width="0.9" height="15.0" fill="rgb(234,49,15)" rx="2" ry="2" />
<text  x="1101.19" y="911.5" ></text>
</g>
<g >
<title>llvm::ScheduleDAGSDNodes::EmitSchedule (3 samples, 0.23%)</title><rect x="1103.6" y="629" width="2.7" height="15.0" fill="rgb(236,29,33)" rx="2" ry="2" />
<text  x="1106.59" y="639.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDeclRefExpr (1 samples, 0.08%)</title><rect x="1079.3" y="661" width="0.9" height="15.0" fill="rgb(209,121,23)" rx="2" ry="2" />
<text  x="1082.29" y="671.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::commitTransaction (1 samples, 0.08%)</title><rect x="1118.0" y="869" width="0.9" height="15.0" fill="rgb(235,181,22)" rx="2" ry="2" />
<text  x="1120.99" y="879.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.08%)</title><rect x="35.2" y="549" width="0.9" height="15.0" fill="rgb(244,101,42)" rx="2" ry="2" />
<text  x="38.20" y="559.5" ></text>
</g>
<g >
<title>cling::MetaParser::isCommand (1 samples, 0.08%)</title><rect x="1109.9" y="949" width="0.9" height="15.0" fill="rgb(210,27,9)" rx="2" ry="2" />
<text  x="1112.89" y="959.5" ></text>
</g>
<g >
<title>clang::ASTReader::getSubmodule (1 samples, 0.08%)</title><rect x="1085.6" y="613" width="0.9" height="15.0" fill="rgb(245,75,28)" rx="2" ry="2" />
<text  x="1088.59" y="623.5" ></text>
</g>
<g >
<title>execute_command (4 samples, 0.31%)</title><rect x="36.1" y="581" width="3.6" height="15.0" fill="rgb(247,54,1)" rx="2" ry="2" />
<text  x="39.10" y="591.5" ></text>
</g>
<g >
<title>ROOT::Detail::RDF::RLoopManager::RunAndCheckFilters (115 samples, 8.77%)</title><rect x="343.0" y="917" width="103.5" height="15.0" fill="rgb(248,5,48)" rx="2" ry="2" />
<text  x="346.03" y="927.5" >ROOT::Detail..</text>
</g>
<g >
<title>?? (1 samples, 0.08%)</title><rect x="1020.8" y="533" width="0.9" height="15.0" fill="rgb(246,119,3)" rx="2" ry="2" />
<text  x="1023.79" y="543.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddTemplateArgument (1 samples, 0.08%)</title><rect x="1072.1" y="485" width="0.9" height="15.0" fill="rgb(234,160,0)" rx="2" ry="2" />
<text  x="1075.09" y="495.5" ></text>
</g>
<g >
<title>cling::MetaSema::actOnxCommand (2 samples, 0.15%)</title><rect x="1111.7" y="901" width="1.8" height="15.0" fill="rgb(253,222,39)" rx="2" ry="2" />
<text  x="1114.69" y="911.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.08%)</title><rect x="1081.1" y="725" width="0.9" height="15.0" fill="rgb(206,92,8)" rx="2" ry="2" />
<text  x="1084.09" y="735.5" ></text>
</g>
<g >
<title>llvm::isFreeCall (1 samples, 0.08%)</title><rect x="220.6" y="693" width="0.9" height="15.0" fill="rgb(229,160,18)" rx="2" ry="2" />
<text  x="223.62" y="703.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitRedeclarableTemplateDecl (1 samples, 0.08%)</title><rect x="1051.4" y="789" width="0.9" height="15.0" fill="rgb(207,123,5)" rx="2" ry="2" />
<text  x="1054.39" y="799.5" ></text>
</g>
<g >
<title>clang::Sema::DeduceTemplateArguments (1 samples, 0.08%)</title><rect x="1070.3" y="901" width="0.9" height="15.0" fill="rgb(227,109,19)" rx="2" ry="2" />
<text  x="1073.29" y="911.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (11 samples, 0.84%)</title><rect x="1033.4" y="837" width="9.9" height="15.0" fill="rgb(206,87,50)" rx="2" ry="2" />
<text  x="1036.39" y="847.5" ></text>
</g>
<g >
<title>TPluginManager::LoadHandlerMacros (2 samples, 0.15%)</title><rect x="855.2" y="901" width="1.8" height="15.0" fill="rgb(225,12,25)" rx="2" ry="2" />
<text  x="858.17" y="911.5" ></text>
</g>
<g >
<title>eliminateDeadStores (2 samples, 0.15%)</title><rect x="804.8" y="661" width="1.8" height="15.0" fill="rgb(219,225,12)" rx="2" ry="2" />
<text  x="807.77" y="671.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetType (2 samples, 0.15%)</title><rect x="1007.3" y="917" width="1.8" height="15.0" fill="rgb(245,199,23)" rx="2" ry="2" />
<text  x="1010.28" y="927.5" ></text>
</g>
<g >
<title>clang::Redeclarable&lt;clang::TagDecl&gt;::DeclLink::getPrevious (2 samples, 0.15%)</title><rect x="1029.8" y="853" width="1.8" height="15.0" fill="rgb(249,97,6)" rx="2" ry="2" />
<text  x="1032.79" y="863.5" ></text>
</g>
<g >
<title>cling::Interpreter::executeTransaction (1 samples, 0.08%)</title><rect x="857.0" y="709" width="0.9" height="15.0" fill="rgb(248,96,0)" rx="2" ry="2" />
<text  x="859.97" y="719.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;, void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;::LookupBucketFor&lt;void const*&gt; (1 samples, 0.08%)</title><rect x="900.2" y="517" width="0.9" height="15.0" fill="rgb(237,57,50)" rx="2" ry="2" />
<text  x="903.18" y="527.5" ></text>
</g>
<g >
<title>__memcpy_avx_unaligned (1 samples, 0.08%)</title><rect x="240.4" y="661" width="0.9" height="15.0" fill="rgb(206,103,22)" rx="2" ry="2" />
<text  x="243.42" y="671.5" ></text>
</g>
<g >
<title>clang::Sema::AddArgumentDependentLookupCandidates (1 samples, 0.08%)</title><rect x="1071.2" y="933" width="0.9" height="15.0" fill="rgb(242,15,29)" rx="2" ry="2" />
<text  x="1074.19" y="943.5" ></text>
</g>
<g >
<title>willNotOverflow (1 samples, 0.08%)</title><rect x="853.4" y="677" width="0.9" height="15.0" fill="rgb(205,126,29)" rx="2" ry="2" />
<text  x="856.37" y="687.5" ></text>
</g>
<g >
<title>llvm::post_order&lt;llvm::BasicBlock*&gt; (1 samples, 0.08%)</title><rect x="231.4" y="693" width="0.9" height="15.0" fill="rgb(244,182,52)" rx="2" ry="2" />
<text  x="234.42" y="703.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::doFinalization (1 samples, 0.08%)</title><rect x="839.9" y="629" width="0.9" height="15.0" fill="rgb(216,65,5)" rx="2" ry="2" />
<text  x="842.87" y="639.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.08%)</title><rect x="695.9" y="485" width="0.9" height="15.0" fill="rgb(223,187,52)" rx="2" ry="2" />
<text  x="698.86" y="495.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::FindExternalVisibleDeclsByName (2 samples, 0.15%)</title><rect x="1029.8" y="773" width="1.8" height="15.0" fill="rgb(238,80,53)" rx="2" ry="2" />
<text  x="1032.79" y="783.5" ></text>
</g>
<g >
<title>HandleInterpreterException (1 samples, 0.08%)</title><rect x="857.0" y="869" width="0.9" height="15.0" fill="rgb(231,140,54)" rx="2" ry="2" />
<text  x="859.97" y="879.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.08%)</title><rect x="1055.9" y="837" width="0.9" height="15.0" fill="rgb(224,211,26)" rx="2" ry="2" />
<text  x="1058.89" y="847.5" ></text>
</g>
<g >
<title>cling::Interpreter::executeTransaction (75 samples, 5.72%)</title><rect x="860.6" y="677" width="67.5" height="15.0" fill="rgb(236,83,3)" rx="2" ry="2" />
<text  x="863.57" y="687.5" >cling::..</text>
</g>
<g >
<title>llvm::MachineFunctionPass::runOnFunction (5 samples, 0.38%)</title><rect x="1102.7" y="693" width="4.5" height="15.0" fill="rgb(238,164,42)" rx="2" ry="2" />
<text  x="1105.69" y="703.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.15%)</title><rect x="1188.2" y="773" width="1.8" height="15.0" fill="rgb(226,0,36)" rx="2" ry="2" />
<text  x="1191.20" y="783.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord (1 samples, 0.08%)</title><rect x="1010.9" y="789" width="0.9" height="15.0" fill="rgb(209,48,9)" rx="2" ry="2" />
<text  x="1013.88" y="799.5" ></text>
</g>
<g >
<title>llvm::MachineFunctionPass::runOnFunction (8 samples, 0.61%)</title><rect x="1130.6" y="757" width="7.2" height="15.0" fill="rgb(229,185,4)" rx="2" ry="2" />
<text  x="1133.59" y="767.5" ></text>
</g>
<g >
<title>llvm::orc::LambdaSymbolResolver&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt; const&amp;)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}&gt;::lookup (1 samples, 0.08%)</title><rect x="202.6" y="597" width="0.9" height="15.0" fill="rgb(252,138,20)" rx="2" ry="2" />
<text  x="205.62" y="607.5" ></text>
</g>
<g >
<title>TCling::UpdateListsOnCommitted (1 samples, 0.08%)</title><rect x="928.1" y="629" width="0.9" height="15.0" fill="rgb(228,8,29)" rx="2" ry="2" />
<text  x="931.08" y="639.5" ></text>
</g>
<g >
<title>cling::MetaParser::isCommand (76 samples, 5.80%)</title><rect x="860.6" y="805" width="68.4" height="15.0" fill="rgb(246,210,44)" rx="2" ry="2" />
<text  x="863.57" y="815.5" >cling::..</text>
</g>
<g >
<title>xrealloc (1 samples, 0.08%)</title><rect x="28.9" y="341" width="0.9" height="15.0" fill="rgb(239,19,35)" rx="2" ry="2" />
<text  x="31.90" y="351.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;(anonymous namespace)::SimpleValue, llvm::ScopedHashTableVal&lt;(anonymous namespace)::SimpleValue, llvm::Value*&gt;*, llvm::DenseMapInfo&lt;(anonymous namespace)::SimpleValue&gt;, llvm::detail::DenseMapPair&lt;(anonymous namespace)::SimpleValue, llvm::ScopedHashTableVal&lt;(anonymous namespace)::SimpleValue, llvm::Value*&gt;*&gt; &gt;, (anonymous namespace)::SimpleValue, llvm::ScopedHashTableVal&lt;(anonymous namespace)::SimpleValue, llvm::Value*&gt;*, llvm::DenseMapInfo&lt;(anonymous namespace)::SimpleValue&gt;, llvm::detail::DenseMapPair&lt;(anonymous namespace)::SimpleValue, llvm::ScopedHashTableVal&lt;(anonymous namespace)::SimpleValue, llvm::Value*&gt;*&gt; &gt;::LookupBucketFor&lt;(anonymous namespace)::SimpleValue&gt; (1 samples, 0.08%)</title><rect x="807.5" y="677" width="0.9" height="15.0" fill="rgb(247,221,24)" rx="2" ry="2" />
<text  x="810.47" y="687.5" ></text>
</g>
<g >
<title>needFuncLabelsForEHOrDebugInfo (1 samples, 0.08%)</title><rect x="251.2" y="693" width="0.9" height="15.0" fill="rgb(213,117,5)" rx="2" ry="2" />
<text  x="254.22" y="703.5" ></text>
</g>
<g >
<title>clang::Sema::FixOverloadedFunctionReference (1 samples, 0.08%)</title><rect x="1062.2" y="917" width="0.9" height="15.0" fill="rgb(232,181,35)" rx="2" ry="2" />
<text  x="1065.19" y="927.5" ></text>
</g>
<g >
<title>clang::Sema::SubstBaseSpecifiers (1 samples, 0.08%)</title><rect x="1085.6" y="805" width="0.9" height="15.0" fill="rgb(215,217,44)" rx="2" ry="2" />
<text  x="1088.59" y="815.5" ></text>
</g>
<g >
<title>llvm::MemorySSA::buildMemorySSA (1 samples, 0.08%)</title><rect x="817.4" y="645" width="0.9" height="15.0" fill="rgb(242,215,47)" rx="2" ry="2" />
<text  x="820.37" y="655.5" ></text>
</g>
<g >
<title>llvm::AttributeList::addAttribute (1 samples, 0.08%)</title><rect x="1041.5" y="741" width="0.9" height="15.0" fill="rgb(228,133,15)" rx="2" ry="2" />
<text  x="1044.49" y="751.5" ></text>
</g>
<g >
<title>llvm::legacy::FunctionPassManager::run (2 samples, 0.15%)</title><rect x="214.3" y="773" width="1.8" height="15.0" fill="rgb(247,183,30)" rx="2" ry="2" />
<text  x="217.32" y="783.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::run (2 samples, 0.15%)</title><rect x="835.4" y="597" width="1.8" height="15.0" fill="rgb(253,225,37)" rx="2" ry="2" />
<text  x="838.37" y="607.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetType (1 samples, 0.08%)</title><rect x="1008.2" y="773" width="0.9" height="15.0" fill="rgb(236,11,19)" rx="2" ry="2" />
<text  x="1011.18" y="783.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyld::finalizeWithMemoryManagerLocking (1 samples, 0.08%)</title><rect x="854.3" y="757" width="0.9" height="15.0" fill="rgb(245,54,15)" rx="2" ry="2" />
<text  x="857.27" y="767.5" ></text>
</g>
<g >
<title>cling::Interpreter::loadHeader (2 samples, 0.15%)</title><rect x="1111.7" y="869" width="1.8" height="15.0" fill="rgb(207,104,32)" rx="2" ry="2" />
<text  x="1114.69" y="879.5" ></text>
</g>
<g >
<title>clang::ASTRecordReader::readRecord (1 samples, 0.08%)</title><rect x="798.5" y="565" width="0.9" height="15.0" fill="rgb(241,28,10)" rx="2" ry="2" />
<text  x="801.47" y="575.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveExternalSymbols (1 samples, 0.08%)</title><rect x="202.6" y="629" width="0.9" height="15.0" fill="rgb(246,202,1)" rx="2" ry="2" />
<text  x="205.62" y="639.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::commitTransaction (1 samples, 0.08%)</title><rect x="1101.8" y="917" width="0.9" height="15.0" fill="rgb(228,65,19)" rx="2" ry="2" />
<text  x="1104.79" y="927.5" ></text>
</g>
<g >
<title>llvm::AttrBuilder::AttrBuilder (1 samples, 0.08%)</title><rect x="1038.8" y="661" width="0.9" height="15.0" fill="rgb(222,14,33)" rx="2" ry="2" />
<text  x="1041.79" y="671.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadSLocEntry(int)::{lambda(llvm::BitstreamCursor&amp;, llvm::StringRef)#1}::operator() (1 samples, 0.08%)</title><rect x="1082.9" y="789" width="0.9" height="15.0" fill="rgb(240,170,39)" rx="2" ry="2" />
<text  x="1085.89" y="799.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (3 samples, 0.23%)</title><rect x="1015.4" y="741" width="2.7" height="15.0" fill="rgb(208,28,46)" rx="2" ry="2" />
<text  x="1018.39" y="751.5" ></text>
</g>
<g >
<title>llvm::post_order&lt;llvm::MachineBasicBlock*&gt; (2 samples, 0.15%)</title><rect x="701.3" y="501" width="1.8" height="15.0" fill="rgb(228,45,54)" rx="2" ry="2" />
<text  x="704.26" y="511.5" ></text>
</g>
<g >
<title>llvm::Instruction::mayWriteToMemory (1 samples, 0.08%)</title><rect x="221.5" y="661" width="0.9" height="15.0" fill="rgb(239,159,13)" rx="2" ry="2" />
<text  x="224.52" y="671.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadTemplateArgumentList (1 samples, 0.08%)</title><rect x="1008.2" y="853" width="0.9" height="15.0" fill="rgb(233,51,42)" rx="2" ry="2" />
<text  x="1011.18" y="863.5" ></text>
</g>
<g >
<title>llvm::computeKnownBits (1 samples, 0.08%)</title><rect x="836.3" y="549" width="0.9" height="15.0" fill="rgb(215,209,29)" rx="2" ry="2" />
<text  x="839.27" y="559.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::GenerateCode (1 samples, 0.08%)</title><rect x="1017.2" y="693" width="0.9" height="15.0" fill="rgb(227,54,1)" rx="2" ry="2" />
<text  x="1020.19" y="703.5" ></text>
</g>
<g >
<title>clang::ASTRecordReader::readRecord (1 samples, 0.08%)</title><rect x="1083.8" y="565" width="0.9" height="15.0" fill="rgb(224,127,46)" rx="2" ry="2" />
<text  x="1086.79" y="575.5" ></text>
</g>
<g >
<title>llvm::orc::JITSymbolResolverAdapter::lookup (138 samples, 10.53%)</title><rect x="674.3" y="693" width="124.2" height="15.0" fill="rgb(228,3,24)" rx="2" ry="2" />
<text  x="677.26" y="703.5" >llvm::orc::JITS..</text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (22 samples, 1.68%)</title><rect x="238.6" y="789" width="19.8" height="15.0" fill="rgb(251,222,5)" rx="2" ry="2" />
<text  x="241.62" y="799.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.08%)</title><rect x="945.2" y="757" width="0.9" height="15.0" fill="rgb(219,195,54)" rx="2" ry="2" />
<text  x="948.18" y="767.5" ></text>
</g>
<g >
<title>execute_command_internal (5 samples, 0.38%)</title><rect x="10.9" y="645" width="4.5" height="15.0" fill="rgb(206,223,15)" rx="2" ry="2" />
<text  x="13.90" y="655.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.08%)</title><rect x="1100.0" y="757" width="0.9" height="15.0" fill="rgb(218,157,39)" rx="2" ry="2" />
<text  x="1102.99" y="767.5" ></text>
</g>
<g >
<title>clang::VarDecl::isThisDeclarationADefinition (1 samples, 0.08%)</title><rect x="1023.5" y="597" width="0.9" height="15.0" fill="rgb(214,223,49)" rx="2" ry="2" />
<text  x="1026.49" y="607.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.08%)</title><rect x="718.4" y="517" width="0.9" height="15.0" fill="rgb(239,5,27)" rx="2" ry="2" />
<text  x="721.36" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (4 samples, 0.31%)</title><rect x="954.2" y="805" width="3.6" height="15.0" fill="rgb(254,96,18)" rx="2" ry="2" />
<text  x="957.18" y="815.5" ></text>
</g>
<g >
<title>combineInstructionsOverFunction (5 samples, 0.38%)</title><rect x="906.5" y="581" width="4.5" height="15.0" fill="rgb(237,134,26)" rx="2" ry="2" />
<text  x="909.48" y="591.5" ></text>
</g>
<g >
<title>TryConstructorInitialization (1 samples, 0.08%)</title><rect x="1051.4" y="933" width="0.9" height="15.0" fill="rgb(231,49,18)" rx="2" ry="2" />
<text  x="1054.39" y="943.5" ></text>
</g>
<g >
<title>TH1::Fill (78 samples, 5.95%)</title><rect x="376.3" y="901" width="70.2" height="15.0" fill="rgb(219,55,23)" rx="2" ry="2" />
<text  x="379.33" y="911.5" >TH1::Fill</text>
</g>
<g >
<title>[unknown] (2 samples, 0.15%)</title><rect x="1188.2" y="805" width="1.8" height="15.0" fill="rgb(242,65,16)" rx="2" ry="2" />
<text  x="1191.20" y="815.5" ></text>
</g>
<g >
<title>llvm::LPPassManager::runOnFunction (1 samples, 0.08%)</title><rect x="1109.9" y="741" width="0.9" height="15.0" fill="rgb(235,74,6)" rx="2" ry="2" />
<text  x="1112.89" y="751.5" ></text>
</g>
<g >
<title>llvm::X86TargetLowering::LowerCall (1 samples, 0.08%)</title><rect x="1121.6" y="901" width="0.9" height="15.0" fill="rgb(244,210,43)" rx="2" ry="2" />
<text  x="1124.59" y="911.5" ></text>
</g>
<g >
<title>clang::Preprocessor::Lex (1 samples, 0.08%)</title><rect x="942.5" y="741" width="0.9" height="15.0" fill="rgb(220,188,18)" rx="2" ry="2" />
<text  x="945.48" y="751.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.08%)</title><rect x="1085.6" y="757" width="0.9" height="15.0" fill="rgb(230,145,46)" rx="2" ry="2" />
<text  x="1088.59" y="767.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.08%)</title><rect x="956.9" y="773" width="0.9" height="15.0" fill="rgb(241,80,43)" rx="2" ry="2" />
<text  x="959.88" y="783.5" ></text>
</g>
<g >
<title>cling::BackendPasses::runOnModule (1 samples, 0.08%)</title><rect x="831.8" y="677" width="0.9" height="15.0" fill="rgb(213,150,8)" rx="2" ry="2" />
<text  x="834.77" y="687.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveRelocations (138 samples, 10.53%)</title><rect x="674.3" y="725" width="124.2" height="15.0" fill="rgb(215,186,21)" rx="2" ry="2" />
<text  x="677.26" y="735.5" >llvm::RuntimeDy..</text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.08%)</title><rect x="1112.6" y="757" width="0.9" height="15.0" fill="rgb(229,140,20)" rx="2" ry="2" />
<text  x="1115.59" y="767.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1148.6" y="837" width="0.9" height="15.0" fill="rgb(248,116,37)" rx="2" ry="2" />
<text  x="1151.60" y="847.5" ></text>
</g>
<g >
<title>cling::Interpreter::RunFunction (1 samples, 0.08%)</title><rect x="1107.2" y="949" width="0.9" height="15.0" fill="rgb(243,48,40)" rx="2" ry="2" />
<text  x="1110.19" y="959.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveExternalSymbols (5 samples, 0.38%)</title><rect x="1113.5" y="821" width="4.5" height="15.0" fill="rgb(234,55,5)" rx="2" ry="2" />
<text  x="1116.49" y="831.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalDefinition (1 samples, 0.08%)</title><rect x="1025.3" y="917" width="0.9" height="15.0" fill="rgb(212,57,26)" rx="2" ry="2" />
<text  x="1028.29" y="927.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.08%)</title><rect x="241.3" y="645" width="0.9" height="15.0" fill="rgb(218,25,32)" rx="2" ry="2" />
<text  x="244.32" y="655.5" ></text>
</g>
<g >
<title>llvm::APInt::sext (1 samples, 0.08%)</title><rect x="1109.9" y="469" width="0.9" height="15.0" fill="rgb(246,212,27)" rx="2" ry="2" />
<text  x="1112.89" y="479.5" ></text>
</g>
<g >
<title>TApplication::ProcessLine (76 samples, 5.80%)</title><rect x="860.6" y="901" width="68.4" height="15.0" fill="rgb(251,27,32)" rx="2" ry="2" />
<text  x="863.57" y="911.5" >TApplic..</text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.08%)</title><rect x="1064.9" y="885" width="0.9" height="15.0" fill="rgb(235,5,30)" rx="2" ry="2" />
<text  x="1067.89" y="895.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1152.2" y="741" width="0.9" height="15.0" fill="rgb(211,49,19)" rx="2" ry="2" />
<text  x="1155.20" y="751.5" ></text>
</g>
<g >
<title>ClingMemberIterInternal::DCIter::DCIter (1 samples, 0.08%)</title><rect x="448.3" y="357" width="0.9" height="15.0" fill="rgb(205,0,23)" rx="2" ry="2" />
<text  x="451.34" y="367.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="17.2" y="245" width="0.9" height="15.0" fill="rgb(213,162,33)" rx="2" ry="2" />
<text  x="20.20" y="255.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject&lt;std::shared_ptr&lt;llvm::RuntimeDyld::MemoryManager&gt; &gt;::getSymbolMaterializer(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda()#1}&gt;::_M_invoke (5 samples, 0.38%)</title><rect x="1102.7" y="885" width="4.5" height="15.0" fill="rgb(228,119,43)" rx="2" ry="2" />
<text  x="1105.69" y="895.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl (1 samples, 0.08%)</title><rect x="1059.5" y="757" width="0.9" height="15.0" fill="rgb(233,0,30)" rx="2" ry="2" />
<text  x="1062.49" y="767.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteDeclContext (1 samples, 0.08%)</title><rect x="1097.3" y="901" width="0.9" height="15.0" fill="rgb(229,81,28)" rx="2" ry="2" />
<text  x="1100.29" y="911.5" ></text>
</g>
<g >
<title>TString::Replace (1 samples, 0.08%)</title><rect x="992.0" y="837" width="0.9" height="15.0" fill="rgb(221,224,30)" rx="2" ry="2" />
<text  x="994.98" y="847.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl (1 samples, 0.08%)</title><rect x="1009.1" y="821" width="0.9" height="15.0" fill="rgb(219,195,27)" rx="2" ry="2" />
<text  x="1012.08" y="831.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (11 samples, 0.84%)</title><rect x="839.9" y="645" width="9.9" height="15.0" fill="rgb(209,184,28)" rx="2" ry="2" />
<text  x="842.87" y="655.5" ></text>
</g>
<g >
<title>TApplication::ExecuteFile (1 samples, 0.08%)</title><rect x="857.0" y="917" width="0.9" height="15.0" fill="rgb(246,65,25)" rx="2" ry="2" />
<text  x="859.97" y="927.5" ></text>
</g>
<g >
<title>clang::Sema::SubstBaseSpecifiers (2 samples, 0.15%)</title><rect x="1094.6" y="837" width="1.8" height="15.0" fill="rgb(207,140,50)" rx="2" ry="2" />
<text  x="1097.59" y="847.5" ></text>
</g>
<g >
<title>llvm::orc::lookupWithLegacyFn&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}::operator()(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;) const::{lambda(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)#1}&gt; (1 samples, 0.08%)</title><rect x="202.6" y="709" width="0.9" height="15.0" fill="rgb(214,79,46)" rx="2" ry="2" />
<text  x="205.62" y="719.5" ></text>
</g>
<g >
<title>TFile::TFile (1 samples, 0.08%)</title><rect x="448.3" y="853" width="0.9" height="15.0" fill="rgb(215,17,42)" rx="2" ry="2" />
<text  x="451.34" y="863.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteDeclContext (1 samples, 0.08%)</title><rect x="1064.0" y="837" width="0.9" height="15.0" fill="rgb(254,49,25)" rx="2" ry="2" />
<text  x="1066.99" y="847.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass (2 samples, 0.15%)</title><rect x="1094.6" y="853" width="1.8" height="15.0" fill="rgb(224,158,48)" rx="2" ry="2" />
<text  x="1097.59" y="863.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitNonTypeTemplateParmDecl (1 samples, 0.08%)</title><rect x="1051.4" y="693" width="0.9" height="15.0" fill="rgb(236,98,54)" rx="2" ry="2" />
<text  x="1054.39" y="703.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (1 samples, 0.08%)</title><rect x="839.0" y="789" width="0.9" height="15.0" fill="rgb(221,11,42)" rx="2" ry="2" />
<text  x="841.97" y="799.5" ></text>
</g>
<g >
<title>TROOT::Macro (1 samples, 0.08%)</title><rect x="857.0" y="949" width="0.9" height="15.0" fill="rgb(233,18,49)" rx="2" ry="2" />
<text  x="859.97" y="959.5" ></text>
</g>
<g >
<title>cling::MetaProcessor::process (76 samples, 5.80%)</title><rect x="860.6" y="821" width="68.4" height="15.0" fill="rgb(233,105,36)" rx="2" ry="2" />
<text  x="863.57" y="831.5" >cling::..</text>
</g>
<g >
<title>.annobin_rtld.c (5 samples, 0.38%)</title><rect x="1147.7" y="949" width="4.5" height="15.0" fill="rgb(251,3,37)" rx="2" ry="2" />
<text  x="1150.70" y="959.5" ></text>
</g>
<g >
<title>execute_command_internal (16 samples, 1.22%)</title><rect x="15.4" y="469" width="14.4" height="15.0" fill="rgb(227,34,53)" rx="2" ry="2" />
<text  x="18.40" y="479.5" ></text>
</g>
<g >
<title>llvm::object::ELFObjectFile&lt;llvm::object::ELFType&lt;(llvm::support::endianness)1, true&gt; &gt;::section_end (10 samples, 0.76%)</title><rect x="785.9" y="501" width="9.0" height="15.0" fill="rgb(244,48,11)" rx="2" ry="2" />
<text  x="788.87" y="511.5" ></text>
</g>
<g >
<title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::MachineBasicBlock, true&gt; &gt;::CalculateFromScratch (2 samples, 0.15%)</title><rect x="704.0" y="533" width="1.8" height="15.0" fill="rgb(237,132,7)" rx="2" ry="2" />
<text  x="706.96" y="543.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.15%)</title><rect x="1186.4" y="757" width="1.8" height="15.0" fill="rgb(213,35,4)" rx="2" ry="2" />
<text  x="1189.40" y="767.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl (1 samples, 0.08%)</title><rect x="1075.7" y="677" width="0.9" height="15.0" fill="rgb(215,206,44)" rx="2" ry="2" />
<text  x="1078.69" y="687.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit (1 samples, 0.08%)</title><rect x="1077.5" y="613" width="0.9" height="15.0" fill="rgb(215,72,4)" rx="2" ry="2" />
<text  x="1080.49" y="623.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (1 samples, 0.08%)</title><rect x="901.1" y="565" width="0.9" height="15.0" fill="rgb(232,100,4)" rx="2" ry="2" />
<text  x="904.08" y="575.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (5 samples, 0.38%)</title><rect x="253.9" y="725" width="4.5" height="15.0" fill="rgb(217,39,27)" rx="2" ry="2" />
<text  x="256.92" y="735.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (3 samples, 0.23%)</title><rect x="1015.4" y="837" width="2.7" height="15.0" fill="rgb(218,177,51)" rx="2" ry="2" />
<text  x="1018.39" y="847.5" ></text>
</g>
<g >
<title>llvm::SmallVectorBase::grow_pod (1 samples, 0.08%)</title><rect x="1046.0" y="805" width="0.9" height="15.0" fill="rgb(238,162,26)" rx="2" ry="2" />
<text  x="1048.99" y="815.5" ></text>
</g>
<g >
<title>?? (15 samples, 1.14%)</title><rect x="929.0" y="853" width="13.5" height="15.0" fill="rgb(211,182,33)" rx="2" ry="2" />
<text  x="931.98" y="863.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::ConstructAttributeList (1 samples, 0.08%)</title><rect x="1018.1" y="629" width="0.9" height="15.0" fill="rgb(244,149,0)" rx="2" ry="2" />
<text  x="1021.09" y="639.5" ></text>
</g>
<g >
<title>llvm::TargetTransformInfoWrapperPass::getTTI (1 samples, 0.08%)</title><rect x="227.8" y="757" width="0.9" height="15.0" fill="rgb(206,90,8)" rx="2" ry="2" />
<text  x="230.82" y="767.5" ></text>
</g>
<g >
<title>llvm::MCObjectStreamer::EmitInstructionImpl (2 samples, 0.15%)</title><rect x="249.4" y="645" width="1.8" height="15.0" fill="rgb(228,76,22)" rx="2" ry="2" />
<text  x="252.42" y="655.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.08%)</title><rect x="1015.4" y="661" width="0.9" height="15.0" fill="rgb(221,157,38)" rx="2" ry="2" />
<text  x="1018.39" y="671.5" ></text>
</g>
<g >
<title>__GI__dl_catch_error (2 samples, 0.15%)</title><rect x="989.3" y="853" width="1.8" height="15.0" fill="rgb(232,49,12)" rx="2" ry="2" />
<text  x="992.28" y="863.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke (1 samples, 0.08%)</title><rect x="1119.8" y="885" width="0.9" height="15.0" fill="rgb(205,94,14)" rx="2" ry="2" />
<text  x="1122.79" y="895.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitStmt (1 samples, 0.08%)</title><rect x="1040.6" y="725" width="0.9" height="15.0" fill="rgb(238,3,49)" rx="2" ry="2" />
<text  x="1043.59" y="735.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::commitTransaction (1 samples, 0.08%)</title><rect x="1100.9" y="933" width="0.9" height="15.0" fill="rgb(209,211,45)" rx="2" ry="2" />
<text  x="1103.89" y="943.5" ></text>
</g>
<g >
<title>CheckForLiveRegDef (1 samples, 0.08%)</title><rect x="1102.7" y="629" width="0.9" height="15.0" fill="rgb(215,114,2)" rx="2" ry="2" />
<text  x="1105.69" y="639.5" ></text>
</g>
<g >
<title>clang::Sema::PerformPendingInstantiations (5 samples, 0.38%)</title><rect x="1077.5" y="933" width="4.5" height="15.0" fill="rgb(229,158,35)" rx="2" ry="2" />
<text  x="1080.49" y="943.5" ></text>
</g>
<g >
<title>StrengthenNoWrapFlags (1 samples, 0.08%)</title><rect x="1109.9" y="517" width="0.9" height="15.0" fill="rgb(249,30,54)" rx="2" ry="2" />
<text  x="1112.89" y="527.5" ></text>
</g>
<g >
<title>isCallingConvCCompatible (1 samples, 0.08%)</title><rect x="811.1" y="565" width="0.9" height="15.0" fill="rgb(239,207,25)" rx="2" ry="2" />
<text  x="814.07" y="575.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke (11 samples, 0.84%)</title><rect x="839.9" y="805" width="9.9" height="15.0" fill="rgb(244,9,5)" rx="2" ry="2" />
<text  x="842.87" y="815.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.08%)</title><rect x="1001.9" y="517" width="0.9" height="15.0" fill="rgb(208,42,46)" rx="2" ry="2" />
<text  x="1004.88" y="527.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentScopeDeclRefExpr (2 samples, 0.15%)</title><rect x="1094.6" y="949" width="1.8" height="15.0" fill="rgb(246,189,9)" rx="2" ry="2" />
<text  x="1097.59" y="959.5" ></text>
</g>
<g >
<title>StrengthenNoWrapFlags (1 samples, 0.08%)</title><rect x="852.5" y="581" width="0.9" height="15.0" fill="rgb(225,189,37)" rx="2" ry="2" />
<text  x="855.47" y="591.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentNameType (1 samples, 0.08%)</title><rect x="1087.4" y="741" width="0.9" height="15.0" fill="rgb(228,187,10)" rx="2" ry="2" />
<text  x="1090.39" y="751.5" ></text>
</g>
<g >
<title>llvm::AttributeSet::removeAttribute (1 samples, 0.08%)</title><rect x="1046.0" y="853" width="0.9" height="15.0" fill="rgb(231,112,11)" rx="2" ry="2" />
<text  x="1048.99" y="863.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetType (1 samples, 0.08%)</title><rect x="1011.8" y="757" width="0.9" height="15.0" fill="rgb(239,154,48)" rx="2" ry="2" />
<text  x="1014.78" y="767.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (6 samples, 0.46%)</title><rect x="886.7" y="565" width="5.4" height="15.0" fill="rgb(229,117,16)" rx="2" ry="2" />
<text  x="889.67" y="575.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::Compile (76 samples, 5.80%)</title><rect x="860.6" y="709" width="68.4" height="15.0" fill="rgb(210,190,17)" rx="2" ry="2" />
<text  x="863.57" y="719.5" >cling::..</text>
</g>
<g >
<title>llvm::canConstantFoldCallTo (1 samples, 0.08%)</title><rect x="814.7" y="501" width="0.9" height="15.0" fill="rgb(223,214,5)" rx="2" ry="2" />
<text  x="817.67" y="511.5" ></text>
</g>
<g >
<title>llvm::PMTopLevelManager::findAnalysisPass (4 samples, 0.31%)</title><rect x="232.3" y="709" width="3.6" height="15.0" fill="rgb(248,229,44)" rx="2" ry="2" />
<text  x="235.32" y="719.5" ></text>
</g>
<g >
<title>TCling::ExecuteMacro (2 samples, 0.15%)</title><rect x="855.2" y="869" width="1.8" height="15.0" fill="rgb(236,89,26)" rx="2" ry="2" />
<text  x="858.17" y="879.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateArgument (1 samples, 0.08%)</title><rect x="1088.3" y="741" width="0.9" height="15.0" fill="rgb(231,91,34)" rx="2" ry="2" />
<text  x="1091.29" y="751.5" ></text>
</g>
<g >
<title>TCling::ExecuteMacro (1 samples, 0.08%)</title><rect x="857.0" y="933" width="0.9" height="15.0" fill="rgb(221,2,42)" rx="2" ry="2" />
<text  x="859.97" y="943.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitFunctionBody (1 samples, 0.08%)</title><rect x="1040.6" y="757" width="0.9" height="15.0" fill="rgb(205,1,13)" rx="2" ry="2" />
<text  x="1043.59" y="767.5" ></text>
</g>
<g >
<title>llvm::InstrEmitter::EmitCopyFromReg (1 samples, 0.08%)</title><rect x="1115.3" y="565" width="0.9" height="15.0" fill="rgb(216,6,37)" rx="2" ry="2" />
<text  x="1118.29" y="575.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="974.9" y="757" width="0.9" height="15.0" fill="rgb(250,23,27)" rx="2" ry="2" />
<text  x="977.88" y="767.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::tryOptimizeCall (3 samples, 0.23%)</title><rect x="811.1" y="597" width="2.7" height="15.0" fill="rgb(228,62,40)" rx="2" ry="2" />
<text  x="814.07" y="607.5" ></text>
</g>
<g >
<title>do_lookup_x (1 samples, 0.08%)</title><rect x="991.1" y="709" width="0.9" height="15.0" fill="rgb(225,185,39)" rx="2" ry="2" />
<text  x="994.08" y="719.5" ></text>
</g>
<g >
<title>TCling::DataMemberInfo_Factory (1 samples, 0.08%)</title><rect x="1118.9" y="421" width="0.9" height="15.0" fill="rgb(217,183,34)" rx="2" ry="2" />
<text  x="1121.89" y="431.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::visitLoadInst (1 samples, 0.08%)</title><rect x="814.7" y="629" width="0.9" height="15.0" fill="rgb(240,125,15)" rx="2" ry="2" />
<text  x="817.67" y="639.5" ></text>
</g>
<g >
<title>clang::RedeclarableTemplateDecl::loadLazySpecializationsImpl (1 samples, 0.08%)</title><rect x="1073.9" y="581" width="0.9" height="15.0" fill="rgb(244,148,17)" rx="2" ry="2" />
<text  x="1076.89" y="591.5" ></text>
</g>
<g >
<title>__GI__IO_getline_info (2 samples, 0.15%)</title><rect x="993.8" y="853" width="1.8" height="15.0" fill="rgb(215,124,4)" rx="2" ry="2" />
<text  x="996.78" y="863.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1161.2" y="773" width="0.9" height="15.0" fill="rgb(224,164,14)" rx="2" ry="2" />
<text  x="1164.20" y="783.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (1 samples, 0.08%)</title><rect x="857.0" y="677" width="0.9" height="15.0" fill="rgb(237,186,3)" rx="2" ry="2" />
<text  x="859.97" y="687.5" ></text>
</g>
<g >
<title>check_match (1 samples, 0.08%)</title><rect x="1142.3" y="837" width="0.9" height="15.0" fill="rgb(245,38,43)" rx="2" ry="2" />
<text  x="1145.30" y="847.5" ></text>
</g>
<g >
<title>clang::ASTStmtReader::VisitOverloadExpr (1 samples, 0.08%)</title><rect x="1077.5" y="821" width="0.9" height="15.0" fill="rgb(238,226,25)" rx="2" ry="2" />
<text  x="1080.49" y="831.5" ></text>
</g>
<g >
<title>clang::Sema::AddTemplateOverloadCandidate (1 samples, 0.08%)</title><rect x="1070.3" y="917" width="0.9" height="15.0" fill="rgb(241,32,14)" rx="2" ry="2" />
<text  x="1073.29" y="927.5" ></text>
</g>
<g >
<title>isSafeToConvert (1 samples, 0.08%)</title><rect x="1049.6" y="533" width="0.9" height="15.0" fill="rgb(253,196,3)" rx="2" ry="2" />
<text  x="1052.59" y="543.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::SetLLVMFunctionAttributes (1 samples, 0.08%)</title><rect x="1018.1" y="645" width="0.9" height="15.0" fill="rgb(250,125,38)" rx="2" ry="2" />
<text  x="1021.09" y="655.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (1 samples, 0.08%)</title><rect x="1120.7" y="805" width="0.9" height="15.0" fill="rgb(248,30,11)" rx="2" ry="2" />
<text  x="1123.69" y="815.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertRecordDeclType (1 samples, 0.08%)</title><rect x="1048.7" y="629" width="0.9" height="15.0" fill="rgb(252,6,41)" rx="2" ry="2" />
<text  x="1051.69" y="639.5" ></text>
</g>
<g >
<title>clang::ASTReader::updateOutOfDateIdentifier (1 samples, 0.08%)</title><rect x="942.5" y="549" width="0.9" height="15.0" fill="rgb(235,42,27)" rx="2" ry="2" />
<text  x="945.48" y="559.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="24.4" y="245" width="0.9" height="15.0" fill="rgb(222,163,40)" rx="2" ry="2" />
<text  x="27.40" y="255.5" ></text>
</g>
<g >
<title>[bash] (16 samples, 1.22%)</title><rect x="15.4" y="453" width="14.4" height="15.0" fill="rgb(251,36,11)" rx="2" ry="2" />
<text  x="18.40" y="463.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (71 samples, 5.42%)</title><rect x="864.2" y="645" width="63.9" height="15.0" fill="rgb(215,4,33)" rx="2" ry="2" />
<text  x="867.17" y="655.5" >llvm::l..</text>
</g>
<g >
<title>llvm::Attribute::hasAttribute (1 samples, 0.08%)</title><rect x="848.0" y="517" width="0.9" height="15.0" fill="rgb(234,78,28)" rx="2" ry="2" />
<text  x="850.97" y="527.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformStmt (1 samples, 0.08%)</title><rect x="1080.2" y="773" width="0.9" height="15.0" fill="rgb(240,205,19)" rx="2" ry="2" />
<text  x="1083.19" y="783.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::visitCallBase (4 samples, 0.31%)</title><rect x="811.1" y="613" width="3.6" height="15.0" fill="rgb(205,131,42)" rx="2" ry="2" />
<text  x="814.07" y="623.5" ></text>
</g>
<g >
<title>llvm::SimplifyInstruction (1 samples, 0.08%)</title><rect x="860.6" y="581" width="0.9" height="15.0" fill="rgb(254,169,19)" rx="2" ry="2" />
<text  x="863.57" y="591.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (33 samples, 2.52%)</title><rect x="802.1" y="709" width="29.7" height="15.0" fill="rgb(238,128,43)" rx="2" ry="2" />
<text  x="805.07" y="719.5" >ll..</text>
</g>
<g >
<title>clang::TypeLocReader::VisitDependentNameTypeLoc (1 samples, 0.08%)</title><rect x="1009.1" y="501" width="0.9" height="15.0" fill="rgb(221,67,31)" rx="2" ry="2" />
<text  x="1012.08" y="511.5" ></text>
</g>
<g >
<title>cling::MetaSema::actOnLCommand (76 samples, 5.80%)</title><rect x="860.6" y="757" width="68.4" height="15.0" fill="rgb(250,122,20)" rx="2" ry="2" />
<text  x="863.57" y="767.5" >cling::..</text>
</g>
<g >
<title>operator new (1 samples, 0.08%)</title><rect x="1048.7" y="309" width="0.9" height="15.0" fill="rgb(230,229,53)" rx="2" ry="2" />
<text  x="1051.69" y="319.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.08%)</title><rect x="1118.9" y="197" width="0.9" height="15.0" fill="rgb(237,25,51)" rx="2" ry="2" />
<text  x="1121.89" y="207.5" ></text>
</g>
<g >
<title>llvm::BlockFrequencyInfoWrapperPass::runOnFunction (1 samples, 0.08%)</title><rect x="871.4" y="613" width="0.9" height="15.0" fill="rgb(223,32,47)" rx="2" ry="2" />
<text  x="874.37" y="623.5" ></text>
</g>
<g >
<title>llvm::SROA::splitAlloca (2 samples, 0.15%)</title><rect x="800.3" y="597" width="1.8" height="15.0" fill="rgb(231,151,20)" rx="2" ry="2" />
<text  x="803.27" y="607.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::Compile (1 samples, 0.08%)</title><rect x="1101.8" y="933" width="0.9" height="15.0" fill="rgb(223,207,40)" rx="2" ry="2" />
<text  x="1104.79" y="943.5" ></text>
</g>
<g >
<title>llvm::ConstantRange::getNonEmpty (1 samples, 0.08%)</title><rect x="852.5" y="549" width="0.9" height="15.0" fill="rgb(237,209,14)" rx="2" ry="2" />
<text  x="855.47" y="559.5" ></text>
</g>
<g >
<title>llvm::BranchProbabilityInfoWrapperPass::runOnFunction (2 samples, 0.15%)</title><rect x="902.9" y="597" width="1.8" height="15.0" fill="rgb(213,193,43)" rx="2" ry="2" />
<text  x="905.88" y="607.5" ></text>
</g>
<g >
<title>clang::Sema::ResolveExceptionSpec (1 samples, 0.08%)</title><rect x="1062.2" y="901" width="0.9" height="15.0" fill="rgb(210,46,48)" rx="2" ry="2" />
<text  x="1065.19" y="911.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.08%)</title><rect x="244.0" y="661" width="0.9" height="15.0" fill="rgb(252,103,27)" rx="2" ry="2" />
<text  x="247.02" y="671.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (3 samples, 0.23%)</title><rect x="1015.4" y="901" width="2.7" height="15.0" fill="rgb(246,144,52)" rx="2" ry="2" />
<text  x="1018.39" y="911.5" ></text>
</g>
<g >
<title>isSafeToConvert (1 samples, 0.08%)</title><rect x="1048.7" y="501" width="0.9" height="15.0" fill="rgb(235,108,30)" rx="2" ry="2" />
<text  x="1051.69" y="511.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.08%)</title><rect x="239.5" y="677" width="0.9" height="15.0" fill="rgb(242,212,28)" rx="2" ry="2" />
<text  x="242.52" y="687.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition (1 samples, 0.08%)</title><rect x="1037.9" y="725" width="0.9" height="15.0" fill="rgb(238,46,42)" rx="2" ry="2" />
<text  x="1040.89" y="735.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadExpr (1 samples, 0.08%)</title><rect x="1059.5" y="693" width="0.9" height="15.0" fill="rgb(231,7,52)" rx="2" ry="2" />
<text  x="1062.49" y="703.5" ></text>
</g>
<g >
<title>TApplication::ProcessLine (7 samples, 0.53%)</title><rect x="831.8" y="933" width="6.3" height="15.0" fill="rgb(219,159,51)" rx="2" ry="2" />
<text  x="834.77" y="943.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::runOnMachineFunction (1 samples, 0.08%)</title><rect x="449.2" y="757" width="0.9" height="15.0" fill="rgb(214,212,45)" rx="2" ry="2" />
<text  x="452.24" y="767.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1160.3" y="741" width="0.9" height="15.0" fill="rgb(228,109,13)" rx="2" ry="2" />
<text  x="1163.30" y="751.5" ></text>
</g>
<g >
<title>__libc_start_main (42 samples, 3.20%)</title><rect x="1152.2" y="933" width="37.8" height="15.0" fill="rgb(248,12,47)" rx="2" ry="2" />
<text  x="1155.20" y="943.5" >__l..</text>
</g>
<g >
<title>__getpwuid_r (5 samples, 0.38%)</title><rect x="1002.8" y="757" width="4.5" height="15.0" fill="rgb(244,148,7)" rx="2" ry="2" />
<text  x="1005.78" y="767.5" ></text>
</g>
<g >
<title>clang::Parser::ParseTopLevelDecl (1 samples, 0.08%)</title><rect x="849.8" y="773" width="0.9" height="15.0" fill="rgb(245,20,30)" rx="2" ry="2" />
<text  x="852.77" y="783.5" ></text>
</g>
<g >
<title>TList::AddLast (1 samples, 0.08%)</title><rect x="1001.9" y="693" width="0.9" height="15.0" fill="rgb(215,115,2)" rx="2" ry="2" />
<text  x="1004.88" y="703.5" ></text>
</g>
<g >
<title>clang::TemplateArgumentList::ComputeODRHash (1 samples, 0.08%)</title><rect x="1072.1" y="709" width="0.9" height="15.0" fill="rgb(243,122,51)" rx="2" ry="2" />
<text  x="1075.09" y="719.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.08%)</title><rect x="673.4" y="565" width="0.9" height="15.0" fill="rgb(246,179,51)" rx="2" ry="2" />
<text  x="676.36" y="575.5" ></text>
</g>
<g >
<title>llvm::Function::addAttributes (1 samples, 0.08%)</title><rect x="1042.4" y="773" width="0.9" height="15.0" fill="rgb(229,179,10)" rx="2" ry="2" />
<text  x="1045.39" y="783.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::GenerateCode (2 samples, 0.15%)</title><rect x="1046.9" y="933" width="1.8" height="15.0" fill="rgb(237,85,54)" rx="2" ry="2" />
<text  x="1049.89" y="943.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGBuilder::visitCall (1 samples, 0.08%)</title><rect x="1122.5" y="901" width="0.9" height="15.0" fill="rgb(219,157,53)" rx="2" ry="2" />
<text  x="1125.49" y="911.5" ></text>
</g>
<g >
<title>llvm::Function::addAttributes (1 samples, 0.08%)</title><rect x="1038.8" y="693" width="0.9" height="15.0" fill="rgb(225,201,54)" rx="2" ry="2" />
<text  x="1041.79" y="703.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetType (1 samples, 0.08%)</title><rect x="1066.7" y="725" width="0.9" height="15.0" fill="rgb(226,67,37)" rx="2" ry="2" />
<text  x="1069.69" y="735.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitAutoVarDecl (1 samples, 0.08%)</title><rect x="1023.5" y="805" width="0.9" height="15.0" fill="rgb(221,134,39)" rx="2" ry="2" />
<text  x="1026.49" y="815.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::verifyPreservedAnalysis (6 samples, 0.46%)</title><rect x="917.3" y="597" width="5.4" height="15.0" fill="rgb(222,130,22)" rx="2" ry="2" />
<text  x="920.28" y="607.5" ></text>
</g>
<g >
<title>clang::ASTReader::finishPendingActions (1 samples, 0.08%)</title><rect x="1111.7" y="597" width="0.9" height="15.0" fill="rgb(245,216,25)" rx="2" ry="2" />
<text  x="1114.69" y="607.5" ></text>
</g>
<g >
<title>ROOT::Internal::GetROOT2 (69 samples, 5.26%)</title><rect x="929.0" y="917" width="62.1" height="15.0" fill="rgb(238,18,20)" rx="2" ry="2" />
<text  x="931.98" y="927.5" >ROOT::..</text>
</g>
<g >
<title>llvm::SelectionDAG::InsertNode (1 samples, 0.08%)</title><rect x="1119.8" y="661" width="0.9" height="15.0" fill="rgb(237,217,7)" rx="2" ry="2" />
<text  x="1122.79" y="671.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetType (1 samples, 0.08%)</title><rect x="1066.7" y="693" width="0.9" height="15.0" fill="rgb(234,166,33)" rx="2" ry="2" />
<text  x="1069.69" y="703.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1161.2" y="693" width="0.9" height="15.0" fill="rgb(218,150,9)" rx="2" ry="2" />
<text  x="1164.20" y="703.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddType (1 samples, 0.08%)</title><rect x="1058.6" y="597" width="0.9" height="15.0" fill="rgb(206,62,29)" rx="2" ry="2" />
<text  x="1061.59" y="607.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::GetOrCreateLLVMFunction (1 samples, 0.08%)</title><rect x="1019.9" y="677" width="0.9" height="15.0" fill="rgb(240,90,8)" rx="2" ry="2" />
<text  x="1022.89" y="687.5" ></text>
</g>
<g >
<title>execute_command (4 samples, 0.31%)</title><rect x="36.1" y="517" width="3.6" height="15.0" fill="rgb(224,100,15)" rx="2" ry="2" />
<text  x="39.10" y="527.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (4 samples, 0.31%)</title><rect x="1148.6" y="917" width="3.6" height="15.0" fill="rgb(236,181,39)" rx="2" ry="2" />
<text  x="1151.60" y="927.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl (1 samples, 0.08%)</title><rect x="1111.7" y="565" width="0.9" height="15.0" fill="rgb(243,55,31)" rx="2" ry="2" />
<text  x="1114.69" y="575.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.08%)</title><rect x="1039.7" y="629" width="0.9" height="15.0" fill="rgb(214,212,21)" rx="2" ry="2" />
<text  x="1042.69" y="639.5" ></text>
</g>
<g >
<title>llvm::SROA::runImpl (2 samples, 0.15%)</title><rect x="800.3" y="629" width="1.8" height="15.0" fill="rgb(228,177,38)" rx="2" ry="2" />
<text  x="803.27" y="639.5" ></text>
</g>
<g >
<title>parse_and_execute (4 samples, 0.31%)</title><rect x="36.1" y="341" width="3.6" height="15.0" fill="rgb(245,102,3)" rx="2" ry="2" />
<text  x="39.10" y="351.5" ></text>
</g>
<g >
<title>RegisterPreIncludedHeaders (1 samples, 0.08%)</title><rect x="942.5" y="853" width="0.9" height="15.0" fill="rgb(239,226,43)" rx="2" ry="2" />
<text  x="945.48" y="863.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.08%)</title><rect x="35.2" y="485" width="0.9" height="15.0" fill="rgb(226,44,22)" rx="2" ry="2" />
<text  x="38.20" y="495.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::InfoRec, llvm::DenseMapInfo&lt;llvm::BasicBlock*&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::InfoRec&gt; &gt;, llvm::BasicBlock*, llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::InfoRec, llvm::DenseMapInfo&lt;llvm::BasicBlock*&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::InfoRec&gt; &gt;::LookupBucketFor&lt;llvm::BasicBlock*&gt; (1 samples, 0.08%)</title><rect x="684.2" y="501" width="0.9" height="15.0" fill="rgb(220,69,11)" rx="2" ry="2" />
<text  x="687.16" y="511.5" ></text>
</g>
<g >
<title>clang::Sema::ConvertArgumentsForCall (2 samples, 0.15%)</title><rect x="1067.6" y="949" width="1.8" height="15.0" fill="rgb(248,47,41)" rx="2" ry="2" />
<text  x="1070.59" y="959.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGBuilder::visit (1 samples, 0.08%)</title><rect x="1119.8" y="741" width="0.9" height="15.0" fill="rgb(228,187,33)" rx="2" ry="2" />
<text  x="1122.79" y="751.5" ></text>
</g>
<g >
<title>clang::Sema::CreateOverloadedUnaryOp (1 samples, 0.08%)</title><rect x="1071.2" y="949" width="0.9" height="15.0" fill="rgb(218,75,21)" rx="2" ry="2" />
<text  x="1074.19" y="959.5" ></text>
</g>
<g >
<title>findCompleteObject (1 samples, 0.08%)</title><rect x="1023.5" y="629" width="0.9" height="15.0" fill="rgb(225,63,49)" rx="2" ry="2" />
<text  x="1026.49" y="639.5" ></text>
</g>
<g >
<title>clang::Sema::SubstBaseSpecifiers (4 samples, 0.31%)</title><rect x="1072.1" y="933" width="3.6" height="15.0" fill="rgb(206,178,52)" rx="2" ry="2" />
<text  x="1075.09" y="943.5" ></text>
</g>
<g >
<title>multikeySort (1 samples, 0.08%)</title><rect x="839.9" y="549" width="0.9" height="15.0" fill="rgb(230,85,53)" rx="2" ry="2" />
<text  x="842.87" y="559.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="949.7" y="725" width="0.9" height="15.0" fill="rgb(230,52,3)" rx="2" ry="2" />
<text  x="952.68" y="735.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (77 samples, 5.87%)</title><rect x="677.9" y="581" width="69.3" height="15.0" fill="rgb(247,72,23)" rx="2" ry="2" />
<text  x="680.86" y="591.5" >llvm::F..</text>
</g>
<g >
<title>clang::RedeclarableTemplateDecl::findSpecializationImpl&lt;clang::ClassTemplateSpecializationDecl&gt; (1 samples, 0.08%)</title><rect x="1055.9" y="693" width="0.9" height="15.0" fill="rgb(217,102,9)" rx="2" ry="2" />
<text  x="1058.89" y="703.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.08%)</title><rect x="1020.8" y="597" width="0.9" height="15.0" fill="rgb(253,70,30)" rx="2" ry="2" />
<text  x="1023.79" y="607.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentScopeDeclRefExpr (1 samples, 0.08%)</title><rect x="1093.7" y="837" width="0.9" height="15.0" fill="rgb(239,136,19)" rx="2" ry="2" />
<text  x="1096.69" y="847.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1151.3" y="773" width="0.9" height="15.0" fill="rgb(218,35,7)" rx="2" ry="2" />
<text  x="1154.30" y="783.5" ></text>
</g>
<g >
<title>cling::MetaParser::isCommand (2 samples, 0.15%)</title><rect x="1111.7" y="933" width="1.8" height="15.0" fill="rgb(228,178,46)" rx="2" ry="2" />
<text  x="1114.69" y="943.5" ></text>
</g>
<g >
<title>llvm::BitstreamCursor::readRecord (1 samples, 0.08%)</title><rect x="448.3" y="229" width="0.9" height="15.0" fill="rgb(209,107,5)" rx="2" ry="2" />
<text  x="451.34" y="239.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject&lt;std::shared_ptr&lt;llvm::RuntimeDyld::MemoryManager&gt; &gt;::getSymbolMaterializer(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda()#1}&gt;::_M_invoke (4 samples, 0.31%)</title><rect x="258.4" y="805" width="3.6" height="15.0" fill="rgb(218,149,20)" rx="2" ry="2" />
<text  x="261.42" y="815.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveRelocations (8 samples, 0.61%)</title><rect x="1130.6" y="917" width="7.2" height="15.0" fill="rgb(206,91,51)" rx="2" ry="2" />
<text  x="1133.59" y="927.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_erase (1 samples, 0.08%)</title><rect x="1020.8" y="645" width="0.9" height="15.0" fill="rgb(214,17,23)" rx="2" ry="2" />
<text  x="1023.79" y="655.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteDeclContext (2 samples, 0.15%)</title><rect x="1094.6" y="917" width="1.8" height="15.0" fill="rgb(227,219,25)" rx="2" ry="2" />
<text  x="1097.59" y="927.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.08%)</title><rect x="679.7" y="549" width="0.9" height="15.0" fill="rgb(234,206,39)" rx="2" ry="2" />
<text  x="682.66" y="559.5" ></text>
</g>
<g >
<title>clang::RedeclarableTemplateDecl::loadLazySpecializationsImpl (1 samples, 0.08%)</title><rect x="1094.6" y="677" width="0.9" height="15.0" fill="rgb(248,56,21)" rx="2" ry="2" />
<text  x="1097.59" y="687.5" ></text>
</g>
<g >
<title>llvm::X86AsmPrinter::runOnMachineFunction (2 samples, 0.15%)</title><rect x="846.2" y="581" width="1.8" height="15.0" fill="rgb(218,63,50)" rx="2" ry="2" />
<text  x="849.17" y="591.5" ></text>
</g>
<g >
<title>llvm::MachineFunction::tidyLandingPads (1 samples, 0.08%)</title><rect x="710.3" y="517" width="0.9" height="15.0" fill="rgb(254,115,10)" rx="2" ry="2" />
<text  x="713.26" y="527.5" ></text>
</g>
<g >
<title>llvm::AAResults::getModRefInfo (1 samples, 0.08%)</title><rect x="829.1" y="565" width="0.9" height="15.0" fill="rgb(240,107,24)" rx="2" ry="2" />
<text  x="832.07" y="575.5" ></text>
</g>
<g >
<title>clang::Preprocessor::HandleDirective (1 samples, 0.08%)</title><rect x="942.5" y="693" width="0.9" height="15.0" fill="rgb(205,72,9)" rx="2" ry="2" />
<text  x="945.48" y="703.5" ></text>
</g>
<g >
<title>llvm::make_unique&lt;llvm::DomTreeNodeBase&lt;llvm::MachineBasicBlock&gt;, llvm::MachineBasicBlock*&amp;, decltype(nullptr)&gt; (1 samples, 0.08%)</title><rect x="695.9" y="517" width="0.9" height="15.0" fill="rgb(218,44,50)" rx="2" ry="2" />
<text  x="698.86" y="527.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalDefinition (1 samples, 0.08%)</title><rect x="1046.0" y="917" width="0.9" height="15.0" fill="rgb(236,104,39)" rx="2" ry="2" />
<text  x="1048.99" y="927.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit (1 samples, 0.08%)</title><rect x="1083.8" y="693" width="0.9" height="15.0" fill="rgb(232,181,9)" rx="2" ry="2" />
<text  x="1086.79" y="703.5" ></text>
</g>
<g >
<title>getMangledNameImpl (8 samples, 0.61%)</title><rect x="1026.2" y="901" width="7.2" height="15.0" fill="rgb(205,201,18)" rx="2" ry="2" />
<text  x="1029.19" y="911.5" ></text>
</g>
<g >
<title>execute_command_internal (27 samples, 2.06%)</title><rect x="10.9" y="757" width="24.3" height="15.0" fill="rgb(226,90,19)" rx="2" ry="2" />
<text  x="13.90" y="767.5" >e..</text>
</g>
<g >
<title>llvm::TargetLoweringBase::getLoadExtAction (1 samples, 0.08%)</title><rect x="1127.9" y="773" width="0.9" height="15.0" fill="rgb(216,69,9)" rx="2" ry="2" />
<text  x="1130.89" y="783.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.08%)</title><rect x="1086.5" y="901" width="0.9" height="15.0" fill="rgb(252,97,45)" rx="2" ry="2" />
<text  x="1089.49" y="911.5" ></text>
</g>
<g >
<title>clang::ClassTemplateSpecializationDecl::Create (1 samples, 0.08%)</title><rect x="1085.6" y="661" width="0.9" height="15.0" fill="rgb(223,135,14)" rx="2" ry="2" />
<text  x="1088.59" y="671.5" ></text>
</g>
<g >
<title>HandleInterpreterException (1 samples, 0.08%)</title><rect x="854.3" y="917" width="0.9" height="15.0" fill="rgb(230,24,0)" rx="2" ry="2" />
<text  x="857.27" y="927.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (1 samples, 0.08%)</title><rect x="1098.2" y="789" width="0.9" height="15.0" fill="rgb(215,52,53)" rx="2" ry="2" />
<text  x="1101.19" y="799.5" ></text>
</g>
<g >
<title>clang::RedeclarableTemplateDecl::findSpecializationImpl&lt;clang::ClassTemplateSpecializationDecl&gt; (1 samples, 0.08%)</title><rect x="1064.9" y="773" width="0.9" height="15.0" fill="rgb(217,6,11)" rx="2" ry="2" />
<text  x="1067.89" y="783.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::SelectAllBasicBlocks (1 samples, 0.08%)</title><rect x="1120.7" y="757" width="0.9" height="15.0" fill="rgb(222,25,30)" rx="2" ry="2" />
<text  x="1123.69" y="767.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (4 samples, 0.31%)</title><rect x="223.3" y="709" width="3.6" height="15.0" fill="rgb(217,57,30)" rx="2" ry="2" />
<text  x="226.32" y="719.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentNameType (2 samples, 0.15%)</title><rect x="1094.6" y="773" width="1.8" height="15.0" fill="rgb(218,217,1)" rx="2" ry="2" />
<text  x="1097.59" y="783.5" ></text>
</g>
<g >
<title>__GI__IO_fread (4 samples, 0.31%)</title><rect x="932.6" y="741" width="3.6" height="15.0" fill="rgb(214,155,34)" rx="2" ry="2" />
<text  x="935.58" y="751.5" ></text>
</g>
<g >
<title>llvm::AttrBuilder::AttrBuilder (1 samples, 0.08%)</title><rect x="1039.7" y="677" width="0.9" height="15.0" fill="rgb(247,191,12)" rx="2" ry="2" />
<text  x="1042.69" y="687.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (1 samples, 0.08%)</title><rect x="1107.2" y="725" width="0.9" height="15.0" fill="rgb(224,68,51)" rx="2" ry="2" />
<text  x="1110.19" y="735.5" ></text>
</g>
<g >
<title>main (27 samples, 2.06%)</title><rect x="10.9" y="917" width="24.3" height="15.0" fill="rgb(214,195,11)" rx="2" ry="2" />
<text  x="13.90" y="927.5" >m..</text>
</g>
<g >
<title>clang::ASTReader::GetTypeSourceInfo (1 samples, 0.08%)</title><rect x="1009.1" y="533" width="0.9" height="15.0" fill="rgb(215,3,46)" rx="2" ry="2" />
<text  x="1012.08" y="543.5" ></text>
</g>
<g >
<title>cling::Interpreter::DeclareInternal (1 samples, 0.08%)</title><rect x="203.5" y="837" width="0.9" height="15.0" fill="rgb(252,91,40)" rx="2" ry="2" />
<text  x="206.52" y="847.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1183.7" y="661" width="0.9" height="15.0" fill="rgb(240,115,11)" rx="2" ry="2" />
<text  x="1186.70" y="671.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXConstructExpr (2 samples, 0.15%)</title><rect x="1090.1" y="933" width="1.8" height="15.0" fill="rgb(232,102,40)" rx="2" ry="2" />
<text  x="1093.09" y="943.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (1 samples, 0.08%)</title><rect x="1092.8" y="789" width="0.9" height="15.0" fill="rgb(214,45,40)" rx="2" ry="2" />
<text  x="1095.79" y="799.5" ></text>
</g>
<g >
<title>CreateInterpreter (16 samples, 1.22%)</title><rect x="929.0" y="885" width="14.4" height="15.0" fill="rgb(205,140,8)" rx="2" ry="2" />
<text  x="931.98" y="895.5" ></text>
</g>
<g >
<title>THashTable::Add (1 samples, 0.08%)</title><rect x="1001.9" y="741" width="0.9" height="15.0" fill="rgb(232,158,40)" rx="2" ry="2" />
<text  x="1004.88" y="751.5" ></text>
</g>
<g >
<title>TBuildRealData::Inspect (1 samples, 0.08%)</title><rect x="1118.9" y="485" width="0.9" height="15.0" fill="rgb(208,13,15)" rx="2" ry="2" />
<text  x="1121.89" y="495.5" ></text>
</g>
<g >
<title>TBufferFile::ApplySequence (1 samples, 0.08%)</title><rect x="1118.9" y="661" width="0.9" height="15.0" fill="rgb(232,219,18)" rx="2" ry="2" />
<text  x="1121.89" y="671.5" ></text>
</g>
<g >
<title>_dl_open (1 samples, 0.08%)</title><rect x="991.1" y="789" width="0.9" height="15.0" fill="rgb(214,89,47)" rx="2" ry="2" />
<text  x="994.08" y="799.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl (2 samples, 0.15%)</title><rect x="1060.4" y="869" width="1.8" height="15.0" fill="rgb(249,155,8)" rx="2" ry="2" />
<text  x="1063.39" y="879.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddType (1 samples, 0.08%)</title><rect x="1058.6" y="645" width="0.9" height="15.0" fill="rgb(242,24,51)" rx="2" ry="2" />
<text  x="1061.59" y="655.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (1 samples, 0.08%)</title><rect x="912.8" y="581" width="0.9" height="15.0" fill="rgb(217,167,42)" rx="2" ry="2" />
<text  x="915.78" y="591.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;std::add_pointer, (anonymous namespace)::AggExprEmitter, void&gt;::Visit (1 samples, 0.08%)</title><rect x="1091.0" y="805" width="0.9" height="15.0" fill="rgb(213,151,24)" rx="2" ry="2" />
<text  x="1093.99" y="815.5" ></text>
</g>
<g >
<title>llvm::TargetTransformInfoWrapperPass::getTTI (1 samples, 0.08%)</title><rect x="875.0" y="597" width="0.9" height="15.0" fill="rgb(232,70,11)" rx="2" ry="2" />
<text  x="877.97" y="607.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformCXXOperatorCallExpr (1 samples, 0.08%)</title><rect x="1080.2" y="677" width="0.9" height="15.0" fill="rgb(237,7,21)" rx="2" ry="2" />
<text  x="1083.19" y="687.5" ></text>
</g>
<g >
<title>llvm::LazyBranchProbabilityInfoPass::releaseMemory (1 samples, 0.08%)</title><rect x="914.6" y="565" width="0.9" height="15.0" fill="rgb(219,76,22)" rx="2" ry="2" />
<text  x="917.58" y="575.5" ></text>
</g>
<g >
<title>TChain::LoadTree (44 samples, 3.36%)</title><rect x="300.7" y="869" width="39.6" height="15.0" fill="rgb(252,127,43)" rx="2" ry="2" />
<text  x="303.72" y="879.5" >TCh..</text>
</g>
<g >
<title>TBranch::GetBasketAndFirst (131 samples, 9.99%)</title><rect x="522.1" y="869" width="118.0" height="15.0" fill="rgb(211,169,53)" rx="2" ry="2" />
<text  x="525.14" y="879.5" >TBranch::GetBa..</text>
</g>
<g >
<title>command_substitute (15 samples, 1.14%)</title><rect x="15.4" y="325" width="13.5" height="15.0" fill="rgb(223,47,10)" rx="2" ry="2" />
<text  x="18.40" y="335.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGBuilder::visit (3 samples, 0.23%)</title><rect x="843.5" y="533" width="2.7" height="15.0" fill="rgb(236,25,31)" rx="2" ry="2" />
<text  x="846.47" y="543.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitRedeclarableTemplateDecl (1 samples, 0.08%)</title><rect x="1077.5" y="741" width="0.9" height="15.0" fill="rgb(223,140,7)" rx="2" ry="2" />
<text  x="1080.49" y="751.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformCallExpr (1 samples, 0.08%)</title><rect x="1081.1" y="741" width="0.9" height="15.0" fill="rgb(249,0,5)" rx="2" ry="2" />
<text  x="1084.09" y="751.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGBuilder::LowerCallTo (1 samples, 0.08%)</title><rect x="1121.6" y="949" width="0.9" height="15.0" fill="rgb(251,119,26)" rx="2" ry="2" />
<text  x="1124.59" y="959.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.08%)</title><rect x="1074.8" y="613" width="0.9" height="15.0" fill="rgb(220,217,49)" rx="2" ry="2" />
<text  x="1077.79" y="623.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTemplateIdType (1 samples, 0.08%)</title><rect x="1085.6" y="677" width="0.9" height="15.0" fill="rgb(232,194,40)" rx="2" ry="2" />
<text  x="1088.59" y="687.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization (1 samples, 0.08%)</title><rect x="1075.7" y="949" width="0.9" height="15.0" fill="rgb(228,221,5)" rx="2" ry="2" />
<text  x="1078.69" y="959.5" ></text>
</g>
<g >
<title>execute_command (5 samples, 0.38%)</title><rect x="10.9" y="597" width="4.5" height="15.0" fill="rgb(244,146,54)" rx="2" ry="2" />
<text  x="13.90" y="607.5" ></text>
</g>
<g >
<title>clang::Parser::ParseCastExpression (1 samples, 0.08%)</title><rect x="1053.2" y="757" width="0.9" height="15.0" fill="rgb(224,148,31)" rx="2" ry="2" />
<text  x="1056.19" y="767.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformCXXNamedCastExpr (1 samples, 0.08%)</title><rect x="1098.2" y="917" width="0.9" height="15.0" fill="rgb(232,151,0)" rx="2" ry="2" />
<text  x="1101.19" y="927.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass (4 samples, 0.31%)</title><rect x="1072.1" y="949" width="3.6" height="15.0" fill="rgb(232,122,20)" rx="2" ry="2" />
<text  x="1075.09" y="959.5" ></text>
</g>
<g >
<title>do_sym (1 samples, 0.08%)</title><rect x="865.1" y="517" width="0.9" height="15.0" fill="rgb(217,199,23)" rx="2" ry="2" />
<text  x="868.07" y="527.5" ></text>
</g>
<g >
<title>llvm::Function::addAttributes (1 samples, 0.08%)</title><rect x="1037.9" y="693" width="0.9" height="15.0" fill="rgb(248,26,8)" rx="2" ry="2" />
<text  x="1040.89" y="703.5" ></text>
</g>
<g >
<title>TPluginManager::LoadHandlerMacros (1 samples, 0.08%)</title><rect x="838.1" y="869" width="0.9" height="15.0" fill="rgb(224,93,6)" rx="2" ry="2" />
<text  x="841.07" y="879.5" ></text>
</g>
<g >
<title>TFile::GetStreamerInfoListImpl (1 samples, 0.08%)</title><rect x="448.3" y="805" width="0.9" height="15.0" fill="rgb(250,55,19)" rx="2" ry="2" />
<text  x="451.34" y="815.5" ></text>
</g>
<g >
<title>TListOfDataMembers::Load (1 samples, 0.08%)</title><rect x="1118.9" y="437" width="0.9" height="15.0" fill="rgb(222,103,39)" rx="2" ry="2" />
<text  x="1121.89" y="447.5" ></text>
</g>
<g >
<title>llvm::PostDominatorTreeWrapperPass::runOnFunction (1 samples, 0.08%)</title><rect x="893.0" y="613" width="0.9" height="15.0" fill="rgb(247,28,46)" rx="2" ry="2" />
<text  x="895.97" y="623.5" ></text>
</g>
<g >
<title>__GI__IO_default_uflow (4 samples, 0.31%)</title><rect x="982.1" y="805" width="3.6" height="15.0" fill="rgb(206,150,12)" rx="2" ry="2" />
<text  x="985.08" y="815.5" ></text>
</g>
<g >
<title>execute_command_internal (40 samples, 3.05%)</title><rect x="1152.2" y="869" width="36.0" height="15.0" fill="rgb(242,39,45)" rx="2" ry="2" />
<text  x="1155.20" y="879.5" >exe..</text>
</g>
<g >
<title>TBufferFile::ReadClassBuffer (1 samples, 0.08%)</title><rect x="1118.9" y="565" width="0.9" height="15.0" fill="rgb(252,42,18)" rx="2" ry="2" />
<text  x="1121.89" y="575.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::TargetTransformInfo (llvm::Function const&amp;), llvm::TargetMachine::getTargetIRAnalysis()::{lambda(llvm::Function const&amp;)#1}&gt;::_M_invoke (1 samples, 0.08%)</title><rect x="894.8" y="597" width="0.9" height="15.0" fill="rgb(211,91,43)" rx="2" ry="2" />
<text  x="897.77" y="607.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (2 samples, 0.15%)</title><rect x="714.8" y="549" width="1.8" height="15.0" fill="rgb(209,104,53)" rx="2" ry="2" />
<text  x="717.76" y="559.5" ></text>
</g>
<g >
<title>llvm::LazyValueInfo::getConstant (1 samples, 0.08%)</title><rect x="815.6" y="549" width="0.9" height="15.0" fill="rgb(254,202,4)" rx="2" ry="2" />
<text  x="818.57" y="559.5" ></text>
</g>
<g >
<title>llvm::orc::JITSymbolResolverAdapter::lookup (11 samples, 0.84%)</title><rect x="839.9" y="725" width="9.9" height="15.0" fill="rgb(254,85,34)" rx="2" ry="2" />
<text  x="842.87" y="735.5" ></text>
</g>
<g >
<title>llvm::Function::addAttribute (1 samples, 0.08%)</title><rect x="1017.2" y="661" width="0.9" height="15.0" fill="rgb(234,199,0)" rx="2" ry="2" />
<text  x="1020.19" y="671.5" ></text>
</g>
<g >
<title>llvm::dyn_cast&lt;clang::FunctionDecl, clang::Decl const&gt; (1 samples, 0.08%)</title><rect x="1046.9" y="789" width="0.9" height="15.0" fill="rgb(223,45,49)" rx="2" ry="2" />
<text  x="1049.89" y="799.5" ></text>
</g>
<g >
<title>LookupMemberExpr (1 samples, 0.08%)</title><rect x="1052.3" y="821" width="0.9" height="15.0" fill="rgb(247,42,7)" rx="2" ry="2" />
<text  x="1055.29" y="831.5" ></text>
</g>
<g >
<title>cling::Interpreter::RunFunction (1 samples, 0.08%)</title><rect x="202.6" y="853" width="0.9" height="15.0" fill="rgb(219,99,43)" rx="2" ry="2" />
<text  x="205.62" y="863.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.08%)</title><rect x="35.2" y="789" width="0.9" height="15.0" fill="rgb(205,53,31)" rx="2" ry="2" />
<text  x="38.20" y="799.5" ></text>
</g>
<g >
<title>llvm::orc::SimpleCompiler::operator() (8 samples, 0.61%)</title><rect x="1130.6" y="821" width="7.2" height="15.0" fill="rgb(253,206,54)" rx="2" ry="2" />
<text  x="1133.59" y="831.5" ></text>
</g>
<g >
<title>llvm::ConstantRange::makeGuaranteedNoWrapRegion (1 samples, 0.08%)</title><rect x="852.5" y="565" width="0.9" height="15.0" fill="rgb(212,113,1)" rx="2" ry="2" />
<text  x="855.47" y="575.5" ></text>
</g>
<g >
<title>cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (1 samples, 0.08%)</title><rect x="447.4" y="469" width="0.9" height="15.0" fill="rgb(223,178,12)" rx="2" ry="2" />
<text  x="450.44" y="479.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit (1 samples, 0.08%)</title><rect x="1009.1" y="661" width="0.9" height="15.0" fill="rgb(221,10,8)" rx="2" ry="2" />
<text  x="1012.08" y="671.5" ></text>
</g>
<g >
<title>llvm::orc::LambdaSymbolResolver&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt; const&amp;)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}&gt;::lookup (11 samples, 0.84%)</title><rect x="839.9" y="709" width="9.9" height="15.0" fill="rgb(234,178,36)" rx="2" ry="2" />
<text  x="842.87" y="719.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1161.2" y="789" width="0.9" height="15.0" fill="rgb(214,192,33)" rx="2" ry="2" />
<text  x="1164.20" y="799.5" ></text>
</g>
<g >
<title>llvm::MCStreamer::Finish (2 samples, 0.15%)</title><rect x="676.1" y="565" width="1.8" height="15.0" fill="rgb(218,136,2)" rx="2" ry="2" />
<text  x="679.06" y="575.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.08%)</title><rect x="1001.9" y="645" width="0.9" height="15.0" fill="rgb(232,178,38)" rx="2" ry="2" />
<text  x="1004.88" y="655.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="957.8" y="757" width="0.9" height="15.0" fill="rgb(241,62,4)" rx="2" ry="2" />
<text  x="960.78" y="767.5" ></text>
</g>
<g >
<title>cling::MetaSema::actOnLCommand (2 samples, 0.15%)</title><rect x="1111.7" y="885" width="1.8" height="15.0" fill="rgb(227,229,51)" rx="2" ry="2" />
<text  x="1114.69" y="895.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentNameType (1 samples, 0.08%)</title><rect x="1085.6" y="741" width="0.9" height="15.0" fill="rgb(239,11,5)" rx="2" ry="2" />
<text  x="1088.59" y="751.5" ></text>
</g>
<g >
<title>clang::CFG::buildCFG (1 samples, 0.08%)</title><rect x="849.8" y="613" width="0.9" height="15.0" fill="rgb(230,55,17)" rx="2" ry="2" />
<text  x="852.77" y="623.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::GetExternalCXXBaseSpecifiers (1 samples, 0.08%)</title><rect x="1066.7" y="821" width="0.9" height="15.0" fill="rgb(227,6,20)" rx="2" ry="2" />
<text  x="1069.69" y="831.5" ></text>
</g>
<g >
<title>__dlopen_check (1 samples, 0.08%)</title><rect x="839.0" y="837" width="0.9" height="15.0" fill="rgb(240,13,39)" rx="2" ry="2" />
<text  x="841.97" y="847.5" ></text>
</g>
<g >
<title>TDirectoryFile::GetObjectChecked (1 samples, 0.08%)</title><rect x="1118.9" y="805" width="0.9" height="15.0" fill="rgb(244,206,34)" rx="2" ry="2" />
<text  x="1121.89" y="815.5" ></text>
</g>
<g >
<title>clang::Sema::SubstBaseSpecifiers (1 samples, 0.08%)</title><rect x="1086.5" y="949" width="0.9" height="15.0" fill="rgb(236,47,22)" rx="2" ry="2" />
<text  x="1089.49" y="959.5" ></text>
</g>
<g >
<title>llvm::PassRegistry::getPassInfo (3 samples, 0.23%)</title><rect x="877.7" y="581" width="2.7" height="15.0" fill="rgb(217,102,5)" rx="2" ry="2" />
<text  x="880.67" y="591.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformParenExpr (1 samples, 0.08%)</title><rect x="1087.4" y="629" width="0.9" height="15.0" fill="rgb(235,151,29)" rx="2" ry="2" />
<text  x="1090.39" y="639.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="445.6" y="741" width="0.9" height="15.0" fill="rgb(239,181,21)" rx="2" ry="2" />
<text  x="448.64" y="751.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddDecl (1 samples, 0.08%)</title><rect x="1064.9" y="677" width="0.9" height="15.0" fill="rgb(215,4,20)" rx="2" ry="2" />
<text  x="1067.89" y="687.5" ></text>
</g>
<g >
<title>llvm::AttributeList::addAttributes (1 samples, 0.08%)</title><rect x="1042.4" y="757" width="0.9" height="15.0" fill="rgb(227,71,26)" rx="2" ry="2" />
<text  x="1045.39" y="767.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformNestedNameSpecifierLoc (2 samples, 0.15%)</title><rect x="1094.6" y="757" width="1.8" height="15.0" fill="rgb(210,189,50)" rx="2" ry="2" />
<text  x="1097.59" y="767.5" ></text>
</g>
<g >
<title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::ApplyUpdates (1 samples, 0.08%)</title><rect x="851.6" y="661" width="0.9" height="15.0" fill="rgb(248,129,39)" rx="2" ry="2" />
<text  x="854.57" y="671.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::runOnMachineFunction (3 samples, 0.23%)</title><rect x="1127.0" y="837" width="2.7" height="15.0" fill="rgb(216,93,45)" rx="2" ry="2" />
<text  x="1129.99" y="847.5" ></text>
</g>
<g >
<title>clang::Sema::SubstParmVarDecl (1 samples, 0.08%)</title><rect x="1092.8" y="645" width="0.9" height="15.0" fill="rgb(251,87,43)" rx="2" ry="2" />
<text  x="1095.79" y="655.5" ></text>
</g>
<g >
<title>GetClassSharedLibsForModule (1 samples, 0.08%)</title><rect x="1098.2" y="629" width="0.9" height="15.0" fill="rgb(231,220,1)" rx="2" ry="2" />
<text  x="1101.19" y="639.5" ></text>
</g>
<g >
<title>clang::AnalysisDeclContext::getCFG (1 samples, 0.08%)</title><rect x="849.8" y="629" width="0.9" height="15.0" fill="rgb(233,213,48)" rx="2" ry="2" />
<text  x="852.77" y="639.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (1 samples, 0.08%)</title><rect x="709.4" y="533" width="0.9" height="15.0" fill="rgb(224,228,22)" rx="2" ry="2" />
<text  x="712.36" y="543.5" ></text>
</g>
<g >
<title>clang::Sema::GatherArgumentsForCall (2 samples, 0.15%)</title><rect x="1067.6" y="933" width="1.8" height="15.0" fill="rgb(228,69,8)" rx="2" ry="2" />
<text  x="1070.59" y="943.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition (3 samples, 0.23%)</title><rect x="1078.4" y="853" width="2.7" height="15.0" fill="rgb(244,21,54)" rx="2" ry="2" />
<text  x="1081.39" y="863.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXConstructorCall (1 samples, 0.08%)</title><rect x="1091.0" y="773" width="0.9" height="15.0" fill="rgb(227,132,36)" rx="2" ry="2" />
<text  x="1093.99" y="783.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::~IncrementalExecutor (1 samples, 0.08%)</title><rect x="858.8" y="757" width="0.9" height="15.0" fill="rgb(244,9,49)" rx="2" ry="2" />
<text  x="861.77" y="767.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.08%)</title><rect x="1079.3" y="741" width="0.9" height="15.0" fill="rgb(207,198,30)" rx="2" ry="2" />
<text  x="1082.29" y="751.5" ></text>
</g>
<g >
<title>llvm::DAGTypeLegalizer::run (1 samples, 0.08%)</title><rect x="1136.9" y="677" width="0.9" height="15.0" fill="rgb(232,111,49)" rx="2" ry="2" />
<text  x="1139.90" y="687.5" ></text>
</g>
<g >
<title>addPassesToGenerateCode (1 samples, 0.08%)</title><rect x="675.2" y="597" width="0.9" height="15.0" fill="rgb(248,151,2)" rx="2" ry="2" />
<text  x="678.16" y="607.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1159.4" y="693" width="0.9" height="15.0" fill="rgb(226,103,41)" rx="2" ry="2" />
<text  x="1162.40" y="703.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.23%)</title><rect x="19.0" y="245" width="2.7" height="15.0" fill="rgb(219,98,32)" rx="2" ry="2" />
<text  x="22.00" y="255.5" ></text>
</g>
<g >
<title>llvm::FindAvailablePtrLoadStore (1 samples, 0.08%)</title><rect x="221.5" y="677" width="0.9" height="15.0" fill="rgb(225,140,28)" rx="2" ry="2" />
<text  x="224.52" y="687.5" ></text>
</g>
<g >
<title>clang::Sema::SubstType (1 samples, 0.08%)</title><rect x="1087.4" y="901" width="0.9" height="15.0" fill="rgb(232,142,7)" rx="2" ry="2" />
<text  x="1090.39" y="911.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::CompleteRedeclChain (1 samples, 0.08%)</title><rect x="1062.2" y="741" width="0.9" height="15.0" fill="rgb(250,125,21)" rx="2" ry="2" />
<text  x="1065.19" y="751.5" ></text>
</g>
<g >
<title>clang::Sema::BuildQualifiedDeclarationNameExpr (1 samples, 0.08%)</title><rect x="673.4" y="661" width="0.9" height="15.0" fill="rgb(214,100,6)" rx="2" ry="2" />
<text  x="676.36" y="671.5" ></text>
</g>
<g >
<title>clang::Sema::ActOnEndOfTranslationUnit (1 samples, 0.08%)</title><rect x="1111.7" y="789" width="0.9" height="15.0" fill="rgb(232,65,27)" rx="2" ry="2" />
<text  x="1114.69" y="799.5" ></text>
</g>
<g >
<title>clang::TemplateArgumentList::ComputeODRHash (1 samples, 0.08%)</title><rect x="1058.6" y="677" width="0.9" height="15.0" fill="rgb(253,164,49)" rx="2" ry="2" />
<text  x="1061.59" y="687.5" ></text>
</g>
<g >
<title>llvm::CallGraphWrapperPass::runOnModule (1 samples, 0.08%)</title><rect x="866.0" y="629" width="0.9" height="15.0" fill="rgb(233,103,42)" rx="2" ry="2" />
<text  x="868.97" y="639.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitFunctionTemplateDecl (1 samples, 0.08%)</title><rect x="1111.7" y="517" width="0.9" height="15.0" fill="rgb(223,210,22)" rx="2" ry="2" />
<text  x="1114.69" y="527.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.08%)</title><rect x="1118.9" y="261" width="0.9" height="15.0" fill="rgb(250,8,0)" rx="2" ry="2" />
<text  x="1121.89" y="271.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="995.6" y="789" width="0.9" height="15.0" fill="rgb(253,145,29)" rx="2" ry="2" />
<text  x="998.58" y="799.5" ></text>
</g>
<g >
<title>cling::Interpreter::executeTransaction (1 samples, 0.08%)</title><rect x="1108.1" y="885" width="0.9" height="15.0" fill="rgb(222,144,22)" rx="2" ry="2" />
<text  x="1111.09" y="895.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::runStaticInitializersOnce (1 samples, 0.08%)</title><rect x="856.1" y="629" width="0.9" height="15.0" fill="rgb(211,59,41)" rx="2" ry="2" />
<text  x="859.07" y="639.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.08%)</title><rect x="820.1" y="613" width="0.9" height="15.0" fill="rgb(250,219,36)" rx="2" ry="2" />
<text  x="823.07" y="623.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.08%)</title><rect x="1015.4" y="373" width="0.9" height="15.0" fill="rgb(231,146,34)" rx="2" ry="2" />
<text  x="1018.39" y="383.5" ></text>
</g>
<g >
<title>clang::RedeclarableTemplateDecl::findSpecializationImpl&lt;clang::ClassTemplateSpecializationDecl&gt; (1 samples, 0.08%)</title><rect x="1072.1" y="741" width="0.9" height="15.0" fill="rgb(241,162,31)" rx="2" ry="2" />
<text  x="1075.09" y="751.5" ></text>
</g>
<g >
<title>llvm::orc::lookupWithLegacyFn&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}::operator()(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;) const::{lambda(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)#1}&gt; (1 samples, 0.08%)</title><rect x="1110.8" y="757" width="0.9" height="15.0" fill="rgb(206,22,48)" rx="2" ry="2" />
<text  x="1113.79" y="767.5" ></text>
</g>
<g >
<title>llvm::ScheduleDAGSDNodes::BuildSchedGraph (1 samples, 0.08%)</title><rect x="1110.8" y="597" width="0.9" height="15.0" fill="rgb(208,163,23)" rx="2" ry="2" />
<text  x="1113.79" y="607.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl (1 samples, 0.08%)</title><rect x="1092.8" y="885" width="0.9" height="15.0" fill="rgb(253,37,47)" rx="2" ry="2" />
<text  x="1095.79" y="895.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitDeclStmt (1 samples, 0.08%)</title><rect x="1023.5" y="853" width="0.9" height="15.0" fill="rgb(218,53,33)" rx="2" ry="2" />
<text  x="1026.49" y="863.5" ></text>
</g>
<g >
<title>llvm::BasicBlock::~BasicBlock (1 samples, 0.08%)</title><rect x="859.7" y="661" width="0.9" height="15.0" fill="rgb(245,138,1)" rx="2" ry="2" />
<text  x="862.67" y="671.5" ></text>
</g>
<g >
<title>llvm::hashing::detail::hash_combine_range_impl&lt;unsigned int const&gt; (1 samples, 0.08%)</title><rect x="1055.9" y="629" width="0.9" height="15.0" fill="rgb(217,116,36)" rx="2" ry="2" />
<text  x="1058.89" y="639.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1074.8" y="421" width="0.9" height="15.0" fill="rgb(216,127,53)" rx="2" ry="2" />
<text  x="1077.79" y="431.5" ></text>
</g>
<g >
<title>arrangeLLVMFunctionInfo (1 samples, 0.08%)</title><rect x="1013.6" y="805" width="0.9" height="15.0" fill="rgb(208,80,2)" rx="2" ry="2" />
<text  x="1016.59" y="815.5" ></text>
</g>
<g >
<title>llvm::TargetLibraryInfoImpl::getLibFunc (1 samples, 0.08%)</title><rect x="805.7" y="581" width="0.9" height="15.0" fill="rgb(225,98,1)" rx="2" ry="2" />
<text  x="808.67" y="591.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertType (1 samples, 0.08%)</title><rect x="1048.7" y="549" width="0.9" height="15.0" fill="rgb(234,27,40)" rx="2" ry="2" />
<text  x="1051.69" y="559.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::commitTransaction (27 samples, 2.06%)</title><rect x="214.3" y="837" width="24.3" height="15.0" fill="rgb(253,49,45)" rx="2" ry="2" />
<text  x="217.32" y="847.5" >c..</text>
</g>
<g >
<title>check_match (1 samples, 0.08%)</title><rect x="991.1" y="693" width="0.9" height="15.0" fill="rgb(214,8,29)" rx="2" ry="2" />
<text  x="994.08" y="703.5" ></text>
</g>
<g >
<title>llvm::MVT::getSizeInBits (1 samples, 0.08%)</title><rect x="844.4" y="485" width="0.9" height="15.0" fill="rgb(234,171,26)" rx="2" ry="2" />
<text  x="847.37" y="495.5" ></text>
</g>
<g >
<title>clang::Expr::EvaluateAsInitializer (1 samples, 0.08%)</title><rect x="1023.5" y="709" width="0.9" height="15.0" fill="rgb(239,44,27)" rx="2" ry="2" />
<text  x="1026.49" y="719.5" ></text>
</g>
<g >
<title>execute_command_internal (4 samples, 0.31%)</title><rect x="36.1" y="261" width="3.6" height="15.0" fill="rgb(221,42,48)" rx="2" ry="2" />
<text  x="39.10" y="271.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallee (1 samples, 0.08%)</title><rect x="1019.9" y="741" width="0.9" height="15.0" fill="rgb(222,18,24)" rx="2" ry="2" />
<text  x="1022.89" y="751.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;, void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;::LookupBucketFor&lt;void const*&gt; (1 samples, 0.08%)</title><rect x="253.0" y="709" width="0.9" height="15.0" fill="rgb(227,201,22)" rx="2" ry="2" />
<text  x="256.02" y="719.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1161.2" y="709" width="0.9" height="15.0" fill="rgb(236,61,48)" rx="2" ry="2" />
<text  x="1164.20" y="719.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1152.2" y="757" width="0.9" height="15.0" fill="rgb(226,66,0)" rx="2" ry="2" />
<text  x="1155.20" y="767.5" ></text>
</g>
<g >
<title>clang::OverloadCandidateSet::addCandidate (1 samples, 0.08%)</title><rect x="1069.4" y="901" width="0.9" height="15.0" fill="rgb(231,191,11)" rx="2" ry="2" />
<text  x="1072.39" y="911.5" ></text>
</g>
<g >
<title>llvm::StringMapImpl::RehashTable (1 samples, 0.08%)</title><rect x="674.3" y="613" width="0.9" height="15.0" fill="rgb(212,199,5)" rx="2" ry="2" />
<text  x="677.26" y="623.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType (1 samples, 0.08%)</title><rect x="673.4" y="741" width="0.9" height="15.0" fill="rgb(219,183,18)" rx="2" ry="2" />
<text  x="676.36" y="751.5" ></text>
</g>
<g >
<title>__run_exit_handlers (3 samples, 0.23%)</title><rect x="857.9" y="885" width="2.7" height="15.0" fill="rgb(221,202,46)" rx="2" ry="2" />
<text  x="860.87" y="895.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitAnyExprToTemp (1 samples, 0.08%)</title><rect x="1091.0" y="853" width="0.9" height="15.0" fill="rgb(230,202,1)" rx="2" ry="2" />
<text  x="1093.99" y="863.5" ></text>
</g>
<g >
<title>ROOT::RemoveClass (1 samples, 0.08%)</title><rect x="857.9" y="837" width="0.9" height="15.0" fill="rgb(232,44,33)" rx="2" ry="2" />
<text  x="860.87" y="847.5" ></text>
</g>
<g >
<title>clang::DeclContext::LoadLexicalDeclsFromExternalStorage (1 samples, 0.08%)</title><rect x="448.3" y="325" width="0.9" height="15.0" fill="rgb(230,103,35)" rx="2" ry="2" />
<text  x="451.34" y="335.5" ></text>
</g>
<g >
<title>close_buffered_fd (1 samples, 0.08%)</title><rect x="14.5" y="373" width="0.9" height="15.0" fill="rgb(244,212,48)" rx="2" ry="2" />
<text  x="17.50" y="383.5" ></text>
</g>
<g >
<title>reader_loop (27 samples, 2.06%)</title><rect x="10.9" y="901" width="24.3" height="15.0" fill="rgb(205,18,52)" rx="2" ry="2" />
<text  x="13.90" y="911.5" >r..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="24.4" y="181" width="0.9" height="15.0" fill="rgb(206,40,29)" rx="2" ry="2" />
<text  x="27.40" y="191.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (1 samples, 0.08%)</title><rect x="1109.9" y="757" width="0.9" height="15.0" fill="rgb(211,94,35)" rx="2" ry="2" />
<text  x="1112.89" y="767.5" ></text>
</g>
<g >
<title>_dl_receive_error (1 samples, 0.08%)</title><rect x="10.0" y="885" width="0.9" height="15.0" fill="rgb(232,205,23)" rx="2" ry="2" />
<text  x="13.00" y="895.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::runOnMachineFunction (1 samples, 0.08%)</title><rect x="1110.8" y="645" width="0.9" height="15.0" fill="rgb(244,183,10)" rx="2" ry="2" />
<text  x="1113.79" y="655.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::commitTransaction (35 samples, 2.67%)</title><rect x="800.3" y="757" width="31.5" height="15.0" fill="rgb(205,66,53)" rx="2" ry="2" />
<text  x="803.27" y="767.5" >cl..</text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentScopeDeclRefExpr (1 samples, 0.08%)</title><rect x="1065.8" y="757" width="0.9" height="15.0" fill="rgb(248,90,8)" rx="2" ry="2" />
<text  x="1068.79" y="767.5" ></text>
</g>
<g >
<title>clang::DeclContext::lookup (1 samples, 0.08%)</title><rect x="1018.1" y="549" width="0.9" height="15.0" fill="rgb(221,57,1)" rx="2" ry="2" />
<text  x="1021.09" y="559.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (1 samples, 0.08%)</title><rect x="200.8" y="869" width="0.9" height="15.0" fill="rgb(236,73,34)" rx="2" ry="2" />
<text  x="203.82" y="879.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::runOnMachineFunction (1 samples, 0.08%)</title><rect x="1119.8" y="789" width="0.9" height="15.0" fill="rgb(245,6,42)" rx="2" ry="2" />
<text  x="1122.79" y="799.5" ></text>
</g>
<g >
<title>clang::Sema::PerformPendingInstantiations (2 samples, 0.15%)</title><rect x="798.5" y="661" width="1.8" height="15.0" fill="rgb(206,104,3)" rx="2" ry="2" />
<text  x="801.47" y="671.5" ></text>
</g>
<g >
<title>_dl_relocate_object (4 samples, 0.31%)</title><rect x="1148.6" y="885" width="3.6" height="15.0" fill="rgb(235,92,52)" rx="2" ry="2" />
<text  x="1151.60" y="895.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1162.1" y="805" width="0.9" height="15.0" fill="rgb(215,215,52)" rx="2" ry="2" />
<text  x="1165.10" y="815.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformCallExpr (1 samples, 0.08%)</title><rect x="1096.4" y="933" width="0.9" height="15.0" fill="rgb(221,104,1)" rx="2" ry="2" />
<text  x="1099.39" y="943.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.08%)</title><rect x="1075.7" y="885" width="0.9" height="15.0" fill="rgb(208,121,15)" rx="2" ry="2" />
<text  x="1078.69" y="895.5" ></text>
</g>
<g >
<title>clang::Sema::SubstType (1 samples, 0.08%)</title><rect x="1075.7" y="901" width="0.9" height="15.0" fill="rgb(209,211,15)" rx="2" ry="2" />
<text  x="1078.69" y="911.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateArgument (1 samples, 0.08%)</title><rect x="673.4" y="725" width="0.9" height="15.0" fill="rgb(233,203,15)" rx="2" ry="2" />
<text  x="676.36" y="735.5" ></text>
</g>
<g >
<title>clang::Parser::ParsePostfixExpressionSuffix (1 samples, 0.08%)</title><rect x="1052.3" y="869" width="0.9" height="15.0" fill="rgb(226,53,36)" rx="2" ry="2" />
<text  x="1055.29" y="879.5" ></text>
</g>
<g >
<title>TryConstructorInitialization (1 samples, 0.08%)</title><rect x="1059.5" y="917" width="0.9" height="15.0" fill="rgb(249,186,44)" rx="2" ry="2" />
<text  x="1062.49" y="927.5" ></text>
</g>
<g >
<title>llvm::AttrBuilder::addAttribute (1 samples, 0.08%)</title><rect x="1036.1" y="581" width="0.9" height="15.0" fill="rgb(208,78,26)" rx="2" ry="2" />
<text  x="1039.09" y="591.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1074.8" y="533" width="0.9" height="15.0" fill="rgb(238,27,15)" rx="2" ry="2" />
<text  x="1077.79" y="543.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="33.4" y="485" width="0.9" height="15.0" fill="rgb(227,161,14)" rx="2" ry="2" />
<text  x="36.40" y="495.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="24.4" y="229" width="0.9" height="15.0" fill="rgb(229,29,17)" rx="2" ry="2" />
<text  x="27.40" y="239.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl (1 samples, 0.08%)</title><rect x="1093.7" y="677" width="0.9" height="15.0" fill="rgb(250,14,19)" rx="2" ry="2" />
<text  x="1096.69" y="687.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddTemplateArgument (1 samples, 0.08%)</title><rect x="1097.3" y="613" width="0.9" height="15.0" fill="rgb(220,153,50)" rx="2" ry="2" />
<text  x="1100.29" y="623.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitTypedefNameDecl (1 samples, 0.08%)</title><rect x="1009.1" y="549" width="0.9" height="15.0" fill="rgb(226,181,35)" rx="2" ry="2" />
<text  x="1012.08" y="559.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertTypeForMem (1 samples, 0.08%)</title><rect x="1049.6" y="645" width="0.9" height="15.0" fill="rgb(220,192,28)" rx="2" ry="2" />
<text  x="1052.59" y="655.5" ></text>
</g>
<g >
<title>clang::Sema::PerformPendingInstantiations (1 samples, 0.08%)</title><rect x="1054.1" y="917" width="0.9" height="15.0" fill="rgb(220,126,35)" rx="2" ry="2" />
<text  x="1057.09" y="927.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (1 samples, 0.08%)</title><rect x="1038.8" y="597" width="0.9" height="15.0" fill="rgb(227,29,8)" rx="2" ry="2" />
<text  x="1041.79" y="607.5" ></text>
</g>
<g >
<title>llvm::MachineDominatorTree::runOnMachineFunction (2 samples, 0.15%)</title><rect x="243.1" y="725" width="1.8" height="15.0" fill="rgb(219,125,45)" rx="2" ry="2" />
<text  x="246.12" y="735.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddTemplateArgument (1 samples, 0.08%)</title><rect x="1072.1" y="693" width="0.9" height="15.0" fill="rgb(238,30,51)" rx="2" ry="2" />
<text  x="1075.09" y="703.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (3 samples, 0.23%)</title><rect x="1033.4" y="661" width="2.7" height="15.0" fill="rgb(208,26,37)" rx="2" ry="2" />
<text  x="1036.39" y="671.5" ></text>
</g>
<g >
<title>TCling::ProcessLine (7 samples, 0.53%)</title><rect x="831.8" y="885" width="6.3" height="15.0" fill="rgb(207,114,29)" rx="2" ry="2" />
<text  x="834.77" y="895.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_get_insert_hint_unique_pos (1 samples, 0.08%)</title><rect x="1036.1" y="549" width="0.9" height="15.0" fill="rgb(216,120,20)" rx="2" ry="2" />
<text  x="1039.09" y="559.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass (1 samples, 0.08%)</title><rect x="1064.0" y="773" width="0.9" height="15.0" fill="rgb(235,186,22)" rx="2" ry="2" />
<text  x="1066.99" y="783.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertType (1 samples, 0.08%)</title><rect x="1048.7" y="917" width="0.9" height="15.0" fill="rgb(243,136,17)" rx="2" ry="2" />
<text  x="1051.69" y="927.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::getAddExpr (1 samples, 0.08%)</title><rect x="672.5" y="933" width="0.9" height="15.0" fill="rgb(235,180,52)" rx="2" ry="2" />
<text  x="675.46" y="943.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke (1 samples, 0.08%)</title><rect x="202.6" y="693" width="0.9" height="15.0" fill="rgb(250,209,34)" rx="2" ry="2" />
<text  x="205.62" y="703.5" ></text>
</g>
<g >
<title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::MachineBasicBlock, false&gt; &gt;::runDFS&lt;false, bool (*)(llvm::MachineBasicBlock*, llvm::MachineBasicBlock*)&gt; (2 samples, 0.15%)</title><rect x="243.1" y="693" width="1.8" height="15.0" fill="rgb(250,227,23)" rx="2" ry="2" />
<text  x="246.12" y="703.5" ></text>
</g>
<g >
<title>llvm::BranchProbabilityInfo::calculate (2 samples, 0.15%)</title><rect x="902.9" y="581" width="1.8" height="15.0" fill="rgb(237,162,53)" rx="2" ry="2" />
<text  x="905.88" y="591.5" ></text>
</g>
<g >
<title>llvm::InstructionCombiningPass::runOnFunction (2 samples, 0.15%)</title><rect x="873.2" y="613" width="1.8" height="15.0" fill="rgb(217,205,16)" rx="2" ry="2" />
<text  x="876.17" y="623.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::computeExitLimitFromCondCached (1 samples, 0.08%)</title><rect x="1109.9" y="629" width="0.9" height="15.0" fill="rgb(215,191,10)" rx="2" ry="2" />
<text  x="1112.89" y="639.5" ></text>
</g>
<g >
<title>clang::Sema::DeduceTemplateArguments (1 samples, 0.08%)</title><rect x="1055.9" y="933" width="0.9" height="15.0" fill="rgb(219,153,6)" rx="2" ry="2" />
<text  x="1058.89" y="943.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="949.7" y="741" width="0.9" height="15.0" fill="rgb(211,35,21)" rx="2" ry="2" />
<text  x="952.68" y="751.5" ></text>
</g>
<g >
<title>TStreamerInfo::Streamer (1 samples, 0.08%)</title><rect x="448.3" y="709" width="0.9" height="15.0" fill="rgb(216,121,14)" rx="2" ry="2" />
<text  x="451.34" y="719.5" ></text>
</g>
<g >
<title>__static_initialization_and_destruction_0 (6 samples, 0.46%)</title><rect x="1001.9" y="885" width="5.4" height="15.0" fill="rgb(250,108,30)" rx="2" ry="2" />
<text  x="1004.88" y="895.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition (1 samples, 0.08%)</title><rect x="1039.7" y="773" width="0.9" height="15.0" fill="rgb(227,85,53)" rx="2" ry="2" />
<text  x="1042.69" y="783.5" ></text>
</g>
<g >
<title>clang::Sema::ActOnEndOfTranslationUnitFragment (1 samples, 0.08%)</title><rect x="1054.1" y="933" width="0.9" height="15.0" fill="rgb(229,40,16)" rx="2" ry="2" />
<text  x="1057.09" y="943.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType (1 samples, 0.08%)</title><rect x="1055.9" y="725" width="0.9" height="15.0" fill="rgb(222,141,31)" rx="2" ry="2" />
<text  x="1058.89" y="735.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="939.8" y="645" width="0.9" height="15.0" fill="rgb(208,135,17)" rx="2" ry="2" />
<text  x="942.78" y="655.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitRedeclarableTemplateDecl (1 samples, 0.08%)</title><rect x="1071.2" y="789" width="0.9" height="15.0" fill="rgb(217,217,54)" rx="2" ry="2" />
<text  x="1074.19" y="799.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitTypedefNameDecl (1 samples, 0.08%)</title><rect x="1083.8" y="661" width="0.9" height="15.0" fill="rgb(236,228,35)" rx="2" ry="2" />
<text  x="1086.79" y="671.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnModule (77 samples, 5.87%)</title><rect x="677.9" y="597" width="69.3" height="15.0" fill="rgb(243,79,36)" rx="2" ry="2" />
<text  x="680.86" y="607.5" >llvm::F..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="931.7" y="645" width="0.9" height="15.0" fill="rgb(218,200,15)" rx="2" ry="2" />
<text  x="934.68" y="655.5" ></text>
</g>
<g >
<title>TCling::UpdateClassInfoWithDecl (1 samples, 0.08%)</title><rect x="237.7" y="741" width="0.9" height="15.0" fill="rgb(240,113,44)" rx="2" ry="2" />
<text  x="240.72" y="751.5" ></text>
</g>
<g >
<title>clang::CXXRecordDecl::setBases (1 samples, 0.08%)</title><rect x="1073.0" y="613" width="0.9" height="15.0" fill="rgb(213,212,49)" rx="2" ry="2" />
<text  x="1075.99" y="623.5" ></text>
</g>
<g >
<title>llvm::ConstantFoldTerminator (1 samples, 0.08%)</title><rect x="821.0" y="645" width="0.9" height="15.0" fill="rgb(221,154,26)" rx="2" ry="2" />
<text  x="823.97" y="655.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteDeclContext (1 samples, 0.08%)</title><rect x="1089.2" y="837" width="0.9" height="15.0" fill="rgb(224,180,2)" rx="2" ry="2" />
<text  x="1092.19" y="847.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.15%)</title><rect x="1139.6" y="885" width="1.8" height="15.0" fill="rgb(214,184,15)" rx="2" ry="2" />
<text  x="1142.60" y="895.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_erase (1 samples, 0.08%)</title><rect x="1020.8" y="661" width="0.9" height="15.0" fill="rgb(216,37,14)" rx="2" ry="2" />
<text  x="1023.79" y="671.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;std::add_pointer, (anonymous namespace)::ScalarExprEmitter, llvm::Value*&gt;::Visit (1 samples, 0.08%)</title><rect x="1091.9" y="709" width="0.9" height="15.0" fill="rgb(245,70,52)" rx="2" ry="2" />
<text  x="1094.89" y="719.5" ></text>
</g>
<g >
<title>clang::Sema::PerformPendingInstantiations (2 samples, 0.15%)</title><rect x="1083.8" y="949" width="1.8" height="15.0" fill="rgb(219,110,40)" rx="2" ry="2" />
<text  x="1086.79" y="959.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::RebuildDependentNameType (1 samples, 0.08%)</title><rect x="1089.2" y="869" width="0.9" height="15.0" fill="rgb(232,186,34)" rx="2" ry="2" />
<text  x="1092.19" y="879.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition (1 samples, 0.08%)</title><rect x="1054.1" y="805" width="0.9" height="15.0" fill="rgb(252,71,9)" rx="2" ry="2" />
<text  x="1057.09" y="815.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="948.8" y="725" width="0.9" height="15.0" fill="rgb(219,10,48)" rx="2" ry="2" />
<text  x="951.78" y="735.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnModule (2 samples, 0.15%)</title><rect x="212.5" y="789" width="1.8" height="15.0" fill="rgb(215,211,3)" rx="2" ry="2" />
<text  x="215.52" y="799.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.23%)</title><rect x="11.8" y="325" width="2.7" height="15.0" fill="rgb(220,75,27)" rx="2" ry="2" />
<text  x="14.80" y="335.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateArgument (1 samples, 0.08%)</title><rect x="1089.2" y="693" width="0.9" height="15.0" fill="rgb(206,90,48)" rx="2" ry="2" />
<text  x="1092.19" y="703.5" ></text>
</g>
<g >
<title>TCling::UpdateListsOnCommitted (1 samples, 0.08%)</title><rect x="928.1" y="661" width="0.9" height="15.0" fill="rgb(219,34,19)" rx="2" ry="2" />
<text  x="931.08" y="671.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformNestedNameSpecifierLoc (1 samples, 0.08%)</title><rect x="1087.4" y="581" width="0.9" height="15.0" fill="rgb(225,69,1)" rx="2" ry="2" />
<text  x="1090.39" y="591.5" ></text>
</g>
<g >
<title>execute_command_internal (4 samples, 0.31%)</title><rect x="36.1" y="709" width="3.6" height="15.0" fill="rgb(212,36,3)" rx="2" ry="2" />
<text  x="39.10" y="719.5" ></text>
</g>
<g >
<title>cling::Interpreter::executeTransaction (1 samples, 0.08%)</title><rect x="838.1" y="645" width="0.9" height="15.0" fill="rgb(243,135,18)" rx="2" ry="2" />
<text  x="841.07" y="655.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.08%)</title><rect x="1037.9" y="581" width="0.9" height="15.0" fill="rgb(235,116,52)" rx="2" ry="2" />
<text  x="1040.89" y="591.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTemplateArgumentList (1 samples, 0.08%)</title><rect x="1064.9" y="933" width="0.9" height="15.0" fill="rgb(251,93,14)" rx="2" ry="2" />
<text  x="1067.89" y="943.5" ></text>
</g>
<g >
<title>llvm::MachineInstr::copyImplicitOps (1 samples, 0.08%)</title><rect x="697.7" y="549" width="0.9" height="15.0" fill="rgb(207,189,28)" rx="2" ry="2" />
<text  x="700.66" y="559.5" ></text>
</g>
<g >
<title>llvm::LazyBranchProbabilityInfoPass::runOnFunction (1 samples, 0.08%)</title><rect x="911.0" y="597" width="0.9" height="15.0" fill="rgb(216,149,5)" rx="2" ry="2" />
<text  x="913.98" y="607.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass (1 samples, 0.08%)</title><rect x="1072.1" y="853" width="0.9" height="15.0" fill="rgb(208,131,37)" rx="2" ry="2" />
<text  x="1075.09" y="863.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="990.2" y="677" width="0.9" height="15.0" fill="rgb(214,98,20)" rx="2" ry="2" />
<text  x="993.18" y="687.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.23%)</title><rect x="37.0" y="37" width="2.7" height="15.0" fill="rgb(252,188,15)" rx="2" ry="2" />
<text  x="40.00" y="47.5" ></text>
</g>
<g >
<title>llvm::BitstreamCursor::readRecord (1 samples, 0.08%)</title><rect x="1007.3" y="709" width="0.9" height="15.0" fill="rgb(222,28,8)" rx="2" ry="2" />
<text  x="1010.28" y="719.5" ></text>
</g>
<g >
<title>clang::Sema::ActOnEndOfTranslationUnit (2 samples, 0.15%)</title><rect x="798.5" y="725" width="1.8" height="15.0" fill="rgb(227,108,6)" rx="2" ry="2" />
<text  x="801.47" y="735.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1182.8" y="709" width="0.9" height="15.0" fill="rgb(237,95,20)" rx="2" ry="2" />
<text  x="1185.80" y="719.5" ></text>
</g>
<g >
<title>clang::LinkageComputer::getLVForNamespaceScopeDecl (1 samples, 0.08%)</title><rect x="1016.3" y="501" width="0.9" height="15.0" fill="rgb(244,123,37)" rx="2" ry="2" />
<text  x="1019.29" y="511.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="990.2" y="661" width="0.9" height="15.0" fill="rgb(248,3,41)" rx="2" ry="2" />
<text  x="993.18" y="671.5" ></text>
</g>
<g >
<title>llvm::BlockFrequencyInfoWrapperPass::runOnFunction (1 samples, 0.08%)</title><rect x="238.6" y="741" width="0.9" height="15.0" fill="rgb(208,9,42)" rx="2" ry="2" />
<text  x="241.62" y="751.5" ></text>
</g>
<g >
<title>clang::VarDecl::getDefinition (1 samples, 0.08%)</title><rect x="1023.5" y="613" width="0.9" height="15.0" fill="rgb(235,21,11)" rx="2" ry="2" />
<text  x="1026.49" y="623.5" ></text>
</g>
<g >
<title>llvm::Value::getName (1 samples, 0.08%)</title><rect x="235.9" y="741" width="0.9" height="15.0" fill="rgb(254,191,19)" rx="2" ry="2" />
<text  x="238.92" y="751.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (3 samples, 0.23%)</title><rect x="1015.4" y="933" width="2.7" height="15.0" fill="rgb(249,28,14)" rx="2" ry="2" />
<text  x="1018.39" y="943.5" ></text>
</g>
<g >
<title>clang::Decl::getTranslationUnitDecl (1 samples, 0.08%)</title><rect x="1023.5" y="517" width="0.9" height="15.0" fill="rgb(224,205,40)" rx="2" ry="2" />
<text  x="1026.49" y="527.5" ></text>
</g>
<g >
<title>llvm::orc::JITSymbolResolverAdapter::lookup (1 samples, 0.08%)</title><rect x="1110.8" y="789" width="0.9" height="15.0" fill="rgb(224,105,30)" rx="2" ry="2" />
<text  x="1113.79" y="799.5" ></text>
</g>
<g >
<title>DeduceTemplateArgumentsFromCallArgument (1 samples, 0.08%)</title><rect x="1070.3" y="885" width="0.9" height="15.0" fill="rgb(227,20,3)" rx="2" ry="2" />
<text  x="1073.29" y="895.5" ></text>
</g>
<g >
<title>llvm::IRBuilderBase::SetInsertPoint (1 samples, 0.08%)</title><rect x="906.5" y="549" width="0.9" height="15.0" fill="rgb(212,113,25)" rx="2" ry="2" />
<text  x="909.48" y="559.5" ></text>
</g>
<g >
<title>clang::Parser::ParseCompoundStatementBody (1 samples, 0.08%)</title><rect x="1053.2" y="917" width="0.9" height="15.0" fill="rgb(222,49,43)" rx="2" ry="2" />
<text  x="1056.19" y="927.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.08%)</title><rect x="1085.6" y="773" width="0.9" height="15.0" fill="rgb(219,2,1)" rx="2" ry="2" />
<text  x="1088.59" y="783.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::getRangeRef (1 samples, 0.08%)</title><rect x="1129.7" y="661" width="0.9" height="15.0" fill="rgb(249,144,22)" rx="2" ry="2" />
<text  x="1132.69" y="671.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.08%)</title><rect x="928.1" y="517" width="0.9" height="15.0" fill="rgb(252,219,3)" rx="2" ry="2" />
<text  x="931.08" y="527.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (1 samples, 0.08%)</title><rect x="1072.1" y="901" width="0.9" height="15.0" fill="rgb(210,149,3)" rx="2" ry="2" />
<text  x="1075.09" y="911.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetTypeSourceInfo (1 samples, 0.08%)</title><rect x="1083.8" y="645" width="0.9" height="15.0" fill="rgb(212,204,32)" rx="2" ry="2" />
<text  x="1086.79" y="655.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::arrangeCXXMethodDeclaration (1 samples, 0.08%)</title><rect x="1013.6" y="837" width="0.9" height="15.0" fill="rgb(227,69,28)" rx="2" ry="2" />
<text  x="1016.59" y="847.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition (1 samples, 0.08%)</title><rect x="1054.1" y="837" width="0.9" height="15.0" fill="rgb(250,143,7)" rx="2" ry="2" />
<text  x="1057.09" y="847.5" ></text>
</g>
<g >
<title>clang::Decl::getASTContext (1 samples, 0.08%)</title><rect x="1023.5" y="533" width="0.9" height="15.0" fill="rgb(219,226,50)" rx="2" ry="2" />
<text  x="1026.49" y="543.5" ></text>
</g>
<g >
<title>cling::Interpreter::EvaluateInternal (5 samples, 0.38%)</title><rect x="1113.5" y="933" width="4.5" height="15.0" fill="rgb(250,161,28)" rx="2" ry="2" />
<text  x="1116.49" y="943.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.08%)</title><rect x="806.6" y="661" width="0.9" height="15.0" fill="rgb(225,88,0)" rx="2" ry="2" />
<text  x="809.57" y="671.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::freePass (3 samples, 0.23%)</title><rect x="716.6" y="549" width="2.7" height="15.0" fill="rgb(212,103,3)" rx="2" ry="2" />
<text  x="719.56" y="559.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXConstructorCall (1 samples, 0.08%)</title><rect x="1091.0" y="917" width="0.9" height="15.0" fill="rgb(243,4,35)" rx="2" ry="2" />
<text  x="1093.99" y="927.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.08%)</title><rect x="1081.1" y="757" width="0.9" height="15.0" fill="rgb(254,15,22)" rx="2" ry="2" />
<text  x="1084.09" y="767.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.08%)</title><rect x="35.2" y="277" width="0.9" height="15.0" fill="rgb(251,30,15)" rx="2" ry="2" />
<text  x="38.20" y="287.5" ></text>
</g>
<g >
<title>__dlopen_check (1 samples, 0.08%)</title><rect x="991.1" y="869" width="0.9" height="15.0" fill="rgb(225,95,39)" rx="2" ry="2" />
<text  x="994.08" y="879.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadTemplateArgument (1 samples, 0.08%)</title><rect x="1051.4" y="549" width="0.9" height="15.0" fill="rgb(223,112,10)" rx="2" ry="2" />
<text  x="1054.39" y="559.5" ></text>
</g>
<g >
<title>ROOT::Internal::TTreeReaderValueBase::ProxyReadTemplate&lt;&amp;ROOT::Detail::TBranchProxy::ReadNoParentNoBranchCountNoCollection&gt; (202 samples, 15.41%)</title><rect x="488.8" y="901" width="181.9" height="15.0" fill="rgb(226,48,39)" rx="2" ry="2" />
<text  x="491.84" y="911.5" >ROOT::Internal::TTreeRe..</text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::MachineBasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::MachineBasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::MachineBasicBlock&gt; &gt; &gt;, llvm::DenseMapInfo&lt;llvm::MachineBasicBlock*&gt;, llvm::detail::DenseMapPair&lt;llvm::MachineBasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::MachineBasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::MachineBasicBlock&gt; &gt; &gt; &gt; &gt;, llvm::MachineBasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::MachineBasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::MachineBasicBlock&gt; &gt; &gt;, llvm::DenseMapInfo&lt;llvm::MachineBasicBlock*&gt;, llvm::detail::DenseMapPair&lt;llvm::MachineBasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::MachineBasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::MachineBasicBlock&gt; &gt; &gt; &gt; &gt;::clear (1 samples, 0.08%)</title><rect x="704.0" y="517" width="0.9" height="15.0" fill="rgb(210,168,39)" rx="2" ry="2" />
<text  x="706.96" y="527.5" ></text>
</g>
<g >
<title>llvm::LoopInfoBase&lt;llvm::BasicBlock, llvm::Loop&gt;::analyze (1 samples, 0.08%)</title><rect x="231.4" y="725" width="0.9" height="15.0" fill="rgb(252,102,41)" rx="2" ry="2" />
<text  x="234.42" y="735.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke (1 samples, 0.08%)</title><rect x="854.3" y="661" width="0.9" height="15.0" fill="rgb(249,13,44)" rx="2" ry="2" />
<text  x="857.27" y="671.5" ></text>
</g>
<g >
<title>llvm::object::ELFObjectFile&lt;llvm::object::ELFType&lt;(llvm::support::endianness)1, true&gt; &gt;::moveSectionNext (2 samples, 0.15%)</title><rect x="771.5" y="533" width="1.8" height="15.0" fill="rgb(214,117,29)" rx="2" ry="2" />
<text  x="774.46" y="543.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetType (1 samples, 0.08%)</title><rect x="1010.9" y="901" width="0.9" height="15.0" fill="rgb(236,90,52)" rx="2" ry="2" />
<text  x="1013.88" y="911.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitReturnStmt (1 samples, 0.08%)</title><rect x="1040.6" y="709" width="0.9" height="15.0" fill="rgb(210,147,41)" rx="2" ry="2" />
<text  x="1043.59" y="719.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.15%)</title><rect x="1186.4" y="725" width="1.8" height="15.0" fill="rgb(242,49,9)" rx="2" ry="2" />
<text  x="1189.40" y="735.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitIgnoredExpr (1 samples, 0.08%)</title><rect x="1019.0" y="773" width="0.9" height="15.0" fill="rgb(219,4,26)" rx="2" ry="2" />
<text  x="1021.99" y="783.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.08%)</title><rect x="1089.2" y="661" width="0.9" height="15.0" fill="rgb(241,18,6)" rx="2" ry="2" />
<text  x="1092.19" y="671.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.08%)</title><rect x="1098.2" y="869" width="0.9" height="15.0" fill="rgb(231,102,54)" rx="2" ry="2" />
<text  x="1101.19" y="879.5" ></text>
</g>
<g >
<title>llvm::orc::SimpleCompiler::operator() (2 samples, 0.15%)</title><rect x="1125.2" y="949" width="1.8" height="15.0" fill="rgb(222,190,36)" rx="2" ry="2" />
<text  x="1128.19" y="959.5" ></text>
</g>
<g >
<title>clang::Decl::operator new (1 samples, 0.08%)</title><rect x="1085.6" y="645" width="0.9" height="15.0" fill="rgb(237,127,12)" rx="2" ry="2" />
<text  x="1088.59" y="655.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCompoundStmt (1 samples, 0.08%)</title><rect x="1019.0" y="821" width="0.9" height="15.0" fill="rgb(233,109,33)" rx="2" ry="2" />
<text  x="1021.99" y="831.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTemplateIdType (2 samples, 0.15%)</title><rect x="1064.9" y="949" width="1.8" height="15.0" fill="rgb(222,56,51)" rx="2" ry="2" />
<text  x="1067.89" y="959.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (1 samples, 0.08%)</title><rect x="200.8" y="917" width="0.9" height="15.0" fill="rgb(220,148,15)" rx="2" ry="2" />
<text  x="203.82" y="927.5" ></text>
</g>
<g >
<title>llvm::orc::JITSymbolResolverAdapter::lookup (5 samples, 0.38%)</title><rect x="1113.5" y="805" width="4.5" height="15.0" fill="rgb(235,116,19)" rx="2" ry="2" />
<text  x="1116.49" y="815.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="17.2" y="197" width="0.9" height="15.0" fill="rgb(218,144,19)" rx="2" ry="2" />
<text  x="20.20" y="207.5" ></text>
</g>
<g >
<title>TROOT::~TROOT (2 samples, 0.15%)</title><rect x="858.8" y="869" width="1.8" height="15.0" fill="rgb(222,82,33)" rx="2" ry="2" />
<text  x="861.77" y="879.5" ></text>
</g>
<g >
<title>cling::Interpreter::DeclareInternal (7 samples, 0.53%)</title><rect x="831.8" y="757" width="6.3" height="15.0" fill="rgb(252,151,30)" rx="2" ry="2" />
<text  x="834.77" y="767.5" ></text>
</g>
<g >
<title>clang::Parser::ParseOptionalCXXScopeSpecifier (1 samples, 0.08%)</title><rect x="1109.0" y="789" width="0.9" height="15.0" fill="rgb(215,80,52)" rx="2" ry="2" />
<text  x="1111.99" y="799.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1183.7" y="629" width="0.9" height="15.0" fill="rgb(253,110,50)" rx="2" ry="2" />
<text  x="1186.70" y="639.5" ></text>
</g>
<g >
<title>execute_command (27 samples, 2.06%)</title><rect x="10.9" y="773" width="24.3" height="15.0" fill="rgb(243,92,6)" rx="2" ry="2" />
<text  x="13.90" y="783.5" >e..</text>
</g>
<g >
<title>clang::Sema::SubstFunctionDeclType (3 samples, 0.23%)</title><rect x="1087.4" y="949" width="2.7" height="15.0" fill="rgb(207,147,39)" rx="2" ry="2" />
<text  x="1090.39" y="959.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;void const*, void const*, std::_Identity&lt;void const*&gt;, std::less&lt;void const*&gt;, std::allocator&lt;void const*&gt; &gt;::_M_erase (1 samples, 0.08%)</title><rect x="928.1" y="613" width="0.9" height="15.0" fill="rgb(229,87,53)" rx="2" ry="2" />
<text  x="931.08" y="623.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::runStaticInitializersOnce (1 samples, 0.08%)</title><rect x="1100.9" y="901" width="0.9" height="15.0" fill="rgb(225,39,12)" rx="2" ry="2" />
<text  x="1103.89" y="911.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGBuilder::visitInvoke (2 samples, 0.15%)</title><rect x="1123.4" y="901" width="1.8" height="15.0" fill="rgb(214,210,33)" rx="2" ry="2" />
<text  x="1126.39" y="911.5" ></text>
</g>
<g >
<title>clang::ASTContext::getLValueReferenceType (1 samples, 0.08%)</title><rect x="1092.8" y="549" width="0.9" height="15.0" fill="rgb(251,133,13)" rx="2" ry="2" />
<text  x="1095.79" y="559.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (1 samples, 0.08%)</title><rect x="1097.3" y="885" width="0.9" height="15.0" fill="rgb(219,226,20)" rx="2" ry="2" />
<text  x="1100.29" y="895.5" ></text>
</g>
<g >
<title>llvm::orc::SimpleCompiler::operator() (1 samples, 0.08%)</title><rect x="449.2" y="837" width="0.9" height="15.0" fill="rgb(249,73,49)" rx="2" ry="2" />
<text  x="452.24" y="847.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;void const*, void const*, std::_Identity&lt;void const*&gt;, std::less&lt;void const*&gt;, std::allocator&lt;void const*&gt; &gt;::_M_erase (1 samples, 0.08%)</title><rect x="928.1" y="485" width="0.9" height="15.0" fill="rgb(240,155,7)" rx="2" ry="2" />
<text  x="931.08" y="495.5" ></text>
</g>
<g >
<title>TApplication::ExecuteFile (76 samples, 5.80%)</title><rect x="860.6" y="885" width="68.4" height="15.0" fill="rgb(224,202,1)" rx="2" ry="2" />
<text  x="863.57" y="895.5" >TApplic..</text>
</g>
<g >
<title>do_lookup_x (1 samples, 0.08%)</title><rect x="200.8" y="853" width="0.9" height="15.0" fill="rgb(238,152,34)" rx="2" ry="2" />
<text  x="203.82" y="863.5" ></text>
</g>
<g >
<title>clang::ASTContext::GetGVALinkageForFunction (1 samples, 0.08%)</title><rect x="1035.2" y="549" width="0.9" height="15.0" fill="rgb(246,225,1)" rx="2" ry="2" />
<text  x="1038.19" y="559.5" ></text>
</g>
<g >
<title>llvm::X86TargetMachine::getSubtargetImpl (1 samples, 0.08%)</title><rect x="746.3" y="565" width="0.9" height="15.0" fill="rgb(221,190,1)" rx="2" ry="2" />
<text  x="749.26" y="575.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.08%)</title><rect x="867.8" y="581" width="0.9" height="15.0" fill="rgb(229,77,11)" rx="2" ry="2" />
<text  x="870.77" y="591.5" ></text>
</g>
<g >
<title>llvm::ValueHandleBase::RemoveFromUseList (1 samples, 0.08%)</title><rect x="882.2" y="565" width="0.9" height="15.0" fill="rgb(234,78,35)" rx="2" ry="2" />
<text  x="885.17" y="575.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::getSmallConstantTripCount (1 samples, 0.08%)</title><rect x="1109.9" y="709" width="0.9" height="15.0" fill="rgb(232,225,26)" rx="2" ry="2" />
<text  x="1112.89" y="719.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;, void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;::LookupBucketFor&lt;void const*&gt; (1 samples, 0.08%)</title><rect x="901.1" y="517" width="0.9" height="15.0" fill="rgb(217,161,8)" rx="2" ry="2" />
<text  x="904.08" y="527.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.08%)</title><rect x="1087.4" y="837" width="0.9" height="15.0" fill="rgb(208,126,25)" rx="2" ry="2" />
<text  x="1090.39" y="847.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::visitAllocSite (2 samples, 0.15%)</title><rect x="809.3" y="613" width="1.8" height="15.0" fill="rgb(247,155,21)" rx="2" ry="2" />
<text  x="812.27" y="623.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1147.7" y="917" width="0.9" height="15.0" fill="rgb(217,130,6)" rx="2" ry="2" />
<text  x="1150.70" y="927.5" ></text>
</g>
<g >
<title>cling::Interpreter::RunFunction (11 samples, 0.84%)</title><rect x="839.9" y="837" width="9.9" height="15.0" fill="rgb(247,110,48)" rx="2" ry="2" />
<text  x="842.87" y="847.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.08%)</title><rect x="953.3" y="821" width="0.9" height="15.0" fill="rgb(238,44,35)" rx="2" ry="2" />
<text  x="956.28" y="831.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl (1 samples, 0.08%)</title><rect x="1072.1" y="885" width="0.9" height="15.0" fill="rgb(216,8,33)" rx="2" ry="2" />
<text  x="1075.09" y="895.5" ></text>
</g>
<g >
<title>__GI_exit (1 samples, 0.08%)</title><rect x="17.2" y="309" width="0.9" height="15.0" fill="rgb(216,137,33)" rx="2" ry="2" />
<text  x="20.20" y="319.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit (1 samples, 0.08%)</title><rect x="1022.6" y="629" width="0.9" height="15.0" fill="rgb(212,186,12)" rx="2" ry="2" />
<text  x="1025.59" y="639.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitReferenceBindingToExpr (1 samples, 0.08%)</title><rect x="1091.9" y="821" width="0.9" height="15.0" fill="rgb(213,80,9)" rx="2" ry="2" />
<text  x="1094.89" y="831.5" ></text>
</g>
<g >
<title>__reclaim_stacks (1 samples, 0.08%)</title><rect x="1146.8" y="901" width="0.9" height="15.0" fill="rgb(207,49,2)" rx="2" ry="2" />
<text  x="1149.80" y="911.5" ></text>
</g>
<g >
<title>clang::TemplateDeclInstantiator::VisitCXXMethodDecl (1 samples, 0.08%)</title><rect x="1056.8" y="853" width="0.9" height="15.0" fill="rgb(237,178,23)" rx="2" ry="2" />
<text  x="1059.79" y="863.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddTemplateArgument (1 samples, 0.08%)</title><rect x="1048.7" y="373" width="0.9" height="15.0" fill="rgb(233,126,52)" rx="2" ry="2" />
<text  x="1051.69" y="383.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.15%)</title><rect x="997.4" y="757" width="1.8" height="15.0" fill="rgb(218,12,35)" rx="2" ry="2" />
<text  x="1000.38" y="767.5" ></text>
</g>
<g >
<title>execute_command (16 samples, 1.22%)</title><rect x="15.4" y="549" width="14.4" height="15.0" fill="rgb(235,96,38)" rx="2" ry="2" />
<text  x="18.40" y="559.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::computeExitLimitFromCondCached (1 samples, 0.08%)</title><rect x="1129.7" y="581" width="0.9" height="15.0" fill="rgb(217,32,46)" rx="2" ry="2" />
<text  x="1132.69" y="591.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::codegenCXXStructor (1 samples, 0.08%)</title><rect x="1043.3" y="821" width="0.9" height="15.0" fill="rgb(209,71,6)" rx="2" ry="2" />
<text  x="1046.29" y="831.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (3 samples, 0.23%)</title><rect x="1015.4" y="949" width="2.7" height="15.0" fill="rgb(213,203,21)" rx="2" ry="2" />
<text  x="1018.39" y="959.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1005.5" y="661" width="0.9" height="15.0" fill="rgb(220,178,38)" rx="2" ry="2" />
<text  x="1008.48" y="671.5" ></text>
</g>
<g >
<title>clang::Sema::ActOnFinishFunctionBody (1 samples, 0.08%)</title><rect x="799.4" y="629" width="0.9" height="15.0" fill="rgb(254,131,52)" rx="2" ry="2" />
<text  x="802.37" y="639.5" ></text>
</g>
<g >
<title>llvm::InstructionCombiningPass::runOnFunction (7 samples, 0.53%)</title><rect x="822.8" y="661" width="6.3" height="15.0" fill="rgb(232,2,20)" rx="2" ry="2" />
<text  x="825.77" y="671.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::runStaticInitializersOnce (75 samples, 5.72%)</title><rect x="860.6" y="661" width="67.5" height="15.0" fill="rgb(242,5,19)" rx="2" ry="2" />
<text  x="863.57" y="671.5" >cling::..</text>
</g>
<g >
<title>clang::ASTReader::loadPendingDeclChain (1 samples, 0.08%)</title><rect x="1111.7" y="581" width="0.9" height="15.0" fill="rgb(221,185,50)" rx="2" ry="2" />
<text  x="1114.69" y="591.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1005.5" y="629" width="0.9" height="15.0" fill="rgb(252,100,44)" rx="2" ry="2" />
<text  x="1008.48" y="639.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTSIInObjectScope (1 samples, 0.08%)</title><rect x="1064.9" y="821" width="0.9" height="15.0" fill="rgb(252,64,38)" rx="2" ry="2" />
<text  x="1067.89" y="831.5" ></text>
</g>
<g >
<title>llvm::AttributeSetNode::getAttribute (1 samples, 0.08%)</title><rect x="713.0" y="469" width="0.9" height="15.0" fill="rgb(233,25,51)" rx="2" ry="2" />
<text  x="715.96" y="479.5" ></text>
</g>
<g >
<title>llvm::SmallPtrSetImplBase::FindBucketFor (1 samples, 0.08%)</title><rect x="1110.8" y="549" width="0.9" height="15.0" fill="rgb(214,218,2)" rx="2" ry="2" />
<text  x="1113.79" y="559.5" ></text>
</g>
<g >
<title>TFile::Open (1 samples, 0.08%)</title><rect x="838.1" y="917" width="0.9" height="15.0" fill="rgb(226,229,24)" rx="2" ry="2" />
<text  x="841.07" y="927.5" ></text>
</g>
<g >
<title>execute_command_internal (4 samples, 0.31%)</title><rect x="36.1" y="149" width="3.6" height="15.0" fill="rgb(226,143,10)" rx="2" ry="2" />
<text  x="39.10" y="159.5" ></text>
</g>
<g >
<title>clang::ASTReader::readTypeRecord (1 samples, 0.08%)</title><rect x="1010.0" y="853" width="0.9" height="15.0" fill="rgb(230,216,18)" rx="2" ry="2" />
<text  x="1012.98" y="863.5" ></text>
</g>
<g >
<title>cling::Interpreter::RunFunction (5 samples, 0.38%)</title><rect x="1113.5" y="917" width="4.5" height="15.0" fill="rgb(249,134,23)" rx="2" ry="2" />
<text  x="1116.49" y="927.5" ></text>
</g>
<g >
<title>clang::DeclContext::lookup (1 samples, 0.08%)</title><rect x="1051.4" y="901" width="0.9" height="15.0" fill="rgb(236,185,14)" rx="2" ry="2" />
<text  x="1054.39" y="911.5" ></text>
</g>
<g >
<title>clang::Parser::ParseTemplateIdAfterTemplateName (1 samples, 0.08%)</title><rect x="1109.0" y="757" width="0.9" height="15.0" fill="rgb(251,32,32)" rx="2" ry="2" />
<text  x="1111.99" y="767.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddType (1 samples, 0.08%)</title><rect x="1064.9" y="597" width="0.9" height="15.0" fill="rgb(215,145,9)" rx="2" ry="2" />
<text  x="1067.89" y="607.5" ></text>
</g>
<g >
<title>inferAttrsFromFunctionBodies (2 samples, 0.15%)</title><rect x="802.1" y="693" width="1.8" height="15.0" fill="rgb(226,160,50)" rx="2" ry="2" />
<text  x="805.07" y="703.5" ></text>
</g>
<g >
<title>xrealloc (3 samples, 0.23%)</title><rect x="22.6" y="309" width="2.7" height="15.0" fill="rgb(242,12,34)" rx="2" ry="2" />
<text  x="25.60" y="319.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::computeExitLimitFromCondImpl (1 samples, 0.08%)</title><rect x="1129.7" y="565" width="0.9" height="15.0" fill="rgb(232,86,9)" rx="2" ry="2" />
<text  x="1132.69" y="575.5" ></text>
</g>
<g >
<title>R__unzipZLIB (1 samples, 0.08%)</title><rect x="446.5" y="821" width="0.9" height="15.0" fill="rgb(239,196,26)" rx="2" ry="2" />
<text  x="449.54" y="831.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::GetExternalDeclStmt (1 samples, 0.08%)</title><rect x="1111.7" y="645" width="0.9" height="15.0" fill="rgb(242,159,15)" rx="2" ry="2" />
<text  x="1114.69" y="655.5" ></text>
</g>
<g >
<title>llvm::orc::LambdaSymbolResolver&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt; const&amp;)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}&gt;::lookup (5 samples, 0.38%)</title><rect x="1102.7" y="805" width="4.5" height="15.0" fill="rgb(226,219,21)" rx="2" ry="2" />
<text  x="1105.69" y="815.5" ></text>
</g>
<g >
<title>cling::MetaSema::actOnLCommand (1 samples, 0.08%)</title><rect x="203.5" y="869" width="0.9" height="15.0" fill="rgb(206,171,52)" rx="2" ry="2" />
<text  x="206.52" y="879.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteDeclContext (1 samples, 0.08%)</title><rect x="1100.0" y="693" width="0.9" height="15.0" fill="rgb(234,28,2)" rx="2" ry="2" />
<text  x="1102.99" y="703.5" ></text>
</g>
<g >
<title>llvm::Function::addAttributes (1 samples, 0.08%)</title><rect x="1036.1" y="629" width="0.9" height="15.0" fill="rgb(220,213,14)" rx="2" ry="2" />
<text  x="1039.09" y="639.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGBuilder::visit (3 samples, 0.23%)</title><rect x="1122.5" y="917" width="2.7" height="15.0" fill="rgb(241,212,46)" rx="2" ry="2" />
<text  x="1125.49" y="927.5" ></text>
</g>
<g >
<title>llvm::object::ELFFile&lt;llvm::object::ELFType&lt;(llvm::support::endianness)1, true&gt; &gt;::getSectionName (1 samples, 0.08%)</title><rect x="750.8" y="533" width="0.9" height="15.0" fill="rgb(230,10,19)" rx="2" ry="2" />
<text  x="753.76" y="543.5" ></text>
</g>
<g >
<title>execute_command_internal (4 samples, 0.31%)</title><rect x="36.1" y="533" width="3.6" height="15.0" fill="rgb(247,170,44)" rx="2" ry="2" />
<text  x="39.10" y="543.5" ></text>
</g>
<g >
<title>llvm::LibCallSimplifier::optimizeCall (3 samples, 0.23%)</title><rect x="811.1" y="581" width="2.7" height="15.0" fill="rgb(228,25,53)" rx="2" ry="2" />
<text  x="814.07" y="591.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::Function const*, llvm::GlobalsAAResult::FunctionInfo, llvm::DenseMapInfo&lt;llvm::Function const*&gt;, llvm::detail::DenseMapPair&lt;llvm::Function const*, llvm::GlobalsAAResult::FunctionInfo&gt; &gt;, llvm::Function const*, llvm::GlobalsAAResult::FunctionInfo, llvm::DenseMapInfo&lt;llvm::Function const*&gt;, llvm::detail::DenseMapPair&lt;llvm::Function const*, llvm::GlobalsAAResult::FunctionInfo&gt; &gt;::LookupBucketFor&lt;llvm::Function const*&gt; (1 samples, 0.08%)</title><rect x="230.5" y="613" width="0.9" height="15.0" fill="rgb(223,157,15)" rx="2" ry="2" />
<text  x="233.52" y="623.5" ></text>
</g>
<g >
<title>TEnv::ReadFile (1 samples, 0.08%)</title><rect x="1001.9" y="789" width="0.9" height="15.0" fill="rgb(248,37,14)" rx="2" ry="2" />
<text  x="1004.88" y="799.5" ></text>
</g>
<g >
<title>cling::Interpreter::DeclareInternal (5 samples, 0.38%)</title><rect x="849.8" y="821" width="4.5" height="15.0" fill="rgb(230,19,21)" rx="2" ry="2" />
<text  x="852.77" y="831.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord (1 samples, 0.08%)</title><rect x="1009.1" y="597" width="0.9" height="15.0" fill="rgb(220,49,45)" rx="2" ry="2" />
<text  x="1012.08" y="607.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::SmallDenseMap&lt;void const*, llvm::ImmutablePass*, 8u, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::ImmutablePass*&gt; &gt;, void const*, llvm::ImmutablePass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::ImmutablePass*&gt; &gt;::LookupBucketFor&lt;void const*&gt; (3 samples, 0.23%)</title><rect x="728.3" y="517" width="2.7" height="15.0" fill="rgb(246,136,8)" rx="2" ry="2" />
<text  x="731.26" y="527.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformNestedNameSpecifierLoc (1 samples, 0.08%)</title><rect x="1055.9" y="757" width="0.9" height="15.0" fill="rgb(219,169,36)" rx="2" ry="2" />
<text  x="1058.89" y="767.5" ></text>
</g>
<g >
<title>llvm::raw_ostream::write (1 samples, 0.08%)</title><rect x="1117.1" y="549" width="0.9" height="15.0" fill="rgb(232,55,31)" rx="2" ry="2" />
<text  x="1120.09" y="559.5" ></text>
</g>
<g >
<title>llvm::ConstantFoldConstant (1 samples, 0.08%)</title><rect x="203.5" y="677" width="0.9" height="15.0" fill="rgb(210,124,35)" rx="2" ry="2" />
<text  x="206.52" y="687.5" ></text>
</g>
<g >
<title>expand_string_assignment (4 samples, 0.31%)</title><rect x="36.1" y="421" width="3.6" height="15.0" fill="rgb(230,218,35)" rx="2" ry="2" />
<text  x="39.10" y="431.5" ></text>
</g>
<g >
<title>cling::MetaParser::isXCommand (1 samples, 0.08%)</title><rect x="1109.9" y="933" width="0.9" height="15.0" fill="rgb(221,15,29)" rx="2" ry="2" />
<text  x="1112.89" y="943.5" ></text>
</g>
<g >
<title>root.exe (1,215 samples, 92.68%)</title><rect x="44.2" y="965" width="1093.6" height="15.0" fill="rgb(245,181,33)" rx="2" ry="2" />
<text  x="47.20" y="975.5" >root.exe</text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.08%)</title><rect x="35.2" y="709" width="0.9" height="15.0" fill="rgb(236,209,2)" rx="2" ry="2" />
<text  x="38.20" y="719.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertType (1 samples, 0.08%)</title><rect x="1048.7" y="581" width="0.9" height="15.0" fill="rgb(208,13,26)" rx="2" ry="2" />
<text  x="1051.69" y="591.5" ></text>
</g>
<g >
<title>TCling::ShallowAutoLoadImpl (1 samples, 0.08%)</title><rect x="1098.2" y="661" width="0.9" height="15.0" fill="rgb(219,18,34)" rx="2" ry="2" />
<text  x="1101.19" y="671.5" ></text>
</g>
<g >
<title>[libz.so.1.2.11] (93 samples, 7.09%)</title><rect x="546.4" y="773" width="83.8" height="15.0" fill="rgb(242,80,1)" rx="2" ry="2" />
<text  x="549.45" y="783.5" >[libz.so...</text>
</g>
<g >
<title>isSafeToConvert (1 samples, 0.08%)</title><rect x="1048.7" y="453" width="0.9" height="15.0" fill="rgb(216,66,34)" rx="2" ry="2" />
<text  x="1051.69" y="463.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::emitSection (26 samples, 1.98%)</title><rect x="773.3" y="549" width="23.4" height="15.0" fill="rgb(215,8,35)" rx="2" ry="2" />
<text  x="776.26" y="559.5" >l..</text>
</g>
<g >
<title>llvm::SelectionDAGISel::SelectAllBasicBlocks (8 samples, 0.61%)</title><rect x="1130.6" y="725" width="7.2" height="15.0" fill="rgb(230,84,9)" rx="2" ry="2" />
<text  x="1133.59" y="735.5" ></text>
</g>
<g >
<title>HandleInterpreterException (2 samples, 0.15%)</title><rect x="855.2" y="805" width="1.8" height="15.0" fill="rgb(243,228,36)" rx="2" ry="2" />
<text  x="858.17" y="815.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::getAddExpr (1 samples, 0.08%)</title><rect x="1129.7" y="725" width="0.9" height="15.0" fill="rgb(234,201,30)" rx="2" ry="2" />
<text  x="1132.69" y="735.5" ></text>
</g>
<g >
<title>clang::LinkageComputer::computeTypeLinkageInfo (1 samples, 0.08%)</title><rect x="1016.3" y="421" width="0.9" height="15.0" fill="rgb(248,85,5)" rx="2" ry="2" />
<text  x="1019.29" y="431.5" ></text>
</g>
<g >
<title>clang::Sema::BuildCXXNestedNameSpecifier (1 samples, 0.08%)</title><rect x="1098.2" y="549" width="0.9" height="15.0" fill="rgb(212,140,16)" rx="2" ry="2" />
<text  x="1101.19" y="559.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (1 samples, 0.08%)</title><rect x="1100.9" y="885" width="0.9" height="15.0" fill="rgb(216,115,12)" rx="2" ry="2" />
<text  x="1103.89" y="895.5" ></text>
</g>
<g >
<title>llvm::AttributeSetNode::get (1 samples, 0.08%)</title><rect x="1017.2" y="597" width="0.9" height="15.0" fill="rgb(215,143,2)" rx="2" ry="2" />
<text  x="1020.19" y="607.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformNestedNameSpecifierLoc (1 samples, 0.08%)</title><rect x="1088.3" y="901" width="0.9" height="15.0" fill="rgb(249,222,9)" rx="2" ry="2" />
<text  x="1091.29" y="911.5" ></text>
</g>
<g >
<title>TUnixSystem::FindDynamicLibrary (40 samples, 3.05%)</title><rect x="953.3" y="869" width="36.0" height="15.0" fill="rgb(205,98,1)" rx="2" ry="2" />
<text  x="956.28" y="879.5" >TUn..</text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (1 samples, 0.08%)</title><rect x="1066.7" y="917" width="0.9" height="15.0" fill="rgb(216,130,10)" rx="2" ry="2" />
<text  x="1069.69" y="927.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::verifyPreservedAnalysis (25 samples, 1.91%)</title><rect x="722.0" y="565" width="22.5" height="15.0" fill="rgb(214,65,15)" rx="2" ry="2" />
<text  x="724.96" y="575.5" >l..</text>
</g>
<g >
<title>clang::Sema::InstantiateClass (1 samples, 0.08%)</title><rect x="1093.7" y="645" width="0.9" height="15.0" fill="rgb(229,67,26)" rx="2" ry="2" />
<text  x="1096.69" y="655.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::SelectAllBasicBlocks (3 samples, 0.23%)</title><rect x="1122.5" y="949" width="2.7" height="15.0" fill="rgb(248,222,32)" rx="2" ry="2" />
<text  x="1125.49" y="959.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1183.7" y="757" width="0.9" height="15.0" fill="rgb(222,103,33)" rx="2" ry="2" />
<text  x="1186.70" y="767.5" ></text>
</g>
<g >
<title>[unknown] (10 samples, 0.76%)</title><rect x="962.3" y="741" width="9.0" height="15.0" fill="rgb(220,71,23)" rx="2" ry="2" />
<text  x="965.28" y="751.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject&lt;std::shared_ptr&lt;llvm::RuntimeDyld::MemoryManager&gt; &gt;::getSymbolMaterializer(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda()#1}&gt;::_M_invoke (1 samples, 0.08%)</title><rect x="202.6" y="677" width="0.9" height="15.0" fill="rgb(243,26,6)" rx="2" ry="2" />
<text  x="205.62" y="687.5" ></text>
</g>
<g >
<title>cling::NullDerefProtectionTransformer::Transform (1 samples, 0.08%)</title><rect x="855.2" y="597" width="0.9" height="15.0" fill="rgb(231,67,45)" rx="2" ry="2" />
<text  x="858.17" y="607.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddDecl (1 samples, 0.08%)</title><rect x="1058.6" y="533" width="0.9" height="15.0" fill="rgb(209,213,43)" rx="2" ry="2" />
<text  x="1061.59" y="543.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGBuilder::visitLoad (1 samples, 0.08%)</title><rect x="845.3" y="517" width="0.9" height="15.0" fill="rgb(239,142,34)" rx="2" ry="2" />
<text  x="848.27" y="527.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::Compile (2 samples, 0.15%)</title><rect x="1111.7" y="837" width="1.8" height="15.0" fill="rgb(230,220,35)" rx="2" ry="2" />
<text  x="1114.69" y="847.5" ></text>
</g>
<g >
<title>__GI___getpid (1 samples, 0.08%)</title><rect x="21.7" y="293" width="0.9" height="15.0" fill="rgb(205,95,51)" rx="2" ry="2" />
<text  x="24.70" y="303.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTSIInObjectScope (1 samples, 0.08%)</title><rect x="1097.3" y="725" width="0.9" height="15.0" fill="rgb(211,0,27)" rx="2" ry="2" />
<text  x="1100.29" y="735.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::FindExternalVisibleDeclsByName (1 samples, 0.08%)</title><rect x="1018.1" y="517" width="0.9" height="15.0" fill="rgb(214,30,41)" rx="2" ry="2" />
<text  x="1021.09" y="527.5" ></text>
</g>
<g >
<title>clang::Sema::CreateOverloadedBinOp (2 samples, 0.15%)</title><rect x="1069.4" y="949" width="1.8" height="15.0" fill="rgb(242,151,45)" rx="2" ry="2" />
<text  x="1072.39" y="959.5" ></text>
</g>
<g >
<title>__dlopen_check (2 samples, 0.15%)</title><rect x="989.3" y="885" width="1.8" height="15.0" fill="rgb(251,47,17)" rx="2" ry="2" />
<text  x="992.28" y="895.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.08%)</title><rect x="828.2" y="565" width="0.9" height="15.0" fill="rgb(223,153,21)" rx="2" ry="2" />
<text  x="831.17" y="575.5" ></text>
</g>
<g >
<title>ClingMemberIterInternal::DCIter::HandleInlineDeclContext (1 samples, 0.08%)</title><rect x="1118.9" y="181" width="0.9" height="15.0" fill="rgb(215,169,43)" rx="2" ry="2" />
<text  x="1121.89" y="191.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="342.1" y="789" width="0.9" height="15.0" fill="rgb(223,190,27)" rx="2" ry="2" />
<text  x="345.13" y="799.5" ></text>
</g>
<g >
<title>llvm::TargetMachine::resetTargetOptions (1 samples, 0.08%)</title><rect x="248.5" y="709" width="0.9" height="15.0" fill="rgb(245,167,46)" rx="2" ry="2" />
<text  x="251.52" y="719.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentScopeDeclRefExpr (1 samples, 0.08%)</title><rect x="1097.3" y="933" width="0.9" height="15.0" fill="rgb(225,84,34)" rx="2" ry="2" />
<text  x="1100.29" y="943.5" ></text>
</g>
<g >
<title>__GI___fork (4 samples, 0.31%)</title><rect x="30.7" y="565" width="3.6" height="15.0" fill="rgb(209,34,32)" rx="2" ry="2" />
<text  x="33.70" y="575.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke (8 samples, 0.61%)</title><rect x="1130.6" y="837" width="7.2" height="15.0" fill="rgb(250,175,44)" rx="2" ry="2" />
<text  x="1133.59" y="847.5" ></text>
</g>
<g >
<title>llvm::PopulateLoopsDFS&lt;llvm::MachineBasicBlock, llvm::MachineLoop&gt;::traverse (2 samples, 0.15%)</title><rect x="701.3" y="517" width="1.8" height="15.0" fill="rgb(213,210,30)" rx="2" ry="2" />
<text  x="704.26" y="527.5" ></text>
</g>
<g >
<title>clang::RecursiveASTVisitor&lt;(anonymous namespace)::PointerCheckInjector&gt;::TraverseMemberExpr (1 samples, 0.08%)</title><rect x="855.2" y="517" width="0.9" height="15.0" fill="rgb(232,78,16)" rx="2" ry="2" />
<text  x="858.17" y="527.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;, void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;::LookupBucketFor&lt;void const*&gt; (2 samples, 0.15%)</title><rect x="234.1" y="677" width="1.8" height="15.0" fill="rgb(235,101,39)" rx="2" ry="2" />
<text  x="237.12" y="687.5" ></text>
</g>
<g >
<title>llvm::MCContext::getOrCreateSymbol (1 samples, 0.08%)</title><rect x="1116.2" y="597" width="0.9" height="15.0" fill="rgb(252,42,37)" rx="2" ry="2" />
<text  x="1119.19" y="607.5" ></text>
</g>
<g >
<title>clang::Parser::AnnotateTemplateIdToken (1 samples, 0.08%)</title><rect x="1109.0" y="773" width="0.9" height="15.0" fill="rgb(251,65,26)" rx="2" ry="2" />
<text  x="1111.99" y="783.5" ></text>
</g>
<g >
<title>TCling::ProcessLine (16 samples, 1.22%)</title><rect x="839.9" y="949" width="14.4" height="15.0" fill="rgb(247,117,44)" rx="2" ry="2" />
<text  x="842.87" y="959.5" ></text>
</g>
<g >
<title>clang::Sema::SubstType (1 samples, 0.08%)</title><rect x="1065.8" y="933" width="0.9" height="15.0" fill="rgb(223,68,49)" rx="2" ry="2" />
<text  x="1068.79" y="943.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;std::add_pointer, (anonymous namespace)::ScalarExprEmitter, llvm::Value*&gt;::Visit (1 samples, 0.08%)</title><rect x="1013.6" y="917" width="0.9" height="15.0" fill="rgb(223,138,13)" rx="2" ry="2" />
<text  x="1016.59" y="927.5" ></text>
</g>
<g >
<title>cling::MetaSema::actOnxCommand (7 samples, 0.53%)</title><rect x="831.8" y="805" width="6.3" height="15.0" fill="rgb(236,94,6)" rx="2" ry="2" />
<text  x="834.77" y="815.5" ></text>
</g>
<g >
<title>evalstring (4 samples, 0.31%)</title><rect x="36.1" y="181" width="3.6" height="15.0" fill="rgb(224,218,18)" rx="2" ry="2" />
<text  x="39.10" y="191.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXConstructorCall (2 samples, 0.15%)</title><rect x="1046.9" y="885" width="1.8" height="15.0" fill="rgb(213,71,0)" rx="2" ry="2" />
<text  x="1049.89" y="895.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.08%)</title><rect x="1020.8" y="517" width="0.9" height="15.0" fill="rgb(236,214,12)" rx="2" ry="2" />
<text  x="1023.79" y="527.5" ></text>
</g>
<g >
<title>llvm::MachineFunctionPass::runOnFunction (2 samples, 0.15%)</title><rect x="212.5" y="757" width="1.8" height="15.0" fill="rgb(245,11,14)" rx="2" ry="2" />
<text  x="215.52" y="767.5" ></text>
</g>
<g >
<title>llvm::BranchFolder::OptimizeBlock (2 samples, 0.15%)</title><rect x="690.5" y="517" width="1.8" height="15.0" fill="rgb(225,161,21)" rx="2" ry="2" />
<text  x="693.46" y="527.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.08%)</title><rect x="1112.6" y="645" width="0.9" height="15.0" fill="rgb(226,157,31)" rx="2" ry="2" />
<text  x="1115.59" y="655.5" ></text>
</g>
<g >
<title>llvm::LLVMTargetMachine::addPassesToEmitMC (1 samples, 0.08%)</title><rect x="675.2" y="613" width="0.9" height="15.0" fill="rgb(226,226,36)" rx="2" ry="2" />
<text  x="678.16" y="623.5" ></text>
</g>
<g >
<title>TUnixSystem::Exit (3 samples, 0.23%)</title><rect x="857.9" y="917" width="2.7" height="15.0" fill="rgb(242,221,39)" rx="2" ry="2" />
<text  x="860.87" y="927.5" ></text>
</g>
<g >
<title>llvm::object::ELFObjectFile&lt;llvm::object::ELFType&lt;(llvm::support::endianness)1, true&gt; &gt;::getSectionName (1 samples, 0.08%)</title><rect x="750.8" y="549" width="0.9" height="15.0" fill="rgb(240,26,17)" rx="2" ry="2" />
<text  x="753.76" y="559.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetExternalDeclStmt (1 samples, 0.08%)</title><rect x="1111.7" y="629" width="0.9" height="15.0" fill="rgb(222,181,50)" rx="2" ry="2" />
<text  x="1114.69" y="639.5" ></text>
</g>
<g >
<title>llvm::post_order&lt;llvm::MachineBasicBlock*&gt; (1 samples, 0.08%)</title><rect x="244.9" y="677" width="0.9" height="15.0" fill="rgb(207,173,9)" rx="2" ry="2" />
<text  x="247.92" y="687.5" ></text>
</g>
<g >
<title>llvm::DominatorTreeWrapperPass::runOnFunction (2 samples, 0.15%)</title><rect x="904.7" y="597" width="1.8" height="15.0" fill="rgb(243,63,39)" rx="2" ry="2" />
<text  x="907.68" y="607.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetExternalDeclStmt (1 samples, 0.08%)</title><rect x="1054.1" y="693" width="0.9" height="15.0" fill="rgb(216,174,9)" rx="2" ry="2" />
<text  x="1057.09" y="703.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (3 samples, 0.23%)</title><rect x="832.7" y="661" width="2.7" height="15.0" fill="rgb(254,66,52)" rx="2" ry="2" />
<text  x="835.67" y="671.5" ></text>
</g>
<g >
<title>execute_command (27 samples, 2.06%)</title><rect x="10.9" y="853" width="24.3" height="15.0" fill="rgb(238,201,47)" rx="2" ry="2" />
<text  x="13.90" y="863.5" >e..</text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType (1 samples, 0.08%)</title><rect x="1086.5" y="885" width="0.9" height="15.0" fill="rgb(231,213,22)" rx="2" ry="2" />
<text  x="1089.49" y="895.5" ></text>
</g>
<g >
<title>TCling::ProcessLine (76 samples, 5.80%)</title><rect x="860.6" y="853" width="68.4" height="15.0" fill="rgb(232,89,20)" rx="2" ry="2" />
<text  x="863.57" y="863.5" >TCling:..</text>
</g>
<g >
<title>__GI___fork (24 samples, 1.83%)</title><rect x="1163.0" y="821" width="21.6" height="15.0" fill="rgb(224,148,38)" rx="2" ry="2" />
<text  x="1166.00" y="831.5" >_..</text>
</g>
<g >
<title>execute_command_internal (27 samples, 2.06%)</title><rect x="10.9" y="725" width="24.3" height="15.0" fill="rgb(227,139,51)" rx="2" ry="2" />
<text  x="13.90" y="735.5" >e..</text>
</g>
<g >
<title>llvm::Attribute::get (1 samples, 0.08%)</title><rect x="1045.1" y="725" width="0.9" height="15.0" fill="rgb(232,95,50)" rx="2" ry="2" />
<text  x="1048.09" y="735.5" ></text>
</g>
<g >
<title>TListOfDataMembers::Load (1 samples, 0.08%)</title><rect x="447.4" y="565" width="0.9" height="15.0" fill="rgb(220,97,14)" rx="2" ry="2" />
<text  x="450.44" y="575.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, true&gt; &gt;::InfoRec, llvm::DenseMapInfo&lt;llvm::BasicBlock*&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, true&gt; &gt;::InfoRec&gt; &gt;, llvm::BasicBlock*, llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, true&gt; &gt;::InfoRec, llvm::DenseMapInfo&lt;llvm::BasicBlock*&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, true&gt; &gt;::InfoRec&gt; &gt;::InsertIntoBucketImpl&lt;llvm::BasicBlock*&gt; (1 samples, 0.08%)</title><rect x="893.0" y="549" width="0.9" height="15.0" fill="rgb(225,74,10)" rx="2" ry="2" />
<text  x="895.97" y="559.5" ></text>
</g>
<g >
<title>llvm::SplitCriticalEdge (1 samples, 0.08%)</title><rect x="851.6" y="677" width="0.9" height="15.0" fill="rgb(207,103,34)" rx="2" ry="2" />
<text  x="854.57" y="687.5" ></text>
</g>
<g >
<title>clang::Sema::SubstStmt (1 samples, 0.08%)</title><rect x="1084.7" y="789" width="0.9" height="15.0" fill="rgb(245,212,45)" rx="2" ry="2" />
<text  x="1087.69" y="799.5" ></text>
</g>
<g >
<title>execute_command (4 samples, 0.31%)</title><rect x="36.1" y="725" width="3.6" height="15.0" fill="rgb(217,146,30)" rx="2" ry="2" />
<text  x="39.10" y="735.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteDeclContext (1 samples, 0.08%)</title><rect x="1093.7" y="805" width="0.9" height="15.0" fill="rgb(246,155,18)" rx="2" ry="2" />
<text  x="1096.69" y="815.5" ></text>
</g>
<g >
<title>llvm::formLCSSAForInstructions (1 samples, 0.08%)</title><rect x="830.0" y="613" width="0.9" height="15.0" fill="rgb(246,83,23)" rx="2" ry="2" />
<text  x="832.97" y="623.5" ></text>
</g>
<g >
<title>llvm::X86AsmPrinter::EmitAndCountInstruction (1 samples, 0.08%)</title><rect x="1117.1" y="613" width="0.9" height="15.0" fill="rgb(209,85,43)" rx="2" ry="2" />
<text  x="1120.09" y="623.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentNameType (1 samples, 0.08%)</title><rect x="1055.9" y="773" width="0.9" height="15.0" fill="rgb(219,121,32)" rx="2" ry="2" />
<text  x="1058.89" y="783.5" ></text>
</g>
<g >
<title>cling::IncrementalJIT::lookupSymbol (1 samples, 0.08%)</title><rect x="865.1" y="629" width="0.9" height="15.0" fill="rgb(220,119,51)" rx="2" ry="2" />
<text  x="868.07" y="639.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertType (1 samples, 0.08%)</title><rect x="1049.6" y="789" width="0.9" height="15.0" fill="rgb(212,9,44)" rx="2" ry="2" />
<text  x="1052.59" y="799.5" ></text>
</g>
<g >
<title>.annobin_rtld.c (5 samples, 0.38%)</title><rect x="39.7" y="949" width="4.5" height="15.0" fill="rgb(207,217,0)" rx="2" ry="2" />
<text  x="42.70" y="959.5" ></text>
</g>
<g >
<title>llvm::SmallVectorTemplateBase&lt;llvm::BasicBlock*, true&gt;::push_back (1 samples, 0.08%)</title><rect x="821.9" y="645" width="0.9" height="15.0" fill="rgb(236,181,27)" rx="2" ry="2" />
<text  x="824.87" y="655.5" ></text>
</g>
<g >
<title>clang::Sema::ActOnEndOfTranslationUnitFragment (1 samples, 0.08%)</title><rect x="1111.7" y="773" width="0.9" height="15.0" fill="rgb(233,117,38)" rx="2" ry="2" />
<text  x="1114.69" y="783.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl (1 samples, 0.08%)</title><rect x="1012.7" y="613" width="0.9" height="15.0" fill="rgb(212,151,19)" rx="2" ry="2" />
<text  x="1015.68" y="623.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitDeclStmt (1 samples, 0.08%)</title><rect x="1014.5" y="869" width="0.9" height="15.0" fill="rgb(214,12,17)" rx="2" ry="2" />
<text  x="1017.49" y="879.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformNestedNameSpecifierLoc (1 samples, 0.08%)</title><rect x="1087.4" y="725" width="0.9" height="15.0" fill="rgb(252,79,32)" rx="2" ry="2" />
<text  x="1090.39" y="735.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCall (1 samples, 0.08%)</title><rect x="1014.5" y="629" width="0.9" height="15.0" fill="rgb(250,198,50)" rx="2" ry="2" />
<text  x="1017.49" y="639.5" ></text>
</g>
<g >
<title>llvm::object::ELFObjectFile&lt;llvm::object::ELFType&lt;(llvm::support::endianness)1, true&gt; &gt;::getRelocatedSection (2 samples, 0.15%)</title><rect x="260.2" y="693" width="1.8" height="15.0" fill="rgb(224,49,4)" rx="2" ry="2" />
<text  x="263.22" y="703.5" ></text>
</g>
<g >
<title>dl_main (4 samples, 0.31%)</title><rect x="1148.6" y="901" width="3.6" height="15.0" fill="rgb(241,68,39)" rx="2" ry="2" />
<text  x="1151.60" y="911.5" ></text>
</g>
<g >
<title>TBufferFile::ReadObjectAny (1 samples, 0.08%)</title><rect x="448.3" y="725" width="0.9" height="15.0" fill="rgb(228,145,48)" rx="2" ry="2" />
<text  x="451.34" y="735.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1145.9" y="901" width="0.9" height="15.0" fill="rgb(218,157,30)" rx="2" ry="2" />
<text  x="1148.90" y="911.5" ></text>
</g>
<g >
<title>execute_command_internal (4 samples, 0.31%)</title><rect x="36.1" y="501" width="3.6" height="15.0" fill="rgb(238,89,11)" rx="2" ry="2" />
<text  x="39.10" y="511.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitDecl (1 samples, 0.08%)</title><rect x="1014.5" y="853" width="0.9" height="15.0" fill="rgb(208,181,33)" rx="2" ry="2" />
<text  x="1017.49" y="863.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1074.8" y="469" width="0.9" height="15.0" fill="rgb(208,198,11)" rx="2" ry="2" />
<text  x="1077.79" y="479.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDeclRefExpr (1 samples, 0.08%)</title><rect x="1080.2" y="645" width="0.9" height="15.0" fill="rgb(248,0,14)" rx="2" ry="2" />
<text  x="1083.19" y="655.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl (1 samples, 0.08%)</title><rect x="1012.7" y="837" width="0.9" height="15.0" fill="rgb(211,102,53)" rx="2" ry="2" />
<text  x="1015.68" y="847.5" ></text>
</g>
<g >
<title>clang::LinkageComputer::computeLVForDecl (1 samples, 0.08%)</title><rect x="1016.3" y="517" width="0.9" height="15.0" fill="rgb(215,55,20)" rx="2" ry="2" />
<text  x="1019.29" y="527.5" ></text>
</g>
<g >
<title>clang::Sema::CheckBaseSpecifier (1 samples, 0.08%)</title><rect x="1085.6" y="885" width="0.9" height="15.0" fill="rgb(246,155,26)" rx="2" ry="2" />
<text  x="1088.59" y="895.5" ></text>
</g>
<g >
<title>llvm::MachineBasicBlock::getFallThrough (2 samples, 0.15%)</title><rect x="690.5" y="485" width="1.8" height="15.0" fill="rgb(241,204,19)" rx="2" ry="2" />
<text  x="693.46" y="495.5" ></text>
</g>
<g >
<title>cling::Interpreter::RunFunction (138 samples, 10.53%)</title><rect x="674.3" y="805" width="124.2" height="15.0" fill="rgb(253,194,24)" rx="2" ry="2" />
<text  x="677.26" y="815.5" >cling::Interpre..</text>
</g>
<g >
<title>llvm::AliasSetTracker::add (1 samples, 0.08%)</title><rect x="230.5" y="725" width="0.9" height="15.0" fill="rgb(254,93,4)" rx="2" ry="2" />
<text  x="233.52" y="735.5" ></text>
</g>
<g >
<title>llvm::AttributeList::hasAttribute (1 samples, 0.08%)</title><rect x="814.7" y="485" width="0.9" height="15.0" fill="rgb(205,60,18)" rx="2" ry="2" />
<text  x="817.67" y="495.5" ></text>
</g>
<g >
<title>llvm::DenseMap&lt;llvm::Instruction*, (anonymous namespace)::InstInfoType, llvm::DenseMapInfo&lt;llvm::Instruction*&gt;, llvm::detail::DenseMapPair&lt;llvm::Instruction*, (anonymous namespace)::InstInfoType&gt; &gt;::grow (1 samples, 0.08%)</title><rect x="806.6" y="677" width="0.9" height="15.0" fill="rgb(238,92,11)" rx="2" ry="2" />
<text  x="809.57" y="687.5" ></text>
</g>
<g >
<title>llvm::Instruction::mayWriteToMemory (1 samples, 0.08%)</title><rect x="823.7" y="597" width="0.9" height="15.0" fill="rgb(205,16,3)" rx="2" ry="2" />
<text  x="826.67" y="607.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddDecl (1 samples, 0.08%)</title><rect x="1064.9" y="581" width="0.9" height="15.0" fill="rgb(218,210,1)" rx="2" ry="2" />
<text  x="1067.89" y="591.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke (1 samples, 0.08%)</title><rect x="202.6" y="821" width="0.9" height="15.0" fill="rgb(226,89,29)" rx="2" ry="2" />
<text  x="205.62" y="831.5" ></text>
</g>
<g >
<title>clang::QualType::getCanonicalType (1 samples, 0.08%)</title><rect x="1109.0" y="565" width="0.9" height="15.0" fill="rgb(212,66,50)" rx="2" ry="2" />
<text  x="1111.99" y="575.5" ></text>
</g>
<g >
<title>llvm::BranchFolder::HoistCommonCodeInSuccs (1 samples, 0.08%)</title><rect x="689.6" y="533" width="0.9" height="15.0" fill="rgb(226,107,49)" rx="2" ry="2" />
<text  x="692.56" y="543.5" ></text>
</g>
<g >
<title>clang::Sema::PerformPendingInstantiations (1 samples, 0.08%)</title><rect x="1111.7" y="757" width="0.9" height="15.0" fill="rgb(205,123,4)" rx="2" ry="2" />
<text  x="1114.69" y="767.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldELF::finalizeLoad (1 samples, 0.08%)</title><rect x="750.8" y="565" width="0.9" height="15.0" fill="rgb(243,54,27)" rx="2" ry="2" />
<text  x="753.76" y="575.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitRedeclarable&lt;clang::RedeclarableTemplateDecl&gt; (1 samples, 0.08%)</title><rect x="1111.7" y="485" width="0.9" height="15.0" fill="rgb(235,202,39)" rx="2" ry="2" />
<text  x="1114.69" y="495.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.08%)</title><rect x="447.4" y="517" width="0.9" height="15.0" fill="rgb(237,202,45)" rx="2" ry="2" />
<text  x="450.44" y="527.5" ></text>
</g>
<g >
<title>clang::ASTRecordReader::readRecord (1 samples, 0.08%)</title><rect x="448.3" y="245" width="0.9" height="15.0" fill="rgb(233,55,21)" rx="2" ry="2" />
<text  x="451.34" y="255.5" ></text>
</g>
<g >
<title>clang::Sema::PerformPendingInstantiations (4 samples, 0.31%)</title><rect x="1078.4" y="901" width="3.6" height="15.0" fill="rgb(225,109,40)" rx="2" ry="2" />
<text  x="1081.39" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (2 samples, 0.15%)</title><rect x="944.3" y="773" width="1.8" height="15.0" fill="rgb(228,52,47)" rx="2" ry="2" />
<text  x="947.28" y="783.5" ></text>
</g>
<g >
<title>llvm::X86RegisterInfo::getFrameRegister (1 samples, 0.08%)</title><rect x="713.0" y="533" width="0.9" height="15.0" fill="rgb(243,2,41)" rx="2" ry="2" />
<text  x="715.96" y="543.5" ></text>
</g>
<g >
<title>clang::Sema::ActOnFields (1 samples, 0.08%)</title><rect x="1086.5" y="661" width="0.9" height="15.0" fill="rgb(219,3,28)" rx="2" ry="2" />
<text  x="1089.49" y="671.5" ></text>
</g>
<g >
<title>llvm::LPPassManager::runOnFunction (1 samples, 0.08%)</title><rect x="1118.0" y="789" width="0.9" height="15.0" fill="rgb(252,44,45)" rx="2" ry="2" />
<text  x="1120.99" y="799.5" ></text>
</g>
<g >
<title>llvm::AttrBuilder::addAttribute (1 samples, 0.08%)</title><rect x="1039.7" y="661" width="0.9" height="15.0" fill="rgb(231,117,33)" rx="2" ry="2" />
<text  x="1042.69" y="671.5" ></text>
</g>
<g >
<title>[unknown] (10 samples, 0.76%)</title><rect x="962.3" y="757" width="9.0" height="15.0" fill="rgb(252,91,6)" rx="2" ry="2" />
<text  x="965.28" y="767.5" ></text>
</g>
<g >
<title>TCling::UpdateListsOnCommitted (1 samples, 0.08%)</title><rect x="237.7" y="805" width="0.9" height="15.0" fill="rgb(230,69,2)" rx="2" ry="2" />
<text  x="240.72" y="815.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (3 samples, 0.23%)</title><rect x="860.6" y="597" width="2.7" height="15.0" fill="rgb(206,228,19)" rx="2" ry="2" />
<text  x="863.57" y="607.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallExpr (1 samples, 0.08%)</title><rect x="1013.6" y="885" width="0.9" height="15.0" fill="rgb(252,62,1)" rx="2" ry="2" />
<text  x="1016.59" y="895.5" ></text>
</g>
<g >
<title>clang::CXXRecordDecl::needsImplicitMoveAssignment (1 samples, 0.08%)</title><rect x="1086.5" y="629" width="0.9" height="15.0" fill="rgb(216,111,44)" rx="2" ry="2" />
<text  x="1089.49" y="639.5" ></text>
</g>
<g >
<title>AddOverloadedCallCandidate (1 samples, 0.08%)</title><rect x="1063.1" y="901" width="0.9" height="15.0" fill="rgb(237,63,2)" rx="2" ry="2" />
<text  x="1066.09" y="911.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.15%)</title><rect x="938.0" y="677" width="1.8" height="15.0" fill="rgb(215,177,19)" rx="2" ry="2" />
<text  x="940.98" y="687.5" ></text>
</g>
<g >
<title>clang::ASTContext::CreateTypeSourceInfo (1 samples, 0.08%)</title><rect x="1074.8" y="581" width="0.9" height="15.0" fill="rgb(244,69,47)" rx="2" ry="2" />
<text  x="1077.79" y="591.5" ></text>
</g>
<g >
<title>llvm::PointerType::get (1 samples, 0.08%)</title><rect x="801.2" y="517" width="0.9" height="15.0" fill="rgb(230,10,24)" rx="2" ry="2" />
<text  x="804.17" y="527.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallExpr (1 samples, 0.08%)</title><rect x="1014.5" y="645" width="0.9" height="15.0" fill="rgb(228,15,43)" rx="2" ry="2" />
<text  x="1017.49" y="655.5" ></text>
</g>
<g >
<title>clang::SavedStreamPosition::~SavedStreamPosition (1 samples, 0.08%)</title><rect x="1010.0" y="613" width="0.9" height="15.0" fill="rgb(205,90,9)" rx="2" ry="2" />
<text  x="1012.98" y="623.5" ></text>
</g>
<g >
<title>EmitFunctionDeclPointer (1 samples, 0.08%)</title><rect x="1018.1" y="709" width="0.9" height="15.0" fill="rgb(219,166,32)" rx="2" ry="2" />
<text  x="1021.09" y="719.5" ></text>
</g>
<g >
<title>clang::Parser::ParseCastExpression (1 samples, 0.08%)</title><rect x="1053.2" y="773" width="0.9" height="15.0" fill="rgb(246,92,25)" rx="2" ry="2" />
<text  x="1056.19" y="783.5" ></text>
</g>
<g >
<title>__run_fork_handlers (1 samples, 0.08%)</title><rect x="1183.7" y="805" width="0.9" height="15.0" fill="rgb(249,44,40)" rx="2" ry="2" />
<text  x="1186.70" y="815.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="995.6" y="805" width="0.9" height="15.0" fill="rgb(221,91,42)" rx="2" ry="2" />
<text  x="998.58" y="815.5" ></text>
</g>
<g >
<title>llvm::SelectionDAG::LegalizeTypes (1 samples, 0.08%)</title><rect x="1136.9" y="693" width="0.9" height="15.0" fill="rgb(211,221,52)" rx="2" ry="2" />
<text  x="1139.90" y="703.5" ></text>
</g>
<g >
<title>llvm::orc::lookupWithLegacyFn&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}::operator()(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;) const::{lambda(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)#1}&gt; (3 samples, 0.23%)</title><rect x="747.2" y="533" width="2.7" height="15.0" fill="rgb(212,89,40)" rx="2" ry="2" />
<text  x="750.16" y="543.5" ></text>
</g>
<g >
<title>StrengthenNoWrapFlags (1 samples, 0.08%)</title><rect x="1129.7" y="485" width="0.9" height="15.0" fill="rgb(252,99,26)" rx="2" ry="2" />
<text  x="1132.69" y="495.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord (1 samples, 0.08%)</title><rect x="448.3" y="261" width="0.9" height="15.0" fill="rgb(211,174,13)" rx="2" ry="2" />
<text  x="451.34" y="271.5" ></text>
</g>
<g >
<title>llvm::hashing::detail::hash_combine_range_impl&lt;unsigned int const&gt; (1 samples, 0.08%)</title><rect x="203.5" y="629" width="0.9" height="15.0" fill="rgb(245,17,37)" rx="2" ry="2" />
<text  x="206.52" y="639.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject&lt;std::shared_ptr&lt;llvm::RuntimeDyld::MemoryManager&gt; &gt;::getSymbolMaterializer(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda()#1}&gt;::_M_invoke (1 samples, 0.08%)</title><rect x="1107.2" y="901" width="0.9" height="15.0" fill="rgb(246,196,38)" rx="2" ry="2" />
<text  x="1110.19" y="911.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="17.2" y="149" width="0.9" height="15.0" fill="rgb(243,203,20)" rx="2" ry="2" />
<text  x="20.20" y="159.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadNestedNameSpecifierLoc (1 samples, 0.08%)</title><rect x="1009.1" y="485" width="0.9" height="15.0" fill="rgb(232,196,15)" rx="2" ry="2" />
<text  x="1012.08" y="495.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::freePass (4 samples, 0.31%)</title><rect x="913.7" y="581" width="3.6" height="15.0" fill="rgb(243,47,42)" rx="2" ry="2" />
<text  x="916.68" y="591.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::CodeGenAndEmitDAG (3 samples, 0.23%)</title><rect x="1113.5" y="629" width="2.7" height="15.0" fill="rgb(254,92,14)" rx="2" ry="2" />
<text  x="1116.49" y="639.5" ></text>
</g>
<g >
<title>llvm::GlobalsAAResult::getModRefBehavior (1 samples, 0.08%)</title><rect x="230.5" y="629" width="0.9" height="15.0" fill="rgb(229,201,22)" rx="2" ry="2" />
<text  x="233.52" y="639.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnModule (10 samples, 0.76%)</title><rect x="840.8" y="629" width="9.0" height="15.0" fill="rgb(228,148,1)" rx="2" ry="2" />
<text  x="843.77" y="639.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord (1 samples, 0.08%)</title><rect x="1071.2" y="837" width="0.9" height="15.0" fill="rgb(248,135,21)" rx="2" ry="2" />
<text  x="1074.19" y="847.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitAutoVarInit (1 samples, 0.08%)</title><rect x="1014.5" y="805" width="0.9" height="15.0" fill="rgb(234,149,17)" rx="2" ry="2" />
<text  x="1017.49" y="815.5" ></text>
</g>
<g >
<title>llvm::object::ELFFile&lt;llvm::object::ELFType&lt;(llvm::support::endianness)1, true&gt; &gt;::getSection (2 samples, 0.15%)</title><rect x="761.6" y="517" width="1.8" height="15.0" fill="rgb(215,202,54)" rx="2" ry="2" />
<text  x="764.56" y="527.5" ></text>
</g>
<g >
<title>clang::Parser::ParseTemplateArgument (1 samples, 0.08%)</title><rect x="1109.0" y="853" width="0.9" height="15.0" fill="rgb(229,53,29)" rx="2" ry="2" />
<text  x="1111.99" y="863.5" ></text>
</g>
<g >
<title>clang::Sema::CheckFieldDecl (1 samples, 0.08%)</title><rect x="1061.3" y="805" width="0.9" height="15.0" fill="rgb(218,171,50)" rx="2" ry="2" />
<text  x="1064.29" y="815.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ComputeRecordLayout (1 samples, 0.08%)</title><rect x="1049.6" y="725" width="0.9" height="15.0" fill="rgb(205,226,50)" rx="2" ry="2" />
<text  x="1052.59" y="735.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::GetOrCreateLLVMFunction (1 samples, 0.08%)</title><rect x="1018.1" y="677" width="0.9" height="15.0" fill="rgb(240,99,29)" rx="2" ry="2" />
<text  x="1021.09" y="687.5" ></text>
</g>
<g >
<title>llvm::AttributeImpl::hasAttribute (1 samples, 0.08%)</title><rect x="227.8" y="677" width="0.9" height="15.0" fill="rgb(236,5,48)" rx="2" ry="2" />
<text  x="230.82" y="687.5" ></text>
</g>
<g >
<title>llvm::AttributeSetNode::get (1 samples, 0.08%)</title><rect x="1046.0" y="821" width="0.9" height="15.0" fill="rgb(231,89,5)" rx="2" ry="2" />
<text  x="1048.99" y="831.5" ></text>
</g>
<g >
<title>__GI___fork (4 samples, 0.31%)</title><rect x="10.9" y="389" width="3.6" height="15.0" fill="rgb(239,16,0)" rx="2" ry="2" />
<text  x="13.90" y="399.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.08%)</title><rect x="35.2" y="917" width="0.9" height="15.0" fill="rgb(217,59,15)" rx="2" ry="2" />
<text  x="38.20" y="927.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.08%)</title><rect x="812.9" y="517" width="0.9" height="15.0" fill="rgb(226,163,40)" rx="2" ry="2" />
<text  x="815.87" y="527.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddType (1 samples, 0.08%)</title><rect x="1048.7" y="357" width="0.9" height="15.0" fill="rgb(238,174,1)" rx="2" ry="2" />
<text  x="1051.69" y="367.5" ></text>
</g>
<g >
<title>computeKnownBits (1 samples, 0.08%)</title><rect x="836.3" y="517" width="0.9" height="15.0" fill="rgb(226,64,25)" rx="2" ry="2" />
<text  x="839.27" y="527.5" ></text>
</g>
<g >
<title>clang::Sema::CheckCallReturnType (3 samples, 0.23%)</title><rect x="1056.8" y="933" width="2.7" height="15.0" fill="rgb(253,74,26)" rx="2" ry="2" />
<text  x="1059.79" y="943.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallArgs (1 samples, 0.08%)</title><rect x="1091.0" y="885" width="0.9" height="15.0" fill="rgb(238,226,51)" rx="2" ry="2" />
<text  x="1093.99" y="895.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition (2 samples, 0.15%)</title><rect x="1041.5" y="805" width="1.8" height="15.0" fill="rgb(253,179,14)" rx="2" ry="2" />
<text  x="1044.49" y="815.5" ></text>
</g>
<g >
<title>llvm::ReachingDefAnalysis::runOnMachineFunction (2 samples, 0.15%)</title><rect x="706.7" y="549" width="1.8" height="15.0" fill="rgb(239,229,47)" rx="2" ry="2" />
<text  x="709.66" y="559.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadTemplateArgumentList (1 samples, 0.08%)</title><rect x="1051.4" y="565" width="0.9" height="15.0" fill="rgb(213,86,35)" rx="2" ry="2" />
<text  x="1054.39" y="575.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (1 samples, 0.08%)</title><rect x="1073.0" y="709" width="0.9" height="15.0" fill="rgb(236,215,16)" rx="2" ry="2" />
<text  x="1075.99" y="719.5" ></text>
</g>
<g >
<title>llvm::X86TargetMachine::getTargetTransformInfo (1 samples, 0.08%)</title><rect x="862.4" y="549" width="0.9" height="15.0" fill="rgb(247,43,32)" rx="2" ry="2" />
<text  x="865.37" y="559.5" ></text>
</g>
<g >
<title>std::__insertion_sort&lt;llvm::Attribute*, __gnu_cxx::__ops::_Iter_less_iter&gt; (1 samples, 0.08%)</title><rect x="1041.5" y="677" width="0.9" height="15.0" fill="rgb(232,219,10)" rx="2" ry="2" />
<text  x="1044.49" y="687.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitAutoVarInit (1 samples, 0.08%)</title><rect x="1023.5" y="789" width="0.9" height="15.0" fill="rgb(210,217,41)" rx="2" ry="2" />
<text  x="1026.49" y="799.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1148.6" y="821" width="0.9" height="15.0" fill="rgb(207,204,21)" rx="2" ry="2" />
<text  x="1151.60" y="831.5" ></text>
</g>
<g >
<title>clang::Sema::BuildQualifiedDeclarationNameExpr (1 samples, 0.08%)</title><rect x="1086.5" y="757" width="0.9" height="15.0" fill="rgb(225,83,23)" rx="2" ry="2" />
<text  x="1089.49" y="767.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;void const*, void const*, std::_Identity&lt;void const*&gt;, std::less&lt;void const*&gt;, std::allocator&lt;void const*&gt; &gt;::_M_erase (1 samples, 0.08%)</title><rect x="928.1" y="597" width="0.9" height="15.0" fill="rgb(212,204,10)" rx="2" ry="2" />
<text  x="931.08" y="607.5" ></text>
</g>
<g >
<title>clang::ASTReader::readTypeRecord (1 samples, 0.08%)</title><rect x="1011.8" y="661" width="0.9" height="15.0" fill="rgb(244,65,14)" rx="2" ry="2" />
<text  x="1014.78" y="671.5" ></text>
</g>
<g >
<title>__GI__IO_default_uflow (1 samples, 0.08%)</title><rect x="950.6" y="789" width="0.9" height="15.0" fill="rgb(207,190,17)" rx="2" ry="2" />
<text  x="953.58" y="799.5" ></text>
</g>
<g >
<title>CheckDeclInExpr (1 samples, 0.08%)</title><rect x="1080.2" y="613" width="0.9" height="15.0" fill="rgb(251,104,27)" rx="2" ry="2" />
<text  x="1083.19" y="623.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.15%)</title><rect x="1188.2" y="821" width="1.8" height="15.0" fill="rgb(240,91,32)" rx="2" ry="2" />
<text  x="1191.20" y="831.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.15%)</title><rect x="1144.1" y="901" width="1.8" height="15.0" fill="rgb(223,206,34)" rx="2" ry="2" />
<text  x="1147.10" y="911.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentNameType (1 samples, 0.08%)</title><rect x="1089.2" y="885" width="0.9" height="15.0" fill="rgb(224,139,53)" rx="2" ry="2" />
<text  x="1092.19" y="895.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.08%)</title><rect x="1041.5" y="629" width="0.9" height="15.0" fill="rgb(242,145,50)" rx="2" ry="2" />
<text  x="1044.49" y="639.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (4 samples, 0.31%)</title><rect x="919.1" y="549" width="3.6" height="15.0" fill="rgb(235,183,3)" rx="2" ry="2" />
<text  x="922.08" y="559.5" ></text>
</g>
<g >
<title>execute_command_internal (4 samples, 0.31%)</title><rect x="36.1" y="325" width="3.6" height="15.0" fill="rgb(231,14,44)" rx="2" ry="2" />
<text  x="39.10" y="335.5" ></text>
</g>
<g >
<title>llvm::PMTopLevelManager::findAnalysisPass (1 samples, 0.08%)</title><rect x="228.7" y="693" width="0.9" height="15.0" fill="rgb(221,212,27)" rx="2" ry="2" />
<text  x="231.72" y="703.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;, void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;::LookupBucketFor&lt;void const*&gt; (3 samples, 0.23%)</title><rect x="920.0" y="533" width="2.7" height="15.0" fill="rgb(238,84,6)" rx="2" ry="2" />
<text  x="922.98" y="543.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl (1 samples, 0.08%)</title><rect x="1009.1" y="933" width="0.9" height="15.0" fill="rgb(215,210,8)" rx="2" ry="2" />
<text  x="1012.08" y="943.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::SelectAllBasicBlocks (1 samples, 0.08%)</title><rect x="449.2" y="741" width="0.9" height="15.0" fill="rgb(218,63,7)" rx="2" ry="2" />
<text  x="452.24" y="751.5" ></text>
</g>
<g >
<title>[bash] (5 samples, 0.38%)</title><rect x="10.9" y="501" width="4.5" height="15.0" fill="rgb(209,152,22)" rx="2" ry="2" />
<text  x="13.90" y="511.5" ></text>
</g>
<g >
<title>llvm::BasicAAWrapperPass::runOnFunction (1 samples, 0.08%)</title><rect x="870.5" y="613" width="0.9" height="15.0" fill="rgb(214,34,34)" rx="2" ry="2" />
<text  x="873.47" y="623.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadTypeLoc (1 samples, 0.08%)</title><rect x="1077.5" y="597" width="0.9" height="15.0" fill="rgb(223,156,20)" rx="2" ry="2" />
<text  x="1080.49" y="607.5" ></text>
</g>
<g >
<title>clang::Sema::ActOnEndOfTranslationUnitFragment (1 samples, 0.08%)</title><rect x="849.8" y="741" width="0.9" height="15.0" fill="rgb(213,11,48)" rx="2" ry="2" />
<text  x="852.77" y="751.5" ></text>
</g>
<g >
<title>ROOT::TGenericClassInfo::~TGenericClassInfo (1 samples, 0.08%)</title><rect x="857.9" y="869" width="0.9" height="15.0" fill="rgb(219,62,31)" rx="2" ry="2" />
<text  x="860.87" y="879.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadTypeLoc (1 samples, 0.08%)</title><rect x="1009.1" y="453" width="0.9" height="15.0" fill="rgb(220,35,2)" rx="2" ry="2" />
<text  x="1012.08" y="463.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::Compile (1 samples, 0.08%)</title><rect x="1109.9" y="853" width="0.9" height="15.0" fill="rgb(213,23,21)" rx="2" ry="2" />
<text  x="1112.89" y="863.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_erase (1 samples, 0.08%)</title><rect x="1037.0" y="629" width="0.9" height="15.0" fill="rgb(244,102,5)" rx="2" ry="2" />
<text  x="1039.99" y="639.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.15%)</title><rect x="971.3" y="757" width="1.8" height="15.0" fill="rgb(237,198,27)" rx="2" ry="2" />
<text  x="974.28" y="767.5" ></text>
</g>
<g >
<title>llvm::orc::lookupWithLegacyFn&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}::operator()(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;) const::{lambda(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)#1}&gt; (1 samples, 0.08%)</title><rect x="854.3" y="677" width="0.9" height="15.0" fill="rgb(232,71,12)" rx="2" ry="2" />
<text  x="857.27" y="687.5" ></text>
</g>
<g >
<title>cling::DynamicLibraryManager::getSymbolLocation[abi:cxx11] (1 samples, 0.08%)</title><rect x="839.0" y="613" width="0.9" height="15.0" fill="rgb(213,102,49)" rx="2" ry="2" />
<text  x="841.97" y="623.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolutionWrapperPass::releaseMemory (1 samples, 0.08%)</title><rect x="915.5" y="565" width="0.9" height="15.0" fill="rgb(249,43,32)" rx="2" ry="2" />
<text  x="918.48" y="575.5" ></text>
</g>
<g >
<title>_dl_relocate_object (2 samples, 0.15%)</title><rect x="989.3" y="757" width="1.8" height="15.0" fill="rgb(233,52,36)" rx="2" ry="2" />
<text  x="992.28" y="767.5" ></text>
</g>
<g >
<title>llvm::BitstreamCursor::readRecord (1 samples, 0.08%)</title><rect x="1008.2" y="741" width="0.9" height="15.0" fill="rgb(251,31,21)" rx="2" ry="2" />
<text  x="1011.18" y="751.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::GetExternalDeclStmt (1 samples, 0.08%)</title><rect x="1054.1" y="709" width="0.9" height="15.0" fill="rgb(220,55,16)" rx="2" ry="2" />
<text  x="1057.09" y="719.5" ></text>
</g>
<g >
<title>TCling::~TCling (2 samples, 0.15%)</title><rect x="858.8" y="853" width="1.8" height="15.0" fill="rgb(225,136,33)" rx="2" ry="2" />
<text  x="861.77" y="863.5" ></text>
</g>
<g >
<title>cling::MetaSema::actOnxCommand (1 samples, 0.08%)</title><rect x="854.3" y="853" width="0.9" height="15.0" fill="rgb(218,9,52)" rx="2" ry="2" />
<text  x="857.27" y="863.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="939.8" y="661" width="0.9" height="15.0" fill="rgb(246,174,17)" rx="2" ry="2" />
<text  x="942.78" y="671.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.08%)</title><rect x="1087.4" y="661" width="0.9" height="15.0" fill="rgb(249,175,9)" rx="2" ry="2" />
<text  x="1090.39" y="671.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitTemplateDecl (1 samples, 0.08%)</title><rect x="1009.1" y="853" width="0.9" height="15.0" fill="rgb(231,147,28)" rx="2" ry="2" />
<text  x="1012.08" y="863.5" ></text>
</g>
<g >
<title>malloc_consolidate (1 samples, 0.08%)</title><rect x="28.9" y="277" width="0.9" height="15.0" fill="rgb(220,56,23)" rx="2" ry="2" />
<text  x="31.90" y="287.5" ></text>
</g>
<g >
<title>make_child (5 samples, 0.38%)</title><rect x="10.9" y="405" width="4.5" height="15.0" fill="rgb(214,131,12)" rx="2" ry="2" />
<text  x="13.90" y="415.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::visitCallBase (3 samples, 0.23%)</title><rect x="824.6" y="597" width="2.7" height="15.0" fill="rgb(238,7,39)" rx="2" ry="2" />
<text  x="827.57" y="607.5" ></text>
</g>
<g >
<title>[bash] (4 samples, 0.31%)</title><rect x="36.1" y="645" width="3.6" height="15.0" fill="rgb(233,37,47)" rx="2" ry="2" />
<text  x="39.10" y="655.5" ></text>
</g>
<g >
<title>simplifyFunctionCFG (1 samples, 0.08%)</title><rect x="831.8" y="613" width="0.9" height="15.0" fill="rgb(240,110,42)" rx="2" ry="2" />
<text  x="834.77" y="623.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1160.3" y="709" width="0.9" height="15.0" fill="rgb(225,24,17)" rx="2" ry="2" />
<text  x="1163.30" y="719.5" ></text>
</g>
<g >
<title>llvm::X86AsmPrinter::runOnMachineFunction (3 samples, 0.23%)</title><rect x="710.3" y="549" width="2.7" height="15.0" fill="rgb(219,28,29)" rx="2" ry="2" />
<text  x="713.26" y="559.5" ></text>
</g>
<g >
<title>llvm::LibCallSimplifier::optimizeCall (1 samples, 0.08%)</title><rect x="218.8" y="661" width="0.9" height="15.0" fill="rgb(251,75,35)" rx="2" ry="2" />
<text  x="221.82" y="671.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::computeSectionStubBufSize (26 samples, 1.98%)</title><rect x="773.3" y="533" width="23.4" height="15.0" fill="rgb(231,18,44)" rx="2" ry="2" />
<text  x="776.26" y="543.5" >l..</text>
</g>
<g >
<title>clang::ASTReader::GetExternalCXXBaseSpecifiers (1 samples, 0.08%)</title><rect x="1066.7" y="805" width="0.9" height="15.0" fill="rgb(252,112,14)" rx="2" ry="2" />
<text  x="1069.69" y="815.5" ></text>
</g>
<g >
<title>TRint::Run (79 samples, 6.03%)</title><rect x="857.9" y="949" width="71.1" height="15.0" fill="rgb(218,37,52)" rx="2" ry="2" />
<text  x="860.87" y="959.5" >TRint::Run</text>
</g>
<g >
<title>llvm::PMTopLevelManager::findAnalysisPassInfo (1 samples, 0.08%)</title><rect x="883.1" y="581" width="0.9" height="15.0" fill="rgb(237,164,4)" rx="2" ry="2" />
<text  x="886.07" y="591.5" ></text>
</g>
<g >
<title>llvm::MCObjectStreamer::EmitInstructionImpl (1 samples, 0.08%)</title><rect x="1117.1" y="581" width="0.9" height="15.0" fill="rgb(222,68,41)" rx="2" ry="2" />
<text  x="1120.09" y="591.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1189.1" y="693" width="0.9" height="15.0" fill="rgb(209,87,13)" rx="2" ry="2" />
<text  x="1192.10" y="703.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTypenameType (1 samples, 0.08%)</title><rect x="1089.2" y="853" width="0.9" height="15.0" fill="rgb(213,180,11)" rx="2" ry="2" />
<text  x="1092.19" y="863.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass (1 samples, 0.08%)</title><rect x="1086.5" y="677" width="0.9" height="15.0" fill="rgb(251,31,31)" rx="2" ry="2" />
<text  x="1089.49" y="687.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (7 samples, 0.53%)</title><rect x="885.8" y="597" width="6.3" height="15.0" fill="rgb(222,114,31)" rx="2" ry="2" />
<text  x="888.77" y="607.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1137.8" y="917" width="0.9" height="15.0" fill="rgb(205,213,1)" rx="2" ry="2" />
<text  x="1140.80" y="927.5" ></text>
</g>
<g >
<title>llvm::PMTopLevelManager::findAnalysisPassInfo (3 samples, 0.23%)</title><rect x="877.7" y="597" width="2.7" height="15.0" fill="rgb(250,1,37)" rx="2" ry="2" />
<text  x="880.67" y="607.5" ></text>
</g>
<g >
<title>lookupCallFromSpecialMember (1 samples, 0.08%)</title><rect x="1055.0" y="869" width="0.9" height="15.0" fill="rgb(228,197,5)" rx="2" ry="2" />
<text  x="1057.99" y="879.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTemplateIdType (1 samples, 0.08%)</title><rect x="1094.6" y="709" width="0.9" height="15.0" fill="rgb(247,26,52)" rx="2" ry="2" />
<text  x="1097.59" y="719.5" ></text>
</g>
<g >
<title>parse_and_execute (1 samples, 0.08%)</title><rect x="35.2" y="421" width="0.9" height="15.0" fill="rgb(247,207,6)" rx="2" ry="2" />
<text  x="38.20" y="431.5" ></text>
</g>
<g >
<title>EvaluateRecord (1 samples, 0.08%)</title><rect x="1021.7" y="677" width="0.9" height="15.0" fill="rgb(253,29,18)" rx="2" ry="2" />
<text  x="1024.69" y="687.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.15%)</title><rect x="1150.4" y="805" width="1.8" height="15.0" fill="rgb(234,36,6)" rx="2" ry="2" />
<text  x="1153.40" y="815.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::getSCEV (1 samples, 0.08%)</title><rect x="1118.0" y="725" width="0.9" height="15.0" fill="rgb(236,195,41)" rx="2" ry="2" />
<text  x="1120.99" y="735.5" ></text>
</g>
<g >
<title>main (4 samples, 0.31%)</title><rect x="36.1" y="949" width="3.6" height="15.0" fill="rgb(237,13,51)" rx="2" ry="2" />
<text  x="39.10" y="959.5" ></text>
</g>
<g >
<title>default_tty_job_signals (1 samples, 0.08%)</title><rect x="1160.3" y="789" width="0.9" height="15.0" fill="rgb(243,110,14)" rx="2" ry="2" />
<text  x="1163.30" y="799.5" ></text>
</g>
<g >
<title>TSystem::GetLibraries (10 samples, 0.76%)</title><rect x="992.0" y="917" width="9.0" height="15.0" fill="rgb(208,60,16)" rx="2" ry="2" />
<text  x="994.98" y="927.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobal (9 samples, 0.69%)</title><rect x="1025.3" y="933" width="8.1" height="15.0" fill="rgb(227,229,12)" rx="2" ry="2" />
<text  x="1028.29" y="943.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentNameType (1 samples, 0.08%)</title><rect x="1073.9" y="677" width="0.9" height="15.0" fill="rgb(246,152,17)" rx="2" ry="2" />
<text  x="1076.89" y="687.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.08%)</title><rect x="1095.5" y="693" width="0.9" height="15.0" fill="rgb(211,102,52)" rx="2" ry="2" />
<text  x="1098.49" y="703.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord (1 samples, 0.08%)</title><rect x="1077.5" y="693" width="0.9" height="15.0" fill="rgb(229,161,49)" rx="2" ry="2" />
<text  x="1080.49" y="703.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (1 samples, 0.08%)</title><rect x="901.1" y="533" width="0.9" height="15.0" fill="rgb(220,97,18)" rx="2" ry="2" />
<text  x="904.08" y="543.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::runStaticInitializersOnce (1 samples, 0.08%)</title><rect x="838.1" y="629" width="0.9" height="15.0" fill="rgb(211,200,35)" rx="2" ry="2" />
<text  x="841.07" y="639.5" ></text>
</g>
<g >
<title>llvm::SCEVExpander::expand (1 samples, 0.08%)</title><rect x="671.6" y="917" width="0.9" height="15.0" fill="rgb(244,61,47)" rx="2" ry="2" />
<text  x="674.56" y="927.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitAutoVarDecl (1 samples, 0.08%)</title><rect x="1014.5" y="821" width="0.9" height="15.0" fill="rgb(215,68,22)" rx="2" ry="2" />
<text  x="1017.49" y="831.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveRelocations (4 samples, 0.31%)</title><rect x="747.2" y="597" width="3.6" height="15.0" fill="rgb(226,102,47)" rx="2" ry="2" />
<text  x="750.16" y="607.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::runStaticInitializersOnce (1 samples, 0.08%)</title><rect x="857.0" y="693" width="0.9" height="15.0" fill="rgb(239,96,27)" rx="2" ry="2" />
<text  x="859.97" y="703.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::initializeAnalysisImpl (1 samples, 0.08%)</title><rect x="876.8" y="613" width="0.9" height="15.0" fill="rgb(215,146,42)" rx="2" ry="2" />
<text  x="879.77" y="623.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1183.7" y="709" width="0.9" height="15.0" fill="rgb(247,134,25)" rx="2" ry="2" />
<text  x="1186.70" y="719.5" ></text>
</g>
<g >
<title>TClass::CreateListOfDataMembers (1 samples, 0.08%)</title><rect x="1118.9" y="453" width="0.9" height="15.0" fill="rgb(247,185,49)" rx="2" ry="2" />
<text  x="1121.89" y="463.5" ></text>
</g>
<g >
<title>cling::Interpreter::loadHeader (2 samples, 0.15%)</title><rect x="855.2" y="709" width="1.8" height="15.0" fill="rgb(243,222,21)" rx="2" ry="2" />
<text  x="858.17" y="719.5" ></text>
</g>
<g >
<title>combineInstructionsOverFunction (1 samples, 0.08%)</title><rect x="873.2" y="597" width="0.9" height="15.0" fill="rgb(249,166,31)" rx="2" ry="2" />
<text  x="876.17" y="607.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1074.8" y="565" width="0.9" height="15.0" fill="rgb(253,59,22)" rx="2" ry="2" />
<text  x="1077.79" y="575.5" ></text>
</g>
<g >
<title>llvm::CallSiteBase&lt;llvm::Function const, llvm::BasicBlock const, llvm::Value const, llvm::User const, llvm::Use const, llvm::Instruction const, llvm::CallInst const, llvm::InvokeInst const, llvm::CallBrInst const, llvm::Use const*&gt;::arg_begin (1 samples, 0.08%)</title><rect x="1128.8" y="741" width="0.9" height="15.0" fill="rgb(206,17,50)" rx="2" ry="2" />
<text  x="1131.79" y="751.5" ></text>
</g>
<g >
<title>llvm::SetVector&lt;llvm::Function*, llvm::SmallVector&lt;llvm::Function*, 8u&gt;, llvm::SmallDenseSet&lt;llvm::Function*, 8u, llvm::DenseMapInfo&lt;llvm::Function*&gt; &gt; &gt;::SetVector (1 samples, 0.08%)</title><rect x="802.1" y="677" width="0.9" height="15.0" fill="rgb(242,140,25)" rx="2" ry="2" />
<text  x="805.07" y="687.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::SetFunctionAttributes (1 samples, 0.08%)</title><rect x="1046.9" y="837" width="0.9" height="15.0" fill="rgb(240,27,40)" rx="2" ry="2" />
<text  x="1049.89" y="847.5" ></text>
</g>
<g >
<title>_int_realloc (1 samples, 0.08%)</title><rect x="28.9" y="309" width="0.9" height="15.0" fill="rgb(237,178,33)" rx="2" ry="2" />
<text  x="31.90" y="319.5" ></text>
</g>
<g >
<title>clang::TypeLoc::getBeginLoc (1 samples, 0.08%)</title><rect x="1088.3" y="645" width="0.9" height="15.0" fill="rgb(214,205,41)" rx="2" ry="2" />
<text  x="1091.29" y="655.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::SelectBasicBlock (1 samples, 0.08%)</title><rect x="1128.8" y="805" width="0.9" height="15.0" fill="rgb(236,188,3)" rx="2" ry="2" />
<text  x="1131.79" y="815.5" ></text>
</g>
<g >
<title>llvm::EVT::getScalarType (1 samples, 0.08%)</title><rect x="1107.2" y="597" width="0.9" height="15.0" fill="rgb(248,122,18)" rx="2" ry="2" />
<text  x="1110.19" y="607.5" ></text>
</g>
<g >
<title>llvm::InstrEmitter::AddOperand (1 samples, 0.08%)</title><rect x="246.7" y="629" width="0.9" height="15.0" fill="rgb(229,199,52)" rx="2" ry="2" />
<text  x="249.72" y="639.5" ></text>
</g>
<g >
<title>llvm::orc::LambdaSymbolResolver&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt; const&amp;)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}&gt;::lookup (3 samples, 0.23%)</title><rect x="747.2" y="549" width="2.7" height="15.0" fill="rgb(209,41,21)" rx="2" ry="2" />
<text  x="750.16" y="559.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetType (1 samples, 0.08%)</title><rect x="1008.2" y="821" width="0.9" height="15.0" fill="rgb(214,9,10)" rx="2" ry="2" />
<text  x="1011.18" y="831.5" ></text>
</g>
<g >
<title>clang::RecordDecl::LoadFieldsFromExternalStorage (1 samples, 0.08%)</title><rect x="1049.6" y="485" width="0.9" height="15.0" fill="rgb(234,37,46)" rx="2" ry="2" />
<text  x="1052.59" y="495.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::Compile (1 samples, 0.08%)</title><rect x="1100.9" y="949" width="0.9" height="15.0" fill="rgb(247,91,43)" rx="2" ry="2" />
<text  x="1103.89" y="959.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::tryOptimizeCall (1 samples, 0.08%)</title><rect x="825.5" y="581" width="0.9" height="15.0" fill="rgb(208,92,38)" rx="2" ry="2" />
<text  x="828.47" y="591.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::getSCEV (1 samples, 0.08%)</title><rect x="1129.7" y="773" width="0.9" height="15.0" fill="rgb(233,80,9)" rx="2" ry="2" />
<text  x="1132.69" y="783.5" ></text>
</g>
<g >
<title>[unknown] (15 samples, 1.14%)</title><rect x="1170.2" y="773" width="13.5" height="15.0" fill="rgb(212,153,51)" rx="2" ry="2" />
<text  x="1173.20" y="783.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitRedeclarableTemplateDecl (1 samples, 0.08%)</title><rect x="1012.7" y="869" width="0.9" height="15.0" fill="rgb(232,102,1)" rx="2" ry="2" />
<text  x="1015.68" y="879.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.08%)</title><rect x="1118.9" y="229" width="0.9" height="15.0" fill="rgb(244,44,33)" rx="2" ry="2" />
<text  x="1121.89" y="239.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentNameType (1 samples, 0.08%)</title><rect x="1065.8" y="869" width="0.9" height="15.0" fill="rgb(217,17,41)" rx="2" ry="2" />
<text  x="1068.79" y="879.5" ></text>
</g>
<g >
<title>TCling::~TCling (2 samples, 0.15%)</title><rect x="858.8" y="837" width="1.8" height="15.0" fill="rgb(213,51,4)" rx="2" ry="2" />
<text  x="861.77" y="847.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (1 samples, 0.08%)</title><rect x="28.9" y="325" width="0.9" height="15.0" fill="rgb(222,197,8)" rx="2" ry="2" />
<text  x="31.90" y="335.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.08%)</title><rect x="700.4" y="517" width="0.9" height="15.0" fill="rgb(220,55,7)" rx="2" ry="2" />
<text  x="703.36" y="527.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1074.8" y="437" width="0.9" height="15.0" fill="rgb(239,77,16)" rx="2" ry="2" />
<text  x="1077.79" y="447.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="28.0" y="261" width="0.9" height="15.0" fill="rgb(211,74,5)" rx="2" ry="2" />
<text  x="31.00" y="271.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke (1 samples, 0.08%)</title><rect x="1107.2" y="917" width="0.9" height="15.0" fill="rgb(218,212,1)" rx="2" ry="2" />
<text  x="1110.19" y="927.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;, void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;::LookupBucketFor&lt;void const*&gt; (1 samples, 0.08%)</title><rect x="228.7" y="661" width="0.9" height="15.0" fill="rgb(254,147,48)" rx="2" ry="2" />
<text  x="231.72" y="671.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCompoundStmtWithoutScope (7 samples, 0.53%)</title><rect x="1018.1" y="901" width="6.3" height="15.0" fill="rgb(222,59,17)" rx="2" ry="2" />
<text  x="1021.09" y="911.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.23%)</title><rect x="37.0" y="53" width="2.7" height="15.0" fill="rgb(238,15,38)" rx="2" ry="2" />
<text  x="40.00" y="63.5" ></text>
</g>
<g >
<title>llvm::AttributeSet::removeAttribute (1 samples, 0.08%)</title><rect x="1043.3" y="773" width="0.9" height="15.0" fill="rgb(211,7,18)" rx="2" ry="2" />
<text  x="1046.29" y="783.5" ></text>
</g>
<g >
<title>__nptl_set_robust (1 samples, 0.08%)</title><rect x="999.2" y="821" width="0.9" height="15.0" fill="rgb(211,14,40)" rx="2" ry="2" />
<text  x="1002.18" y="831.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;std::add_pointer, (anonymous namespace)::AggExprEmitter, void&gt;::Visit (1 samples, 0.08%)</title><rect x="1014.5" y="661" width="0.9" height="15.0" fill="rgb(250,50,32)" rx="2" ry="2" />
<text  x="1017.49" y="671.5" ></text>
</g>
<g >
<title>llvm::FortifiedLibCallSimplifier::optimizeCall (1 samples, 0.08%)</title><rect x="218.8" y="645" width="0.9" height="15.0" fill="rgb(208,119,28)" rx="2" ry="2" />
<text  x="221.82" y="655.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertTypeForMem (1 samples, 0.08%)</title><rect x="1048.7" y="869" width="0.9" height="15.0" fill="rgb(240,196,5)" rx="2" ry="2" />
<text  x="1051.69" y="879.5" ></text>
</g>
<g >
<title>clang::Sema::BuildMemberReferenceExpr (1 samples, 0.08%)</title><rect x="1052.3" y="837" width="0.9" height="15.0" fill="rgb(238,180,46)" rx="2" ry="2" />
<text  x="1055.29" y="847.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddDeclarationNameImpl (1 samples, 0.08%)</title><rect x="1048.7" y="325" width="0.9" height="15.0" fill="rgb(247,11,26)" rx="2" ry="2" />
<text  x="1051.69" y="335.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddTemplateArgument (1 samples, 0.08%)</title><rect x="1064.9" y="725" width="0.9" height="15.0" fill="rgb(218,76,48)" rx="2" ry="2" />
<text  x="1067.89" y="735.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (8 samples, 0.61%)</title><rect x="1130.6" y="805" width="7.2" height="15.0" fill="rgb(228,82,27)" rx="2" ry="2" />
<text  x="1133.59" y="815.5" ></text>
</g>
<g >
<title>clang::TemplateArgumentList::ComputeODRHash (1 samples, 0.08%)</title><rect x="1048.7" y="389" width="0.9" height="15.0" fill="rgb(214,209,54)" rx="2" ry="2" />
<text  x="1051.69" y="399.5" ></text>
</g>
<g >
<title>llvm::Argument::hasNonNullAttr (1 samples, 0.08%)</title><rect x="826.4" y="533" width="0.9" height="15.0" fill="rgb(236,52,52)" rx="2" ry="2" />
<text  x="829.37" y="543.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1161.2" y="757" width="0.9" height="15.0" fill="rgb(220,136,43)" rx="2" ry="2" />
<text  x="1164.20" y="767.5" ></text>
</g>
<g >
<title>llvm::AAResults::~AAResults (1 samples, 0.08%)</title><rect x="217.0" y="741" width="0.9" height="15.0" fill="rgb(221,121,53)" rx="2" ry="2" />
<text  x="220.02" y="751.5" ></text>
</g>
<g >
<title>llvm::AsmPrinter::doFinalization (1 samples, 0.08%)</title><rect x="839.9" y="613" width="0.9" height="15.0" fill="rgb(219,196,27)" rx="2" ry="2" />
<text  x="842.87" y="623.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.15%)</title><rect x="947.9" y="741" width="1.8" height="15.0" fill="rgb(219,32,0)" rx="2" ry="2" />
<text  x="950.88" y="751.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (1 samples, 0.08%)</title><rect x="1119.8" y="821" width="0.9" height="15.0" fill="rgb(206,198,31)" rx="2" ry="2" />
<text  x="1122.79" y="831.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::CompleteType (1 samples, 0.08%)</title><rect x="1098.2" y="757" width="0.9" height="15.0" fill="rgb(220,2,32)" rx="2" ry="2" />
<text  x="1101.19" y="767.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke (2 samples, 0.15%)</title><rect x="212.5" y="837" width="1.8" height="15.0" fill="rgb(241,156,48)" rx="2" ry="2" />
<text  x="215.52" y="847.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformFunctionTypeParams (1 samples, 0.08%)</title><rect x="1092.8" y="661" width="0.9" height="15.0" fill="rgb(244,132,20)" rx="2" ry="2" />
<text  x="1095.79" y="671.5" ></text>
</g>
<g >
<title>clang::Sema::PerformPendingInstantiations (1 samples, 0.08%)</title><rect x="1078.4" y="741" width="0.9" height="15.0" fill="rgb(219,53,36)" rx="2" ry="2" />
<text  x="1081.39" y="751.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1183.7" y="693" width="0.9" height="15.0" fill="rgb(227,101,45)" rx="2" ry="2" />
<text  x="1186.70" y="703.5" ></text>
</g>
<g >
<title>llvm::LibCallSimplifier::optimizeCall (1 samples, 0.08%)</title><rect x="825.5" y="565" width="0.9" height="15.0" fill="rgb(215,42,50)" rx="2" ry="2" />
<text  x="828.47" y="575.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertTypeForMem (1 samples, 0.08%)</title><rect x="1048.7" y="597" width="0.9" height="15.0" fill="rgb(206,40,16)" rx="2" ry="2" />
<text  x="1051.69" y="607.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXMemberCallExpr (1 samples, 0.08%)</title><rect x="1090.1" y="837" width="0.9" height="15.0" fill="rgb(252,87,35)" rx="2" ry="2" />
<text  x="1093.09" y="847.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateArguments&lt;clang::TemplateArgumentLoc const*&gt; (1 samples, 0.08%)</title><rect x="1089.2" y="709" width="0.9" height="15.0" fill="rgb(213,105,2)" rx="2" ry="2" />
<text  x="1092.19" y="719.5" ></text>
</g>
<g >
<title>execute_command (27 samples, 2.06%)</title><rect x="10.9" y="805" width="24.3" height="15.0" fill="rgb(209,152,20)" rx="2" ry="2" />
<text  x="13.90" y="815.5" >e..</text>
</g>
<g >
<title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::MachineBasicBlock, false&gt; &gt;::CalculateFromScratch (1 samples, 0.08%)</title><rect x="695.9" y="533" width="0.9" height="15.0" fill="rgb(239,96,40)" rx="2" ry="2" />
<text  x="698.86" y="543.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.08%)</title><rect x="1058.6" y="757" width="0.9" height="15.0" fill="rgb(247,159,52)" rx="2" ry="2" />
<text  x="1061.59" y="767.5" ></text>
</g>
<g >
<title>llvm::DataLayout::getAlignment (1 samples, 0.08%)</title><rect x="818.3" y="629" width="0.9" height="15.0" fill="rgb(229,116,21)" rx="2" ry="2" />
<text  x="821.27" y="639.5" ></text>
</g>
<g >
<title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::MachineBasicBlock, true&gt; &gt;::attachNewSubtree (1 samples, 0.08%)</title><rect x="704.9" y="517" width="0.9" height="15.0" fill="rgb(232,49,23)" rx="2" ry="2" />
<text  x="707.86" y="527.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1161.2" y="677" width="0.9" height="15.0" fill="rgb(226,77,42)" rx="2" ry="2" />
<text  x="1164.20" y="687.5" ></text>
</g>
<g >
<title>llvm::AttrBuilder::addAttribute (1 samples, 0.08%)</title><rect x="1038.8" y="645" width="0.9" height="15.0" fill="rgb(220,52,7)" rx="2" ry="2" />
<text  x="1041.79" y="655.5" ></text>
</g>
<g >
<title>cling::Interpreter::loadHeader (5 samples, 0.38%)</title><rect x="849.8" y="837" width="4.5" height="15.0" fill="rgb(244,52,5)" rx="2" ry="2" />
<text  x="852.77" y="847.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;std::add_pointer, (anonymous namespace)::AggExprEmitter, void&gt;::Visit (1 samples, 0.08%)</title><rect x="1014.5" y="741" width="0.9" height="15.0" fill="rgb(223,64,15)" rx="2" ry="2" />
<text  x="1017.49" y="751.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="946.1" y="693" width="0.9" height="15.0" fill="rgb(235,195,23)" rx="2" ry="2" />
<text  x="949.08" y="703.5" ></text>
</g>
<g >
<title>llvm::X86TargetLowering::LowerReturn (1 samples, 0.08%)</title><rect x="1119.8" y="709" width="0.9" height="15.0" fill="rgb(254,164,28)" rx="2" ry="2" />
<text  x="1122.79" y="719.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.23%)</title><rect x="1143.2" y="917" width="2.7" height="15.0" fill="rgb(218,186,30)" rx="2" ry="2" />
<text  x="1146.20" y="927.5" ></text>
</g>
<g >
<title>llvm::Expected&lt;unsigned long&gt;::~Expected (1 samples, 0.08%)</title><rect x="1007.3" y="693" width="0.9" height="15.0" fill="rgb(249,168,30)" rx="2" ry="2" />
<text  x="1010.28" y="703.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="999.2" y="789" width="0.9" height="15.0" fill="rgb(221,40,21)" rx="2" ry="2" />
<text  x="1002.18" y="799.5" ></text>
</g>
<g >
<title>llvm::raw_svector_ostream::write_impl (1 samples, 0.08%)</title><rect x="1025.3" y="821" width="0.9" height="15.0" fill="rgb(238,123,18)" rx="2" ry="2" />
<text  x="1028.29" y="831.5" ></text>
</g>
<g >
<title>isOdrUseContext (1 samples, 0.08%)</title><rect x="1079.3" y="581" width="0.9" height="15.0" fill="rgb(243,10,10)" rx="2" ry="2" />
<text  x="1082.29" y="591.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1145.9" y="869" width="0.9" height="15.0" fill="rgb(253,92,51)" rx="2" ry="2" />
<text  x="1148.90" y="879.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::verifyPreservedAnalysis (8 samples, 0.61%)</title><rect x="884.9" y="613" width="7.2" height="15.0" fill="rgb(221,189,20)" rx="2" ry="2" />
<text  x="887.87" y="623.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit (1 samples, 0.08%)</title><rect x="1059.5" y="805" width="0.9" height="15.0" fill="rgb(212,13,24)" rx="2" ry="2" />
<text  x="1062.49" y="815.5" ></text>
</g>
<g >
<title>llvm::SelectionDAG::ComputeNumSignBits (1 samples, 0.08%)</title><rect x="1107.2" y="629" width="0.9" height="15.0" fill="rgb(219,210,7)" rx="2" ry="2" />
<text  x="1110.19" y="639.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1145.9" y="853" width="0.9" height="15.0" fill="rgb(232,56,41)" rx="2" ry="2" />
<text  x="1148.90" y="863.5" ></text>
</g>
<g >
<title>llvm::SelectionDAG::getConstant (1 samples, 0.08%)</title><rect x="1119.8" y="677" width="0.9" height="15.0" fill="rgb(223,101,11)" rx="2" ry="2" />
<text  x="1122.79" y="687.5" ></text>
</g>
<g >
<title>[unknown] (15 samples, 1.14%)</title><rect x="1170.2" y="757" width="13.5" height="15.0" fill="rgb(252,204,0)" rx="2" ry="2" />
<text  x="1173.20" y="767.5" ></text>
</g>
<g >
<title>SubstDefaultTemplateArgument (1 samples, 0.08%)</title><rect x="1086.5" y="837" width="0.9" height="15.0" fill="rgb(240,32,41)" rx="2" ry="2" />
<text  x="1089.49" y="847.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::Compile (5 samples, 0.38%)</title><rect x="849.8" y="805" width="4.5" height="15.0" fill="rgb(211,141,50)" rx="2" ry="2" />
<text  x="852.77" y="815.5" ></text>
</g>
<g >
<title>clang::ASTReader::getMacro (1 samples, 0.08%)</title><rect x="942.5" y="485" width="0.9" height="15.0" fill="rgb(253,26,52)" rx="2" ry="2" />
<text  x="945.48" y="495.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="43.3" y="789" width="0.9" height="15.0" fill="rgb(234,208,15)" rx="2" ry="2" />
<text  x="46.30" y="799.5" ></text>
</g>
<g >
<title>expand_string_assignment (16 samples, 1.22%)</title><rect x="15.4" y="389" width="14.4" height="15.0" fill="rgb(217,81,18)" rx="2" ry="2" />
<text  x="18.40" y="399.5" ></text>
</g>
<g >
<title>llvm::PoisoningVH&lt;llvm::BasicBlock&gt;::~PoisoningVH (1 samples, 0.08%)</title><rect x="816.5" y="565" width="0.9" height="15.0" fill="rgb(226,187,30)" rx="2" ry="2" />
<text  x="819.47" y="575.5" ></text>
</g>
<g >
<title>llvm::removeUnreachableBlocks (1 samples, 0.08%)</title><rect x="831.8" y="597" width="0.9" height="15.0" fill="rgb(245,49,16)" rx="2" ry="2" />
<text  x="834.77" y="607.5" ></text>
</g>
<g >
<title>execute_command_internal (4 samples, 0.31%)</title><rect x="36.1" y="901" width="3.6" height="15.0" fill="rgb(207,108,14)" rx="2" ry="2" />
<text  x="39.10" y="911.5" ></text>
</g>
<g >
<title>cling::MetaParser::isCommand (2 samples, 0.15%)</title><rect x="202.6" y="917" width="1.8" height="15.0" fill="rgb(245,23,48)" rx="2" ry="2" />
<text  x="205.62" y="927.5" ></text>
</g>
<g >
<title>parse_and_execute (4 samples, 0.31%)</title><rect x="36.1" y="165" width="3.6" height="15.0" fill="rgb(220,223,8)" rx="2" ry="2" />
<text  x="39.10" y="175.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;, void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;::LookupBucketFor&lt;void const*&gt; (1 samples, 0.08%)</title><rect x="885.8" y="581" width="0.9" height="15.0" fill="rgb(221,184,27)" rx="2" ry="2" />
<text  x="888.77" y="591.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.08%)</title><rect x="1055.9" y="821" width="0.9" height="15.0" fill="rgb(226,55,19)" rx="2" ry="2" />
<text  x="1058.89" y="831.5" ></text>
</g>
<g >
<title>execute_command_internal (4 samples, 0.31%)</title><rect x="36.1" y="741" width="3.6" height="15.0" fill="rgb(254,104,20)" rx="2" ry="2" />
<text  x="39.10" y="751.5" ></text>
</g>
<g >
<title>command_substitute (1 samples, 0.08%)</title><rect x="35.2" y="437" width="0.9" height="15.0" fill="rgb(247,1,52)" rx="2" ry="2" />
<text  x="38.20" y="447.5" ></text>
</g>
<g >
<title>cling::Interpreter::executeTransaction (7 samples, 0.53%)</title><rect x="831.8" y="709" width="6.3" height="15.0" fill="rgb(249,194,20)" rx="2" ry="2" />
<text  x="834.77" y="719.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (15 samples, 1.14%)</title><rect x="1033.4" y="933" width="13.5" height="15.0" fill="rgb(247,200,53)" rx="2" ry="2" />
<text  x="1036.39" y="943.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddTemplateArgument (1 samples, 0.08%)</title><rect x="1097.3" y="597" width="0.9" height="15.0" fill="rgb(243,112,19)" rx="2" ry="2" />
<text  x="1100.29" y="607.5" ></text>
</g>
<g >
<title>llvm::formLCSSARecursively (1 samples, 0.08%)</title><rect x="830.0" y="645" width="0.9" height="15.0" fill="rgb(243,128,8)" rx="2" ry="2" />
<text  x="832.97" y="655.5" ></text>
</g>
<g >
<title>[unknown] (18 samples, 1.37%)</title><rect x="1167.5" y="805" width="16.2" height="15.0" fill="rgb(233,153,17)" rx="2" ry="2" />
<text  x="1170.50" y="815.5" ></text>
</g>
<g >
<title>cling::Interpreter::loadHeader (1 samples, 0.08%)</title><rect x="203.5" y="853" width="0.9" height="15.0" fill="rgb(213,228,6)" rx="2" ry="2" />
<text  x="206.52" y="863.5" ></text>
</g>
<g >
<title>clang::InitializationSequence::Perform (1 samples, 0.08%)</title><rect x="1082.9" y="933" width="0.9" height="15.0" fill="rgb(210,66,35)" rx="2" ry="2" />
<text  x="1085.89" y="943.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetType (1 samples, 0.08%)</title><rect x="1051.4" y="597" width="0.9" height="15.0" fill="rgb(209,29,35)" rx="2" ry="2" />
<text  x="1054.39" y="607.5" ></text>
</g>
<g >
<title>clang::LinkageComputer::computeLVForDecl (1 samples, 0.08%)</title><rect x="1016.3" y="565" width="0.9" height="15.0" fill="rgb(221,65,11)" rx="2" ry="2" />
<text  x="1019.29" y="575.5" ></text>
</g>
<g >
<title>llvm::AttributeList::addAttribute (1 samples, 0.08%)</title><rect x="1039.7" y="709" width="0.9" height="15.0" fill="rgb(211,46,54)" rx="2" ry="2" />
<text  x="1042.69" y="719.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.08%)</title><rect x="850.7" y="613" width="0.9" height="15.0" fill="rgb(228,29,34)" rx="2" ry="2" />
<text  x="853.67" y="623.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitStmt (1 samples, 0.08%)</title><rect x="1014.5" y="901" width="0.9" height="15.0" fill="rgb(240,115,40)" rx="2" ry="2" />
<text  x="1017.49" y="911.5" ></text>
</g>
<g >
<title>llvm::Pass::getAnalysisIfAvailable&lt;llvm::CFLSteensAAWrapperPass&gt; (1 samples, 0.08%)</title><rect x="228.7" y="725" width="0.9" height="15.0" fill="rgb(213,196,44)" rx="2" ry="2" />
<text  x="231.72" y="735.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadTemplateName (1 samples, 0.08%)</title><rect x="1012.7" y="933" width="0.9" height="15.0" fill="rgb(242,40,37)" rx="2" ry="2" />
<text  x="1015.68" y="943.5" ></text>
</g>
<g >
<title>clang::ASTReader::FindExternalVisibleDeclsByName (1 samples, 0.08%)</title><rect x="1059.5" y="853" width="0.9" height="15.0" fill="rgb(243,84,39)" rx="2" ry="2" />
<text  x="1062.49" y="863.5" ></text>
</g>
<g >
<title>operator&gt;&gt;&lt;TObject&gt; (1 samples, 0.08%)</title><rect x="448.3" y="757" width="0.9" height="15.0" fill="rgb(246,21,29)" rx="2" ry="2" />
<text  x="451.34" y="767.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="939.8" y="677" width="0.9" height="15.0" fill="rgb(235,76,4)" rx="2" ry="2" />
<text  x="942.78" y="687.5" ></text>
</g>
<g >
<title>clang::Redeclarable&lt;clang::FunctionDecl&gt;::DeclLink::getPrevious (1 samples, 0.08%)</title><rect x="1018.1" y="597" width="0.9" height="15.0" fill="rgb(253,157,52)" rx="2" ry="2" />
<text  x="1021.09" y="607.5" ></text>
</g>
<g >
<title>handleLValueToRValueConversion (1 samples, 0.08%)</title><rect x="1023.5" y="645" width="0.9" height="15.0" fill="rgb(228,33,38)" rx="2" ry="2" />
<text  x="1026.49" y="655.5" ></text>
</g>
<g >
<title>clang::Sema::CheckFieldDecl (1 samples, 0.08%)</title><rect x="1092.8" y="933" width="0.9" height="15.0" fill="rgb(232,141,30)" rx="2" ry="2" />
<text  x="1095.79" y="943.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.15%)</title><rect x="971.3" y="741" width="1.8" height="15.0" fill="rgb(237,203,13)" rx="2" ry="2" />
<text  x="974.28" y="751.5" ></text>
</g>
<g >
<title>Append (1 samples, 0.08%)</title><rect x="1087.4" y="533" width="0.9" height="15.0" fill="rgb(214,55,48)" rx="2" ry="2" />
<text  x="1090.39" y="543.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetType (1 samples, 0.08%)</title><rect x="1071.2" y="677" width="0.9" height="15.0" fill="rgb(212,102,13)" rx="2" ry="2" />
<text  x="1074.19" y="687.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::getBackedgeTakenInfo (1 samples, 0.08%)</title><rect x="1129.7" y="645" width="0.9" height="15.0" fill="rgb(220,164,46)" rx="2" ry="2" />
<text  x="1132.69" y="655.5" ></text>
</g>
<g >
<title>clang::Sema::SubstBaseSpecifiers (1 samples, 0.08%)</title><rect x="1064.0" y="757" width="0.9" height="15.0" fill="rgb(219,38,22)" rx="2" ry="2" />
<text  x="1066.99" y="767.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddType (1 samples, 0.08%)</title><rect x="1072.1" y="661" width="0.9" height="15.0" fill="rgb(225,162,26)" rx="2" ry="2" />
<text  x="1075.09" y="671.5" ></text>
</g>
<g >
<title>llvm::StringMapImpl::LookupBucketFor (1 samples, 0.08%)</title><rect x="747.2" y="421" width="0.9" height="15.0" fill="rgb(234,109,42)" rx="2" ry="2" />
<text  x="750.16" y="431.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::executeWrapper (1 samples, 0.08%)</title><rect x="202.6" y="837" width="0.9" height="15.0" fill="rgb(240,42,47)" rx="2" ry="2" />
<text  x="205.62" y="847.5" ></text>
</g>
<g >
<title>TCling::DataMemberInfo_Factory (1 samples, 0.08%)</title><rect x="447.4" y="549" width="0.9" height="15.0" fill="rgb(227,150,36)" rx="2" ry="2" />
<text  x="450.44" y="559.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::run (5 samples, 0.38%)</title><rect x="906.5" y="565" width="4.5" height="15.0" fill="rgb(243,181,45)" rx="2" ry="2" />
<text  x="909.48" y="575.5" ></text>
</g>
<g >
<title>clang::RecursiveASTVisitor&lt;(anonymous namespace)::PointerCheckInjector&gt;::dataTraverseNode (1 samples, 0.08%)</title><rect x="855.2" y="533" width="0.9" height="15.0" fill="rgb(249,198,34)" rx="2" ry="2" />
<text  x="858.17" y="543.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.15%)</title><rect x="971.3" y="725" width="1.8" height="15.0" fill="rgb(224,91,24)" rx="2" ry="2" />
<text  x="974.28" y="735.5" ></text>
</g>
<g >
<title>llvm::APInt::operator[] (1 samples, 0.08%)</title><rect x="1109.9" y="453" width="0.9" height="15.0" fill="rgb(253,8,38)" rx="2" ry="2" />
<text  x="1112.89" y="463.5" ></text>
</g>
<g >
<title>TROOT::Macro (1 samples, 0.08%)</title><rect x="838.1" y="853" width="0.9" height="15.0" fill="rgb(239,123,10)" rx="2" ry="2" />
<text  x="841.07" y="863.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCompoundStmtWithoutScope (1 samples, 0.08%)</title><rect x="1040.6" y="741" width="0.9" height="15.0" fill="rgb(242,44,14)" rx="2" ry="2" />
<text  x="1043.59" y="751.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::ParseInternal (1 samples, 0.08%)</title><rect x="855.2" y="661" width="0.9" height="15.0" fill="rgb(238,219,22)" rx="2" ry="2" />
<text  x="858.17" y="671.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertRecordDeclType (1 samples, 0.08%)</title><rect x="1049.6" y="741" width="0.9" height="15.0" fill="rgb(254,114,20)" rx="2" ry="2" />
<text  x="1052.59" y="751.5" ></text>
</g>
<g >
<title>llvm::getPassTimer (1 samples, 0.08%)</title><rect x="884.0" y="581" width="0.9" height="15.0" fill="rgb(219,49,42)" rx="2" ry="2" />
<text  x="886.97" y="591.5" ></text>
</g>
<g >
<title>clang::Parser::ParseTopLevelDecl (1 samples, 0.08%)</title><rect x="942.5" y="773" width="0.9" height="15.0" fill="rgb(245,190,16)" rx="2" ry="2" />
<text  x="945.48" y="783.5" ></text>
</g>
<g >
<title>clang::Sema::ActOnTemplateIdType (1 samples, 0.08%)</title><rect x="1109.0" y="629" width="0.9" height="15.0" fill="rgb(223,119,8)" rx="2" ry="2" />
<text  x="1111.99" y="639.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertRecordDeclType (1 samples, 0.08%)</title><rect x="1049.6" y="933" width="0.9" height="15.0" fill="rgb(205,139,16)" rx="2" ry="2" />
<text  x="1052.59" y="943.5" ></text>
</g>
<g >
<title>execute_command (16 samples, 1.22%)</title><rect x="15.4" y="517" width="14.4" height="15.0" fill="rgb(244,214,32)" rx="2" ry="2" />
<text  x="18.40" y="527.5" ></text>
</g>
<g >
<title>llvm::InstructionCombiningPass::runOnFunction (5 samples, 0.38%)</title><rect x="217.9" y="757" width="4.5" height="15.0" fill="rgb(206,154,47)" rx="2" ry="2" />
<text  x="220.92" y="767.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.08%)</title><rect x="704.0" y="485" width="0.9" height="15.0" fill="rgb(251,112,3)" rx="2" ry="2" />
<text  x="706.96" y="495.5" ></text>
</g>
<g >
<title>clang::Expr::EvaluateAsRValue (2 samples, 0.15%)</title><rect x="1021.7" y="837" width="1.8" height="15.0" fill="rgb(217,152,31)" rx="2" ry="2" />
<text  x="1024.69" y="847.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::getUnknown (1 samples, 0.08%)</title><rect x="1118.0" y="581" width="0.9" height="15.0" fill="rgb(217,65,23)" rx="2" ry="2" />
<text  x="1120.99" y="591.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (3 samples, 0.23%)</title><rect x="1127.0" y="869" width="2.7" height="15.0" fill="rgb(211,32,46)" rx="2" ry="2" />
<text  x="1129.99" y="879.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadTemplateArgumentList (1 samples, 0.08%)</title><rect x="1010.0" y="789" width="0.9" height="15.0" fill="rgb(221,225,44)" rx="2" ry="2" />
<text  x="1012.98" y="799.5" ></text>
</g>
<g >
<title>clang::ASTReader::FindExternalVisibleDeclsByName (2 samples, 0.15%)</title><rect x="1029.8" y="757" width="1.8" height="15.0" fill="rgb(251,135,15)" rx="2" ry="2" />
<text  x="1032.79" y="767.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="995.6" y="837" width="0.9" height="15.0" fill="rgb(225,137,47)" rx="2" ry="2" />
<text  x="998.58" y="847.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="24.4" y="197" width="0.9" height="15.0" fill="rgb(221,88,31)" rx="2" ry="2" />
<text  x="27.40" y="207.5" ></text>
</g>
<g >
<title>llvm::AttributeList::addAttributes (1 samples, 0.08%)</title><rect x="1034.3" y="517" width="0.9" height="15.0" fill="rgb(225,157,26)" rx="2" ry="2" />
<text  x="1037.29" y="527.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::GetCPUAndFeaturesAttributes (1 samples, 0.08%)</title><rect x="1019.9" y="613" width="0.9" height="15.0" fill="rgb(221,150,9)" rx="2" ry="2" />
<text  x="1022.89" y="623.5" ></text>
</g>
<g >
<title>clang::ASTReader::readTypeRecord (2 samples, 0.15%)</title><rect x="1007.3" y="901" width="1.8" height="15.0" fill="rgb(224,76,36)" rx="2" ry="2" />
<text  x="1010.28" y="911.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::GetExternalDeclStmt (1 samples, 0.08%)</title><rect x="1077.5" y="885" width="0.9" height="15.0" fill="rgb(237,53,29)" rx="2" ry="2" />
<text  x="1080.49" y="895.5" ></text>
</g>
<g >
<title>reader_loop (4 samples, 0.31%)</title><rect x="36.1" y="933" width="3.6" height="15.0" fill="rgb(253,121,33)" rx="2" ry="2" />
<text  x="39.10" y="943.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::foldICmpEquality (1 samples, 0.08%)</title><rect x="833.6" y="581" width="0.9" height="15.0" fill="rgb(218,154,26)" rx="2" ry="2" />
<text  x="836.57" y="591.5" ></text>
</g>
<g >
<title>llvm::IVUsersWrapperPass::runOnLoop (1 samples, 0.08%)</title><rect x="1129.7" y="853" width="0.9" height="15.0" fill="rgb(232,225,1)" rx="2" ry="2" />
<text  x="1132.69" y="863.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType (1 samples, 0.08%)</title><rect x="1088.3" y="757" width="0.9" height="15.0" fill="rgb(254,33,28)" rx="2" ry="2" />
<text  x="1091.29" y="767.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (1 samples, 0.08%)</title><rect x="911.9" y="597" width="0.9" height="15.0" fill="rgb(229,54,45)" rx="2" ry="2" />
<text  x="914.88" y="607.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition (1 samples, 0.08%)</title><rect x="1111.7" y="677" width="0.9" height="15.0" fill="rgb(247,186,28)" rx="2" ry="2" />
<text  x="1114.69" y="687.5" ></text>
</g>
<g >
<title>[bash] (16 samples, 1.22%)</title><rect x="15.4" y="405" width="14.4" height="15.0" fill="rgb(234,187,6)" rx="2" ry="2" />
<text  x="18.40" y="415.5" ></text>
</g>
<g >
<title>llvm::ValueHandleBase::AddToUseList (1 samples, 0.08%)</title><rect x="1118.0" y="565" width="0.9" height="15.0" fill="rgb(239,111,10)" rx="2" ry="2" />
<text  x="1120.99" y="575.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::getAddExpr (1 samples, 0.08%)</title><rect x="1129.7" y="709" width="0.9" height="15.0" fill="rgb(210,176,28)" rx="2" ry="2" />
<text  x="1132.69" y="719.5" ></text>
</g>
<g >
<title>llvm::DenseMap&lt;clang::Decl const*, clang::CodeGen::Address, llvm::DenseMapInfo&lt;clang::Decl const*&gt;, llvm::detail::DenseMapPair&lt;clang::Decl const*, clang::CodeGen::Address&gt; &gt;::grow (1 samples, 0.08%)</title><rect x="1024.4" y="837" width="0.9" height="15.0" fill="rgb(205,111,8)" rx="2" ry="2" />
<text  x="1027.39" y="847.5" ></text>
</g>
<g >
<title>clang::ASTReader::readTypeRecord (1 samples, 0.08%)</title><rect x="1010.0" y="661" width="0.9" height="15.0" fill="rgb(239,201,2)" rx="2" ry="2" />
<text  x="1012.98" y="671.5" ></text>
</g>
<g >
<title>clang::Sema::SubstBaseSpecifiers (1 samples, 0.08%)</title><rect x="1100.0" y="805" width="0.9" height="15.0" fill="rgb(252,107,31)" rx="2" ry="2" />
<text  x="1102.99" y="815.5" ></text>
</g>
<g >
<title>llvm::PopulateLoopsDFS&lt;llvm::BasicBlock, llvm::Loop&gt;::traverse (1 samples, 0.08%)</title><rect x="231.4" y="709" width="0.9" height="15.0" fill="rgb(217,82,29)" rx="2" ry="2" />
<text  x="234.42" y="719.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="995.6" y="821" width="0.9" height="15.0" fill="rgb(253,91,47)" rx="2" ry="2" />
<text  x="998.58" y="831.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.08%)</title><rect x="1092.8" y="613" width="0.9" height="15.0" fill="rgb(216,11,48)" rx="2" ry="2" />
<text  x="1095.79" y="623.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadTemplateName (1 samples, 0.08%)</title><rect x="1012.7" y="709" width="0.9" height="15.0" fill="rgb(231,108,25)" rx="2" ry="2" />
<text  x="1015.68" y="719.5" ></text>
</g>
<g >
<title>llvm::sys::DynamicLibrary::SearchForAddressOfSymbol (1 samples, 0.08%)</title><rect x="865.1" y="613" width="0.9" height="15.0" fill="rgb(244,164,48)" rx="2" ry="2" />
<text  x="868.07" y="623.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallExpr (1 samples, 0.08%)</title><rect x="1090.1" y="853" width="0.9" height="15.0" fill="rgb(223,110,24)" rx="2" ry="2" />
<text  x="1093.09" y="863.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitCXXMethodDecl (1 samples, 0.08%)</title><rect x="1059.5" y="789" width="0.9" height="15.0" fill="rgb(228,128,54)" rx="2" ry="2" />
<text  x="1062.49" y="799.5" ></text>
</g>
<g >
<title>_dl_init (6 samples, 0.46%)</title><rect x="1001.9" y="933" width="5.4" height="15.0" fill="rgb(231,202,18)" rx="2" ry="2" />
<text  x="1004.88" y="943.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyld::finalizeWithMemoryManagerLocking (1 samples, 0.08%)</title><rect x="1110.8" y="837" width="0.9" height="15.0" fill="rgb(227,21,0)" rx="2" ry="2" />
<text  x="1113.79" y="847.5" ></text>
</g>
<g >
<title>execute_command (4 samples, 0.31%)</title><rect x="36.1" y="773" width="3.6" height="15.0" fill="rgb(248,228,48)" rx="2" ry="2" />
<text  x="39.10" y="783.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::NotifyLazyFunctionCreators (3 samples, 0.23%)</title><rect x="747.2" y="517" width="2.7" height="15.0" fill="rgb(247,72,12)" rx="2" ry="2" />
<text  x="750.16" y="527.5" ></text>
</g>
<g >
<title>TCling::DeepAutoLoadImpl (1 samples, 0.08%)</title><rect x="1098.2" y="677" width="0.9" height="15.0" fill="rgb(220,12,42)" rx="2" ry="2" />
<text  x="1101.19" y="687.5" ></text>
</g>
<g >
<title>llvm::SmallVectorBase::grow_pod (1 samples, 0.08%)</title><rect x="249.4" y="613" width="0.9" height="15.0" fill="rgb(230,216,39)" rx="2" ry="2" />
<text  x="252.42" y="623.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ComputeRecordLayout (1 samples, 0.08%)</title><rect x="1048.7" y="757" width="0.9" height="15.0" fill="rgb(210,6,16)" rx="2" ry="2" />
<text  x="1051.69" y="767.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1162.1" y="821" width="0.9" height="15.0" fill="rgb(207,68,11)" rx="2" ry="2" />
<text  x="1165.10" y="831.5" ></text>
</g>
<g >
<title>llvm::MachineFunctionPass::runOnFunction (1 samples, 0.08%)</title><rect x="1110.8" y="661" width="0.9" height="15.0" fill="rgb(232,39,40)" rx="2" ry="2" />
<text  x="1113.79" y="671.5" ></text>
</g>
<g >
<title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::DeleteReachable (1 samples, 0.08%)</title><rect x="851.6" y="629" width="0.9" height="15.0" fill="rgb(228,207,15)" rx="2" ry="2" />
<text  x="854.57" y="639.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (1 samples, 0.08%)</title><rect x="1034.3" y="485" width="0.9" height="15.0" fill="rgb(238,114,35)" rx="2" ry="2" />
<text  x="1037.29" y="495.5" ></text>
</g>
<g >
<title>TCling::ProcessLineSynch (1 samples, 0.08%)</title><rect x="838.1" y="805" width="0.9" height="15.0" fill="rgb(213,40,25)" rx="2" ry="2" />
<text  x="841.07" y="815.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition (1 samples, 0.08%)</title><rect x="1084.7" y="869" width="0.9" height="15.0" fill="rgb(228,228,20)" rx="2" ry="2" />
<text  x="1087.69" y="879.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.23%)</title><rect x="11.8" y="341" width="2.7" height="15.0" fill="rgb(219,95,46)" rx="2" ry="2" />
<text  x="14.80" y="351.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.08%)</title><rect x="35.2" y="581" width="0.9" height="15.0" fill="rgb(219,177,0)" rx="2" ry="2" />
<text  x="38.20" y="591.5" ></text>
</g>
<g >
<title>clang::FunctionDecl::getBody (1 samples, 0.08%)</title><rect x="1077.5" y="901" width="0.9" height="15.0" fill="rgb(234,220,21)" rx="2" ry="2" />
<text  x="1080.49" y="911.5" ></text>
</g>
<g >
<title>ROOT::Internal::RDF::InterpreterCalc (53 samples, 4.04%)</title><rect x="214.3" y="917" width="47.7" height="15.0" fill="rgb(230,208,16)" rx="2" ry="2" />
<text  x="217.32" y="927.5" >ROOT..</text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertRecordDeclType (1 samples, 0.08%)</title><rect x="1048.7" y="709" width="0.9" height="15.0" fill="rgb(230,68,44)" rx="2" ry="2" />
<text  x="1051.69" y="719.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::commitTransaction (1 samples, 0.08%)</title><rect x="203.5" y="805" width="0.9" height="15.0" fill="rgb(219,112,34)" rx="2" ry="2" />
<text  x="206.52" y="815.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::runOnMachineFunction (2 samples, 0.15%)</title><rect x="1125.2" y="869" width="1.8" height="15.0" fill="rgb(241,153,43)" rx="2" ry="2" />
<text  x="1128.19" y="879.5" ></text>
</g>
<g >
<title>operator() (2 samples, 0.15%)</title><rect x="212.5" y="917" width="1.8" height="15.0" fill="rgb(228,83,15)" rx="2" ry="2" />
<text  x="215.52" y="927.5" ></text>
</g>
<g >
<title>clang::DeclContext::addHiddenDecl (1 samples, 0.08%)</title><rect x="1056.8" y="821" width="0.9" height="15.0" fill="rgb(224,33,54)" rx="2" ry="2" />
<text  x="1059.79" y="831.5" ></text>
</g>
<g >
<title>llvm::SmallPtrSetImpl&lt;llvm::MachineBasicBlock*&gt;::insert (1 samples, 0.08%)</title><rect x="244.9" y="661" width="0.9" height="15.0" fill="rgb(252,108,3)" rx="2" ry="2" />
<text  x="247.92" y="671.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::getMangledName (1 samples, 0.08%)</title><rect x="1025.3" y="869" width="0.9" height="15.0" fill="rgb(246,224,53)" rx="2" ry="2" />
<text  x="1028.29" y="879.5" ></text>
</g>
<g >
<title>?? (5 samples, 0.38%)</title><rect x="953.3" y="837" width="4.5" height="15.0" fill="rgb(206,169,30)" rx="2" ry="2" />
<text  x="956.28" y="847.5" ></text>
</g>
<g >
<title>combineInstructionsOverFunction (1 samples, 0.08%)</title><rect x="857.0" y="629" width="0.9" height="15.0" fill="rgb(211,100,35)" rx="2" ry="2" />
<text  x="859.97" y="639.5" ></text>
</g>
<g >
<title>dl_main (5 samples, 0.38%)</title><rect x="39.7" y="901" width="4.5" height="15.0" fill="rgb(209,158,25)" rx="2" ry="2" />
<text  x="42.70" y="911.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertTypeForMem (1 samples, 0.08%)</title><rect x="1048.7" y="805" width="0.9" height="15.0" fill="rgb(247,227,12)" rx="2" ry="2" />
<text  x="1051.69" y="815.5" ></text>
</g>
<g >
<title>execute_command (22 samples, 1.68%)</title><rect x="15.4" y="661" width="19.8" height="15.0" fill="rgb(236,218,31)" rx="2" ry="2" />
<text  x="18.40" y="671.5" ></text>
</g>
<g >
<title>cling::Interpreter::DeclareInternal (1 samples, 0.08%)</title><rect x="857.0" y="757" width="0.9" height="15.0" fill="rgb(245,173,52)" rx="2" ry="2" />
<text  x="859.97" y="767.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (1 samples, 0.08%)</title><rect x="1061.3" y="789" width="0.9" height="15.0" fill="rgb(206,2,28)" rx="2" ry="2" />
<text  x="1064.29" y="799.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::Compile (1 samples, 0.08%)</title><rect x="838.1" y="677" width="0.9" height="15.0" fill="rgb(254,35,21)" rx="2" ry="2" />
<text  x="841.07" y="687.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit (1 samples, 0.08%)</title><rect x="1051.4" y="821" width="0.9" height="15.0" fill="rgb(231,169,0)" rx="2" ry="2" />
<text  x="1054.39" y="831.5" ></text>
</g>
<g >
<title>llvm::MCObjectStreamer::EmitInstruction (1 samples, 0.08%)</title><rect x="847.1" y="517" width="0.9" height="15.0" fill="rgb(232,174,7)" rx="2" ry="2" />
<text  x="850.07" y="527.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::Compile (1 samples, 0.08%)</title><rect x="203.5" y="821" width="0.9" height="15.0" fill="rgb(221,98,49)" rx="2" ry="2" />
<text  x="206.52" y="831.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.08%)</title><rect x="1098.2" y="837" width="0.9" height="15.0" fill="rgb(251,138,50)" rx="2" ry="2" />
<text  x="1101.19" y="847.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition (1 samples, 0.08%)</title><rect x="1025.3" y="901" width="0.9" height="15.0" fill="rgb(245,117,13)" rx="2" ry="2" />
<text  x="1028.29" y="911.5" ></text>
</g>
<g >
<title>llvm::AttributeList::addAttribute (1 samples, 0.08%)</title><rect x="1034.3" y="533" width="0.9" height="15.0" fill="rgb(245,229,46)" rx="2" ry="2" />
<text  x="1037.29" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;clang::CXXBasePath, std::allocator&lt;clang::CXXBasePath&gt; &gt;::_M_clear (1 samples, 0.08%)</title><rect x="673.4" y="629" width="0.9" height="15.0" fill="rgb(212,10,7)" rx="2" ry="2" />
<text  x="676.36" y="639.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord (1 samples, 0.08%)</title><rect x="1059.5" y="741" width="0.9" height="15.0" fill="rgb(226,200,20)" rx="2" ry="2" />
<text  x="1062.49" y="751.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertTypeForMem (1 samples, 0.08%)</title><rect x="1048.7" y="837" width="0.9" height="15.0" fill="rgb(206,72,48)" rx="2" ry="2" />
<text  x="1051.69" y="847.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitFunctionTemplateDecl (1 samples, 0.08%)</title><rect x="1009.1" y="885" width="0.9" height="15.0" fill="rgb(228,167,49)" rx="2" ry="2" />
<text  x="1012.08" y="895.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::visitICmpInst (1 samples, 0.08%)</title><rect x="833.6" y="597" width="0.9" height="15.0" fill="rgb(236,184,12)" rx="2" ry="2" />
<text  x="836.57" y="607.5" ></text>
</g>
<g >
<title>cling::MetaProcessor::process (16 samples, 1.22%)</title><rect x="839.9" y="917" width="14.4" height="15.0" fill="rgb(208,58,22)" rx="2" ry="2" />
<text  x="842.87" y="927.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::codegenCXXStructor (1 samples, 0.08%)</title><rect x="1045.1" y="837" width="0.9" height="15.0" fill="rgb(208,0,49)" rx="2" ry="2" />
<text  x="1048.09" y="847.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::GenerateCode (1 samples, 0.08%)</title><rect x="1041.5" y="789" width="0.9" height="15.0" fill="rgb(210,79,19)" rx="2" ry="2" />
<text  x="1044.49" y="799.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (34 samples, 2.59%)</title><rect x="866.9" y="629" width="30.6" height="15.0" fill="rgb(213,214,32)" rx="2" ry="2" />
<text  x="869.87" y="639.5" >ll..</text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.08%)</title><rect x="1112.6" y="725" width="0.9" height="15.0" fill="rgb(246,192,16)" rx="2" ry="2" />
<text  x="1115.59" y="735.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (3 samples, 0.23%)</title><rect x="1033.4" y="677" width="2.7" height="15.0" fill="rgb(246,18,44)" rx="2" ry="2" />
<text  x="1036.39" y="687.5" ></text>
</g>
<g >
<title>clang::ASTContext::getTemplateTypeParmType (1 samples, 0.08%)</title><rect x="1010.9" y="725" width="0.9" height="15.0" fill="rgb(229,193,10)" rx="2" ry="2" />
<text  x="1013.88" y="735.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::executeWrapper (5 samples, 0.38%)</title><rect x="1102.7" y="917" width="4.5" height="15.0" fill="rgb(234,214,54)" rx="2" ry="2" />
<text  x="1105.69" y="927.5" ></text>
</g>
<g >
<title>dlopen_doit (1 samples, 0.08%)</title><rect x="991.1" y="805" width="0.9" height="15.0" fill="rgb(237,193,31)" rx="2" ry="2" />
<text  x="994.08" y="815.5" ></text>
</g>
<g >
<title>llvm::sroa::SROALegacyPass::runOnFunction (2 samples, 0.15%)</title><rect x="800.3" y="645" width="1.8" height="15.0" fill="rgb(210,156,2)" rx="2" ry="2" />
<text  x="803.27" y="655.5" ></text>
</g>
<g >
<title>llvm::BasicAAResult::getModRefBehavior (1 samples, 0.08%)</title><rect x="829.1" y="517" width="0.9" height="15.0" fill="rgb(237,105,51)" rx="2" ry="2" />
<text  x="832.07" y="527.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveExternalSymbols (11 samples, 0.84%)</title><rect x="839.9" y="741" width="9.9" height="15.0" fill="rgb(216,21,40)" rx="2" ry="2" />
<text  x="842.87" y="751.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl (1 samples, 0.08%)</title><rect x="1097.3" y="869" width="0.9" height="15.0" fill="rgb(206,38,37)" rx="2" ry="2" />
<text  x="1100.29" y="879.5" ></text>
</g>
<g >
<title>unset_bash_input (1 samples, 0.08%)</title><rect x="34.3" y="565" width="0.9" height="15.0" fill="rgb(252,150,7)" rx="2" ry="2" />
<text  x="37.30" y="575.5" ></text>
</g>
<g >
<title>TROOT::RegisterModule (1 samples, 0.08%)</title><rect x="1118.9" y="885" width="0.9" height="15.0" fill="rgb(252,39,53)" rx="2" ry="2" />
<text  x="1121.89" y="895.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt;, llvm::DenseMapInfo&lt;llvm::BasicBlock*&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt; &gt; &gt;, llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt;, llvm::DenseMapInfo&lt;llvm::BasicBlock*&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt; &gt; &gt;::clear (1 samples, 0.08%)</title><rect x="1101.8" y="789" width="0.9" height="15.0" fill="rgb(219,75,3)" rx="2" ry="2" />
<text  x="1104.79" y="799.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.08%)</title><rect x="35.2" y="949" width="0.9" height="15.0" fill="rgb(252,70,14)" rx="2" ry="2" />
<text  x="38.20" y="959.5" ></text>
</g>
<g >
<title>execute_command_internal (4 samples, 0.31%)</title><rect x="36.1" y="629" width="3.6" height="15.0" fill="rgb(234,93,37)" rx="2" ry="2" />
<text  x="39.10" y="639.5" ></text>
</g>
<g >
<title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::~SemiNCAInfo (1 samples, 0.08%)</title><rect x="229.6" y="709" width="0.9" height="15.0" fill="rgb(217,84,51)" rx="2" ry="2" />
<text  x="232.62" y="719.5" ></text>
</g>
<g >
<title>clang::RedeclarableTemplateDecl::loadLazySpecializationsImpl (1 samples, 0.08%)</title><rect x="1048.7" y="405" width="0.9" height="15.0" fill="rgb(250,186,39)" rx="2" ry="2" />
<text  x="1051.69" y="415.5" ></text>
</g>
<g >
<title>llvm::Value::getValueName (1 samples, 0.08%)</title><rect x="744.5" y="549" width="0.9" height="15.0" fill="rgb(234,89,21)" rx="2" ry="2" />
<text  x="747.46" y="559.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.08%)</title><rect x="1072.1" y="805" width="0.9" height="15.0" fill="rgb(253,95,20)" rx="2" ry="2" />
<text  x="1075.09" y="815.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnModule (1 samples, 0.08%)</title><rect x="1129.7" y="901" width="0.9" height="15.0" fill="rgb(226,90,35)" rx="2" ry="2" />
<text  x="1132.69" y="911.5" ></text>
</g>
<g >
<title>llvm::StoreInst::setAlignment (1 samples, 0.08%)</title><rect x="1040.6" y="677" width="0.9" height="15.0" fill="rgb(238,143,43)" rx="2" ry="2" />
<text  x="1043.59" y="687.5" ></text>
</g>
<g >
<title>llvm::AttributeList::addAttributes (1 samples, 0.08%)</title><rect x="1039.7" y="693" width="0.9" height="15.0" fill="rgb(205,117,37)" rx="2" ry="2" />
<text  x="1042.69" y="703.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadStmtFromStream (1 samples, 0.08%)</title><rect x="1022.6" y="693" width="0.9" height="15.0" fill="rgb(233,117,25)" rx="2" ry="2" />
<text  x="1025.59" y="703.5" ></text>
</g>
<g >
<title>cling::Interpreter::executeTransaction (1 samples, 0.08%)</title><rect x="1101.8" y="901" width="0.9" height="15.0" fill="rgb(206,8,12)" rx="2" ry="2" />
<text  x="1104.79" y="911.5" ></text>
</g>
<g >
<title>EmitFunctionDeclPointer (1 samples, 0.08%)</title><rect x="1091.9" y="629" width="0.9" height="15.0" fill="rgb(207,132,33)" rx="2" ry="2" />
<text  x="1094.89" y="639.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetTemplateArgumentLocInfo (1 samples, 0.08%)</title><rect x="1012.7" y="421" width="0.9" height="15.0" fill="rgb(215,49,20)" rx="2" ry="2" />
<text  x="1015.68" y="431.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (1 samples, 0.08%)</title><rect x="900.2" y="533" width="0.9" height="15.0" fill="rgb(210,188,10)" rx="2" ry="2" />
<text  x="903.18" y="543.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::SelectAllBasicBlocks (2 samples, 0.15%)</title><rect x="212.5" y="725" width="1.8" height="15.0" fill="rgb(236,144,30)" rx="2" ry="2" />
<text  x="215.52" y="735.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetTypeSourceInfo (1 samples, 0.08%)</title><rect x="1009.1" y="757" width="0.9" height="15.0" fill="rgb(243,87,9)" rx="2" ry="2" />
<text  x="1012.08" y="767.5" ></text>
</g>
<g >
<title>llvm::AttributeList::addAttributes (1 samples, 0.08%)</title><rect x="1038.8" y="677" width="0.9" height="15.0" fill="rgb(211,172,15)" rx="2" ry="2" />
<text  x="1041.79" y="687.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="931.7" y="661" width="0.9" height="15.0" fill="rgb(226,33,29)" rx="2" ry="2" />
<text  x="934.68" y="671.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.15%)</title><rect x="1188.2" y="709" width="1.8" height="15.0" fill="rgb(240,149,44)" rx="2" ry="2" />
<text  x="1191.20" y="719.5" ></text>
</g>
<g >
<title>clang::Sema::SubstType (2 samples, 0.15%)</title><rect x="1094.6" y="821" width="1.8" height="15.0" fill="rgb(251,188,2)" rx="2" ry="2" />
<text  x="1097.59" y="831.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitDecl (1 samples, 0.08%)</title><rect x="1023.5" y="837" width="0.9" height="15.0" fill="rgb(254,42,20)" rx="2" ry="2" />
<text  x="1026.49" y="847.5" ></text>
</g>
<g >
<title>clang::InitializationSequence::InitializeFrom (1 samples, 0.08%)</title><rect x="1059.5" y="933" width="0.9" height="15.0" fill="rgb(251,84,19)" rx="2" ry="2" />
<text  x="1062.49" y="943.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitTemplateDecl (1 samples, 0.08%)</title><rect x="1071.2" y="773" width="0.9" height="15.0" fill="rgb(222,214,6)" rx="2" ry="2" />
<text  x="1074.19" y="783.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (1 samples, 0.08%)</title><rect x="1075.7" y="693" width="0.9" height="15.0" fill="rgb(221,124,38)" rx="2" ry="2" />
<text  x="1078.69" y="703.5" ></text>
</g>
<g >
<title>__GI__IO_default_uflow (1 samples, 0.08%)</title><rect x="994.7" y="837" width="0.9" height="15.0" fill="rgb(251,183,26)" rx="2" ry="2" />
<text  x="997.68" y="847.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTSIInObjectScope (1 samples, 0.08%)</title><rect x="1073.9" y="645" width="0.9" height="15.0" fill="rgb(209,64,35)" rx="2" ry="2" />
<text  x="1076.89" y="655.5" ></text>
</g>
<g >
<title>cling::Interpreter::executeTransaction (35 samples, 2.67%)</title><rect x="800.3" y="741" width="31.5" height="15.0" fill="rgb(208,217,23)" rx="2" ry="2" />
<text  x="803.27" y="751.5" >cl..</text>
</g>
<g >
<title>set_signal_handler (2 samples, 0.15%)</title><rect x="1186.4" y="805" width="1.8" height="15.0" fill="rgb(232,108,0)" rx="2" ry="2" />
<text  x="1189.40" y="815.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallExpr (1 samples, 0.08%)</title><rect x="1020.8" y="821" width="0.9" height="15.0" fill="rgb(245,186,2)" rx="2" ry="2" />
<text  x="1023.79" y="831.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;, void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;::LookupBucketFor&lt;void const*&gt; (2 samples, 0.15%)</title><rect x="714.8" y="533" width="1.8" height="15.0" fill="rgb(251,215,47)" rx="2" ry="2" />
<text  x="717.76" y="543.5" ></text>
</g>
<g >
<title>clang::VarDecl::getMemberSpecializationInfo (1 samples, 0.08%)</title><rect x="1023.5" y="549" width="0.9" height="15.0" fill="rgb(234,106,15)" rx="2" ry="2" />
<text  x="1026.49" y="559.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType (1 samples, 0.08%)</title><rect x="1088.3" y="693" width="0.9" height="15.0" fill="rgb(206,34,6)" rx="2" ry="2" />
<text  x="1091.29" y="703.5" ></text>
</g>
<g >
<title>std::__unguarded_linear_insert&lt;llvm::Attribute*, __gnu_cxx::__ops::_Val_less_iter&gt; (1 samples, 0.08%)</title><rect x="1017.2" y="565" width="0.9" height="15.0" fill="rgb(249,105,44)" rx="2" ry="2" />
<text  x="1020.19" y="575.5" ></text>
</g>
<g >
<title>cling::Interpreter::EvaluateInternal (1 samples, 0.08%)</title><rect x="1110.8" y="917" width="0.9" height="15.0" fill="rgb(251,52,43)" rx="2" ry="2" />
<text  x="1113.79" y="927.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::executeWrapper (138 samples, 10.53%)</title><rect x="674.3" y="789" width="124.2" height="15.0" fill="rgb(221,113,4)" rx="2" ry="2" />
<text  x="677.26" y="799.5" >cling::Incremen..</text>
</g>
<g >
<title>llvm::AAResults::getModRefInfo (1 samples, 0.08%)</title><rect x="814.7" y="581" width="0.9" height="15.0" fill="rgb(249,55,18)" rx="2" ry="2" />
<text  x="817.67" y="591.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.08%)</title><rect x="902.0" y="581" width="0.9" height="15.0" fill="rgb(212,165,49)" rx="2" ry="2" />
<text  x="904.98" y="591.5" ></text>
</g>
<g >
<title>clang::Sema::getTemplateInstantiationArgs (1 samples, 0.08%)</title><rect x="1078.4" y="709" width="0.9" height="15.0" fill="rgb(247,204,23)" rx="2" ry="2" />
<text  x="1081.39" y="719.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::Compile (1 samples, 0.08%)</title><rect x="1108.1" y="917" width="0.9" height="15.0" fill="rgb(247,3,28)" rx="2" ry="2" />
<text  x="1111.09" y="927.5" ></text>
</g>
<g >
<title>llvm::orc::SimpleCompiler::operator() (1 samples, 0.08%)</title><rect x="1119.8" y="869" width="0.9" height="15.0" fill="rgb(244,166,51)" rx="2" ry="2" />
<text  x="1122.79" y="879.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddDecl (1 samples, 0.08%)</title><rect x="1064.9" y="629" width="0.9" height="15.0" fill="rgb(227,76,51)" rx="2" ry="2" />
<text  x="1067.89" y="639.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization (1 samples, 0.08%)</title><rect x="1093.7" y="661" width="0.9" height="15.0" fill="rgb(208,20,9)" rx="2" ry="2" />
<text  x="1096.69" y="671.5" ></text>
</g>
<g >
<title>eliminateDeadStores (2 samples, 0.15%)</title><rect x="804.8" y="677" width="1.8" height="15.0" fill="rgb(227,141,8)" rx="2" ry="2" />
<text  x="807.77" y="687.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::SetLLVMFunctionAttributes (1 samples, 0.08%)</title><rect x="1046.9" y="821" width="0.9" height="15.0" fill="rgb(245,228,53)" rx="2" ry="2" />
<text  x="1049.89" y="831.5" ></text>
</g>
<g >
<title>llvm::JumpThreadingPass::runImpl (2 samples, 0.15%)</title><rect x="815.6" y="677" width="1.8" height="15.0" fill="rgb(251,28,11)" rx="2" ry="2" />
<text  x="818.57" y="687.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass (1 samples, 0.08%)</title><rect x="1073.0" y="661" width="0.9" height="15.0" fill="rgb(219,43,52)" rx="2" ry="2" />
<text  x="1075.99" y="671.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTSIInObjectScope (1 samples, 0.08%)</title><rect x="1081.1" y="677" width="0.9" height="15.0" fill="rgb(227,131,13)" rx="2" ry="2" />
<text  x="1084.09" y="687.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.15%)</title><rect x="971.3" y="709" width="1.8" height="15.0" fill="rgb(217,49,49)" rx="2" ry="2" />
<text  x="974.28" y="719.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl (1 samples, 0.08%)</title><rect x="1077.5" y="645" width="0.9" height="15.0" fill="rgb(210,222,1)" rx="2" ry="2" />
<text  x="1080.49" y="655.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitLValue (1 samples, 0.08%)</title><rect x="1091.9" y="805" width="0.9" height="15.0" fill="rgb(229,74,14)" rx="2" ry="2" />
<text  x="1094.89" y="815.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTSIInObjectScope (1 samples, 0.08%)</title><rect x="1075.7" y="821" width="0.9" height="15.0" fill="rgb(222,72,33)" rx="2" ry="2" />
<text  x="1078.69" y="831.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::removeNotPreservedAnalysis (3 samples, 0.23%)</title><rect x="719.3" y="565" width="2.7" height="15.0" fill="rgb(247,97,32)" rx="2" ry="2" />
<text  x="722.26" y="575.5" ></text>
</g>
<g >
<title>llvm::ReachingDefAnalysis::processDefs (1 samples, 0.08%)</title><rect x="707.6" y="517" width="0.9" height="15.0" fill="rgb(209,88,51)" rx="2" ry="2" />
<text  x="710.56" y="527.5" ></text>
</g>
<g >
<title>clang::RedeclarableTemplateDecl::loadLazySpecializationsImpl (1 samples, 0.08%)</title><rect x="1055.9" y="677" width="0.9" height="15.0" fill="rgb(236,153,21)" rx="2" ry="2" />
<text  x="1058.89" y="687.5" ></text>
</g>
<g >
<title>TCling::ProcessLine (1 samples, 0.08%)</title><rect x="854.3" y="933" width="0.9" height="15.0" fill="rgb(223,38,22)" rx="2" ry="2" />
<text  x="857.27" y="943.5" ></text>
</g>
<g >
<title>TCling::Load (1 samples, 0.08%)</title><rect x="839.0" y="885" width="0.9" height="15.0" fill="rgb(242,222,33)" rx="2" ry="2" />
<text  x="841.97" y="895.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl (1 samples, 0.08%)</title><rect x="1022.6" y="661" width="0.9" height="15.0" fill="rgb(251,193,36)" rx="2" ry="2" />
<text  x="1025.59" y="671.5" ></text>
</g>
<g >
<title>llvm::ComputeValueVTs (1 samples, 0.08%)</title><rect x="1124.3" y="837" width="0.9" height="15.0" fill="rgb(227,91,12)" rx="2" ry="2" />
<text  x="1127.29" y="847.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.15%)</title><rect x="1184.6" y="773" width="1.8" height="15.0" fill="rgb(215,52,22)" rx="2" ry="2" />
<text  x="1187.60" y="783.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddType (1 samples, 0.08%)</title><rect x="1064.9" y="693" width="0.9" height="15.0" fill="rgb(241,146,37)" rx="2" ry="2" />
<text  x="1067.89" y="703.5" ></text>
</g>
<g >
<title>default_tty_job_signals (1 samples, 0.08%)</title><rect x="35.2" y="181" width="0.9" height="15.0" fill="rgb(213,138,11)" rx="2" ry="2" />
<text  x="38.20" y="191.5" ></text>
</g>
<g >
<title>clang::ASTReader::getGlobalDeclID (1 samples, 0.08%)</title><rect x="1054.1" y="645" width="0.9" height="15.0" fill="rgb(228,123,15)" rx="2" ry="2" />
<text  x="1057.09" y="655.5" ></text>
</g>
<g >
<title>clang::Parser::isCXXTypeId (1 samples, 0.08%)</title><rect x="1109.0" y="837" width="0.9" height="15.0" fill="rgb(226,78,44)" rx="2" ry="2" />
<text  x="1111.99" y="847.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTemplateIdType (1 samples, 0.08%)</title><rect x="1086.5" y="869" width="0.9" height="15.0" fill="rgb(235,101,51)" rx="2" ry="2" />
<text  x="1089.49" y="879.5" ></text>
</g>
<g >
<title>_IO_new_popen (5 samples, 0.38%)</title><rect x="937.1" y="773" width="4.5" height="15.0" fill="rgb(232,87,45)" rx="2" ry="2" />
<text  x="940.08" y="783.5" ></text>
</g>
<g >
<title>cling::DynamicLibraryManager::loadLibrary (1 samples, 0.08%)</title><rect x="202.6" y="469" width="0.9" height="15.0" fill="rgb(243,95,50)" rx="2" ry="2" />
<text  x="205.62" y="479.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (1 samples, 0.08%)</title><rect x="1108.1" y="853" width="0.9" height="15.0" fill="rgb(213,63,15)" rx="2" ry="2" />
<text  x="1111.09" y="863.5" ></text>
</g>
<g >
<title>EvaluateLValue (1 samples, 0.08%)</title><rect x="1021.7" y="741" width="0.9" height="15.0" fill="rgb(217,166,13)" rx="2" ry="2" />
<text  x="1024.69" y="751.5" ></text>
</g>
<g >
<title>TCling::LoadPCM (1 samples, 0.08%)</title><rect x="1118.9" y="853" width="0.9" height="15.0" fill="rgb(226,226,44)" rx="2" ry="2" />
<text  x="1121.89" y="863.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.08%)</title><rect x="35.2" y="693" width="0.9" height="15.0" fill="rgb(254,81,34)" rx="2" ry="2" />
<text  x="38.20" y="703.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (2 samples, 0.15%)</title><rect x="1125.2" y="933" width="1.8" height="15.0" fill="rgb(206,211,38)" rx="2" ry="2" />
<text  x="1128.19" y="943.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitDeclaratorDecl (1 samples, 0.08%)</title><rect x="1051.4" y="677" width="0.9" height="15.0" fill="rgb(225,118,49)" rx="2" ry="2" />
<text  x="1054.39" y="687.5" ></text>
</g>
<g >
<title>isStd (2 samples, 0.15%)</title><rect x="1031.6" y="885" width="1.8" height="15.0" fill="rgb(211,0,20)" rx="2" ry="2" />
<text  x="1034.59" y="895.5" ></text>
</g>
<g >
<title>clang::DeclRefExpr::Create (1 samples, 0.08%)</title><rect x="1095.5" y="549" width="0.9" height="15.0" fill="rgb(227,157,20)" rx="2" ry="2" />
<text  x="1098.49" y="559.5" ></text>
</g>
<g >
<title>llvm::cast&lt;llvm::Function, llvm::Value&gt; (1 samples, 0.08%)</title><rect x="910.1" y="533" width="0.9" height="15.0" fill="rgb(230,37,45)" rx="2" ry="2" />
<text  x="913.08" y="543.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveExternalSymbols (1 samples, 0.08%)</title><rect x="1110.8" y="805" width="0.9" height="15.0" fill="rgb(244,86,10)" rx="2" ry="2" />
<text  x="1113.79" y="815.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.08%)</title><rect x="1074.8" y="789" width="0.9" height="15.0" fill="rgb(253,144,1)" rx="2" ry="2" />
<text  x="1077.79" y="799.5" ></text>
</g>
<g >
<title>clang::Sema::BuildPossibleImplicitMemberExpr (1 samples, 0.08%)</title><rect x="1095.5" y="629" width="0.9" height="15.0" fill="rgb(234,204,23)" rx="2" ry="2" />
<text  x="1098.49" y="639.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.08%)</title><rect x="35.2" y="229" width="0.9" height="15.0" fill="rgb(223,180,16)" rx="2" ry="2" />
<text  x="38.20" y="239.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl (1 samples, 0.08%)</title><rect x="1051.4" y="853" width="0.9" height="15.0" fill="rgb(217,55,51)" rx="2" ry="2" />
<text  x="1054.39" y="863.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.31%)</title><rect x="967.7" y="725" width="3.6" height="15.0" fill="rgb(251,95,51)" rx="2" ry="2" />
<text  x="970.68" y="735.5" ></text>
</g>
<g >
<title>dl_open_worker (2 samples, 0.15%)</title><rect x="989.3" y="773" width="1.8" height="15.0" fill="rgb(254,37,21)" rx="2" ry="2" />
<text  x="992.28" y="783.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.08%)</title><rect x="897.5" y="597" width="0.9" height="15.0" fill="rgb(239,136,9)" rx="2" ry="2" />
<text  x="900.48" y="607.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1151.3" y="725" width="0.9" height="15.0" fill="rgb(236,205,30)" rx="2" ry="2" />
<text  x="1154.30" y="735.5" ></text>
</g>
<g >
<title>parse_and_execute (40 samples, 3.05%)</title><rect x="1152.2" y="885" width="36.0" height="15.0" fill="rgb(206,53,47)" rx="2" ry="2" />
<text  x="1155.20" y="895.5" >par..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="999.2" y="757" width="0.9" height="15.0" fill="rgb(251,99,46)" rx="2" ry="2" />
<text  x="1002.18" y="767.5" ></text>
</g>
<g >
<title>_dl_start_user (6 samples, 0.46%)</title><rect x="1001.9" y="949" width="5.4" height="15.0" fill="rgb(222,199,8)" rx="2" ry="2" />
<text  x="1004.88" y="959.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.08%)</title><rect x="696.8" y="517" width="0.9" height="15.0" fill="rgb(215,162,26)" rx="2" ry="2" />
<text  x="699.76" y="527.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1148.6" y="869" width="0.9" height="15.0" fill="rgb(226,127,9)" rx="2" ry="2" />
<text  x="1151.60" y="879.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="342.1" y="741" width="0.9" height="15.0" fill="rgb(215,11,13)" rx="2" ry="2" />
<text  x="345.13" y="751.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (1 samples, 0.08%)</title><rect x="1109.9" y="789" width="0.9" height="15.0" fill="rgb(230,116,31)" rx="2" ry="2" />
<text  x="1112.89" y="799.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddTemplateArgument (1 samples, 0.08%)</title><rect x="1064.9" y="661" width="0.9" height="15.0" fill="rgb(242,139,29)" rx="2" ry="2" />
<text  x="1067.89" y="671.5" ></text>
</g>
<g >
<title>llvm::function_ref&lt;llvm::AnalysisResultsForFn (llvm::Function&amp;)&gt;::callback_fn&lt;(anonymous namespace)::IPSCCPLegacyPass::runOnModule(llvm::Module&amp;)::{lambda(llvm::Function&amp;)#1}&gt; (1 samples, 0.08%)</title><rect x="1101.8" y="837" width="0.9" height="15.0" fill="rgb(220,187,16)" rx="2" ry="2" />
<text  x="1104.79" y="847.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetTypeSourceInfo (1 samples, 0.08%)</title><rect x="1012.7" y="469" width="0.9" height="15.0" fill="rgb(218,167,49)" rx="2" ry="2" />
<text  x="1015.68" y="479.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke (1 samples, 0.08%)</title><rect x="1107.2" y="789" width="0.9" height="15.0" fill="rgb(226,55,3)" rx="2" ry="2" />
<text  x="1110.19" y="799.5" ></text>
</g>
<g >
<title>clang::ASTReader::readTypeRecord (1 samples, 0.08%)</title><rect x="1010.9" y="885" width="0.9" height="15.0" fill="rgb(245,88,13)" rx="2" ry="2" />
<text  x="1013.88" y="895.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1183.7" y="645" width="0.9" height="15.0" fill="rgb(245,51,20)" rx="2" ry="2" />
<text  x="1186.70" y="655.5" ></text>
</g>
<g >
<title>llvm::orc::JITSymbolResolverAdapter::lookup (1 samples, 0.08%)</title><rect x="1120.7" y="917" width="0.9" height="15.0" fill="rgb(207,7,26)" rx="2" ry="2" />
<text  x="1123.69" y="927.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.08%)</title><rect x="1087.4" y="773" width="0.9" height="15.0" fill="rgb(224,25,7)" rx="2" ry="2" />
<text  x="1090.39" y="783.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.08%)</title><rect x="1112.6" y="709" width="0.9" height="15.0" fill="rgb(226,125,41)" rx="2" ry="2" />
<text  x="1115.59" y="719.5" ></text>
</g>
<g >
<title>clang::RedeclarableTemplateDecl::addSpecializationImpl&lt;clang::ClassTemplateDecl, clang::ClassTemplateSpecializationDecl&gt; (1 samples, 0.08%)</title><rect x="1097.3" y="677" width="0.9" height="15.0" fill="rgb(251,196,35)" rx="2" ry="2" />
<text  x="1100.29" y="687.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddType (1 samples, 0.08%)</title><rect x="1094.6" y="581" width="0.9" height="15.0" fill="rgb(225,203,36)" rx="2" ry="2" />
<text  x="1097.59" y="591.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (2 samples, 0.15%)</title><rect x="1096.4" y="949" width="1.8" height="15.0" fill="rgb(249,174,29)" rx="2" ry="2" />
<text  x="1099.39" y="959.5" ></text>
</g>
<g >
<title>llvm::X86RegisterInfo::eliminateFrameIndex (1 samples, 0.08%)</title><rect x="848.0" y="581" width="0.9" height="15.0" fill="rgb(228,186,38)" rx="2" ry="2" />
<text  x="850.97" y="591.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (1 samples, 0.08%)</title><rect x="1129.7" y="885" width="0.9" height="15.0" fill="rgb(243,27,48)" rx="2" ry="2" />
<text  x="1132.69" y="895.5" ></text>
</g>
<g >
<title>clang::Decl::castFromDeclContext (1 samples, 0.08%)</title><rect x="1023.5" y="501" width="0.9" height="15.0" fill="rgb(246,225,8)" rx="2" ry="2" />
<text  x="1026.49" y="511.5" ></text>
</g>
<g >
<title>llvm::Pass::getAnalysisIfAvailable&lt;llvm::objcarc::ObjCARCAAWrapperPass&gt; (1 samples, 0.08%)</title><rect x="901.1" y="581" width="0.9" height="15.0" fill="rgb(218,11,22)" rx="2" ry="2" />
<text  x="904.08" y="591.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.08%)</title><rect x="1118.9" y="293" width="0.9" height="15.0" fill="rgb(226,159,22)" rx="2" ry="2" />
<text  x="1121.89" y="303.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertType (1 samples, 0.08%)</title><rect x="1048.7" y="853" width="0.9" height="15.0" fill="rgb(244,20,53)" rx="2" ry="2" />
<text  x="1051.69" y="863.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.08%)</title><rect x="850.7" y="693" width="0.9" height="15.0" fill="rgb(245,92,0)" rx="2" ry="2" />
<text  x="853.67" y="703.5" ></text>
</g>
<g >
<title>llvm::Module::dropAllReferences (1 samples, 0.08%)</title><rect x="859.7" y="709" width="0.9" height="15.0" fill="rgb(251,100,51)" rx="2" ry="2" />
<text  x="862.67" y="719.5" ></text>
</g>
<g >
<title>llvm::hashing::detail::hash_combine_range_impl&lt;unsigned int const&gt; (1 samples, 0.08%)</title><rect x="1065.8" y="613" width="0.9" height="15.0" fill="rgb(251,181,2)" rx="2" ry="2" />
<text  x="1068.79" y="623.5" ></text>
</g>
<g >
<title>__nptl_set_robust (1 samples, 0.08%)</title><rect x="931.7" y="693" width="0.9" height="15.0" fill="rgb(217,14,51)" rx="2" ry="2" />
<text  x="934.68" y="703.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (2 samples, 0.15%)</title><rect x="212.5" y="773" width="1.8" height="15.0" fill="rgb(247,130,17)" rx="2" ry="2" />
<text  x="215.52" y="783.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetType (1 samples, 0.08%)</title><rect x="1010.9" y="869" width="0.9" height="15.0" fill="rgb(225,81,8)" rx="2" ry="2" />
<text  x="1013.88" y="879.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddDecl (1 samples, 0.08%)</title><rect x="1058.6" y="629" width="0.9" height="15.0" fill="rgb(248,166,12)" rx="2" ry="2" />
<text  x="1061.59" y="639.5" ></text>
</g>
<g >
<title>llvm::SmallPtrSetImplBase::insert_imp_big (1 samples, 0.08%)</title><rect x="1110.8" y="565" width="0.9" height="15.0" fill="rgb(237,21,25)" rx="2" ry="2" />
<text  x="1113.79" y="575.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitAnyExpr (1 samples, 0.08%)</title><rect x="1013.6" y="949" width="0.9" height="15.0" fill="rgb(250,225,4)" rx="2" ry="2" />
<text  x="1016.59" y="959.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitSimpleStmt (1 samples, 0.08%)</title><rect x="1015.4" y="549" width="0.9" height="15.0" fill="rgb(253,226,22)" rx="2" ry="2" />
<text  x="1018.39" y="559.5" ></text>
</g>
<g >
<title>clang::Sema::DiagnoseUnexpandedParameterPack (1 samples, 0.08%)</title><rect x="1076.6" y="885" width="0.9" height="15.0" fill="rgb(246,144,17)" rx="2" ry="2" />
<text  x="1079.59" y="895.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::CodeGenAndEmitDAG (2 samples, 0.15%)</title><rect x="1125.2" y="837" width="1.8" height="15.0" fill="rgb(233,60,20)" rx="2" ry="2" />
<text  x="1128.19" y="847.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformInitListExpr (1 samples, 0.08%)</title><rect x="1081.1" y="789" width="0.9" height="15.0" fill="rgb(208,155,34)" rx="2" ry="2" />
<text  x="1084.09" y="799.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::runStaticInitializersOnce (1 samples, 0.08%)</title><rect x="1108.1" y="869" width="0.9" height="15.0" fill="rgb(238,90,12)" rx="2" ry="2" />
<text  x="1111.09" y="879.5" ></text>
</g>
<g >
<title>_dl_init (1 samples, 0.08%)</title><rect x="1118.9" y="917" width="0.9" height="15.0" fill="rgb(239,18,10)" rx="2" ry="2" />
<text  x="1121.89" y="927.5" ></text>
</g>
<g >
<title>THashTable::Add (1 samples, 0.08%)</title><rect x="1001.9" y="709" width="0.9" height="15.0" fill="rgb(234,21,30)" rx="2" ry="2" />
<text  x="1004.88" y="719.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.08%)</title><rect x="850.7" y="645" width="0.9" height="15.0" fill="rgb(221,127,33)" rx="2" ry="2" />
<text  x="853.67" y="655.5" ></text>
</g>
<g >
<title>expand_string_assignment (5 samples, 0.38%)</title><rect x="10.9" y="469" width="4.5" height="15.0" fill="rgb(208,194,10)" rx="2" ry="2" />
<text  x="13.90" y="479.5" ></text>
</g>
<g >
<title>clang::Parser::ParseStatementOrDeclarationAfterAttributes (1 samples, 0.08%)</title><rect x="1053.2" y="885" width="0.9" height="15.0" fill="rgb(246,187,38)" rx="2" ry="2" />
<text  x="1056.19" y="895.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::commitTransaction (1 samples, 0.08%)</title><rect x="447.4" y="437" width="0.9" height="15.0" fill="rgb(228,4,32)" rx="2" ry="2" />
<text  x="450.44" y="447.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadExpr (1 samples, 0.08%)</title><rect x="1011.8" y="901" width="0.9" height="15.0" fill="rgb(230,47,20)" rx="2" ry="2" />
<text  x="1014.78" y="911.5" ></text>
</g>
<g >
<title>clang::ASTReader::readTypeRecord (1 samples, 0.08%)</title><rect x="1011.8" y="805" width="0.9" height="15.0" fill="rgb(224,44,25)" rx="2" ry="2" />
<text  x="1014.78" y="815.5" ></text>
</g>
<g >
<title>llvm::AttributeSetNode::get (1 samples, 0.08%)</title><rect x="1041.5" y="709" width="0.9" height="15.0" fill="rgb(218,167,19)" rx="2" ry="2" />
<text  x="1044.49" y="719.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.08%)</title><rect x="673.4" y="917" width="0.9" height="15.0" fill="rgb(205,142,0)" rx="2" ry="2" />
<text  x="676.36" y="927.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1005.5" y="645" width="0.9" height="15.0" fill="rgb(206,186,14)" rx="2" ry="2" />
<text  x="1008.48" y="655.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.08%)</title><rect x="35.2" y="373" width="0.9" height="15.0" fill="rgb(215,24,0)" rx="2" ry="2" />
<text  x="38.20" y="383.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="956.9" y="741" width="0.9" height="15.0" fill="rgb(222,120,48)" rx="2" ry="2" />
<text  x="959.88" y="751.5" ></text>
</g>
<g >
<title>_IO_new_proc_open (4 samples, 0.31%)</title><rect x="929.0" y="725" width="3.6" height="15.0" fill="rgb(222,174,39)" rx="2" ry="2" />
<text  x="931.98" y="735.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="946.1" y="661" width="0.9" height="15.0" fill="rgb(230,146,4)" rx="2" ry="2" />
<text  x="949.08" y="671.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (14 samples, 1.07%)</title><rect x="1033.4" y="885" width="12.6" height="15.0" fill="rgb(229,18,18)" rx="2" ry="2" />
<text  x="1036.39" y="895.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertType (1 samples, 0.08%)</title><rect x="1049.6" y="597" width="0.9" height="15.0" fill="rgb(214,100,6)" rx="2" ry="2" />
<text  x="1052.59" y="607.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadTemplateArgumentList (1 samples, 0.08%)</title><rect x="1007.3" y="821" width="0.9" height="15.0" fill="rgb(226,113,40)" rx="2" ry="2" />
<text  x="1010.28" y="831.5" ></text>
</g>
<g >
<title>cling::Interpreter::executeTransaction (1 samples, 0.08%)</title><rect x="1100.9" y="917" width="0.9" height="15.0" fill="rgb(230,104,35)" rx="2" ry="2" />
<text  x="1103.89" y="927.5" ></text>
</g>
<g >
<title>cling::Interpreter::declare (1 samples, 0.08%)</title><rect x="942.5" y="837" width="0.9" height="15.0" fill="rgb(236,126,34)" rx="2" ry="2" />
<text  x="945.48" y="847.5" ></text>
</g>
<g >
<title>clang::Sema::BuildReferenceType (1 samples, 0.08%)</title><rect x="1089.2" y="629" width="0.9" height="15.0" fill="rgb(246,18,52)" rx="2" ry="2" />
<text  x="1092.19" y="639.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.08%)</title><rect x="945.2" y="725" width="0.9" height="15.0" fill="rgb(223,66,32)" rx="2" ry="2" />
<text  x="948.18" y="735.5" ></text>
</g>
<g >
<title>clang::Sema::BuildQualifiedDeclarationNameExpr (1 samples, 0.08%)</title><rect x="1097.3" y="917" width="0.9" height="15.0" fill="rgb(247,132,46)" rx="2" ry="2" />
<text  x="1100.29" y="927.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.15%)</title><rect x="947.9" y="757" width="1.8" height="15.0" fill="rgb(247,164,49)" rx="2" ry="2" />
<text  x="950.88" y="767.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke (5 samples, 0.38%)</title><rect x="1102.7" y="901" width="4.5" height="15.0" fill="rgb(239,153,15)" rx="2" ry="2" />
<text  x="1105.69" y="911.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.08%)</title><rect x="928.1" y="645" width="0.9" height="15.0" fill="rgb(241,53,32)" rx="2" ry="2" />
<text  x="931.08" y="655.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::visitCallInst (3 samples, 0.23%)</title><rect x="218.8" y="709" width="2.7" height="15.0" fill="rgb(227,85,33)" rx="2" ry="2" />
<text  x="221.82" y="719.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.08%)</title><rect x="1088.3" y="661" width="0.9" height="15.0" fill="rgb(245,38,23)" rx="2" ry="2" />
<text  x="1091.29" y="671.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="974.9" y="725" width="0.9" height="15.0" fill="rgb(239,1,53)" rx="2" ry="2" />
<text  x="977.88" y="735.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitRedeclarableTemplateDecl (1 samples, 0.08%)</title><rect x="1012.7" y="645" width="0.9" height="15.0" fill="rgb(228,18,15)" rx="2" ry="2" />
<text  x="1015.68" y="655.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertRecordDeclType (1 samples, 0.08%)</title><rect x="1049.6" y="677" width="0.9" height="15.0" fill="rgb(236,89,19)" rx="2" ry="2" />
<text  x="1052.59" y="687.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.15%)</title><rect x="997.4" y="805" width="1.8" height="15.0" fill="rgb(215,212,6)" rx="2" ry="2" />
<text  x="1000.38" y="815.5" ></text>
</g>
<g >
<title>_IO_new_popen (20 samples, 1.53%)</title><rect x="957.8" y="837" width="18.0" height="15.0" fill="rgb(247,70,26)" rx="2" ry="2" />
<text  x="960.78" y="847.5" ></text>
</g>
<g >
<title>llvm::isFreeCall (1 samples, 0.08%)</title><rect x="828.2" y="597" width="0.9" height="15.0" fill="rgb(212,41,52)" rx="2" ry="2" />
<text  x="831.17" y="607.5" ></text>
</g>
<g >
<title>clang::CodeGeneratorImpl::HandleTranslationUnit (1 samples, 0.08%)</title><rect x="1112.6" y="789" width="0.9" height="15.0" fill="rgb(206,36,50)" rx="2" ry="2" />
<text  x="1115.59" y="799.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitDeclaratorDecl (1 samples, 0.08%)</title><rect x="1010.0" y="901" width="0.9" height="15.0" fill="rgb(207,14,3)" rx="2" ry="2" />
<text  x="1012.98" y="911.5" ></text>
</g>
<g >
<title>cling::LookupHelper::findScope (1 samples, 0.08%)</title><rect x="1098.2" y="613" width="0.9" height="15.0" fill="rgb(222,193,45)" rx="2" ry="2" />
<text  x="1101.19" y="623.5" ></text>
</g>
<g >
<title>llvm::X86FrameLowering::hasFP (1 samples, 0.08%)</title><rect x="252.1" y="709" width="0.9" height="15.0" fill="rgb(234,178,5)" rx="2" ry="2" />
<text  x="255.12" y="719.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (3 samples, 0.23%)</title><rect x="1015.4" y="805" width="2.7" height="15.0" fill="rgb(232,48,9)" rx="2" ry="2" />
<text  x="1018.39" y="815.5" ></text>
</g>
<g >
<title>clang::RedeclarableTemplateDecl::findSpecializationImpl&lt;clang::ClassTemplateSpecializationDecl&gt; (1 samples, 0.08%)</title><rect x="1058.6" y="709" width="0.9" height="15.0" fill="rgb(224,21,15)" rx="2" ry="2" />
<text  x="1061.59" y="719.5" ></text>
</g>
<g >
<title>TClingCallbacks::LookupObject (1 samples, 0.08%)</title><rect x="1098.2" y="725" width="0.9" height="15.0" fill="rgb(232,97,33)" rx="2" ry="2" />
<text  x="1101.19" y="735.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit (1 samples, 0.08%)</title><rect x="1012.7" y="885" width="0.9" height="15.0" fill="rgb(237,198,44)" rx="2" ry="2" />
<text  x="1015.68" y="895.5" ></text>
</g>
<g >
<title>clang::TypeLocReader::VisitTemplateSpecializationTypeLoc (1 samples, 0.08%)</title><rect x="1077.5" y="581" width="0.9" height="15.0" fill="rgb(246,93,43)" rx="2" ry="2" />
<text  x="1080.49" y="591.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject&lt;std::shared_ptr&lt;llvm::RuntimeDyld::MemoryManager&gt; &gt;::getSymbolMaterializer(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda()#1}&gt;::_M_invoke (1 samples, 0.08%)</title><rect x="854.3" y="773" width="0.9" height="15.0" fill="rgb(232,220,18)" rx="2" ry="2" />
<text  x="857.27" y="783.5" ></text>
</g>
<g >
<title>clang::ASTReader::loadPendingDeclChain (1 samples, 0.08%)</title><rect x="1049.6" y="421" width="0.9" height="15.0" fill="rgb(231,3,43)" rx="2" ry="2" />
<text  x="1052.59" y="431.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.08%)</title><rect x="1080.2" y="693" width="0.9" height="15.0" fill="rgb(207,134,25)" rx="2" ry="2" />
<text  x="1083.19" y="703.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl (1 samples, 0.08%)</title><rect x="1083.8" y="725" width="0.9" height="15.0" fill="rgb(236,121,40)" rx="2" ry="2" />
<text  x="1086.79" y="735.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (1 samples, 0.08%)</title><rect x="1092.8" y="901" width="0.9" height="15.0" fill="rgb(225,202,51)" rx="2" ry="2" />
<text  x="1095.79" y="911.5" ></text>
</g>
<g >
<title>cling::Interpreter::EvaluateInternal (53 samples, 4.04%)</title><rect x="214.3" y="869" width="47.7" height="15.0" fill="rgb(249,26,33)" rx="2" ry="2" />
<text  x="217.32" y="879.5" >clin..</text>
</g>
<g >
<title>clang::Sema::ActOnEndOfTranslationUnit (1 samples, 0.08%)</title><rect x="1054.1" y="949" width="0.9" height="15.0" fill="rgb(226,122,48)" rx="2" ry="2" />
<text  x="1057.09" y="959.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddType (1 samples, 0.08%)</title><rect x="1072.1" y="469" width="0.9" height="15.0" fill="rgb(244,188,41)" rx="2" ry="2" />
<text  x="1075.09" y="479.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteDeclContext (1 samples, 0.08%)</title><rect x="1086.5" y="741" width="0.9" height="15.0" fill="rgb(216,195,29)" rx="2" ry="2" />
<text  x="1089.49" y="751.5" ></text>
</g>
<g >
<title>llvm::MCContext::createSymbol (2 samples, 0.15%)</title><rect x="711.2" y="501" width="1.8" height="15.0" fill="rgb(251,79,21)" rx="2" ry="2" />
<text  x="714.16" y="511.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolutionWrapperPass::runOnFunction (1 samples, 0.08%)</title><rect x="923.6" y="597" width="0.9" height="15.0" fill="rgb(214,226,14)" rx="2" ry="2" />
<text  x="926.58" y="607.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallExpr (1 samples, 0.08%)</title><rect x="1091.9" y="693" width="0.9" height="15.0" fill="rgb(205,6,18)" rx="2" ry="2" />
<text  x="1094.89" y="703.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.08%)</title><rect x="35.2" y="565" width="0.9" height="15.0" fill="rgb(237,96,49)" rx="2" ry="2" />
<text  x="38.20" y="575.5" ></text>
</g>
<g >
<title>llvm::User::operator new (1 samples, 0.08%)</title><rect x="1015.4" y="421" width="0.9" height="15.0" fill="rgb(230,227,17)" rx="2" ry="2" />
<text  x="1018.39" y="431.5" ></text>
</g>
<g >
<title>clang::DeclContext::makeDeclVisibleInContextWithFlags (1 samples, 0.08%)</title><rect x="1061.3" y="693" width="0.9" height="15.0" fill="rgb(219,160,42)" rx="2" ry="2" />
<text  x="1064.29" y="703.5" ></text>
</g>
<g >
<title>clang::CXXRecordDecl::getMostRecentNonInjectedDecl (1 samples, 0.08%)</title><rect x="1081.1" y="613" width="0.9" height="15.0" fill="rgb(223,54,18)" rx="2" ry="2" />
<text  x="1084.09" y="623.5" ></text>
</g>
<g >
<title>TKey::ReadObj (2 samples, 0.15%)</title><rect x="446.5" y="853" width="1.8" height="15.0" fill="rgb(237,130,48)" rx="2" ry="2" />
<text  x="449.54" y="863.5" ></text>
</g>
<g >
<title>cling::Interpreter::DeclareInternal (1 samples, 0.08%)</title><rect x="1118.0" y="901" width="0.9" height="15.0" fill="rgb(219,119,0)" rx="2" ry="2" />
<text  x="1120.99" y="911.5" ></text>
</g>
<g >
<title>clang::RedeclarableTemplateDecl::findSpecializationImpl&lt;clang::ClassTemplateSpecializationDecl&gt; (1 samples, 0.08%)</title><rect x="1065.8" y="677" width="0.9" height="15.0" fill="rgb(225,220,25)" rx="2" ry="2" />
<text  x="1068.79" y="687.5" ></text>
</g>
<g >
<title>llvm::orc::lookupWithLegacyFn&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}::operator()(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;) const::{lambda(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)#1}&gt; (1 samples, 0.08%)</title><rect x="1107.2" y="805" width="0.9" height="15.0" fill="rgb(236,116,43)" rx="2" ry="2" />
<text  x="1110.19" y="815.5" ></text>
</g>
<g >
<title>cling::Interpreter::executeTransaction (1 samples, 0.08%)</title><rect x="1118.0" y="853" width="0.9" height="15.0" fill="rgb(228,42,20)" rx="2" ry="2" />
<text  x="1120.99" y="863.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::Compile (1 samples, 0.08%)</title><rect x="1118.0" y="885" width="0.9" height="15.0" fill="rgb(250,145,41)" rx="2" ry="2" />
<text  x="1120.99" y="895.5" ></text>
</g>
<g >
<title>clang::Sema::SubstExceptionSpec (1 samples, 0.08%)</title><rect x="1062.2" y="869" width="0.9" height="15.0" fill="rgb(206,38,16)" rx="2" ry="2" />
<text  x="1065.19" y="879.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (1 samples, 0.08%)</title><rect x="678.8" y="549" width="0.9" height="15.0" fill="rgb(215,113,20)" rx="2" ry="2" />
<text  x="681.76" y="559.5" ></text>
</g>
<g >
<title>llvm::legacy::FunctionPassManager::run (2 samples, 0.15%)</title><rect x="800.3" y="693" width="1.8" height="15.0" fill="rgb(211,118,4)" rx="2" ry="2" />
<text  x="803.27" y="703.5" ></text>
</g>
<g >
<title>clang::Sema::SubstFunctionDeclType (1 samples, 0.08%)</title><rect x="1060.4" y="789" width="0.9" height="15.0" fill="rgb(205,192,46)" rx="2" ry="2" />
<text  x="1063.39" y="799.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveRelocations (1 samples, 0.08%)</title><rect x="202.6" y="773" width="0.9" height="15.0" fill="rgb(220,107,14)" rx="2" ry="2" />
<text  x="205.62" y="783.5" ></text>
</g>
<g >
<title>TCling::UpdateClassInfoWithDecl (1 samples, 0.08%)</title><rect x="237.7" y="757" width="0.9" height="15.0" fill="rgb(229,26,20)" rx="2" ry="2" />
<text  x="240.72" y="767.5" ></text>
</g>
<g >
<title>clang::ASTReader::CompleteRedeclChain (1 samples, 0.08%)</title><rect x="1062.2" y="725" width="0.9" height="15.0" fill="rgb(222,196,4)" rx="2" ry="2" />
<text  x="1065.19" y="735.5" ></text>
</g>
<g >
<title>llvm::InstructionCombiningPass::runOnFunction (1 samples, 0.08%)</title><rect x="833.6" y="645" width="0.9" height="15.0" fill="rgb(214,83,8)" rx="2" ry="2" />
<text  x="836.57" y="655.5" ></text>
</g>
<g >
<title>clang::Sema::SubstParmVarDecl (1 samples, 0.08%)</title><rect x="1087.4" y="917" width="0.9" height="15.0" fill="rgb(212,113,24)" rx="2" ry="2" />
<text  x="1090.39" y="927.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition (1 samples, 0.08%)</title><rect x="1054.1" y="869" width="0.9" height="15.0" fill="rgb(222,67,53)" rx="2" ry="2" />
<text  x="1057.09" y="879.5" ></text>
</g>
<g >
<title>llvm::legacy::FunctionPassManagerImpl::run (1 samples, 0.08%)</title><rect x="1100.9" y="837" width="0.9" height="15.0" fill="rgb(246,164,17)" rx="2" ry="2" />
<text  x="1103.89" y="847.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType (1 samples, 0.08%)</title><rect x="1058.6" y="741" width="0.9" height="15.0" fill="rgb(205,25,37)" rx="2" ry="2" />
<text  x="1061.59" y="751.5" ></text>
</g>
<g >
<title>llvm::orc::SimpleCompiler::operator() (5 samples, 0.38%)</title><rect x="1113.5" y="741" width="4.5" height="15.0" fill="rgb(218,178,16)" rx="2" ry="2" />
<text  x="1116.49" y="751.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExprs (1 samples, 0.08%)</title><rect x="1079.3" y="709" width="0.9" height="15.0" fill="rgb(230,195,50)" rx="2" ry="2" />
<text  x="1082.29" y="719.5" ></text>
</g>
<g >
<title>llvm::AsmPrinter::doFinalization (2 samples, 0.15%)</title><rect x="676.1" y="581" width="1.8" height="15.0" fill="rgb(212,145,8)" rx="2" ry="2" />
<text  x="679.06" y="591.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.08%)</title><rect x="1112.6" y="549" width="0.9" height="15.0" fill="rgb(218,41,4)" rx="2" ry="2" />
<text  x="1115.59" y="559.5" ></text>
</g>
<g >
<title>llvm::ConstantUniqueMap&lt;llvm::ConstantExpr&gt;::getOrCreate (1 samples, 0.08%)</title><rect x="203.5" y="645" width="0.9" height="15.0" fill="rgb(237,202,44)" rx="2" ry="2" />
<text  x="206.52" y="655.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;std::add_pointer, (anonymous namespace)::AggExprEmitter, void&gt;::Visit (1 samples, 0.08%)</title><rect x="1090.1" y="901" width="0.9" height="15.0" fill="rgb(246,71,5)" rx="2" ry="2" />
<text  x="1093.09" y="911.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.08%)</title><rect x="1095.5" y="677" width="0.9" height="15.0" fill="rgb(251,194,45)" rx="2" ry="2" />
<text  x="1098.49" y="687.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition (6 samples, 0.46%)</title><rect x="1076.6" y="949" width="5.4" height="15.0" fill="rgb(250,5,30)" rx="2" ry="2" />
<text  x="1079.59" y="959.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::computeSectionStubBufSize (2 samples, 0.15%)</title><rect x="258.4" y="725" width="1.8" height="15.0" fill="rgb(230,77,47)" rx="2" ry="2" />
<text  x="261.42" y="735.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.08%)</title><rect x="1020.8" y="565" width="0.9" height="15.0" fill="rgb(217,130,27)" rx="2" ry="2" />
<text  x="1023.79" y="575.5" ></text>
</g>
<g >
<title>llvm::Pass::getPassName (1 samples, 0.08%)</title><rect x="922.7" y="597" width="0.9" height="15.0" fill="rgb(230,122,31)" rx="2" ry="2" />
<text  x="925.68" y="607.5" ></text>
</g>
<g >
<title>getAllocationData (1 samples, 0.08%)</title><rect x="215.2" y="693" width="0.9" height="15.0" fill="rgb(208,107,45)" rx="2" ry="2" />
<text  x="218.22" y="703.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1145.9" y="885" width="0.9" height="15.0" fill="rgb(244,83,26)" rx="2" ry="2" />
<text  x="1148.90" y="895.5" ></text>
</g>
<g >
<title>clang::FunctionDecl::getBody (1 samples, 0.08%)</title><rect x="798.5" y="629" width="0.9" height="15.0" fill="rgb(232,31,35)" rx="2" ry="2" />
<text  x="801.47" y="639.5" ></text>
</g>
<g >
<title>clang::Sema::BuildDeclarationNameExpr (1 samples, 0.08%)</title><rect x="1084.7" y="613" width="0.9" height="15.0" fill="rgb(229,199,42)" rx="2" ry="2" />
<text  x="1087.69" y="623.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (2 samples, 0.15%)</title><rect x="868.7" y="597" width="1.8" height="15.0" fill="rgb(228,158,47)" rx="2" ry="2" />
<text  x="871.67" y="607.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveExternalSymbols (138 samples, 10.53%)</title><rect x="674.3" y="709" width="124.2" height="15.0" fill="rgb(239,81,4)" rx="2" ry="2" />
<text  x="677.26" y="719.5" >llvm::RuntimeDy..</text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformInitializer (1 samples, 0.08%)</title><rect x="1079.3" y="757" width="0.9" height="15.0" fill="rgb(248,157,33)" rx="2" ry="2" />
<text  x="1082.29" y="767.5" ></text>
</g>
<g >
<title>clang::RedeclarableTemplateDecl::loadLazySpecializationsImpl (1 samples, 0.08%)</title><rect x="1065.8" y="661" width="0.9" height="15.0" fill="rgb(212,21,16)" rx="2" ry="2" />
<text  x="1068.79" y="671.5" ></text>
</g>
<g >
<title>getInterestingTagDecl (1 samples, 0.08%)</title><rect x="1062.2" y="757" width="0.9" height="15.0" fill="rgb(209,42,35)" rx="2" ry="2" />
<text  x="1065.19" y="767.5" ></text>
</g>
<g >
<title>cling::MetaSema::actOnxCommand (1 samples, 0.08%)</title><rect x="1110.8" y="933" width="0.9" height="15.0" fill="rgb(245,162,46)" rx="2" ry="2" />
<text  x="1113.79" y="943.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (23 samples, 1.75%)</title><rect x="723.8" y="549" width="20.7" height="15.0" fill="rgb(224,208,46)" rx="2" ry="2" />
<text  x="726.76" y="559.5" ></text>
</g>
<g >
<title>TApplication::ExecuteFile (7 samples, 0.53%)</title><rect x="831.8" y="917" width="6.3" height="15.0" fill="rgb(227,39,37)" rx="2" ry="2" />
<text  x="834.77" y="927.5" ></text>
</g>
<g >
<title>make_child (4 samples, 0.31%)</title><rect x="36.1" y="117" width="3.6" height="15.0" fill="rgb(250,54,45)" rx="2" ry="2" />
<text  x="39.10" y="127.5" ></text>
</g>
<g >
<title>llvm::orc::lookupWithLegacyFn&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}::operator()(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;) const::{lambda(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)#1}&gt; (3 samples, 0.23%)</title><rect x="1127.0" y="949" width="2.7" height="15.0" fill="rgb(218,116,53)" rx="2" ry="2" />
<text  x="1129.99" y="959.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTypenameType (1 samples, 0.08%)</title><rect x="1100.0" y="709" width="0.9" height="15.0" fill="rgb(248,112,24)" rx="2" ry="2" />
<text  x="1102.99" y="719.5" ></text>
</g>
<g >
<title>cling::Interpreter::EvaluateInternal (6 samples, 0.46%)</title><rect x="1101.8" y="949" width="5.4" height="15.0" fill="rgb(239,23,22)" rx="2" ry="2" />
<text  x="1104.79" y="959.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1151.3" y="757" width="0.9" height="15.0" fill="rgb(242,182,42)" rx="2" ry="2" />
<text  x="1154.30" y="767.5" ></text>
</g>
<g >
<title>clang::TemplateDeclInstantiator::SubstFunctionType (1 samples, 0.08%)</title><rect x="1060.4" y="805" width="0.9" height="15.0" fill="rgb(242,147,42)" rx="2" ry="2" />
<text  x="1063.39" y="815.5" ></text>
</g>
<g >
<title>clang::TypeLocReader::VisitDependentNameTypeLoc (1 samples, 0.08%)</title><rect x="1012.7" y="501" width="0.9" height="15.0" fill="rgb(240,23,14)" rx="2" ry="2" />
<text  x="1015.68" y="511.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="946.1" y="741" width="0.9" height="15.0" fill="rgb(236,18,1)" rx="2" ry="2" />
<text  x="949.08" y="751.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.08%)</title><rect x="1020.8" y="549" width="0.9" height="15.0" fill="rgb(220,87,54)" rx="2" ry="2" />
<text  x="1023.79" y="559.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.08%)</title><rect x="220.6" y="661" width="0.9" height="15.0" fill="rgb(223,52,3)" rx="2" ry="2" />
<text  x="223.62" y="671.5" ></text>
</g>
<g >
<title>TCling::InspectMembers (1 samples, 0.08%)</title><rect x="447.4" y="677" width="0.9" height="15.0" fill="rgb(228,171,48)" rx="2" ry="2" />
<text  x="450.44" y="687.5" ></text>
</g>
<g >
<title>_IO_new_proc_open (5 samples, 0.38%)</title><rect x="946.1" y="805" width="4.5" height="15.0" fill="rgb(251,179,36)" rx="2" ry="2" />
<text  x="949.08" y="815.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="342.1" y="725" width="0.9" height="15.0" fill="rgb(209,201,47)" rx="2" ry="2" />
<text  x="345.13" y="735.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformInitializer (1 samples, 0.08%)</title><rect x="1079.3" y="693" width="0.9" height="15.0" fill="rgb(246,54,28)" rx="2" ry="2" />
<text  x="1082.29" y="703.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertRecordDeclType (1 samples, 0.08%)</title><rect x="1049.6" y="869" width="0.9" height="15.0" fill="rgb(221,80,18)" rx="2" ry="2" />
<text  x="1052.59" y="879.5" ></text>
</g>
<g >
<title>clang::Sema::CheckBaseSpecifier (1 samples, 0.08%)</title><rect x="1093.7" y="709" width="0.9" height="15.0" fill="rgb(246,188,49)" rx="2" ry="2" />
<text  x="1096.69" y="719.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitDeclaratorDecl (2 samples, 0.15%)</title><rect x="1007.3" y="933" width="1.8" height="15.0" fill="rgb(224,131,45)" rx="2" ry="2" />
<text  x="1010.28" y="943.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;std::add_pointer, (anonymous namespace)::AggExprEmitter, void&gt;::Visit (1 samples, 0.08%)</title><rect x="1014.5" y="693" width="0.9" height="15.0" fill="rgb(227,186,50)" rx="2" ry="2" />
<text  x="1017.49" y="703.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::commitTransaction (1 samples, 0.08%)</title><rect x="1108.1" y="901" width="0.9" height="15.0" fill="rgb(238,95,3)" rx="2" ry="2" />
<text  x="1111.09" y="911.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::getAddExpr (1 samples, 0.08%)</title><rect x="1129.7" y="501" width="0.9" height="15.0" fill="rgb(250,194,54)" rx="2" ry="2" />
<text  x="1132.69" y="511.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGBuilder::LowerCallTo (2 samples, 0.15%)</title><rect x="1123.4" y="885" width="1.8" height="15.0" fill="rgb(234,156,25)" rx="2" ry="2" />
<text  x="1126.39" y="895.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitUnaryOpLValue (1 samples, 0.08%)</title><rect x="1091.9" y="773" width="0.9" height="15.0" fill="rgb(246,131,22)" rx="2" ry="2" />
<text  x="1094.89" y="783.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::DoInstructionSelection (2 samples, 0.15%)</title><rect x="1125.2" y="821" width="1.8" height="15.0" fill="rgb(219,211,0)" rx="2" ry="2" />
<text  x="1128.19" y="831.5" ></text>
</g>
<g >
<title>llvm::SelectionDAG::Combine (2 samples, 0.15%)</title><rect x="212.5" y="693" width="1.8" height="15.0" fill="rgb(251,224,17)" rx="2" ry="2" />
<text  x="215.52" y="703.5" ></text>
</g>
<g >
<title>TClass::GetDataMember (1 samples, 0.08%)</title><rect x="447.4" y="597" width="0.9" height="15.0" fill="rgb(234,79,13)" rx="2" ry="2" />
<text  x="450.44" y="607.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::SetLLVMFunctionAttributesForDefinition (1 samples, 0.08%)</title><rect x="1042.4" y="789" width="0.9" height="15.0" fill="rgb(250,202,15)" rx="2" ry="2" />
<text  x="1045.39" y="799.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::computeBackedgeTakenCount (1 samples, 0.08%)</title><rect x="1129.7" y="629" width="0.9" height="15.0" fill="rgb(219,74,13)" rx="2" ry="2" />
<text  x="1132.69" y="639.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (1 samples, 0.08%)</title><rect x="449.2" y="821" width="0.9" height="15.0" fill="rgb(214,187,19)" rx="2" ry="2" />
<text  x="452.24" y="831.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::Compile (1 samples, 0.08%)</title><rect x="857.0" y="741" width="0.9" height="15.0" fill="rgb(234,52,44)" rx="2" ry="2" />
<text  x="859.97" y="751.5" ></text>
</g>
<g >
<title>cling::MetaParser::isCommand (1 samples, 0.08%)</title><rect x="857.0" y="837" width="0.9" height="15.0" fill="rgb(239,168,9)" rx="2" ry="2" />
<text  x="859.97" y="847.5" ></text>
</g>
<g >
<title>TCling::AutoLoad (1 samples, 0.08%)</title><rect x="1098.2" y="693" width="0.9" height="15.0" fill="rgb(243,26,8)" rx="2" ry="2" />
<text  x="1101.19" y="703.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition (1 samples, 0.08%)</title><rect x="1054.1" y="901" width="0.9" height="15.0" fill="rgb(207,121,23)" rx="2" ry="2" />
<text  x="1057.09" y="911.5" ></text>
</g>
<g >
<title>StrengthenNoWrapFlags (1 samples, 0.08%)</title><rect x="1129.7" y="693" width="0.9" height="15.0" fill="rgb(242,165,42)" rx="2" ry="2" />
<text  x="1132.69" y="703.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="342.1" y="853" width="0.9" height="15.0" fill="rgb(209,17,4)" rx="2" ry="2" />
<text  x="345.13" y="863.5" ></text>
</g>
<g >
<title>clang::Sema::BuildQualifiedDeclarationNameExpr (1 samples, 0.08%)</title><rect x="1093.7" y="821" width="0.9" height="15.0" fill="rgb(217,156,4)" rx="2" ry="2" />
<text  x="1096.69" y="831.5" ></text>
</g>
<g >
<title>llvm::legacy::FunctionPassManagerImpl::run (4 samples, 0.31%)</title><rect x="860.6" y="613" width="3.6" height="15.0" fill="rgb(237,157,5)" rx="2" ry="2" />
<text  x="863.57" y="623.5" ></text>
</g>
<g >
<title>llvm::FunctionPass::skipFunction (1 samples, 0.08%)</title><rect x="872.3" y="613" width="0.9" height="15.0" fill="rgb(223,115,25)" rx="2" ry="2" />
<text  x="875.27" y="623.5" ></text>
</g>
<g >
<title>clang::Sema::BuildDeclRefExpr (1 samples, 0.08%)</title><rect x="1095.5" y="565" width="0.9" height="15.0" fill="rgb(215,212,49)" rx="2" ry="2" />
<text  x="1098.49" y="575.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::computeExitLimitFromCond (1 samples, 0.08%)</title><rect x="1129.7" y="597" width="0.9" height="15.0" fill="rgb(250,207,26)" rx="2" ry="2" />
<text  x="1132.69" y="607.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1146.8" y="869" width="0.9" height="15.0" fill="rgb(223,106,21)" rx="2" ry="2" />
<text  x="1149.80" y="879.5" ></text>
</g>
<g >
<title>clang::Sema::PerformPendingInstantiations (3 samples, 0.23%)</title><rect x="1078.4" y="837" width="2.7" height="15.0" fill="rgb(210,26,31)" rx="2" ry="2" />
<text  x="1081.39" y="847.5" ></text>
</g>
<g >
<title>clang::TemplateDeclInstantiator::VisitFunctionTemplateDecl (1 samples, 0.08%)</title><rect x="1092.8" y="725" width="0.9" height="15.0" fill="rgb(217,135,26)" rx="2" ry="2" />
<text  x="1095.79" y="735.5" ></text>
</g>
<g >
<title>llvm::MachineFunctionPass::runOnFunction (1 samples, 0.08%)</title><rect x="854.3" y="581" width="0.9" height="15.0" fill="rgb(223,182,10)" rx="2" ry="2" />
<text  x="857.27" y="591.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.08%)</title><rect x="880.4" y="533" width="0.9" height="15.0" fill="rgb(244,15,8)" rx="2" ry="2" />
<text  x="883.37" y="543.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.08%)</title><rect x="35.2" y="293" width="0.9" height="15.0" fill="rgb(213,106,30)" rx="2" ry="2" />
<text  x="38.20" y="303.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.08%)</title><rect x="1003.7" y="677" width="0.9" height="15.0" fill="rgb(208,135,8)" rx="2" ry="2" />
<text  x="1006.68" y="687.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTemplateIdType (1 samples, 0.08%)</title><rect x="1072.1" y="757" width="0.9" height="15.0" fill="rgb(233,161,29)" rx="2" ry="2" />
<text  x="1075.09" y="767.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization (1 samples, 0.08%)</title><rect x="1089.2" y="789" width="0.9" height="15.0" fill="rgb(223,26,36)" rx="2" ry="2" />
<text  x="1092.19" y="799.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateVariableInitializer (1 samples, 0.08%)</title><rect x="1084.7" y="693" width="0.9" height="15.0" fill="rgb(211,83,10)" rx="2" ry="2" />
<text  x="1087.69" y="703.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertTypeForMem (1 samples, 0.08%)</title><rect x="1048.7" y="741" width="0.9" height="15.0" fill="rgb(210,179,4)" rx="2" ry="2" />
<text  x="1051.69" y="751.5" ></text>
</g>
<g >
<title>llvm::AttrBuilder::addAttribute (1 samples, 0.08%)</title><rect x="1037.9" y="645" width="0.9" height="15.0" fill="rgb(214,124,1)" rx="2" ry="2" />
<text  x="1040.89" y="655.5" ></text>
</g>
<g >
<title>llvm::BranchProbabilityInfoWrapperPass::runOnFunction (3 samples, 0.23%)</title><rect x="680.6" y="565" width="2.7" height="15.0" fill="rgb(205,140,46)" rx="2" ry="2" />
<text  x="683.56" y="575.5" ></text>
</g>
<g >
<title>__run_exit_handlers (1 samples, 0.08%)</title><rect x="17.2" y="293" width="0.9" height="15.0" fill="rgb(216,25,40)" rx="2" ry="2" />
<text  x="20.20" y="303.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::GetOrCreateLLVMFunction (1 samples, 0.08%)</title><rect x="1020.8" y="725" width="0.9" height="15.0" fill="rgb(236,198,53)" rx="2" ry="2" />
<text  x="1023.79" y="735.5" ></text>
</g>
<g >
<title>clang::Sema::SubstType (1 samples, 0.08%)</title><rect x="1072.1" y="821" width="0.9" height="15.0" fill="rgb(244,134,23)" rx="2" ry="2" />
<text  x="1075.09" y="831.5" ></text>
</g>
<g >
<title>cling::MetaParser::isXCommand (16 samples, 1.22%)</title><rect x="839.9" y="885" width="14.4" height="15.0" fill="rgb(208,221,26)" rx="2" ry="2" />
<text  x="842.87" y="895.5" ></text>
</g>
<g >
<title>llvm::InstrEmitter::AddOperand (1 samples, 0.08%)</title><rect x="1113.5" y="565" width="0.9" height="15.0" fill="rgb(218,122,48)" rx="2" ry="2" />
<text  x="1116.49" y="575.5" ></text>
</g>
<g >
<title>llvm::AAResultsWrapperPass::runOnFunction (1 samples, 0.08%)</title><rect x="217.0" y="757" width="0.9" height="15.0" fill="rgb(254,124,42)" rx="2" ry="2" />
<text  x="220.02" y="767.5" ></text>
</g>
<g >
<title>clang::Sema::BuildBinOp (1 samples, 0.08%)</title><rect x="1096.4" y="853" width="0.9" height="15.0" fill="rgb(228,140,2)" rx="2" ry="2" />
<text  x="1099.39" y="863.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="946.1" y="677" width="0.9" height="15.0" fill="rgb(209,80,48)" rx="2" ry="2" />
<text  x="949.08" y="687.5" ></text>
</g>
<g >
<title>llvm::orc::JITSymbolResolverAdapter::lookup (1 samples, 0.08%)</title><rect x="202.6" y="613" width="0.9" height="15.0" fill="rgb(241,154,7)" rx="2" ry="2" />
<text  x="205.62" y="623.5" ></text>
</g>
<g >
<title>__GI___fork (4 samples, 0.31%)</title><rect x="929.0" y="709" width="3.6" height="15.0" fill="rgb(219,40,50)" rx="2" ry="2" />
<text  x="931.98" y="719.5" ></text>
</g>
<g >
<title>clang::Sema::DeclareImplicitMoveConstructor (1 samples, 0.08%)</title><rect x="1055.0" y="917" width="0.9" height="15.0" fill="rgb(243,11,23)" rx="2" ry="2" />
<text  x="1057.99" y="927.5" ></text>
</g>
<g >
<title>TClass::GetDataMember (1 samples, 0.08%)</title><rect x="1118.9" y="469" width="0.9" height="15.0" fill="rgb(207,198,0)" rx="2" ry="2" />
<text  x="1121.89" y="479.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::isLoopBackedgeGuardedByCond (1 samples, 0.08%)</title><rect x="853.4" y="645" width="0.9" height="15.0" fill="rgb(238,48,10)" rx="2" ry="2" />
<text  x="856.37" y="655.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTemplateIdType (1 samples, 0.08%)</title><rect x="1064.9" y="789" width="0.9" height="15.0" fill="rgb(248,217,34)" rx="2" ry="2" />
<text  x="1067.89" y="799.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="21.7" y="229" width="0.9" height="15.0" fill="rgb(249,33,16)" rx="2" ry="2" />
<text  x="24.70" y="239.5" ></text>
</g>
<g >
<title>execute_command_internal (4 samples, 0.31%)</title><rect x="36.1" y="677" width="3.6" height="15.0" fill="rgb(245,71,29)" rx="2" ry="2" />
<text  x="39.10" y="687.5" ></text>
</g>
<g >
<title>[bash] (5 samples, 0.38%)</title><rect x="10.9" y="437" width="4.5" height="15.0" fill="rgb(218,79,42)" rx="2" ry="2" />
<text  x="13.90" y="447.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::FindExternalVisibleDeclsByName (1 samples, 0.08%)</title><rect x="1059.5" y="869" width="0.9" height="15.0" fill="rgb(213,126,52)" rx="2" ry="2" />
<text  x="1062.49" y="879.5" ></text>
</g>
<g >
<title>llvm::isAllocLikeFn (1 samples, 0.08%)</title><rect x="805.7" y="629" width="0.9" height="15.0" fill="rgb(237,202,3)" rx="2" ry="2" />
<text  x="808.67" y="639.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetType (1 samples, 0.08%)</title><rect x="1012.7" y="741" width="0.9" height="15.0" fill="rgb(207,72,51)" rx="2" ry="2" />
<text  x="1015.68" y="751.5" ></text>
</g>
<g >
<title>llvm::Value::getValueName (1 samples, 0.08%)</title><rect x="215.2" y="645" width="0.9" height="15.0" fill="rgb(228,127,51)" rx="2" ry="2" />
<text  x="218.22" y="655.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="24.4" y="133" width="0.9" height="15.0" fill="rgb(242,128,19)" rx="2" ry="2" />
<text  x="27.40" y="143.5" ></text>
</g>
<g >
<title>clang::Sema::DeduceTemplateArguments (1 samples, 0.08%)</title><rect x="1063.1" y="869" width="0.9" height="15.0" fill="rgb(239,1,42)" rx="2" ry="2" />
<text  x="1066.09" y="879.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentNameType (1 samples, 0.08%)</title><rect x="1088.3" y="917" width="0.9" height="15.0" fill="rgb(209,111,53)" rx="2" ry="2" />
<text  x="1091.29" y="927.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformCXXNamedCastExpr (1 samples, 0.08%)</title><rect x="1098.2" y="885" width="0.9" height="15.0" fill="rgb(211,91,8)" rx="2" ry="2" />
<text  x="1101.19" y="895.5" ></text>
</g>
<g >
<title>llvm::X86FrameLowering::getFrameIndexReference (1 samples, 0.08%)</title><rect x="848.0" y="565" width="0.9" height="15.0" fill="rgb(240,50,1)" rx="2" ry="2" />
<text  x="850.97" y="575.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitScalarExpr (1 samples, 0.08%)</title><rect x="1013.6" y="933" width="0.9" height="15.0" fill="rgb(223,185,17)" rx="2" ry="2" />
<text  x="1016.59" y="943.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTemplateIdType (1 samples, 0.08%)</title><rect x="1073.9" y="613" width="0.9" height="15.0" fill="rgb(205,58,30)" rx="2" ry="2" />
<text  x="1076.89" y="623.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1137.8" y="885" width="0.9" height="15.0" fill="rgb(214,42,37)" rx="2" ry="2" />
<text  x="1140.80" y="895.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformElaboratedType (1 samples, 0.08%)</title><rect x="1058.6" y="773" width="0.9" height="15.0" fill="rgb(230,77,0)" rx="2" ry="2" />
<text  x="1061.59" y="783.5" ></text>
</g>
<g >
<title>TClass::GetDataMember (1 samples, 0.08%)</title><rect x="448.3" y="469" width="0.9" height="15.0" fill="rgb(241,126,47)" rx="2" ry="2" />
<text  x="451.34" y="479.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType (1 samples, 0.08%)</title><rect x="1065.8" y="821" width="0.9" height="15.0" fill="rgb(228,227,24)" rx="2" ry="2" />
<text  x="1068.79" y="831.5" ></text>
</g>
<g >
<title>llvm::SmallPtrSetImplBase::insert_imp_big (1 samples, 0.08%)</title><rect x="703.1" y="517" width="0.9" height="15.0" fill="rgb(233,111,45)" rx="2" ry="2" />
<text  x="706.06" y="527.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl (1 samples, 0.08%)</title><rect x="1051.4" y="741" width="0.9" height="15.0" fill="rgb(253,84,44)" rx="2" ry="2" />
<text  x="1054.39" y="751.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.08%)</title><rect x="1001.9" y="501" width="0.9" height="15.0" fill="rgb(250,33,19)" rx="2" ry="2" />
<text  x="1004.88" y="511.5" ></text>
</g>
<g >
<title>TKey::ReadObjectAny (1 samples, 0.08%)</title><rect x="1118.9" y="773" width="0.9" height="15.0" fill="rgb(244,154,26)" rx="2" ry="2" />
<text  x="1121.89" y="783.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;std::add_pointer, (anonymous namespace)::ScalarExprEmitter, llvm::Value*&gt;::Visit (1 samples, 0.08%)</title><rect x="1019.9" y="789" width="0.9" height="15.0" fill="rgb(220,88,21)" rx="2" ry="2" />
<text  x="1022.89" y="799.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (5 samples, 0.38%)</title><rect x="1102.7" y="741" width="4.5" height="15.0" fill="rgb(233,8,50)" rx="2" ry="2" />
<text  x="1105.69" y="751.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveExternalSymbols (1 samples, 0.08%)</title><rect x="854.3" y="725" width="0.9" height="15.0" fill="rgb(225,176,1)" rx="2" ry="2" />
<text  x="857.27" y="735.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (1 samples, 0.08%)</title><rect x="857.0" y="661" width="0.9" height="15.0" fill="rgb(236,168,9)" rx="2" ry="2" />
<text  x="859.97" y="671.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.08%)</title><rect x="1112.6" y="741" width="0.9" height="15.0" fill="rgb(232,57,45)" rx="2" ry="2" />
<text  x="1115.59" y="751.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="10.0" y="773" width="0.9" height="15.0" fill="rgb(240,29,32)" rx="2" ry="2" />
<text  x="13.00" y="783.5" ></text>
</g>
<g >
<title>clang::Sema::SubstBaseSpecifiers (1 samples, 0.08%)</title><rect x="1075.7" y="917" width="0.9" height="15.0" fill="rgb(251,16,43)" rx="2" ry="2" />
<text  x="1078.69" y="927.5" ></text>
</g>
<g >
<title>isKnownNonZero (1 samples, 0.08%)</title><rect x="826.4" y="565" width="0.9" height="15.0" fill="rgb(247,29,34)" rx="2" ry="2" />
<text  x="829.37" y="575.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertRecordDeclType (1 samples, 0.08%)</title><rect x="1048.7" y="645" width="0.9" height="15.0" fill="rgb(253,56,20)" rx="2" ry="2" />
<text  x="1051.69" y="655.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadStmtFromStream (1 samples, 0.08%)</title><rect x="1010.0" y="741" width="0.9" height="15.0" fill="rgb(234,38,33)" rx="2" ry="2" />
<text  x="1012.98" y="751.5" ></text>
</g>
<g >
<title>llvm::LoopInfoBase&lt;llvm::MachineBasicBlock, llvm::MachineLoop&gt;::analyze (1 samples, 0.08%)</title><rect x="244.9" y="709" width="0.9" height="15.0" fill="rgb(205,89,28)" rx="2" ry="2" />
<text  x="247.92" y="719.5" ></text>
</g>
<g >
<title>clang::Lexer::Lex (1 samples, 0.08%)</title><rect x="941.6" y="757" width="0.9" height="15.0" fill="rgb(249,167,31)" rx="2" ry="2" />
<text  x="944.58" y="767.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::executeWrapper (1 samples, 0.08%)</title><rect x="449.2" y="869" width="0.9" height="15.0" fill="rgb(229,191,54)" rx="2" ry="2" />
<text  x="452.24" y="879.5" ></text>
</g>
<g >
<title>cling::Interpreter::loadHeader (1 samples, 0.08%)</title><rect x="1108.1" y="949" width="0.9" height="15.0" fill="rgb(228,185,24)" rx="2" ry="2" />
<text  x="1111.09" y="959.5" ></text>
</g>
<g >
<title>llvm::AttributeList::addAttributes (1 samples, 0.08%)</title><rect x="1044.2" y="789" width="0.9" height="15.0" fill="rgb(227,173,25)" rx="2" ry="2" />
<text  x="1047.19" y="799.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization (1 samples, 0.08%)</title><rect x="1093.7" y="757" width="0.9" height="15.0" fill="rgb(249,211,29)" rx="2" ry="2" />
<text  x="1096.69" y="767.5" ></text>
</g>
<g >
<title>execute_command (4 samples, 0.31%)</title><rect x="36.1" y="693" width="3.6" height="15.0" fill="rgb(247,181,29)" rx="2" ry="2" />
<text  x="39.10" y="703.5" ></text>
</g>
<g >
<title>clang::LinkageComputer::getLVForDecl (2 samples, 0.15%)</title><rect x="1029.8" y="869" width="1.8" height="15.0" fill="rgb(254,8,50)" rx="2" ry="2" />
<text  x="1032.79" y="879.5" ></text>
</g>
<g >
<title>unlink_chunk.isra.2 (1 samples, 0.08%)</title><rect x="797.6" y="517" width="0.9" height="15.0" fill="rgb(215,168,26)" rx="2" ry="2" />
<text  x="800.57" y="527.5" ></text>
</g>
<g >
<title>std::__unguarded_linear_insert&lt;llvm::Attribute*, __gnu_cxx::__ops::_Val_less_iter&gt; (1 samples, 0.08%)</title><rect x="1041.5" y="661" width="0.9" height="15.0" fill="rgb(235,148,44)" rx="2" ry="2" />
<text  x="1044.49" y="671.5" ></text>
</g>
<g >
<title>llvm::MCStreamer::EmitInstruction (1 samples, 0.08%)</title><rect x="847.1" y="485" width="0.9" height="15.0" fill="rgb(214,201,4)" rx="2" ry="2" />
<text  x="850.07" y="495.5" ></text>
</g>
<g >
<title>__GI___fork (8 samples, 0.61%)</title><rect x="1153.1" y="789" width="7.2" height="15.0" fill="rgb(228,224,36)" rx="2" ry="2" />
<text  x="1156.10" y="799.5" ></text>
</g>
<g >
<title>TCling::LoadPCMImpl (1 samples, 0.08%)</title><rect x="1118.9" y="837" width="0.9" height="15.0" fill="rgb(242,60,51)" rx="2" ry="2" />
<text  x="1121.89" y="847.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="999.2" y="773" width="0.9" height="15.0" fill="rgb(250,91,45)" rx="2" ry="2" />
<text  x="1002.18" y="783.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTSIInObjectScope (1 samples, 0.08%)</title><rect x="673.4" y="757" width="0.9" height="15.0" fill="rgb(215,196,29)" rx="2" ry="2" />
<text  x="676.36" y="767.5" ></text>
</g>
<g >
<title>TBufferFile::ReadObjectAny (1 samples, 0.08%)</title><rect x="448.3" y="741" width="0.9" height="15.0" fill="rgb(229,184,42)" rx="2" ry="2" />
<text  x="451.34" y="751.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.08%)</title><rect x="1118.9" y="277" width="0.9" height="15.0" fill="rgb(244,226,7)" rx="2" ry="2" />
<text  x="1121.89" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;llvm::DomainValue*, std::allocator&lt;llvm::DomainValue*&gt; &gt;::operator= (1 samples, 0.08%)</title><rect x="240.4" y="677" width="0.9" height="15.0" fill="rgb(225,186,0)" rx="2" ry="2" />
<text  x="243.42" y="687.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (1 samples, 0.08%)</title><rect x="1110.8" y="677" width="0.9" height="15.0" fill="rgb(226,220,3)" rx="2" ry="2" />
<text  x="1113.79" y="687.5" ></text>
</g>
<g >
<title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::DeleteEdge (1 samples, 0.08%)</title><rect x="851.6" y="645" width="0.9" height="15.0" fill="rgb(205,62,26)" rx="2" ry="2" />
<text  x="854.57" y="655.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.08%)</title><rect x="448.3" y="389" width="0.9" height="15.0" fill="rgb(248,228,29)" rx="2" ry="2" />
<text  x="451.34" y="399.5" ></text>
</g>
<g >
<title>llvm::LPPassManager::runOnFunction (2 samples, 0.15%)</title><rect x="875.0" y="613" width="1.8" height="15.0" fill="rgb(245,132,52)" rx="2" ry="2" />
<text  x="877.97" y="623.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGBuilder::LowerCallTo (1 samples, 0.08%)</title><rect x="1128.8" y="757" width="0.9" height="15.0" fill="rgb(213,111,31)" rx="2" ry="2" />
<text  x="1131.79" y="767.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::IncrementalExecutor (9 samples, 0.69%)</title><rect x="929.0" y="805" width="8.1" height="15.0" fill="rgb(220,130,40)" rx="2" ry="2" />
<text  x="931.98" y="815.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertTypeForMem (1 samples, 0.08%)</title><rect x="1049.6" y="805" width="0.9" height="15.0" fill="rgb(241,2,11)" rx="2" ry="2" />
<text  x="1052.59" y="815.5" ></text>
</g>
<g >
<title>clang::SourceManager::loadSLocEntry (1 samples, 0.08%)</title><rect x="1082.9" y="821" width="0.9" height="15.0" fill="rgb(209,89,11)" rx="2" ry="2" />
<text  x="1085.89" y="831.5" ></text>
</g>
<g >
<title>llvm::Use::getImpliedUser (1 samples, 0.08%)</title><rect x="873.2" y="549" width="0.9" height="15.0" fill="rgb(212,196,4)" rx="2" ry="2" />
<text  x="876.17" y="559.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (5 samples, 0.38%)</title><rect x="1113.5" y="725" width="4.5" height="15.0" fill="rgb(221,11,5)" rx="2" ry="2" />
<text  x="1116.49" y="735.5" ></text>
</g>
<g >
<title>llvm::X86AsmPrinter::EmitInstruction (2 samples, 0.15%)</title><rect x="846.2" y="549" width="1.8" height="15.0" fill="rgb(228,21,47)" rx="2" ry="2" />
<text  x="849.17" y="559.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.08%)</title><rect x="1088.3" y="837" width="0.9" height="15.0" fill="rgb(253,193,20)" rx="2" ry="2" />
<text  x="1091.29" y="847.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::getModule (1 samples, 0.08%)</title><rect x="1085.6" y="629" width="0.9" height="15.0" fill="rgb(232,41,13)" rx="2" ry="2" />
<text  x="1088.59" y="639.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="342.1" y="709" width="0.9" height="15.0" fill="rgb(226,56,20)" rx="2" ry="2" />
<text  x="345.13" y="719.5" ></text>
</g>
<g >
<title>clang::CXXRecordDecl::getDestructor (1 samples, 0.08%)</title><rect x="1100.0" y="597" width="0.9" height="15.0" fill="rgb(252,209,41)" rx="2" ry="2" />
<text  x="1102.99" y="607.5" ></text>
</g>
<g >
<title>TCling::InspectMembers (1 samples, 0.08%)</title><rect x="447.4" y="629" width="0.9" height="15.0" fill="rgb(250,211,32)" rx="2" ry="2" />
<text  x="450.44" y="639.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1148.6" y="853" width="0.9" height="15.0" fill="rgb(219,48,32)" rx="2" ry="2" />
<text  x="1151.60" y="863.5" ></text>
</g>
<g >
<title>sh (47 samples, 3.59%)</title><rect x="1147.7" y="965" width="42.3" height="15.0" fill="rgb(218,99,46)" rx="2" ry="2" />
<text  x="1150.70" y="975.5" >sh</text>
</g>
<g >
<title>operator() (1 samples, 0.08%)</title><rect x="202.6" y="517" width="0.9" height="15.0" fill="rgb(222,108,14)" rx="2" ry="2" />
<text  x="205.62" y="527.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="20.8" y="213" width="0.9" height="15.0" fill="rgb(229,32,14)" rx="2" ry="2" />
<text  x="23.80" y="223.5" ></text>
</g>
<g >
<title>ROOT::Detail::RDF::RLoopManager::GetBranchNames[abi:cxx11] (3 samples, 0.23%)</title><rect x="446.5" y="933" width="2.7" height="15.0" fill="rgb(227,219,6)" rx="2" ry="2" />
<text  x="449.54" y="943.5" ></text>
</g>
<g >
<title>llvm::X86TargetMachine::getTargetTransformInfo (1 samples, 0.08%)</title><rect x="227.8" y="725" width="0.9" height="15.0" fill="rgb(221,117,3)" rx="2" ry="2" />
<text  x="230.82" y="735.5" ></text>
</g>
<g >
<title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, true&gt; &gt;::FindRoots (1 samples, 0.08%)</title><rect x="893.0" y="581" width="0.9" height="15.0" fill="rgb(220,229,46)" rx="2" ry="2" />
<text  x="895.97" y="591.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl (1 samples, 0.08%)</title><rect x="1061.3" y="757" width="0.9" height="15.0" fill="rgb(231,228,54)" rx="2" ry="2" />
<text  x="1064.29" y="767.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::IncrementalParser (5 samples, 0.38%)</title><rect x="937.1" y="805" width="4.5" height="15.0" fill="rgb(227,76,12)" rx="2" ry="2" />
<text  x="940.08" y="815.5" ></text>
</g>
<g >
<title>clang::TemplateDeclInstantiator::VisitTypedefDecl (1 samples, 0.08%)</title><rect x="1058.6" y="853" width="0.9" height="15.0" fill="rgb(251,49,17)" rx="2" ry="2" />
<text  x="1061.59" y="863.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (1 samples, 0.08%)</title><rect x="1085.6" y="869" width="0.9" height="15.0" fill="rgb(230,216,2)" rx="2" ry="2" />
<text  x="1088.59" y="879.5" ></text>
</g>
<g >
<title>TClass::CallShowMembers (1 samples, 0.08%)</title><rect x="447.4" y="789" width="0.9" height="15.0" fill="rgb(246,146,18)" rx="2" ry="2" />
<text  x="450.44" y="799.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitFunctionProlog (1 samples, 0.08%)</title><rect x="1024.4" y="901" width="0.9" height="15.0" fill="rgb(236,89,26)" rx="2" ry="2" />
<text  x="1027.39" y="911.5" ></text>
</g>
<g >
<title>clang::ASTReader::getGlobalDeclID (1 samples, 0.08%)</title><rect x="1111.7" y="469" width="0.9" height="15.0" fill="rgb(215,85,24)" rx="2" ry="2" />
<text  x="1114.69" y="479.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::setNonAliasAttributes (1 samples, 0.08%)</title><rect x="1038.8" y="709" width="0.9" height="15.0" fill="rgb(238,81,11)" rx="2" ry="2" />
<text  x="1041.79" y="719.5" ></text>
</g>
<g >
<title>llvm::AttributeList::getImpl (1 samples, 0.08%)</title><rect x="1091.0" y="709" width="0.9" height="15.0" fill="rgb(223,20,46)" rx="2" ry="2" />
<text  x="1093.99" y="719.5" ></text>
</g>
<g >
<title>__dlsym (1 samples, 0.08%)</title><rect x="865.1" y="597" width="0.9" height="15.0" fill="rgb(244,120,15)" rx="2" ry="2" />
<text  x="868.07" y="607.5" ></text>
</g>
<g >
<title>TCling::ProcessLineSynch (76 samples, 5.80%)</title><rect x="860.6" y="869" width="68.4" height="15.0" fill="rgb(227,208,2)" rx="2" ry="2" />
<text  x="863.57" y="879.5" >TCling:..</text>
</g>
<g >
<title>execute_command (4 samples, 0.31%)</title><rect x="36.1" y="837" width="3.6" height="15.0" fill="rgb(223,63,12)" rx="2" ry="2" />
<text  x="39.10" y="847.5" ></text>
</g>
<g >
<title>TBufferFile::ReadObjectAny (1 samples, 0.08%)</title><rect x="448.3" y="629" width="0.9" height="15.0" fill="rgb(247,72,4)" rx="2" ry="2" />
<text  x="451.34" y="639.5" ></text>
</g>
<g >
<title>[bash] (16 samples, 1.22%)</title><rect x="15.4" y="421" width="14.4" height="15.0" fill="rgb(237,43,45)" rx="2" ry="2" />
<text  x="18.40" y="431.5" ></text>
</g>
<g >
<title>llvm::Pass::getPassName (1 samples, 0.08%)</title><rect x="892.1" y="613" width="0.9" height="15.0" fill="rgb(224,168,33)" rx="2" ry="2" />
<text  x="895.07" y="623.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::SetFunctionAttributes (1 samples, 0.08%)</title><rect x="1018.1" y="661" width="0.9" height="15.0" fill="rgb(215,154,33)" rx="2" ry="2" />
<text  x="1021.09" y="671.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition (1 samples, 0.08%)</title><rect x="1037.0" y="693" width="0.9" height="15.0" fill="rgb(246,35,36)" rx="2" ry="2" />
<text  x="1039.99" y="703.5" ></text>
</g>
<g >
<title>_dl_open (1 samples, 0.08%)</title><rect x="202.6" y="357" width="0.9" height="15.0" fill="rgb(226,118,29)" rx="2" ry="2" />
<text  x="205.62" y="367.5" ></text>
</g>
<g >
<title>llvm::AttrBuilder::AttrBuilder (1 samples, 0.08%)</title><rect x="1037.9" y="661" width="0.9" height="15.0" fill="rgb(252,94,36)" rx="2" ry="2" />
<text  x="1040.89" y="671.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformReferenceType (1 samples, 0.08%)</title><rect x="1089.2" y="917" width="0.9" height="15.0" fill="rgb(227,9,27)" rx="2" ry="2" />
<text  x="1092.19" y="927.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveRelocations (1 samples, 0.08%)</title><rect x="1110.8" y="821" width="0.9" height="15.0" fill="rgb(205,146,6)" rx="2" ry="2" />
<text  x="1113.79" y="831.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::runOnMachineFunction (6 samples, 0.46%)</title><rect x="840.8" y="581" width="5.4" height="15.0" fill="rgb(253,171,2)" rx="2" ry="2" />
<text  x="843.77" y="591.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1162.1" y="789" width="0.9" height="15.0" fill="rgb(213,38,49)" rx="2" ry="2" />
<text  x="1165.10" y="799.5" ></text>
</g>
<g >
<title>getAllocationData (1 samples, 0.08%)</title><rect x="805.7" y="613" width="0.9" height="15.0" fill="rgb(246,173,36)" rx="2" ry="2" />
<text  x="808.67" y="623.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.08%)</title><rect x="803.0" y="661" width="0.9" height="15.0" fill="rgb(239,188,15)" rx="2" ry="2" />
<text  x="805.97" y="671.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (2 samples, 0.15%)</title><rect x="1094.6" y="901" width="1.8" height="15.0" fill="rgb(248,146,38)" rx="2" ry="2" />
<text  x="1097.59" y="911.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization (1 samples, 0.08%)</title><rect x="1085.6" y="933" width="0.9" height="15.0" fill="rgb(221,68,31)" rx="2" ry="2" />
<text  x="1088.59" y="943.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadStmtFromStream (1 samples, 0.08%)</title><rect x="1059.5" y="677" width="0.9" height="15.0" fill="rgb(247,146,28)" rx="2" ry="2" />
<text  x="1062.49" y="687.5" ></text>
</g>
<g >
<title>clang::Sema::SubstituteExplicitTemplateArguments (1 samples, 0.08%)</title><rect x="1055.9" y="917" width="0.9" height="15.0" fill="rgb(208,147,16)" rx="2" ry="2" />
<text  x="1058.89" y="927.5" ></text>
</g>
<g >
<title>printForSigInfoIfNeeded (1 samples, 0.08%)</title><rect x="926.3" y="597" width="0.9" height="15.0" fill="rgb(229,16,51)" rx="2" ry="2" />
<text  x="929.28" y="607.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::runStaticInitializersOnce (7 samples, 0.53%)</title><rect x="831.8" y="693" width="6.3" height="15.0" fill="rgb(227,69,37)" rx="2" ry="2" />
<text  x="834.77" y="703.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;llvm::make_const_ptr, (anonymous namespace)::LValueExprEvaluator, bool&gt;::Visit (1 samples, 0.08%)</title><rect x="1021.7" y="725" width="0.9" height="15.0" fill="rgb(245,186,20)" rx="2" ry="2" />
<text  x="1024.69" y="735.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord (1 samples, 0.08%)</title><rect x="1051.4" y="837" width="0.9" height="15.0" fill="rgb(239,110,29)" rx="2" ry="2" />
<text  x="1054.39" y="847.5" ></text>
</g>
<g >
<title>clang::Sema::ActOnCXXNestedNameSpecifier (1 samples, 0.08%)</title><rect x="1098.2" y="565" width="0.9" height="15.0" fill="rgb(221,67,47)" rx="2" ry="2" />
<text  x="1101.19" y="575.5" ></text>
</g>
<g >
<title>llvm::isKnownNonZero (1 samples, 0.08%)</title><rect x="813.8" y="597" width="0.9" height="15.0" fill="rgb(205,17,26)" rx="2" ry="2" />
<text  x="816.77" y="607.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="28.0" y="213" width="0.9" height="15.0" fill="rgb(226,50,24)" rx="2" ry="2" />
<text  x="31.00" y="223.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt;, llvm::DenseMapInfo&lt;llvm::BasicBlock*&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt; &gt; &gt;, llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt;, llvm::DenseMapInfo&lt;llvm::BasicBlock*&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt; &gt; &gt;::destroyAll (1 samples, 0.08%)</title><rect x="1101.8" y="773" width="0.9" height="15.0" fill="rgb(206,138,40)" rx="2" ry="2" />
<text  x="1104.79" y="783.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitStmt (1 samples, 0.08%)</title><rect x="1015.4" y="565" width="0.9" height="15.0" fill="rgb(251,70,37)" rx="2" ry="2" />
<text  x="1018.39" y="575.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitLValue (1 samples, 0.08%)</title><rect x="1019.9" y="853" width="0.9" height="15.0" fill="rgb(228,107,21)" rx="2" ry="2" />
<text  x="1022.89" y="863.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::run (1 samples, 0.08%)</title><rect x="857.0" y="613" width="0.9" height="15.0" fill="rgb(252,127,23)" rx="2" ry="2" />
<text  x="859.97" y="623.5" ></text>
</g>
<g >
<title>llvm::TargetLibraryInfoImpl::getLibFunc (1 samples, 0.08%)</title><rect x="907.4" y="485" width="0.9" height="15.0" fill="rgb(223,181,51)" rx="2" ry="2" />
<text  x="910.38" y="495.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="342.1" y="805" width="0.9" height="15.0" fill="rgb(206,59,3)" rx="2" ry="2" />
<text  x="345.13" y="815.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.08%)</title><rect x="806.6" y="629" width="0.9" height="15.0" fill="rgb(239,220,6)" rx="2" ry="2" />
<text  x="809.57" y="639.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit (1 samples, 0.08%)</title><rect x="1010.0" y="933" width="0.9" height="15.0" fill="rgb(235,178,25)" rx="2" ry="2" />
<text  x="1012.98" y="943.5" ></text>
</g>
<g >
<title>llvm::X86FrameLowering::emitPrologue (1 samples, 0.08%)</title><rect x="713.0" y="549" width="0.9" height="15.0" fill="rgb(237,100,22)" rx="2" ry="2" />
<text  x="715.96" y="559.5" ></text>
</g>
<g >
<title>?? (2 samples, 0.15%)</title><rect x="858.8" y="821" width="1.8" height="15.0" fill="rgb(212,103,5)" rx="2" ry="2" />
<text  x="861.77" y="831.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitTypedefNameDecl (1 samples, 0.08%)</title><rect x="1012.7" y="773" width="0.9" height="15.0" fill="rgb(250,219,53)" rx="2" ry="2" />
<text  x="1015.68" y="783.5" ></text>
</g>
<g >
<title>llvm::Function::addAttribute (1 samples, 0.08%)</title><rect x="1041.5" y="757" width="0.9" height="15.0" fill="rgb(236,7,38)" rx="2" ry="2" />
<text  x="1044.49" y="767.5" ></text>
</g>
<g >
<title>[libz.so.1.2.11] (1 samples, 0.08%)</title><rect x="446.5" y="789" width="0.9" height="15.0" fill="rgb(221,92,39)" rx="2" ry="2" />
<text  x="449.54" y="799.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::setNonAliasAttributes (1 samples, 0.08%)</title><rect x="1044.2" y="821" width="0.9" height="15.0" fill="rgb(228,133,23)" rx="2" ry="2" />
<text  x="1047.19" y="831.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1162.1" y="773" width="0.9" height="15.0" fill="rgb(238,84,12)" rx="2" ry="2" />
<text  x="1165.10" y="783.5" ></text>
</g>
<g >
<title>_longjmp_unwind (1 samples, 0.08%)</title><rect x="29.8" y="469" width="0.9" height="15.0" fill="rgb(216,52,26)" rx="2" ry="2" />
<text  x="32.80" y="479.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitScalarExpr (1 samples, 0.08%)</title><rect x="1091.9" y="741" width="0.9" height="15.0" fill="rgb(218,191,9)" rx="2" ry="2" />
<text  x="1094.89" y="751.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (1 samples, 0.08%)</title><rect x="874.1" y="597" width="0.9" height="15.0" fill="rgb(227,104,18)" rx="2" ry="2" />
<text  x="877.07" y="607.5" ></text>
</g>
<g >
<title>execute_command (5 samples, 0.38%)</title><rect x="10.9" y="629" width="4.5" height="15.0" fill="rgb(221,213,24)" rx="2" ry="2" />
<text  x="13.90" y="639.5" ></text>
</g>
<g >
<title>llvm::ScheduleDAGSDNodes::AddSchedEdges (1 samples, 0.08%)</title><rect x="840.8" y="533" width="0.9" height="15.0" fill="rgb(210,28,37)" rx="2" ry="2" />
<text  x="843.77" y="543.5" ></text>
</g>
<g >
<title>llvm::JumpThreadingPass::ComputeValueKnownInPredecessorsImpl (2 samples, 0.15%)</title><rect x="815.6" y="597" width="1.8" height="15.0" fill="rgb(228,3,18)" rx="2" ry="2" />
<text  x="818.57" y="607.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject&lt;std::shared_ptr&lt;llvm::RuntimeDyld::MemoryManager&gt; &gt;::getSymbolMaterializer(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda()#1}&gt;::_M_invoke (11 samples, 0.84%)</title><rect x="839.9" y="789" width="9.9" height="15.0" fill="rgb(229,189,35)" rx="2" ry="2" />
<text  x="842.87" y="799.5" ></text>
</g>
<g >
<title>llvm::Pass::getPassName (1 samples, 0.08%)</title><rect x="226.9" y="757" width="0.9" height="15.0" fill="rgb(242,226,17)" rx="2" ry="2" />
<text  x="229.92" y="767.5" ></text>
</g>
<g >
<title>execute_command_internal (16 samples, 1.22%)</title><rect x="15.4" y="533" width="14.4" height="15.0" fill="rgb(219,49,32)" rx="2" ry="2" />
<text  x="18.40" y="543.5" ></text>
</g>
<g >
<title>execute_command_internal (4 samples, 0.31%)</title><rect x="36.1" y="869" width="3.6" height="15.0" fill="rgb(207,10,49)" rx="2" ry="2" />
<text  x="39.10" y="879.5" ></text>
</g>
<g >
<title>clang::Sema::AddImplicitlyDeclaredMembersToClass (1 samples, 0.08%)</title><rect x="1055.0" y="933" width="0.9" height="15.0" fill="rgb(253,39,10)" rx="2" ry="2" />
<text  x="1057.99" y="943.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.08%)</title><rect x="1038.8" y="613" width="0.9" height="15.0" fill="rgb(250,18,3)" rx="2" ry="2" />
<text  x="1041.79" y="623.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (1 samples, 0.08%)</title><rect x="1120.7" y="837" width="0.9" height="15.0" fill="rgb(228,204,1)" rx="2" ry="2" />
<text  x="1123.69" y="847.5" ></text>
</g>
<g >
<title>clang::Sema::PerformCopyInitialization (2 samples, 0.15%)</title><rect x="1067.6" y="917" width="1.8" height="15.0" fill="rgb(206,12,3)" rx="2" ry="2" />
<text  x="1070.59" y="927.5" ></text>
</g>
<g >
<title>cling::Transaction::Transaction (1 samples, 0.08%)</title><rect x="447.4" y="405" width="0.9" height="15.0" fill="rgb(229,49,38)" rx="2" ry="2" />
<text  x="450.44" y="415.5" ></text>
</g>
<g >
<title>llvm::AttributeSetNode::hasAttribute (1 samples, 0.08%)</title><rect x="227.8" y="693" width="0.9" height="15.0" fill="rgb(213,91,43)" rx="2" ry="2" />
<text  x="230.82" y="703.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyld::finalizeWithMemoryManagerLocking (1 samples, 0.08%)</title><rect x="202.6" y="789" width="0.9" height="15.0" fill="rgb(225,189,16)" rx="2" ry="2" />
<text  x="205.62" y="799.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadNestedNameSpecifier (1 samples, 0.08%)</title><rect x="1008.2" y="789" width="0.9" height="15.0" fill="rgb(222,214,11)" rx="2" ry="2" />
<text  x="1011.18" y="799.5" ></text>
</g>
<g >
<title>SubstDefaultTemplateArgument (1 samples, 0.08%)</title><rect x="1064.0" y="933" width="0.9" height="15.0" fill="rgb(244,122,43)" rx="2" ry="2" />
<text  x="1066.99" y="943.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::visitCallInst (5 samples, 0.38%)</title><rect x="824.6" y="613" width="4.5" height="15.0" fill="rgb(227,61,39)" rx="2" ry="2" />
<text  x="827.57" y="623.5" ></text>
</g>
<g >
<title>cling::MetaProcessor::process (1 samples, 0.08%)</title><rect x="857.0" y="853" width="0.9" height="15.0" fill="rgb(231,13,12)" rx="2" ry="2" />
<text  x="859.97" y="863.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;, void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;::LookupBucketFor&lt;void const*&gt; (1 samples, 0.08%)</title><rect x="874.1" y="581" width="0.9" height="15.0" fill="rgb(251,92,21)" rx="2" ry="2" />
<text  x="877.07" y="591.5" ></text>
</g>
<g >
<title>llvm::MCAssembler::Finish (1 samples, 0.08%)</title><rect x="839.9" y="581" width="0.9" height="15.0" fill="rgb(211,185,41)" rx="2" ry="2" />
<text  x="842.87" y="591.5" ></text>
</g>
<g >
<title>EvaluateInPlace (1 samples, 0.08%)</title><rect x="1023.5" y="693" width="0.9" height="15.0" fill="rgb(219,65,30)" rx="2" ry="2" />
<text  x="1026.49" y="703.5" ></text>
</g>
<g >
<title>llvm::MachineRegisterInfo::isPhysRegUsed (1 samples, 0.08%)</title><rect x="242.2" y="693" width="0.9" height="15.0" fill="rgb(240,178,32)" rx="2" ry="2" />
<text  x="245.22" y="703.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.08%)</title><rect x="1079.3" y="677" width="0.9" height="15.0" fill="rgb(211,198,34)" rx="2" ry="2" />
<text  x="1082.29" y="687.5" ></text>
</g>
<g >
<title>TBuildRealData::Inspect (1 samples, 0.08%)</title><rect x="447.4" y="741" width="0.9" height="15.0" fill="rgb(210,128,34)" rx="2" ry="2" />
<text  x="450.44" y="751.5" ></text>
</g>
<g >
<title>llvm::orc::SimpleCompiler::operator() (2 samples, 0.15%)</title><rect x="212.5" y="821" width="1.8" height="15.0" fill="rgb(238,225,21)" rx="2" ry="2" />
<text  x="215.52" y="831.5" ></text>
</g>
<g >
<title>TBufferFile::ReadClassBuffer (1 samples, 0.08%)</title><rect x="448.3" y="581" width="0.9" height="15.0" fill="rgb(253,77,44)" rx="2" ry="2" />
<text  x="451.34" y="591.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="445.6" y="837" width="0.9" height="15.0" fill="rgb(237,196,3)" rx="2" ry="2" />
<text  x="448.64" y="847.5" ></text>
</g>
<g >
<title>[bash] (40 samples, 3.05%)</title><rect x="1152.2" y="901" width="36.0" height="15.0" fill="rgb(226,114,24)" rx="2" ry="2" />
<text  x="1155.20" y="911.5" >[ba..</text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition (1 samples, 0.08%)</title><rect x="1054.1" y="773" width="0.9" height="15.0" fill="rgb(254,204,16)" rx="2" ry="2" />
<text  x="1057.09" y="783.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::runOnMachineFunction (3 samples, 0.23%)</title><rect x="246.7" y="725" width="2.7" height="15.0" fill="rgb(244,24,15)" rx="2" ry="2" />
<text  x="249.72" y="735.5" ></text>
</g>
<g >
<title>TCling::ExecuteMacro (1 samples, 0.08%)</title><rect x="838.1" y="837" width="0.9" height="15.0" fill="rgb(223,149,27)" rx="2" ry="2" />
<text  x="841.07" y="847.5" ></text>
</g>
<g >
<title>llvm::BranchProbabilityInfoWrapperPass::runOnFunction (1 samples, 0.08%)</title><rect x="832.7" y="645" width="0.9" height="15.0" fill="rgb(231,81,54)" rx="2" ry="2" />
<text  x="835.67" y="655.5" ></text>
</g>
<g >
<title>llvm::isAllocLikeFn (1 samples, 0.08%)</title><rect x="907.4" y="533" width="0.9" height="15.0" fill="rgb(235,217,1)" rx="2" ry="2" />
<text  x="910.38" y="543.5" ></text>
</g>
<g >
<title>llvm::AAResults::getModRefInfo (1 samples, 0.08%)</title><rect x="804.8" y="597" width="0.9" height="15.0" fill="rgb(245,126,3)" rx="2" ry="2" />
<text  x="807.77" y="607.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl (1 samples, 0.08%)</title><rect x="1085.6" y="853" width="0.9" height="15.0" fill="rgb(209,9,54)" rx="2" ry="2" />
<text  x="1088.59" y="863.5" ></text>
</g>
<g >
<title>.annobin_rtld.c (1 samples, 0.08%)</title><rect x="200.8" y="949" width="0.9" height="15.0" fill="rgb(213,180,29)" rx="2" ry="2" />
<text  x="203.82" y="959.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnModule (2 samples, 0.15%)</title><rect x="1125.2" y="917" width="1.8" height="15.0" fill="rgb(208,171,38)" rx="2" ry="2" />
<text  x="1128.19" y="927.5" ></text>
</g>
<g >
<title>[bash] (40 samples, 3.05%)</title><rect x="1152.2" y="853" width="36.0" height="15.0" fill="rgb(242,220,25)" rx="2" ry="2" />
<text  x="1155.20" y="863.5" >[ba..</text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::CompleteRedeclChain (1 samples, 0.08%)</title><rect x="1048.7" y="437" width="0.9" height="15.0" fill="rgb(241,130,25)" rx="2" ry="2" />
<text  x="1051.69" y="447.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType (1 samples, 0.08%)</title><rect x="1088.3" y="869" width="0.9" height="15.0" fill="rgb(207,24,17)" rx="2" ry="2" />
<text  x="1091.29" y="879.5" ></text>
</g>
<g >
<title>llvm::DomTreeBuilder::Verify&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt; (1 samples, 0.08%)</title><rect x="819.2" y="661" width="0.9" height="15.0" fill="rgb(251,40,18)" rx="2" ry="2" />
<text  x="822.17" y="671.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;std::add_pointer, (anonymous namespace)::AggExprEmitter, void&gt;::Visit (1 samples, 0.08%)</title><rect x="1014.5" y="677" width="0.9" height="15.0" fill="rgb(211,78,14)" rx="2" ry="2" />
<text  x="1017.49" y="687.5" ></text>
</g>
<g >
<title>clang::Sema::SubstType (1 samples, 0.08%)</title><rect x="1074.8" y="629" width="0.9" height="15.0" fill="rgb(215,145,16)" rx="2" ry="2" />
<text  x="1077.79" y="639.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (2 samples, 0.15%)</title><rect x="835.4" y="645" width="1.8" height="15.0" fill="rgb(248,150,31)" rx="2" ry="2" />
<text  x="838.37" y="655.5" ></text>
</g>
<g >
<title>clang::ASTStmtReader::VisitDeclRefExpr (1 samples, 0.08%)</title><rect x="1022.6" y="677" width="0.9" height="15.0" fill="rgb(225,218,50)" rx="2" ry="2" />
<text  x="1025.59" y="687.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="342.1" y="821" width="0.9" height="15.0" fill="rgb(215,197,33)" rx="2" ry="2" />
<text  x="345.13" y="831.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.08%)</title><rect x="237.7" y="693" width="0.9" height="15.0" fill="rgb(227,11,27)" rx="2" ry="2" />
<text  x="240.72" y="703.5" ></text>
</g>
<g >
<title>execute_command_internal (4 samples, 0.31%)</title><rect x="36.1" y="853" width="3.6" height="15.0" fill="rgb(228,83,38)" rx="2" ry="2" />
<text  x="39.10" y="863.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitFunctionDecl (1 samples, 0.08%)</title><rect x="1059.5" y="773" width="0.9" height="15.0" fill="rgb(236,203,16)" rx="2" ry="2" />
<text  x="1062.49" y="783.5" ></text>
</g>
<g >
<title>llvm::post_order&lt;llvm::BasicBlock const*&gt; (1 samples, 0.08%)</title><rect x="903.8" y="565" width="0.9" height="15.0" fill="rgb(217,100,43)" rx="2" ry="2" />
<text  x="906.78" y="575.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.08%)</title><rect x="704.0" y="501" width="0.9" height="15.0" fill="rgb(219,171,13)" rx="2" ry="2" />
<text  x="706.96" y="511.5" ></text>
</g>
<g >
<title>cling::MetaParser::isCommand (7 samples, 0.53%)</title><rect x="831.8" y="837" width="6.3" height="15.0" fill="rgb(222,162,13)" rx="2" ry="2" />
<text  x="834.77" y="847.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl (1 samples, 0.08%)</title><rect x="1077.5" y="709" width="0.9" height="15.0" fill="rgb(224,196,40)" rx="2" ry="2" />
<text  x="1080.49" y="719.5" ></text>
</g>
<g >
<title>llvm::orc::lookupWithLegacyFn&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}::operator()(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;) const::{lambda(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)#1}&gt; (5 samples, 0.38%)</title><rect x="1102.7" y="789" width="4.5" height="15.0" fill="rgb(209,108,46)" rx="2" ry="2" />
<text  x="1105.69" y="799.5" ></text>
</g>
<g >
<title>clang::Sema::ActOnFields (1 samples, 0.08%)</title><rect x="1100.0" y="613" width="0.9" height="15.0" fill="rgb(223,127,52)" rx="2" ry="2" />
<text  x="1102.99" y="623.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::setGlobalVisibility (1 samples, 0.08%)</title><rect x="1016.3" y="613" width="0.9" height="15.0" fill="rgb(205,95,31)" rx="2" ry="2" />
<text  x="1019.29" y="623.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.08%)</title><rect x="35.2" y="677" width="0.9" height="15.0" fill="rgb(238,208,52)" rx="2" ry="2" />
<text  x="38.20" y="687.5" ></text>
</g>
<g >
<title>llvm::ComputeValueVTs (1 samples, 0.08%)</title><rect x="1124.3" y="821" width="0.9" height="15.0" fill="rgb(205,114,40)" rx="2" ry="2" />
<text  x="1127.29" y="831.5" ></text>
</g>
<g >
<title>cling::Interpreter::EvaluateInternal (1 samples, 0.08%)</title><rect x="838.1" y="693" width="0.9" height="15.0" fill="rgb(216,115,35)" rx="2" ry="2" />
<text  x="841.07" y="703.5" ></text>
</g>
<g >
<title>ROOT::Internal::TTreeReaderValueBase::GetAddress (227 samples, 17.32%)</title><rect x="466.3" y="933" width="204.4" height="15.0" fill="rgb(211,188,9)" rx="2" ry="2" />
<text  x="469.34" y="943.5" >ROOT::Internal::TTreeReade..</text>
</g>
<g >
<title>TClass::BuildRealData (1 samples, 0.08%)</title><rect x="1118.9" y="549" width="0.9" height="15.0" fill="rgb(243,207,19)" rx="2" ry="2" />
<text  x="1121.89" y="559.5" ></text>
</g>
<g >
<title>llvm::sroa::AllocaSliceRewriter::visitIntrinsicInst (1 samples, 0.08%)</title><rect x="801.2" y="533" width="0.9" height="15.0" fill="rgb(217,198,46)" rx="2" ry="2" />
<text  x="804.17" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_erase (1 samples, 0.08%)</title><rect x="1037.0" y="613" width="0.9" height="15.0" fill="rgb(236,100,49)" rx="2" ry="2" />
<text  x="1039.99" y="623.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::visitAllocaInst (2 samples, 0.15%)</title><rect x="809.3" y="629" width="1.8" height="15.0" fill="rgb(229,143,30)" rx="2" ry="2" />
<text  x="812.27" y="639.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.08%)</title><rect x="851.6" y="565" width="0.9" height="15.0" fill="rgb(247,203,31)" rx="2" ry="2" />
<text  x="854.57" y="575.5" ></text>
</g>
<g >
<title>TROOT::Macro (2 samples, 0.15%)</title><rect x="855.2" y="885" width="1.8" height="15.0" fill="rgb(230,33,53)" rx="2" ry="2" />
<text  x="858.17" y="895.5" ></text>
</g>
<g >
<title>clang::DeclarationName::getAsString[abi:cxx11] (1 samples, 0.08%)</title><rect x="237.7" y="725" width="0.9" height="15.0" fill="rgb(217,138,31)" rx="2" ry="2" />
<text  x="240.72" y="735.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition (1 samples, 0.08%)</title><rect x="1078.4" y="725" width="0.9" height="15.0" fill="rgb(239,14,6)" rx="2" ry="2" />
<text  x="1081.39" y="735.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitPointerWithAlignment (1 samples, 0.08%)</title><rect x="1091.9" y="757" width="0.9" height="15.0" fill="rgb(251,64,11)" rx="2" ry="2" />
<text  x="1094.89" y="767.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddDecl (1 samples, 0.08%)</title><rect x="1058.6" y="581" width="0.9" height="15.0" fill="rgb(218,27,20)" rx="2" ry="2" />
<text  x="1061.59" y="591.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (14 samples, 1.07%)</title><rect x="1033.4" y="901" width="12.6" height="15.0" fill="rgb(225,131,31)" rx="2" ry="2" />
<text  x="1036.39" y="911.5" ></text>
</g>
<g >
<title>__GI__IO_file_underflow (1 samples, 0.08%)</title><rect x="950.6" y="773" width="0.9" height="15.0" fill="rgb(209,138,23)" rx="2" ry="2" />
<text  x="953.58" y="783.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl (1 samples, 0.08%)</title><rect x="1059.5" y="837" width="0.9" height="15.0" fill="rgb(236,51,41)" rx="2" ry="2" />
<text  x="1062.49" y="847.5" ></text>
</g>
<g >
<title>execute_command_internal (4 samples, 0.31%)</title><rect x="36.1" y="821" width="3.6" height="15.0" fill="rgb(215,181,11)" rx="2" ry="2" />
<text  x="39.10" y="831.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (1 samples, 0.08%)</title><rect x="228.7" y="709" width="0.9" height="15.0" fill="rgb(220,201,26)" rx="2" ry="2" />
<text  x="231.72" y="719.5" ></text>
</g>
<g >
<title>getpwuid (5 samples, 0.38%)</title><rect x="1002.8" y="773" width="4.5" height="15.0" fill="rgb(222,91,30)" rx="2" ry="2" />
<text  x="1005.78" y="783.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization (1 samples, 0.08%)</title><rect x="1072.1" y="869" width="0.9" height="15.0" fill="rgb(251,81,3)" rx="2" ry="2" />
<text  x="1075.09" y="879.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitAnyExpr (1 samples, 0.08%)</title><rect x="1019.9" y="821" width="0.9" height="15.0" fill="rgb(217,90,0)" rx="2" ry="2" />
<text  x="1022.89" y="831.5" ></text>
</g>
<g >
<title>dl_open_worker (1 samples, 0.08%)</title><rect x="839.0" y="725" width="0.9" height="15.0" fill="rgb(206,178,27)" rx="2" ry="2" />
<text  x="841.97" y="735.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::codeGenTransaction (1 samples, 0.08%)</title><rect x="850.7" y="773" width="0.9" height="15.0" fill="rgb(249,14,21)" rx="2" ry="2" />
<text  x="853.67" y="783.5" ></text>
</g>
<g >
<title>llvm::SelectionDAG::allnodes_clear (1 samples, 0.08%)</title><rect x="841.7" y="517" width="0.9" height="15.0" fill="rgb(250,173,4)" rx="2" ry="2" />
<text  x="844.67" y="527.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitStmt (1 samples, 0.08%)</title><rect x="1019.0" y="789" width="0.9" height="15.0" fill="rgb(243,160,38)" rx="2" ry="2" />
<text  x="1021.99" y="799.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (2 samples, 0.15%)</title><rect x="898.4" y="581" width="1.8" height="15.0" fill="rgb(228,131,9)" rx="2" ry="2" />
<text  x="901.38" y="591.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::FindExternalLexicalDecls (1 samples, 0.08%)</title><rect x="448.3" y="309" width="0.9" height="15.0" fill="rgb(244,213,44)" rx="2" ry="2" />
<text  x="451.34" y="319.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.08%)</title><rect x="1064.9" y="869" width="0.9" height="15.0" fill="rgb(228,64,22)" rx="2" ry="2" />
<text  x="1067.89" y="879.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateArgument (1 samples, 0.08%)</title><rect x="1088.3" y="677" width="0.9" height="15.0" fill="rgb(212,74,16)" rx="2" ry="2" />
<text  x="1091.29" y="687.5" ></text>
</g>
<g >
<title>llvm::JumpThreadingPass::ProcessThreadableEdges (2 samples, 0.15%)</title><rect x="815.6" y="645" width="1.8" height="15.0" fill="rgb(243,203,34)" rx="2" ry="2" />
<text  x="818.57" y="655.5" ></text>
</g>
<g >
<title>cling::CIFactory::createCI (5 samples, 0.38%)</title><rect x="937.1" y="789" width="4.5" height="15.0" fill="rgb(231,170,15)" rx="2" ry="2" />
<text  x="940.08" y="799.5" ></text>
</g>
<g >
<title>AddReachableCodeToWorklist (1 samples, 0.08%)</title><rect x="808.4" y="645" width="0.9" height="15.0" fill="rgb(210,60,51)" rx="2" ry="2" />
<text  x="811.37" y="655.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentScopeDeclRefExpr (1 samples, 0.08%)</title><rect x="1064.0" y="869" width="0.9" height="15.0" fill="rgb(214,2,15)" rx="2" ry="2" />
<text  x="1066.99" y="879.5" ></text>
</g>
<g >
<title>cling::Interpreter::loadHeader (7 samples, 0.53%)</title><rect x="831.8" y="773" width="6.3" height="15.0" fill="rgb(221,45,42)" rx="2" ry="2" />
<text  x="834.77" y="783.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (1 samples, 0.08%)</title><rect x="839.0" y="709" width="0.9" height="15.0" fill="rgb(206,186,31)" rx="2" ry="2" />
<text  x="841.97" y="719.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::getSCEV (1 samples, 0.08%)</title><rect x="670.7" y="917" width="0.9" height="15.0" fill="rgb(223,208,31)" rx="2" ry="2" />
<text  x="673.66" y="927.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="999.2" y="741" width="0.9" height="15.0" fill="rgb(213,98,30)" rx="2" ry="2" />
<text  x="1002.18" y="751.5" ></text>
</g>
<g >
<title>clang::Sema::AddOverloadedCallCandidates (1 samples, 0.08%)</title><rect x="1063.1" y="917" width="0.9" height="15.0" fill="rgb(227,126,30)" rx="2" ry="2" />
<text  x="1066.09" y="927.5" ></text>
</g>
<g >
<title>llvm::BumpPtrAllocatorImpl&lt;llvm::MallocAllocator, 4096ul, 4096ul&gt;::Allocate (1 samples, 0.08%)</title><rect x="855.2" y="453" width="0.9" height="15.0" fill="rgb(229,118,28)" rx="2" ry="2" />
<text  x="858.17" y="463.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::createSCEV (1 samples, 0.08%)</title><rect x="1118.0" y="629" width="0.9" height="15.0" fill="rgb(226,104,35)" rx="2" ry="2" />
<text  x="1120.99" y="639.5" ></text>
</g>
<g >
<title>clang::CallExpr::getBeginLoc (1 samples, 0.08%)</title><rect x="1014.5" y="469" width="0.9" height="15.0" fill="rgb(247,90,27)" rx="2" ry="2" />
<text  x="1017.49" y="479.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddTemplateArgument (1 samples, 0.08%)</title><rect x="1072.1" y="677" width="0.9" height="15.0" fill="rgb(213,92,36)" rx="2" ry="2" />
<text  x="1075.09" y="687.5" ></text>
</g>
<g >
<title>clang::TemplateDeclInstantiator::InstantiateTypedefNameDecl (1 samples, 0.08%)</title><rect x="1058.6" y="837" width="0.9" height="15.0" fill="rgb(213,3,20)" rx="2" ry="2" />
<text  x="1061.59" y="847.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;std::add_pointer, (anonymous namespace)::AggExprEmitter, void&gt;::Visit (1 samples, 0.08%)</title><rect x="1090.1" y="869" width="0.9" height="15.0" fill="rgb(243,210,41)" rx="2" ry="2" />
<text  x="1093.09" y="879.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadNestedNameSpecifierLoc (1 samples, 0.08%)</title><rect x="1011.8" y="853" width="0.9" height="15.0" fill="rgb(225,207,51)" rx="2" ry="2" />
<text  x="1014.78" y="863.5" ></text>
</g>
<g >
<title>clang::ASTReader::FindExternalVisibleDeclsByName (1 samples, 0.08%)</title><rect x="1009.1" y="949" width="0.9" height="15.0" fill="rgb(229,148,13)" rx="2" ry="2" />
<text  x="1012.08" y="959.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="995.6" y="741" width="0.9" height="15.0" fill="rgb(222,7,33)" rx="2" ry="2" />
<text  x="998.58" y="751.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::GenerateCode (1 samples, 0.08%)</title><rect x="1015.4" y="613" width="0.9" height="15.0" fill="rgb(226,131,22)" rx="2" ry="2" />
<text  x="1018.39" y="623.5" ></text>
</g>
<g >
<title>TObjArray::Streamer (1 samples, 0.08%)</title><rect x="1118.9" y="757" width="0.9" height="15.0" fill="rgb(217,93,27)" rx="2" ry="2" />
<text  x="1121.89" y="767.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentNameType (1 samples, 0.08%)</title><rect x="1100.0" y="741" width="0.9" height="15.0" fill="rgb(252,101,26)" rx="2" ry="2" />
<text  x="1102.99" y="751.5" ></text>
</g>
<g >
<title>__GI___libc_free (1 samples, 0.08%)</title><rect x="1020.8" y="469" width="0.9" height="15.0" fill="rgb(219,0,25)" rx="2" ry="2" />
<text  x="1023.79" y="479.5" ></text>
</g>
<g >
<title>llvm::BlockFrequencyInfoImpl&lt;llvm::MachineBasicBlock&gt;::tryToComputeMassInFunction (1 samples, 0.08%)</title><rect x="695.0" y="501" width="0.9" height="15.0" fill="rgb(239,61,12)" rx="2" ry="2" />
<text  x="697.96" y="511.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::verifyPreservedAnalysis (5 samples, 0.38%)</title><rect x="222.4" y="757" width="4.5" height="15.0" fill="rgb(244,53,44)" rx="2" ry="2" />
<text  x="225.42" y="767.5" ></text>
</g>
<g >
<title>llvm::DenseMap&lt;llvm::PoisoningVH&lt;llvm::BasicBlock&gt;, llvm::SmallPtrSet&lt;llvm::Value*, 4u&gt;, llvm::DenseMapInfo&lt;llvm::PoisoningVH&lt;llvm::BasicBlock&gt; &gt;, llvm::detail::DenseMapPair&lt;llvm::PoisoningVH&lt;llvm::BasicBlock&gt;, llvm::SmallPtrSet&lt;llvm::Value*, 4u&gt; &gt; &gt;::grow (1 samples, 0.08%)</title><rect x="820.1" y="645" width="0.9" height="15.0" fill="rgb(219,66,10)" rx="2" ry="2" />
<text  x="823.07" y="655.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::getAddExpr (1 samples, 0.08%)</title><rect x="1109.9" y="565" width="0.9" height="15.0" fill="rgb(206,127,23)" rx="2" ry="2" />
<text  x="1112.89" y="575.5" ></text>
</g>
<g >
<title>TClass::BuildRealData (1 samples, 0.08%)</title><rect x="447.4" y="725" width="0.9" height="15.0" fill="rgb(249,152,53)" rx="2" ry="2" />
<text  x="450.44" y="735.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass (2 samples, 0.15%)</title><rect x="1073.0" y="757" width="1.8" height="15.0" fill="rgb(210,214,53)" rx="2" ry="2" />
<text  x="1075.99" y="767.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (6 samples, 0.46%)</title><rect x="917.3" y="581" width="5.4" height="15.0" fill="rgb(239,96,33)" rx="2" ry="2" />
<text  x="920.28" y="591.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl (1 samples, 0.08%)</title><rect x="1009.1" y="693" width="0.9" height="15.0" fill="rgb(227,62,26)" rx="2" ry="2" />
<text  x="1012.08" y="703.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertType (1 samples, 0.08%)</title><rect x="1049.6" y="629" width="0.9" height="15.0" fill="rgb(206,110,8)" rx="2" ry="2" />
<text  x="1052.59" y="639.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (1 samples, 0.08%)</title><rect x="202.6" y="341" width="0.9" height="15.0" fill="rgb(205,227,40)" rx="2" ry="2" />
<text  x="205.62" y="351.5" ></text>
</g>
<g >
<title>llvm::Value::getName (1 samples, 0.08%)</title><rect x="895.7" y="613" width="0.9" height="15.0" fill="rgb(205,47,48)" rx="2" ry="2" />
<text  x="898.68" y="623.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType (2 samples, 0.15%)</title><rect x="1094.6" y="725" width="1.8" height="15.0" fill="rgb(223,177,21)" rx="2" ry="2" />
<text  x="1097.59" y="735.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnModule (1 samples, 0.08%)</title><rect x="854.3" y="613" width="0.9" height="15.0" fill="rgb(251,149,33)" rx="2" ry="2" />
<text  x="857.27" y="623.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::initializeAnalysisImpl (3 samples, 0.23%)</title><rect x="713.9" y="565" width="2.7" height="15.0" fill="rgb(253,121,10)" rx="2" ry="2" />
<text  x="716.86" y="575.5" ></text>
</g>
<g >
<title>clang::ASTReader::finishPendingActions (1 samples, 0.08%)</title><rect x="942.5" y="517" width="0.9" height="15.0" fill="rgb(236,85,46)" rx="2" ry="2" />
<text  x="945.48" y="527.5" ></text>
</g>
<g >
<title>llvm::AttributeList::addAttributes (1 samples, 0.08%)</title><rect x="1045.1" y="757" width="0.9" height="15.0" fill="rgb(252,61,38)" rx="2" ry="2" />
<text  x="1048.09" y="767.5" ></text>
</g>
<g >
<title>llvm::AttributeImpl::operator&lt; (1 samples, 0.08%)</title><rect x="1017.2" y="549" width="0.9" height="15.0" fill="rgb(235,135,14)" rx="2" ry="2" />
<text  x="1020.19" y="559.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::codegenCXXStructor (1 samples, 0.08%)</title><rect x="1036.1" y="661" width="0.9" height="15.0" fill="rgb(219,83,53)" rx="2" ry="2" />
<text  x="1039.09" y="671.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.08%)</title><rect x="677.0" y="501" width="0.9" height="15.0" fill="rgb(219,57,28)" rx="2" ry="2" />
<text  x="679.96" y="511.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;std::add_pointer, (anonymous namespace)::ScalarExprEmitter, llvm::Value*&gt;::Visit (1 samples, 0.08%)</title><rect x="1018.1" y="789" width="0.9" height="15.0" fill="rgb(237,37,50)" rx="2" ry="2" />
<text  x="1021.09" y="799.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (2 samples, 0.15%)</title><rect x="868.7" y="565" width="1.8" height="15.0" fill="rgb(208,135,46)" rx="2" ry="2" />
<text  x="871.67" y="575.5" ></text>
</g>
<g >
<title>llvm::DominatorTreeWrapperPass::releaseMemory (1 samples, 0.08%)</title><rect x="1101.8" y="805" width="0.9" height="15.0" fill="rgb(213,6,43)" rx="2" ry="2" />
<text  x="1104.79" y="815.5" ></text>
</g>
<g >
<title>llvm::MachineInstr::isSafeToMove (2 samples, 0.15%)</title><rect x="698.6" y="549" width="1.8" height="15.0" fill="rgb(232,212,30)" rx="2" ry="2" />
<text  x="701.56" y="559.5" ></text>
</g>
<g >
<title>clang::Parser::ParseStatementOrDeclaration (1 samples, 0.08%)</title><rect x="1053.2" y="901" width="0.9" height="15.0" fill="rgb(252,147,31)" rx="2" ry="2" />
<text  x="1056.19" y="911.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolutionWrapperPass::runOnFunction (1 samples, 0.08%)</title><rect x="893.9" y="613" width="0.9" height="15.0" fill="rgb(224,142,5)" rx="2" ry="2" />
<text  x="896.87" y="623.5" ></text>
</g>
<g >
<title>TUnixSystem::UnixHomedirectory (5 samples, 0.38%)</title><rect x="1002.8" y="805" width="4.5" height="15.0" fill="rgb(228,37,40)" rx="2" ry="2" />
<text  x="1005.78" y="815.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit (1 samples, 0.08%)</title><rect x="1111.7" y="533" width="0.9" height="15.0" fill="rgb(207,128,8)" rx="2" ry="2" />
<text  x="1114.69" y="543.5" ></text>
</g>
<g >
<title>clang::ASTReader::readTypeRecord (1 samples, 0.08%)</title><rect x="1010.9" y="741" width="0.9" height="15.0" fill="rgb(216,87,25)" rx="2" ry="2" />
<text  x="1013.88" y="751.5" ></text>
</g>
<g >
<title>_dl_start (1 samples, 0.08%)</title><rect x="10.0" y="933" width="0.9" height="15.0" fill="rgb(205,2,28)" rx="2" ry="2" />
<text  x="13.00" y="943.5" ></text>
</g>
<g >
<title>combineInstructionsOverFunction (1 samples, 0.08%)</title><rect x="203.5" y="709" width="0.9" height="15.0" fill="rgb(227,100,3)" rx="2" ry="2" />
<text  x="206.52" y="719.5" ></text>
</g>
<g >
<title>llvm::GlobalDCEPass::run (1 samples, 0.08%)</title><rect x="236.8" y="773" width="0.9" height="15.0" fill="rgb(213,18,29)" rx="2" ry="2" />
<text  x="239.82" y="783.5" ></text>
</g>
<g >
<title>clang::Parser::ParseTemplateArgumentList (1 samples, 0.08%)</title><rect x="1109.0" y="869" width="0.9" height="15.0" fill="rgb(251,48,48)" rx="2" ry="2" />
<text  x="1111.99" y="879.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformNestedNameSpecifierLoc (1 samples, 0.08%)</title><rect x="1074.8" y="853" width="0.9" height="15.0" fill="rgb(237,71,7)" rx="2" ry="2" />
<text  x="1077.79" y="863.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;clang::CXXBasePath, std::allocator&lt;clang::CXXBasePath&gt; &gt;::_M_clear (1 samples, 0.08%)</title><rect x="673.4" y="581" width="0.9" height="15.0" fill="rgb(227,66,23)" rx="2" ry="2" />
<text  x="676.36" y="591.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass (3 samples, 0.23%)</title><rect x="1056.8" y="869" width="2.7" height="15.0" fill="rgb(226,205,8)" rx="2" ry="2" />
<text  x="1059.79" y="879.5" ></text>
</g>
<g >
<title>clang::Parser::ParseFunctionStatementBody (1 samples, 0.08%)</title><rect x="1053.2" y="933" width="0.9" height="15.0" fill="rgb(253,159,37)" rx="2" ry="2" />
<text  x="1056.19" y="943.5" ></text>
</g>
<g >
<title>execute_command_internal (17 samples, 1.30%)</title><rect x="15.4" y="565" width="15.3" height="15.0" fill="rgb(225,225,49)" rx="2" ry="2" />
<text  x="18.40" y="575.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType (1 samples, 0.08%)</title><rect x="1074.8" y="821" width="0.9" height="15.0" fill="rgb(234,184,12)" rx="2" ry="2" />
<text  x="1077.79" y="831.5" ></text>
</g>
<g >
<title>clang::ASTReader::readTypeRecord (1 samples, 0.08%)</title><rect x="1010.0" y="805" width="0.9" height="15.0" fill="rgb(225,58,37)" rx="2" ry="2" />
<text  x="1012.98" y="815.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyld::finalizeWithMemoryManagerLocking (5 samples, 0.38%)</title><rect x="1113.5" y="853" width="4.5" height="15.0" fill="rgb(218,229,31)" rx="2" ry="2" />
<text  x="1116.49" y="863.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.08%)</title><rect x="35.2" y="645" width="0.9" height="15.0" fill="rgb(239,222,30)" rx="2" ry="2" />
<text  x="38.20" y="655.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXConstructExpr (1 samples, 0.08%)</title><rect x="1091.0" y="789" width="0.9" height="15.0" fill="rgb(233,41,1)" rx="2" ry="2" />
<text  x="1093.99" y="799.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::CompleteRedeclChain (2 samples, 0.15%)</title><rect x="1029.8" y="821" width="1.8" height="15.0" fill="rgb(213,34,1)" rx="2" ry="2" />
<text  x="1032.79" y="831.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ComputeRecordLayout (1 samples, 0.08%)</title><rect x="1048.7" y="693" width="0.9" height="15.0" fill="rgb(212,212,42)" rx="2" ry="2" />
<text  x="1051.69" y="703.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.15%)</title><rect x="1186.4" y="773" width="1.8" height="15.0" fill="rgb(207,102,37)" rx="2" ry="2" />
<text  x="1189.40" y="783.5" ></text>
</g>
<g >
<title>TSystem::Load (1 samples, 0.08%)</title><rect x="202.6" y="501" width="0.9" height="15.0" fill="rgb(219,151,51)" rx="2" ry="2" />
<text  x="205.62" y="511.5" ></text>
</g>
<g >
<title>?? (5 samples, 0.38%)</title><rect x="371.8" y="885" width="4.5" height="15.0" fill="rgb(228,94,24)" rx="2" ry="2" />
<text  x="374.83" y="895.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.08%)</title><rect x="820.1" y="629" width="0.9" height="15.0" fill="rgb(212,216,31)" rx="2" ry="2" />
<text  x="823.07" y="639.5" ></text>
</g>
<g >
<title>clang::ASTReader::CompleteRedeclChain (1 samples, 0.08%)</title><rect x="1048.7" y="421" width="0.9" height="15.0" fill="rgb(207,207,24)" rx="2" ry="2" />
<text  x="1051.69" y="431.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl (1 samples, 0.08%)</title><rect x="1071.2" y="853" width="0.9" height="15.0" fill="rgb(247,24,2)" rx="2" ry="2" />
<text  x="1074.19" y="863.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;llvm::make_const_ptr, (anonymous namespace)::RecordExprEvaluator, bool&gt;::Visit (1 samples, 0.08%)</title><rect x="1021.7" y="661" width="0.9" height="15.0" fill="rgb(251,52,40)" rx="2" ry="2" />
<text  x="1024.69" y="671.5" ></text>
</g>
<g >
<title>llvm::LLVMContext::yield (1 samples, 0.08%)</title><rect x="863.3" y="597" width="0.9" height="15.0" fill="rgb(229,163,50)" rx="2" ry="2" />
<text  x="866.27" y="607.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::getAddExpr (1 samples, 0.08%)</title><rect x="1109.9" y="549" width="0.9" height="15.0" fill="rgb(217,133,52)" rx="2" ry="2" />
<text  x="1112.89" y="559.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition (1 samples, 0.08%)</title><rect x="1084.7" y="837" width="0.9" height="15.0" fill="rgb(222,112,53)" rx="2" ry="2" />
<text  x="1087.69" y="847.5" ></text>
</g>
<g >
<title>fini (1 samples, 0.08%)</title><rect x="17.2" y="261" width="0.9" height="15.0" fill="rgb(244,178,4)" rx="2" ry="2" />
<text  x="20.20" y="271.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.08%)</title><rect x="1020.8" y="613" width="0.9" height="15.0" fill="rgb(205,97,4)" rx="2" ry="2" />
<text  x="1023.79" y="623.5" ></text>
</g>
<g >
<title>llvm::AttrBuilder::addAttribute (1 samples, 0.08%)</title><rect x="1039.7" y="645" width="0.9" height="15.0" fill="rgb(225,93,11)" rx="2" ry="2" />
<text  x="1042.69" y="655.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord (1 samples, 0.08%)</title><rect x="1009.1" y="805" width="0.9" height="15.0" fill="rgb(243,200,11)" rx="2" ry="2" />
<text  x="1012.08" y="815.5" ></text>
</g>
<g >
<title>llvm::AsmPrinter::EmitFunctionBody (2 samples, 0.15%)</title><rect x="1116.2" y="645" width="1.8" height="15.0" fill="rgb(233,170,45)" rx="2" ry="2" />
<text  x="1119.19" y="655.5" ></text>
</g>
<g >
<title>_dl_relocate_object (5 samples, 0.38%)</title><rect x="39.7" y="885" width="4.5" height="15.0" fill="rgb(219,229,24)" rx="2" ry="2" />
<text  x="42.70" y="895.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentScopeDeclRefExpr (1 samples, 0.08%)</title><rect x="1087.4" y="597" width="0.9" height="15.0" fill="rgb(218,71,7)" rx="2" ry="2" />
<text  x="1090.39" y="607.5" ></text>
</g>
<g >
<title>clang::Sema::PerformPendingInstantiations (1 samples, 0.08%)</title><rect x="1054.1" y="789" width="0.9" height="15.0" fill="rgb(229,144,43)" rx="2" ry="2" />
<text  x="1057.09" y="799.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::getExistingSCEV (1 samples, 0.08%)</title><rect x="853.4" y="597" width="0.9" height="15.0" fill="rgb(206,32,54)" rx="2" ry="2" />
<text  x="856.37" y="607.5" ></text>
</g>
<g >
<title>clang::ASTContext::getASTRecordLayout (1 samples, 0.08%)</title><rect x="1013.6" y="741" width="0.9" height="15.0" fill="rgb(229,184,35)" rx="2" ry="2" />
<text  x="1016.59" y="751.5" ></text>
</g>
<g >
<title>llvm::StatepointLoweringState::clear (1 samples, 0.08%)</title><rect x="854.3" y="517" width="0.9" height="15.0" fill="rgb(248,43,52)" rx="2" ry="2" />
<text  x="857.27" y="527.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::SelectBasicBlock (4 samples, 0.31%)</title><rect x="842.6" y="549" width="3.6" height="15.0" fill="rgb(248,22,54)" rx="2" ry="2" />
<text  x="845.57" y="559.5" ></text>
</g>
<g >
<title>llvm::AliasSet::aliasesUnknownInst (1 samples, 0.08%)</title><rect x="829.1" y="597" width="0.9" height="15.0" fill="rgb(221,31,19)" rx="2" ry="2" />
<text  x="832.07" y="607.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddType (1 samples, 0.08%)</title><rect x="1058.6" y="501" width="0.9" height="15.0" fill="rgb(227,146,28)" rx="2" ry="2" />
<text  x="1061.59" y="511.5" ></text>
</g>
<g >
<title>llvm::AAResultsWrapperPass::runOnFunction (1 samples, 0.08%)</title><rect x="678.8" y="565" width="0.9" height="15.0" fill="rgb(216,129,29)" rx="2" ry="2" />
<text  x="681.76" y="575.5" ></text>
</g>
<g >
<title>__calloc (1 samples, 0.08%)</title><rect x="674.3" y="597" width="0.9" height="15.0" fill="rgb(214,69,13)" rx="2" ry="2" />
<text  x="677.26" y="607.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitTemplateDecl (1 samples, 0.08%)</title><rect x="1051.4" y="773" width="0.9" height="15.0" fill="rgb(250,80,28)" rx="2" ry="2" />
<text  x="1054.39" y="783.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl (1 samples, 0.08%)</title><rect x="1098.2" y="773" width="0.9" height="15.0" fill="rgb(226,62,35)" rx="2" ry="2" />
<text  x="1101.19" y="783.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnModule (9 samples, 0.69%)</title><rect x="822.8" y="693" width="8.1" height="15.0" fill="rgb(212,46,36)" rx="2" ry="2" />
<text  x="825.77" y="703.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (3 samples, 0.23%)</title><rect x="1015.4" y="773" width="2.7" height="15.0" fill="rgb(227,22,14)" rx="2" ry="2" />
<text  x="1018.39" y="783.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord (1 samples, 0.08%)</title><rect x="1007.3" y="741" width="0.9" height="15.0" fill="rgb(239,25,8)" rx="2" ry="2" />
<text  x="1010.28" y="751.5" ></text>
</g>
<g >
<title>__GI___libc_sigaction (1 samples, 0.08%)</title><rect x="1160.3" y="757" width="0.9" height="15.0" fill="rgb(205,210,0)" rx="2" ry="2" />
<text  x="1163.30" y="767.5" ></text>
</g>
<g >
<title>[bash] (4 samples, 0.31%)</title><rect x="36.1" y="437" width="3.6" height="15.0" fill="rgb(215,3,29)" rx="2" ry="2" />
<text  x="39.10" y="447.5" ></text>
</g>
<g >
<title>TClingDataMemberInfo::TClingDataMemberInfo (1 samples, 0.08%)</title><rect x="448.3" y="373" width="0.9" height="15.0" fill="rgb(238,99,44)" rx="2" ry="2" />
<text  x="451.34" y="383.5" ></text>
</g>
<g >
<title>llvm::orc::SimpleCompiler::operator() (11 samples, 0.84%)</title><rect x="839.9" y="661" width="9.9" height="15.0" fill="rgb(225,37,3)" rx="2" ry="2" />
<text  x="842.87" y="671.5" ></text>
</g>
<g >
<title>cling::Interpreter::loadHeader (1 samples, 0.08%)</title><rect x="1109.9" y="885" width="0.9" height="15.0" fill="rgb(219,43,23)" rx="2" ry="2" />
<text  x="1112.89" y="895.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateArgument (1 samples, 0.08%)</title><rect x="1088.3" y="853" width="0.9" height="15.0" fill="rgb(249,40,16)" rx="2" ry="2" />
<text  x="1091.29" y="863.5" ></text>
</g>
<g >
<title>_dl_open (2 samples, 0.15%)</title><rect x="989.3" y="805" width="1.8" height="15.0" fill="rgb(219,24,48)" rx="2" ry="2" />
<text  x="992.28" y="815.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl (1 samples, 0.08%)</title><rect x="1071.2" y="757" width="0.9" height="15.0" fill="rgb(210,46,52)" rx="2" ry="2" />
<text  x="1074.19" y="767.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="10.0" y="789" width="0.9" height="15.0" fill="rgb(238,71,38)" rx="2" ry="2" />
<text  x="13.00" y="799.5" ></text>
</g>
<g >
<title>clang::Sema::SubstType (1 samples, 0.08%)</title><rect x="1100.0" y="789" width="0.9" height="15.0" fill="rgb(248,143,32)" rx="2" ry="2" />
<text  x="1102.99" y="799.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (5 samples, 0.38%)</title><rect x="1113.5" y="693" width="4.5" height="15.0" fill="rgb(249,93,14)" rx="2" ry="2" />
<text  x="1116.49" y="703.5" ></text>
</g>
<g >
<title>llvm::object::ELFObjectFile&lt;llvm::object::ELFType&lt;(llvm::support::endianness)1, true&gt; &gt;::getRelocatedSection (15 samples, 1.14%)</title><rect x="758.0" y="533" width="13.5" height="15.0" fill="rgb(233,5,44)" rx="2" ry="2" />
<text  x="760.96" y="543.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="43.3" y="805" width="0.9" height="15.0" fill="rgb(244,169,32)" rx="2" ry="2" />
<text  x="46.30" y="815.5" ></text>
</g>
<g >
<title>clang::Sema::BuildReferenceType (1 samples, 0.08%)</title><rect x="1092.8" y="565" width="0.9" height="15.0" fill="rgb(235,134,20)" rx="2" ry="2" />
<text  x="1095.79" y="575.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformCompoundStmt (1 samples, 0.08%)</title><rect x="1081.1" y="853" width="0.9" height="15.0" fill="rgb(240,191,4)" rx="2" ry="2" />
<text  x="1084.09" y="863.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::SelectCodeCommon (2 samples, 0.15%)</title><rect x="1125.2" y="805" width="1.8" height="15.0" fill="rgb(246,155,11)" rx="2" ry="2" />
<text  x="1128.19" y="815.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="995.6" y="725" width="0.9" height="15.0" fill="rgb(237,114,18)" rx="2" ry="2" />
<text  x="998.58" y="735.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.15%)</title><rect x="1188.2" y="725" width="1.8" height="15.0" fill="rgb(209,4,35)" rx="2" ry="2" />
<text  x="1191.20" y="735.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadExpr (1 samples, 0.08%)</title><rect x="1009.1" y="405" width="0.9" height="15.0" fill="rgb(216,29,0)" rx="2" ry="2" />
<text  x="1012.08" y="415.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition (1 samples, 0.08%)</title><rect x="1044.2" y="837" width="0.9" height="15.0" fill="rgb(245,220,33)" rx="2" ry="2" />
<text  x="1047.19" y="847.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGBuilder::LowerCallTo (1 samples, 0.08%)</title><rect x="1122.5" y="885" width="0.9" height="15.0" fill="rgb(214,83,40)" rx="2" ry="2" />
<text  x="1125.49" y="895.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (3 samples, 0.23%)</title><rect x="1015.4" y="917" width="2.7" height="15.0" fill="rgb(214,141,37)" rx="2" ry="2" />
<text  x="1018.39" y="927.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1183.7" y="789" width="0.9" height="15.0" fill="rgb(243,218,24)" rx="2" ry="2" />
<text  x="1186.70" y="799.5" ></text>
</g>
<g >
<title>TList::NewLink (1 samples, 0.08%)</title><rect x="1001.9" y="677" width="0.9" height="15.0" fill="rgb(216,173,26)" rx="2" ry="2" />
<text  x="1004.88" y="687.5" ></text>
</g>
<g >
<title>clang::Sema::DeclareImplicitCopyAssignment (1 samples, 0.08%)</title><rect x="1082.0" y="933" width="0.9" height="15.0" fill="rgb(244,194,18)" rx="2" ry="2" />
<text  x="1084.99" y="943.5" ></text>
</g>
<g >
<title>TBufferFile::ReadObjectAny (1 samples, 0.08%)</title><rect x="1118.9" y="581" width="0.9" height="15.0" fill="rgb(209,187,11)" rx="2" ry="2" />
<text  x="1121.89" y="591.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (1 samples, 0.08%)</title><rect x="839.0" y="741" width="0.9" height="15.0" fill="rgb(231,88,30)" rx="2" ry="2" />
<text  x="841.97" y="751.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitParmVarDecl (1 samples, 0.08%)</title><rect x="1059.5" y="709" width="0.9" height="15.0" fill="rgb(229,227,30)" rx="2" ry="2" />
<text  x="1062.49" y="719.5" ></text>
</g>
<g >
<title>clang::CXXMethodDecl::getCanonicalDecl (1 samples, 0.08%)</title><rect x="1052.3" y="757" width="0.9" height="15.0" fill="rgb(246,200,42)" rx="2" ry="2" />
<text  x="1055.29" y="767.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitDeclaratorDecl (1 samples, 0.08%)</title><rect x="1071.2" y="693" width="0.9" height="15.0" fill="rgb(232,141,27)" rx="2" ry="2" />
<text  x="1074.19" y="703.5" ></text>
</g>
<g >
<title>cling::MetaSema::actOnLCommand (7 samples, 0.53%)</title><rect x="831.8" y="789" width="6.3" height="15.0" fill="rgb(226,183,29)" rx="2" ry="2" />
<text  x="834.77" y="799.5" ></text>
</g>
<g >
<title>[libnss_sss.so.2] (5 samples, 0.38%)</title><rect x="1002.8" y="725" width="4.5" height="15.0" fill="rgb(226,101,44)" rx="2" ry="2" />
<text  x="1005.78" y="735.5" ></text>
</g>
<g >
<title>clang::Sema::PerformImplicitConversion (1 samples, 0.08%)</title><rect x="1001.0" y="901" width="0.9" height="15.0" fill="rgb(216,209,52)" rx="2" ry="2" />
<text  x="1003.98" y="911.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord (1 samples, 0.08%)</title><rect x="1077.5" y="629" width="0.9" height="15.0" fill="rgb(209,4,15)" rx="2" ry="2" />
<text  x="1080.49" y="639.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl (1 samples, 0.08%)</title><rect x="1093.7" y="773" width="0.9" height="15.0" fill="rgb(221,222,49)" rx="2" ry="2" />
<text  x="1096.69" y="783.5" ></text>
</g>
<g >
<title>clang::Sema::AttachBaseSpecifiers (1 samples, 0.08%)</title><rect x="1073.0" y="629" width="0.9" height="15.0" fill="rgb(216,24,12)" rx="2" ry="2" />
<text  x="1075.99" y="639.5" ></text>
</g>
<g >
<title>ROOT::Internal::GetROOT1 (6 samples, 0.46%)</title><rect x="1001.9" y="869" width="5.4" height="15.0" fill="rgb(231,50,48)" rx="2" ry="2" />
<text  x="1004.88" y="879.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke (1 samples, 0.08%)</title><rect x="1129.7" y="949" width="0.9" height="15.0" fill="rgb(218,154,35)" rx="2" ry="2" />
<text  x="1132.69" y="959.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1152.2" y="725" width="0.9" height="15.0" fill="rgb(243,80,0)" rx="2" ry="2" />
<text  x="1155.20" y="735.5" ></text>
</g>
<g >
<title>specialMemberIsConstexpr (1 samples, 0.08%)</title><rect x="1055.0" y="885" width="0.9" height="15.0" fill="rgb(227,15,52)" rx="2" ry="2" />
<text  x="1057.99" y="895.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetTypeSourceInfo (1 samples, 0.08%)</title><rect x="1009.1" y="469" width="0.9" height="15.0" fill="rgb(250,105,18)" rx="2" ry="2" />
<text  x="1012.08" y="479.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadTemplateArgumentList (1 samples, 0.08%)</title><rect x="1011.8" y="789" width="0.9" height="15.0" fill="rgb(231,64,43)" rx="2" ry="2" />
<text  x="1014.78" y="799.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveRelocations (1 samples, 0.08%)</title><rect x="202.6" y="645" width="0.9" height="15.0" fill="rgb(221,158,49)" rx="2" ry="2" />
<text  x="205.62" y="655.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord (1 samples, 0.08%)</title><rect x="1083.8" y="789" width="0.9" height="15.0" fill="rgb(240,17,38)" rx="2" ry="2" />
<text  x="1086.79" y="799.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::run (1 samples, 0.08%)</title><rect x="873.2" y="581" width="0.9" height="15.0" fill="rgb(229,56,1)" rx="2" ry="2" />
<text  x="876.17" y="591.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentNameType (1 samples, 0.08%)</title><rect x="1075.7" y="853" width="0.9" height="15.0" fill="rgb(218,83,10)" rx="2" ry="2" />
<text  x="1078.69" y="863.5" ></text>
</g>
<g >
<title>llvm::BlockFrequencyInfoImpl&lt;llvm::MachineBasicBlock&gt;::initializeRPOT (1 samples, 0.08%)</title><rect x="694.1" y="501" width="0.9" height="15.0" fill="rgb(248,33,8)" rx="2" ry="2" />
<text  x="697.06" y="511.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.15%)</title><rect x="971.3" y="773" width="1.8" height="15.0" fill="rgb(210,176,52)" rx="2" ry="2" />
<text  x="974.28" y="783.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (4 samples, 0.31%)</title><rect x="1033.4" y="709" width="3.6" height="15.0" fill="rgb(223,101,42)" rx="2" ry="2" />
<text  x="1036.39" y="719.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::recordAvailableAnalysis (3 samples, 0.23%)</title><rect x="877.7" y="613" width="2.7" height="15.0" fill="rgb(250,30,21)" rx="2" ry="2" />
<text  x="880.67" y="623.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1137.8" y="901" width="0.9" height="15.0" fill="rgb(241,64,45)" rx="2" ry="2" />
<text  x="1140.80" y="911.5" ></text>
</g>
<g >
<title>return_builtin (1 samples, 0.08%)</title><rect x="29.8" y="501" width="0.9" height="15.0" fill="rgb(251,154,37)" rx="2" ry="2" />
<text  x="32.80" y="511.5" ></text>
</g>
<g >
<title>.annobin_rtld.c (1 samples, 0.08%)</title><rect x="10.0" y="949" width="0.9" height="15.0" fill="rgb(209,101,39)" rx="2" ry="2" />
<text  x="13.00" y="959.5" ></text>
</g>
<g >
<title>llvm::PassRegistry::getPassInfo (1 samples, 0.08%)</title><rect x="856.1" y="549" width="0.9" height="15.0" fill="rgb(206,98,18)" rx="2" ry="2" />
<text  x="859.07" y="559.5" ></text>
</g>
<g >
<title>TApplication::ExecuteFile (2 samples, 0.15%)</title><rect x="855.2" y="853" width="1.8" height="15.0" fill="rgb(219,34,34)" rx="2" ry="2" />
<text  x="858.17" y="863.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnModule (5 samples, 0.38%)</title><rect x="1113.5" y="709" width="4.5" height="15.0" fill="rgb(235,218,40)" rx="2" ry="2" />
<text  x="1116.49" y="719.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType (1 samples, 0.08%)</title><rect x="1087.4" y="693" width="0.9" height="15.0" fill="rgb(227,28,35)" rx="2" ry="2" />
<text  x="1090.39" y="703.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (1 samples, 0.08%)</title><rect x="1074.8" y="709" width="0.9" height="15.0" fill="rgb(239,103,23)" rx="2" ry="2" />
<text  x="1077.79" y="719.5" ></text>
</g>
<g >
<title>clang::Lexer::LexIdentifier (1 samples, 0.08%)</title><rect x="942.5" y="581" width="0.9" height="15.0" fill="rgb(208,200,29)" rx="2" ry="2" />
<text  x="945.48" y="591.5" ></text>
</g>
<g >
<title>simplifyFunctionCFG (2 samples, 0.15%)</title><rect x="821.0" y="677" width="1.8" height="15.0" fill="rgb(205,83,2)" rx="2" ry="2" />
<text  x="823.97" y="687.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="949.7" y="757" width="0.9" height="15.0" fill="rgb(246,161,10)" rx="2" ry="2" />
<text  x="952.68" y="767.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::CodeGenAndEmitDAG (4 samples, 0.31%)</title><rect x="1102.7" y="645" width="3.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1105.69" y="655.5" ></text>
</g>
<g >
<title>clang::Sema::BuildOverloadedCallExpr (4 samples, 0.31%)</title><rect x="1060.4" y="949" width="3.6" height="15.0" fill="rgb(242,33,25)" rx="2" ry="2" />
<text  x="1063.39" y="959.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateArgument (1 samples, 0.08%)</title><rect x="1087.4" y="789" width="0.9" height="15.0" fill="rgb(233,202,13)" rx="2" ry="2" />
<text  x="1090.39" y="799.5" ></text>
</g>
<g >
<title>llvm::AttrBuilder::addAttribute (1 samples, 0.08%)</title><rect x="1043.3" y="741" width="0.9" height="15.0" fill="rgb(231,16,42)" rx="2" ry="2" />
<text  x="1046.29" y="751.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::runOnMachineFunction (8 samples, 0.61%)</title><rect x="1130.6" y="741" width="7.2" height="15.0" fill="rgb(231,59,31)" rx="2" ry="2" />
<text  x="1133.59" y="751.5" ></text>
</g>
<g >
<title>clang::Sema::SubstExpr (1 samples, 0.08%)</title><rect x="1064.9" y="901" width="0.9" height="15.0" fill="rgb(209,190,28)" rx="2" ry="2" />
<text  x="1067.89" y="911.5" ></text>
</g>
<g >
<title>[bash] (4 samples, 0.31%)</title><rect x="36.1" y="133" width="3.6" height="15.0" fill="rgb(222,150,15)" rx="2" ry="2" />
<text  x="39.10" y="143.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1183.7" y="613" width="0.9" height="15.0" fill="rgb(236,124,37)" rx="2" ry="2" />
<text  x="1186.70" y="623.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::computeTotalAllocSize (24 samples, 1.83%)</title><rect x="751.7" y="565" width="21.6" height="15.0" fill="rgb(221,33,18)" rx="2" ry="2" />
<text  x="754.66" y="575.5" >l..</text>
</g>
<g >
<title>clang::Parser::TryAnnotateTypeOrScopeToken (1 samples, 0.08%)</title><rect x="1109.0" y="805" width="0.9" height="15.0" fill="rgb(249,168,19)" rx="2" ry="2" />
<text  x="1111.99" y="815.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::SmallDenseMap&lt;void const*, llvm::ImmutablePass*, 8u, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::ImmutablePass*&gt; &gt;, void const*, llvm::ImmutablePass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::ImmutablePass*&gt; &gt;::LookupBucketFor&lt;void const*&gt; (1 samples, 0.08%)</title><rect x="232.3" y="693" width="0.9" height="15.0" fill="rgb(252,41,53)" rx="2" ry="2" />
<text  x="235.32" y="703.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.08%)</title><rect x="914.6" y="549" width="0.9" height="15.0" fill="rgb(212,41,53)" rx="2" ry="2" />
<text  x="917.58" y="559.5" ></text>
</g>
<g >
<title>clang::MacroInfo::MacroInfo (1 samples, 0.08%)</title><rect x="941.6" y="661" width="0.9" height="15.0" fill="rgb(217,91,46)" rx="2" ry="2" />
<text  x="944.58" y="671.5" ></text>
</g>
<g >
<title>llvm::orc::JITSymbolResolverAdapter::lookup (8 samples, 0.61%)</title><rect x="1130.6" y="885" width="7.2" height="15.0" fill="rgb(233,152,14)" rx="2" ry="2" />
<text  x="1133.59" y="895.5" ></text>
</g>
<g >
<title>llvm::SelectionDAG::ComputeNumSignBits (1 samples, 0.08%)</title><rect x="1107.2" y="613" width="0.9" height="15.0" fill="rgb(216,127,54)" rx="2" ry="2" />
<text  x="1110.19" y="623.5" ></text>
</g>
<g >
<title>__calloc (1 samples, 0.08%)</title><rect x="893.9" y="565" width="0.9" height="15.0" fill="rgb(241,204,53)" rx="2" ry="2" />
<text  x="896.87" y="575.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType (1 samples, 0.08%)</title><rect x="1087.4" y="805" width="0.9" height="15.0" fill="rgb(211,82,28)" rx="2" ry="2" />
<text  x="1090.39" y="815.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.08%)</title><rect x="35.2" y="405" width="0.9" height="15.0" fill="rgb(249,214,34)" rx="2" ry="2" />
<text  x="38.20" y="415.5" ></text>
</g>
<g >
<title>llvm::MachineInstr::addOperand (1 samples, 0.08%)</title><rect x="1103.6" y="549" width="0.9" height="15.0" fill="rgb(239,39,53)" rx="2" ry="2" />
<text  x="1106.59" y="559.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitExprAsInit (1 samples, 0.08%)</title><rect x="1014.5" y="789" width="0.9" height="15.0" fill="rgb(206,49,37)" rx="2" ry="2" />
<text  x="1017.49" y="799.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (2 samples, 0.15%)</title><rect x="1015.4" y="709" width="1.8" height="15.0" fill="rgb(208,224,19)" rx="2" ry="2" />
<text  x="1018.39" y="719.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGBuilder::LowerCallTo (1 samples, 0.08%)</title><rect x="247.6" y="645" width="0.9" height="15.0" fill="rgb(214,211,25)" rx="2" ry="2" />
<text  x="250.62" y="655.5" ></text>
</g>
<g >
<title>TChain::LoadTree (3 samples, 0.23%)</title><rect x="446.5" y="885" width="2.7" height="15.0" fill="rgb(231,205,46)" rx="2" ry="2" />
<text  x="449.54" y="895.5" ></text>
</g>
<g >
<title>__mempcpy_avx_unaligned (1 samples, 0.08%)</title><rect x="935.3" y="709" width="0.9" height="15.0" fill="rgb(236,146,24)" rx="2" ry="2" />
<text  x="938.28" y="719.5" ></text>
</g>
<g >
<title>clang::ASTRecordReader::readRecord (1 samples, 0.08%)</title><rect x="1007.3" y="725" width="0.9" height="15.0" fill="rgb(230,104,38)" rx="2" ry="2" />
<text  x="1010.28" y="735.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertTypeForMem (1 samples, 0.08%)</title><rect x="1049.6" y="613" width="0.9" height="15.0" fill="rgb(230,213,7)" rx="2" ry="2" />
<text  x="1052.59" y="623.5" ></text>
</g>
<g >
<title>clang::TypeLocReader::VisitTemplateSpecializationTypeLoc (1 samples, 0.08%)</title><rect x="1009.1" y="437" width="0.9" height="15.0" fill="rgb(217,116,52)" rx="2" ry="2" />
<text  x="1012.08" y="447.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyld::loadObject (4 samples, 0.31%)</title><rect x="258.4" y="789" width="3.6" height="15.0" fill="rgb(207,74,12)" rx="2" ry="2" />
<text  x="261.42" y="799.5" ></text>
</g>
<g >
<title>llvm::PMTopLevelManager::findAnalysisPass (5 samples, 0.38%)</title><rect x="222.4" y="725" width="4.5" height="15.0" fill="rgb(215,93,33)" rx="2" ry="2" />
<text  x="225.42" y="735.5" ></text>
</g>
<g >
<title>TTree::Streamer (1 samples, 0.08%)</title><rect x="447.4" y="837" width="0.9" height="15.0" fill="rgb(211,40,20)" rx="2" ry="2" />
<text  x="450.44" y="847.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::GetAddrOfFunction (1 samples, 0.08%)</title><rect x="1019.9" y="693" width="0.9" height="15.0" fill="rgb(219,73,34)" rx="2" ry="2" />
<text  x="1022.89" y="703.5" ></text>
</g>
<g >
<title>execute_command (5 samples, 0.38%)</title><rect x="10.9" y="709" width="4.5" height="15.0" fill="rgb(254,131,8)" rx="2" ry="2" />
<text  x="13.90" y="719.5" ></text>
</g>
<g >
<title>llvm::AttrBuilder::addAttribute (1 samples, 0.08%)</title><rect x="1044.2" y="741" width="0.9" height="15.0" fill="rgb(246,185,11)" rx="2" ry="2" />
<text  x="1047.19" y="751.5" ></text>
</g>
<g >
<title>TEnv::TEnv (1 samples, 0.08%)</title><rect x="1001.9" y="805" width="0.9" height="15.0" fill="rgb(242,156,10)" rx="2" ry="2" />
<text  x="1004.88" y="815.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformNestedNameSpecifierLoc (1 samples, 0.08%)</title><rect x="1081.1" y="693" width="0.9" height="15.0" fill="rgb(243,147,48)" rx="2" ry="2" />
<text  x="1084.09" y="703.5" ></text>
</g>
<g >
<title>TBranch::ReadLeaves1Impl (17 samples, 1.30%)</title><rect x="642.8" y="869" width="15.3" height="15.0" fill="rgb(234,27,0)" rx="2" ry="2" />
<text  x="645.75" y="879.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitDeclStmt (1 samples, 0.08%)</title><rect x="1015.4" y="533" width="0.9" height="15.0" fill="rgb(244,126,11)" rx="2" ry="2" />
<text  x="1018.39" y="543.5" ></text>
</g>
<g >
<title>TCling::LoadPCMImpl (1 samples, 0.08%)</title><rect x="1118.9" y="821" width="0.9" height="15.0" fill="rgb(208,133,22)" rx="2" ry="2" />
<text  x="1121.89" y="831.5" ></text>
</g>
<g >
<title>llvm::LazyBlockFrequencyInfoPass::releaseMemory (1 samples, 0.08%)</title><rect x="881.3" y="581" width="0.9" height="15.0" fill="rgb(240,19,21)" rx="2" ry="2" />
<text  x="884.27" y="591.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitFunctionDecl (1 samples, 0.08%)</title><rect x="1077.5" y="661" width="0.9" height="15.0" fill="rgb(217,12,15)" rx="2" ry="2" />
<text  x="1080.49" y="671.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnModule (9 samples, 0.69%)</title><rect x="228.7" y="773" width="8.1" height="15.0" fill="rgb(226,210,42)" rx="2" ry="2" />
<text  x="231.72" y="783.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.08%)</title><rect x="1058.6" y="805" width="0.9" height="15.0" fill="rgb(219,196,29)" rx="2" ry="2" />
<text  x="1061.59" y="815.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass (2 samples, 0.15%)</title><rect x="1060.4" y="837" width="1.8" height="15.0" fill="rgb(232,40,20)" rx="2" ry="2" />
<text  x="1063.39" y="847.5" ></text>
</g>
<g >
<title>[bash] (4 samples, 0.31%)</title><rect x="36.1" y="373" width="3.6" height="15.0" fill="rgb(210,130,0)" rx="2" ry="2" />
<text  x="39.10" y="383.5" ></text>
</g>
<g >
<title>clang::RedeclarableTemplateDecl::loadLazySpecializationsImpl (1 samples, 0.08%)</title><rect x="1064.0" y="597" width="0.9" height="15.0" fill="rgb(231,211,11)" rx="2" ry="2" />
<text  x="1066.99" y="607.5" ></text>
</g>
<g >
<title>llvm::TargetTransformInfoWrapperPass::getTTI (1 samples, 0.08%)</title><rect x="894.8" y="613" width="0.9" height="15.0" fill="rgb(247,177,36)" rx="2" ry="2" />
<text  x="897.77" y="623.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="342.1" y="757" width="0.9" height="15.0" fill="rgb(252,163,36)" rx="2" ry="2" />
<text  x="345.13" y="767.5" ></text>
</g>
<g >
<title>TClass::CallShowMembers (1 samples, 0.08%)</title><rect x="447.4" y="773" width="0.9" height="15.0" fill="rgb(242,196,41)" rx="2" ry="2" />
<text  x="450.44" y="783.5" ></text>
</g>
<g >
<title>llvm::LoopInfoWrapperPass::runOnFunction (1 samples, 0.08%)</title><rect x="231.4" y="741" width="0.9" height="15.0" fill="rgb(237,95,53)" rx="2" ry="2" />
<text  x="234.42" y="751.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::ParseInternal (1 samples, 0.08%)</title><rect x="942.5" y="789" width="0.9" height="15.0" fill="rgb(224,186,35)" rx="2" ry="2" />
<text  x="945.48" y="799.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.08%)</title><rect x="35.2" y="597" width="0.9" height="15.0" fill="rgb(227,15,1)" rx="2" ry="2" />
<text  x="38.20" y="607.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.08%)</title><rect x="1074.8" y="773" width="0.9" height="15.0" fill="rgb(225,144,44)" rx="2" ry="2" />
<text  x="1077.79" y="783.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformFunctionTypeParams (1 samples, 0.08%)</title><rect x="1087.4" y="933" width="0.9" height="15.0" fill="rgb(210,225,46)" rx="2" ry="2" />
<text  x="1090.39" y="943.5" ></text>
</g>
<g >
<title>cling::utils::platform::GetSystemLibraryPaths (9 samples, 0.69%)</title><rect x="929.0" y="773" width="8.1" height="15.0" fill="rgb(208,129,10)" rx="2" ry="2" />
<text  x="931.98" y="783.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1160.3" y="693" width="0.9" height="15.0" fill="rgb(239,184,46)" rx="2" ry="2" />
<text  x="1163.30" y="703.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformNestedNameSpecifierLoc (1 samples, 0.08%)</title><rect x="1065.8" y="853" width="0.9" height="15.0" fill="rgb(213,15,29)" rx="2" ry="2" />
<text  x="1068.79" y="863.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadTemplateArgument (1 samples, 0.08%)</title><rect x="1008.2" y="837" width="0.9" height="15.0" fill="rgb(241,145,2)" rx="2" ry="2" />
<text  x="1011.18" y="847.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl (1 samples, 0.08%)</title><rect x="1064.0" y="805" width="0.9" height="15.0" fill="rgb(226,103,49)" rx="2" ry="2" />
<text  x="1066.99" y="815.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.08%)</title><rect x="35.2" y="613" width="0.9" height="15.0" fill="rgb(216,48,16)" rx="2" ry="2" />
<text  x="38.20" y="623.5" ></text>
</g>
<g >
<title>[bash] (17 samples, 1.30%)</title><rect x="15.4" y="581" width="15.3" height="15.0" fill="rgb(246,22,6)" rx="2" ry="2" />
<text  x="18.40" y="591.5" ></text>
</g>
<g >
<title>llvm::BitstreamCursor::readRecord (1 samples, 0.08%)</title><rect x="1051.4" y="485" width="0.9" height="15.0" fill="rgb(239,104,22)" rx="2" ry="2" />
<text  x="1054.39" y="495.5" ></text>
</g>
<g >
<title>clang::Sema::PerformPendingInstantiations (1 samples, 0.08%)</title><rect x="1084.7" y="853" width="0.9" height="15.0" fill="rgb(207,86,38)" rx="2" ry="2" />
<text  x="1087.69" y="863.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveRelocations (1 samples, 0.08%)</title><rect x="854.3" y="741" width="0.9" height="15.0" fill="rgb(244,73,6)" rx="2" ry="2" />
<text  x="857.27" y="751.5" ></text>
</g>
<g >
<title>clang::DiagnosticsEngine::DiagStateMap::lookup (1 samples, 0.08%)</title><rect x="1082.9" y="853" width="0.9" height="15.0" fill="rgb(220,181,15)" rx="2" ry="2" />
<text  x="1085.89" y="863.5" ></text>
</g>
<g >
<title>clang::DeclContext::buildLookup (1 samples, 0.08%)</title><rect x="1100.0" y="565" width="0.9" height="15.0" fill="rgb(205,190,0)" rx="2" ry="2" />
<text  x="1102.99" y="575.5" ></text>
</g>
<g >
<title>llvm::PMTopLevelManager::findAnalysisPass (1 samples, 0.08%)</title><rect x="911.9" y="581" width="0.9" height="15.0" fill="rgb(236,15,22)" rx="2" ry="2" />
<text  x="914.88" y="591.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord (1 samples, 0.08%)</title><rect x="1077.5" y="789" width="0.9" height="15.0" fill="rgb(254,171,7)" rx="2" ry="2" />
<text  x="1080.49" y="799.5" ></text>
</g>
<g >
<title>clang::Parser::ParseTemplateIdAfterTemplateName (1 samples, 0.08%)</title><rect x="1109.0" y="885" width="0.9" height="15.0" fill="rgb(207,88,9)" rx="2" ry="2" />
<text  x="1111.99" y="895.5" ></text>
</g>
<g >
<title>clang::Sema::CheckBaseSpecifier (1 samples, 0.08%)</title><rect x="1073.0" y="725" width="0.9" height="15.0" fill="rgb(245,40,29)" rx="2" ry="2" />
<text  x="1075.99" y="735.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadTypeLoc (1 samples, 0.08%)</title><rect x="1012.7" y="517" width="0.9" height="15.0" fill="rgb(222,4,15)" rx="2" ry="2" />
<text  x="1015.68" y="527.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformBinaryOperator (1 samples, 0.08%)</title><rect x="1098.2" y="853" width="0.9" height="15.0" fill="rgb(207,152,25)" rx="2" ry="2" />
<text  x="1101.19" y="863.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTSIInObjectScope (1 samples, 0.08%)</title><rect x="1093.7" y="917" width="0.9" height="15.0" fill="rgb(212,71,49)" rx="2" ry="2" />
<text  x="1096.69" y="927.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformNestedNameSpecifierLoc (1 samples, 0.08%)</title><rect x="1085.6" y="725" width="0.9" height="15.0" fill="rgb(221,201,4)" rx="2" ry="2" />
<text  x="1088.59" y="735.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalDefinition (1 samples, 0.08%)</title><rect x="1039.7" y="789" width="0.9" height="15.0" fill="rgb(228,150,52)" rx="2" ry="2" />
<text  x="1042.69" y="799.5" ></text>
</g>
<g >
<title>HandleInterpreterException (16 samples, 1.22%)</title><rect x="839.9" y="933" width="14.4" height="15.0" fill="rgb(222,204,14)" rx="2" ry="2" />
<text  x="842.87" y="943.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.08%)</title><rect x="1075.7" y="869" width="0.9" height="15.0" fill="rgb(248,33,30)" rx="2" ry="2" />
<text  x="1078.69" y="879.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::Compile (7 samples, 0.53%)</title><rect x="831.8" y="741" width="6.3" height="15.0" fill="rgb(206,33,42)" rx="2" ry="2" />
<text  x="834.77" y="751.5" ></text>
</g>
<g >
<title>__GI__dl_catch_error (1 samples, 0.08%)</title><rect x="839.0" y="805" width="0.9" height="15.0" fill="rgb(231,79,28)" rx="2" ry="2" />
<text  x="841.97" y="815.5" ></text>
</g>
<g >
<title>llvm::SimplifyInstruction (1 samples, 0.08%)</title><rect x="818.3" y="677" width="0.9" height="15.0" fill="rgb(208,194,4)" rx="2" ry="2" />
<text  x="821.27" y="687.5" ></text>
</g>
<g >
<title>EmitDirectCallee (1 samples, 0.08%)</title><rect x="1019.9" y="725" width="0.9" height="15.0" fill="rgb(252,27,54)" rx="2" ry="2" />
<text  x="1022.89" y="735.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitScalarExpr (1 samples, 0.08%)</title><rect x="1020.8" y="853" width="0.9" height="15.0" fill="rgb(241,71,39)" rx="2" ry="2" />
<text  x="1023.79" y="863.5" ></text>
</g>
<g >
<title>llvm::ExecutionDomainFix::runOnMachineFunction (3 samples, 0.23%)</title><rect x="240.4" y="725" width="2.7" height="15.0" fill="rgb(238,144,27)" rx="2" ry="2" />
<text  x="243.42" y="735.5" ></text>
</g>
<g >
<title>clang::ASTContext::getTemplateTypeParmType (1 samples, 0.08%)</title><rect x="1010.9" y="709" width="0.9" height="15.0" fill="rgb(246,206,18)" rx="2" ry="2" />
<text  x="1013.88" y="719.5" ></text>
</g>
<g >
<title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, true&gt; &gt;::addVirtualRoot (1 samples, 0.08%)</title><rect x="893.0" y="565" width="0.9" height="15.0" fill="rgb(224,168,14)" rx="2" ry="2" />
<text  x="895.97" y="575.5" ></text>
</g>
<g >
<title>TPluginManager::LoadHandlersFromPluginDirs (2 samples, 0.15%)</title><rect x="855.2" y="917" width="1.8" height="15.0" fill="rgb(247,153,9)" rx="2" ry="2" />
<text  x="858.17" y="927.5" ></text>
</g>
<g >
<title>[bash] (4 samples, 0.31%)</title><rect x="36.1" y="453" width="3.6" height="15.0" fill="rgb(222,14,21)" rx="2" ry="2" />
<text  x="39.10" y="463.5" ></text>
</g>
<g >
<title>llvm::StringSwitch&lt;bool, bool&gt;::Case (1 samples, 0.08%)</title><rect x="1090.1" y="725" width="0.9" height="15.0" fill="rgb(229,25,41)" rx="2" ry="2" />
<text  x="1093.09" y="735.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke (1 samples, 0.08%)</title><rect x="854.3" y="789" width="0.9" height="15.0" fill="rgb(211,181,53)" rx="2" ry="2" />
<text  x="857.27" y="799.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetType (1 samples, 0.08%)</title><rect x="1010.0" y="869" width="0.9" height="15.0" fill="rgb(233,192,14)" rx="2" ry="2" />
<text  x="1012.98" y="879.5" ></text>
</g>
<g >
<title>clang::Sema::CheckCompareOperands (1 samples, 0.08%)</title><rect x="1099.1" y="885" width="0.9" height="15.0" fill="rgb(206,109,36)" rx="2" ry="2" />
<text  x="1102.09" y="895.5" ></text>
</g>
<g >
<title>clang::ASTContext::getTemplateSpecializationType (1 samples, 0.08%)</title><rect x="1109.0" y="581" width="0.9" height="15.0" fill="rgb(211,33,18)" rx="2" ry="2" />
<text  x="1111.99" y="591.5" ></text>
</g>
<g >
<title>llvm::SCEVExpander::expandAddRecExprLiterally (1 samples, 0.08%)</title><rect x="671.6" y="901" width="0.9" height="15.0" fill="rgb(243,60,29)" rx="2" ry="2" />
<text  x="674.56" y="911.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.08%)</title><rect x="803.0" y="645" width="0.9" height="15.0" fill="rgb(252,225,17)" rx="2" ry="2" />
<text  x="805.97" y="655.5" ></text>
</g>
<g >
<title>Evaluate (1 samples, 0.08%)</title><rect x="1023.5" y="677" width="0.9" height="15.0" fill="rgb(208,15,5)" rx="2" ry="2" />
<text  x="1026.49" y="687.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTemplateIdType (1 samples, 0.08%)</title><rect x="1081.1" y="645" width="0.9" height="15.0" fill="rgb(207,42,12)" rx="2" ry="2" />
<text  x="1084.09" y="655.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::GetExternalDeclStmt (1 samples, 0.08%)</title><rect x="1022.6" y="725" width="0.9" height="15.0" fill="rgb(219,0,2)" rx="2" ry="2" />
<text  x="1025.59" y="735.5" ></text>
</g>
<g >
<title>llvm::MCContext::createELFRelSection (1 samples, 0.08%)</title><rect x="677.0" y="533" width="0.9" height="15.0" fill="rgb(211,187,7)" rx="2" ry="2" />
<text  x="679.96" y="543.5" ></text>
</g>
<g >
<title>execute_command (5 samples, 0.38%)</title><rect x="10.9" y="565" width="4.5" height="15.0" fill="rgb(222,115,36)" rx="2" ry="2" />
<text  x="13.90" y="575.5" ></text>
</g>
<g >
<title>cling::Interpreter::RunFunction (2 samples, 0.15%)</title><rect x="212.5" y="869" width="1.8" height="15.0" fill="rgb(233,12,20)" rx="2" ry="2" />
<text  x="215.52" y="879.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.08%)</title><rect x="1048.7" y="293" width="0.9" height="15.0" fill="rgb(240,178,18)" rx="2" ry="2" />
<text  x="1051.69" y="303.5" ></text>
</g>
<g >
<title>execute_command_internal (5 samples, 0.38%)</title><rect x="10.9" y="581" width="4.5" height="15.0" fill="rgb(243,88,33)" rx="2" ry="2" />
<text  x="13.90" y="591.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentNameType (1 samples, 0.08%)</title><rect x="1064.0" y="693" width="0.9" height="15.0" fill="rgb(221,141,18)" rx="2" ry="2" />
<text  x="1066.99" y="703.5" ></text>
</g>
<g >
<title>llvm::runIPSCCP (1 samples, 0.08%)</title><rect x="1108.1" y="837" width="0.9" height="15.0" fill="rgb(237,80,4)" rx="2" ry="2" />
<text  x="1111.09" y="847.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization (1 samples, 0.08%)</title><rect x="1073.0" y="677" width="0.9" height="15.0" fill="rgb(235,96,35)" rx="2" ry="2" />
<text  x="1075.99" y="687.5" ></text>
</g>
<g >
<title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::runSemiNCA (2 samples, 0.15%)</title><rect x="683.3" y="533" width="1.8" height="15.0" fill="rgb(224,8,40)" rx="2" ry="2" />
<text  x="686.26" y="543.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::getAddExpr (1 samples, 0.08%)</title><rect x="1129.7" y="517" width="0.9" height="15.0" fill="rgb(224,103,11)" rx="2" ry="2" />
<text  x="1132.69" y="527.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;llvm::make_const_ptr, (anonymous namespace)::LValueExprEvaluator, bool&gt;::Visit (1 samples, 0.08%)</title><rect x="1021.7" y="757" width="0.9" height="15.0" fill="rgb(252,200,37)" rx="2" ry="2" />
<text  x="1024.69" y="767.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ComputeRecordLayout (1 samples, 0.08%)</title><rect x="1049.6" y="661" width="0.9" height="15.0" fill="rgb(253,142,44)" rx="2" ry="2" />
<text  x="1052.59" y="671.5" ></text>
</g>
<g >
<title>llvm::MCStreamer::Finish (1 samples, 0.08%)</title><rect x="839.9" y="597" width="0.9" height="15.0" fill="rgb(229,209,53)" rx="2" ry="2" />
<text  x="842.87" y="607.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveRelocations (1 samples, 0.08%)</title><rect x="1120.7" y="949" width="0.9" height="15.0" fill="rgb(229,220,11)" rx="2" ry="2" />
<text  x="1123.69" y="959.5" ></text>
</g>
<g >
<title>clang::Sema::PerformCopyInitialization (1 samples, 0.08%)</title><rect x="1082.9" y="949" width="0.9" height="15.0" fill="rgb(223,59,11)" rx="2" ry="2" />
<text  x="1085.89" y="959.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::runOnMachineFunction (2 samples, 0.15%)</title><rect x="212.5" y="741" width="1.8" height="15.0" fill="rgb(208,3,47)" rx="2" ry="2" />
<text  x="215.52" y="751.5" ></text>
</g>
<g >
<title>llvm::AttributeList::addAttribute (1 samples, 0.08%)</title><rect x="1017.2" y="645" width="0.9" height="15.0" fill="rgb(241,196,33)" rx="2" ry="2" />
<text  x="1020.19" y="655.5" ></text>
</g>
<g >
<title>clang::Sema::ActOnMemberAccessExpr (1 samples, 0.08%)</title><rect x="1052.3" y="853" width="0.9" height="15.0" fill="rgb(231,216,3)" rx="2" ry="2" />
<text  x="1055.29" y="863.5" ></text>
</g>
<g >
<title>clang::Sema::SubstDecl (1 samples, 0.08%)</title><rect x="1084.7" y="741" width="0.9" height="15.0" fill="rgb(250,14,15)" rx="2" ry="2" />
<text  x="1087.69" y="751.5" ></text>
</g>
<g >
<title>isSafeToConvert (1 samples, 0.08%)</title><rect x="1048.7" y="517" width="0.9" height="15.0" fill="rgb(239,92,3)" rx="2" ry="2" />
<text  x="1051.69" y="527.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::GetAddrOfFunction (1 samples, 0.08%)</title><rect x="1091.9" y="613" width="0.9" height="15.0" fill="rgb(217,118,25)" rx="2" ry="2" />
<text  x="1094.89" y="623.5" ></text>
</g>
<g >
<title>TClingCallbacks::findInGlobalModuleIndex (1 samples, 0.08%)</title><rect x="1018.1" y="469" width="0.9" height="15.0" fill="rgb(241,46,20)" rx="2" ry="2" />
<text  x="1021.09" y="479.5" ></text>
</g>
<g >
<title>cling::utils::platform::DLOpen (1 samples, 0.08%)</title><rect x="839.0" y="853" width="0.9" height="15.0" fill="rgb(226,103,11)" rx="2" ry="2" />
<text  x="841.97" y="863.5" ></text>
</g>
<g >
<title>execute_command (27 samples, 2.06%)</title><rect x="10.9" y="741" width="24.3" height="15.0" fill="rgb(213,135,20)" rx="2" ry="2" />
<text  x="13.90" y="751.5" >e..</text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.08%)</title><rect x="35.2" y="869" width="0.9" height="15.0" fill="rgb(225,224,5)" rx="2" ry="2" />
<text  x="38.20" y="879.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (1 samples, 0.08%)</title><rect x="203.5" y="741" width="0.9" height="15.0" fill="rgb(246,34,10)" rx="2" ry="2" />
<text  x="206.52" y="751.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="10.0" y="821" width="0.9" height="15.0" fill="rgb(225,66,27)" rx="2" ry="2" />
<text  x="13.00" y="831.5" ></text>
</g>
<g >
<title>cling::BackendPasses::runOnModule (4 samples, 0.31%)</title><rect x="860.6" y="645" width="3.6" height="15.0" fill="rgb(205,62,35)" rx="2" ry="2" />
<text  x="863.57" y="655.5" ></text>
</g>
<g >
<title>clang::ASTContext::getLValueReferenceType (1 samples, 0.08%)</title><rect x="1089.2" y="613" width="0.9" height="15.0" fill="rgb(228,95,43)" rx="2" ry="2" />
<text  x="1092.19" y="623.5" ></text>
</g>
<g >
<title>TCling::HandleNewDecl (1 samples, 0.08%)</title><rect x="237.7" y="789" width="0.9" height="15.0" fill="rgb(226,128,3)" rx="2" ry="2" />
<text  x="240.72" y="799.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::visitCallInst (4 samples, 0.31%)</title><rect x="811.1" y="629" width="3.6" height="15.0" fill="rgb(225,29,42)" rx="2" ry="2" />
<text  x="814.07" y="639.5" ></text>
</g>
<g >
<title>llvm::DominatorTreeWrapperPass::runOnFunction (2 samples, 0.15%)</title><rect x="683.3" y="565" width="1.8" height="15.0" fill="rgb(234,193,47)" rx="2" ry="2" />
<text  x="686.26" y="575.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="342.1" y="837" width="0.9" height="15.0" fill="rgb(247,104,35)" rx="2" ry="2" />
<text  x="345.13" y="847.5" ></text>
</g>
<g >
<title>llvm::MachineFunctionPass::runOnFunction (2 samples, 0.15%)</title><rect x="1125.2" y="885" width="1.8" height="15.0" fill="rgb(238,142,35)" rx="2" ry="2" />
<text  x="1128.19" y="895.5" ></text>
</g>
<g >
<title>llvm::ValueHandleBase::RemoveFromUseList (1 samples, 0.08%)</title><rect x="927.2" y="613" width="0.9" height="15.0" fill="rgb(207,113,31)" rx="2" ry="2" />
<text  x="930.18" y="623.5" ></text>
</g>
<g >
<title>clang::Parser::ParseDeclarationAfterDeclaratorAndAttributes (1 samples, 0.08%)</title><rect x="1053.2" y="821" width="0.9" height="15.0" fill="rgb(225,63,14)" rx="2" ry="2" />
<text  x="1056.19" y="831.5" ></text>
</g>
<g >
<title>runCVP (1 samples, 0.08%)</title><rect x="837.2" y="661" width="0.9" height="15.0" fill="rgb(227,95,11)" rx="2" ry="2" />
<text  x="840.17" y="671.5" ></text>
</g>
<g >
<title>cling::MetaSema::actOnLCommand (1 samples, 0.08%)</title><rect x="857.0" y="789" width="0.9" height="15.0" fill="rgb(209,144,53)" rx="2" ry="2" />
<text  x="859.97" y="799.5" ></text>
</g>
<g >
<title>llvm::AttributeList::addAttributes (1 samples, 0.08%)</title><rect x="1037.9" y="677" width="0.9" height="15.0" fill="rgb(224,160,23)" rx="2" ry="2" />
<text  x="1040.89" y="687.5" ></text>
</g>
<g >
<title>llvm::isKnownNonZero (1 samples, 0.08%)</title><rect x="826.4" y="581" width="0.9" height="15.0" fill="rgb(243,30,51)" rx="2" ry="2" />
<text  x="829.37" y="591.5" ></text>
</g>
<g >
<title>clang::Sema::PerformPendingInstantiations (2 samples, 0.15%)</title><rect x="798.5" y="693" width="1.8" height="15.0" fill="rgb(246,9,32)" rx="2" ry="2" />
<text  x="801.47" y="703.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentNameType (3 samples, 0.23%)</title><rect x="1073.0" y="869" width="2.7" height="15.0" fill="rgb(224,193,16)" rx="2" ry="2" />
<text  x="1075.99" y="879.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt;, llvm::DenseMapInfo&lt;llvm::BasicBlock*&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt; &gt; &gt;, llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt;, llvm::DenseMapInfo&lt;llvm::BasicBlock*&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt; &gt; &gt;::destroyAll (1 samples, 0.08%)</title><rect x="913.7" y="533" width="0.9" height="15.0" fill="rgb(223,218,34)" rx="2" ry="2" />
<text  x="916.68" y="543.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.23%)</title><rect x="31.6" y="549" width="2.7" height="15.0" fill="rgb(228,101,52)" rx="2" ry="2" />
<text  x="34.60" y="559.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddTemplateArgument (1 samples, 0.08%)</title><rect x="1058.6" y="613" width="0.9" height="15.0" fill="rgb(229,39,26)" rx="2" ry="2" />
<text  x="1061.59" y="623.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (9 samples, 0.69%)</title><rect x="228.7" y="757" width="8.1" height="15.0" fill="rgb(221,187,2)" rx="2" ry="2" />
<text  x="231.72" y="767.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (1 samples, 0.08%)</title><rect x="228.7" y="677" width="0.9" height="15.0" fill="rgb(227,47,52)" rx="2" ry="2" />
<text  x="231.72" y="687.5" ></text>
</g>
<g >
<title>llvm::InstructionCombiningPass::runOnFunction (8 samples, 0.61%)</title><rect x="808.4" y="677" width="7.2" height="15.0" fill="rgb(225,74,46)" rx="2" ry="2" />
<text  x="811.37" y="687.5" ></text>
</g>
<g >
<title>__strlen_avx2 (1 samples, 0.08%)</title><rect x="952.4" y="821" width="0.9" height="15.0" fill="rgb(254,182,35)" rx="2" ry="2" />
<text  x="955.38" y="831.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetExternalDeclStmt (1 samples, 0.08%)</title><rect x="1022.6" y="709" width="0.9" height="15.0" fill="rgb(234,173,44)" rx="2" ry="2" />
<text  x="1025.59" y="719.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="28.0" y="229" width="0.9" height="15.0" fill="rgb(248,132,12)" rx="2" ry="2" />
<text  x="31.00" y="239.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::runStaticInitializersOnce (1 samples, 0.08%)</title><rect x="1109.9" y="805" width="0.9" height="15.0" fill="rgb(215,15,40)" rx="2" ry="2" />
<text  x="1112.89" y="815.5" ></text>
</g>
<g >
<title>llvm::X86AsmPrinter::EmitInstruction (2 samples, 0.15%)</title><rect x="249.4" y="693" width="1.8" height="15.0" fill="rgb(213,15,22)" rx="2" ry="2" />
<text  x="252.42" y="703.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (1 samples, 0.08%)</title><rect x="1118.0" y="821" width="0.9" height="15.0" fill="rgb(210,161,1)" rx="2" ry="2" />
<text  x="1120.99" y="831.5" ></text>
</g>
<g >
<title>clang::ASTContext::getFunctionTypeInternal (1 samples, 0.08%)</title><rect x="1082.0" y="901" width="0.9" height="15.0" fill="rgb(250,144,11)" rx="2" ry="2" />
<text  x="1084.99" y="911.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (1 samples, 0.08%)</title><rect x="1093.7" y="693" width="0.9" height="15.0" fill="rgb(253,164,35)" rx="2" ry="2" />
<text  x="1096.69" y="703.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke (1 samples, 0.08%)</title><rect x="449.2" y="853" width="0.9" height="15.0" fill="rgb(231,185,37)" rx="2" ry="2" />
<text  x="452.24" y="863.5" ></text>
</g>
<g >
<title>cling::DynamicLibraryManager::loadLibrary (1 samples, 0.08%)</title><rect x="991.1" y="901" width="0.9" height="15.0" fill="rgb(230,89,17)" rx="2" ry="2" />
<text  x="994.08" y="911.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType (1 samples, 0.08%)</title><rect x="1064.0" y="645" width="0.9" height="15.0" fill="rgb(246,216,6)" rx="2" ry="2" />
<text  x="1066.99" y="655.5" ></text>
</g>
<g >
<title>clang::Decl::getTranslationUnitDecl (1 samples, 0.08%)</title><rect x="857.9" y="741" width="0.9" height="15.0" fill="rgb(254,65,12)" rx="2" ry="2" />
<text  x="860.87" y="751.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformCompoundStmt (1 samples, 0.08%)</title><rect x="1084.7" y="773" width="0.9" height="15.0" fill="rgb(234,205,33)" rx="2" ry="2" />
<text  x="1087.69" y="783.5" ></text>
</g>
<g >
<title>clang::Decl::Decl (1 samples, 0.08%)</title><rect x="1050.5" y="949" width="0.9" height="15.0" fill="rgb(221,196,4)" rx="2" ry="2" />
<text  x="1053.49" y="959.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass (1 samples, 0.08%)</title><rect x="1092.8" y="853" width="0.9" height="15.0" fill="rgb(236,120,32)" rx="2" ry="2" />
<text  x="1095.79" y="863.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformNestedNameSpecifierLoc (1 samples, 0.08%)</title><rect x="1075.7" y="837" width="0.9" height="15.0" fill="rgb(227,201,12)" rx="2" ry="2" />
<text  x="1078.69" y="847.5" ></text>
</g>
<g >
<title>llvm::BumpPtrAllocatorImpl&lt;llvm::MallocAllocator, 4096ul, 4096ul&gt;::Allocate (1 samples, 0.08%)</title><rect x="245.8" y="693" width="0.9" height="15.0" fill="rgb(237,60,37)" rx="2" ry="2" />
<text  x="248.82" y="703.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnModule (2 samples, 0.15%)</title><rect x="835.4" y="661" width="1.8" height="15.0" fill="rgb(228,105,51)" rx="2" ry="2" />
<text  x="838.37" y="671.5" ></text>
</g>
<g >
<title>llvm::MachineModuleInfo::getOrCreateMachineFunction (1 samples, 0.08%)</title><rect x="245.8" y="725" width="0.9" height="15.0" fill="rgb(221,229,47)" rx="2" ry="2" />
<text  x="248.82" y="735.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.08%)</title><rect x="35.2" y="725" width="0.9" height="15.0" fill="rgb(248,88,32)" rx="2" ry="2" />
<text  x="38.20" y="735.5" ></text>
</g>
<g >
<title>llvm::LivePhysRegs::removeDefs (1 samples, 0.08%)</title><rect x="693.2" y="533" width="0.9" height="15.0" fill="rgb(254,141,26)" rx="2" ry="2" />
<text  x="696.16" y="543.5" ></text>
</g>
<g >
<title>_dl_runtime_resolve_xsavec (1 samples, 0.08%)</title><rect x="1000.1" y="885" width="0.9" height="15.0" fill="rgb(230,95,31)" rx="2" ry="2" />
<text  x="1003.08" y="895.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddDecl (1 samples, 0.08%)</title><rect x="1072.1" y="501" width="0.9" height="15.0" fill="rgb(223,87,18)" rx="2" ry="2" />
<text  x="1075.09" y="511.5" ></text>
</g>
<g >
<title>clang::Parser::TryAnnotateTypeOrScopeTokenAfterScopeSpec (1 samples, 0.08%)</title><rect x="1109.0" y="661" width="0.9" height="15.0" fill="rgb(216,130,54)" rx="2" ry="2" />
<text  x="1111.99" y="671.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadStmtFromStream (1 samples, 0.08%)</title><rect x="1012.7" y="389" width="0.9" height="15.0" fill="rgb(253,38,24)" rx="2" ry="2" />
<text  x="1015.68" y="399.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::visitAdd (1 samples, 0.08%)</title><rect x="217.9" y="709" width="0.9" height="15.0" fill="rgb(247,229,4)" rx="2" ry="2" />
<text  x="220.92" y="719.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadTemplateArgumentList (2 samples, 0.15%)</title><rect x="1010.9" y="933" width="1.8" height="15.0" fill="rgb(210,95,28)" rx="2" ry="2" />
<text  x="1013.88" y="943.5" ></text>
</g>
<g >
<title>TCling::ProcessLineSynch (1 samples, 0.08%)</title><rect x="854.3" y="949" width="0.9" height="15.0" fill="rgb(233,168,44)" rx="2" ry="2" />
<text  x="857.27" y="959.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_get_insert_hint_unique_pos (1 samples, 0.08%)</title><rect x="1044.2" y="725" width="0.9" height="15.0" fill="rgb(210,129,31)" rx="2" ry="2" />
<text  x="1047.19" y="735.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.15%)</title><rect x="1139.6" y="869" width="1.8" height="15.0" fill="rgb(217,167,10)" rx="2" ry="2" />
<text  x="1142.60" y="879.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGBuilder::visitInvoke (1 samples, 0.08%)</title><rect x="247.6" y="661" width="0.9" height="15.0" fill="rgb(229,91,11)" rx="2" ry="2" />
<text  x="250.62" y="671.5" ></text>
</g>
<g >
<title>clang::Sema::BuildQualifiedDeclarationNameExpr (1 samples, 0.08%)</title><rect x="1062.2" y="789" width="0.9" height="15.0" fill="rgb(208,95,8)" rx="2" ry="2" />
<text  x="1065.19" y="799.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke (1 samples, 0.08%)</title><rect x="1110.8" y="869" width="0.9" height="15.0" fill="rgb(240,26,47)" rx="2" ry="2" />
<text  x="1113.79" y="879.5" ></text>
</g>
<g >
<title>inflate (1 samples, 0.08%)</title><rect x="446.5" y="805" width="0.9" height="15.0" fill="rgb(211,3,4)" rx="2" ry="2" />
<text  x="449.54" y="815.5" ></text>
</g>
<g >
<title>R__unzip (1 samples, 0.08%)</title><rect x="446.5" y="837" width="0.9" height="15.0" fill="rgb(233,34,13)" rx="2" ry="2" />
<text  x="449.54" y="847.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.46%)</title><rect x="1154.9" y="725" width="5.4" height="15.0" fill="rgb(207,54,44)" rx="2" ry="2" />
<text  x="1157.90" y="735.5" ></text>
</g>
<g >
<title>clang::Stmt::getBeginLoc (1 samples, 0.08%)</title><rect x="1014.5" y="501" width="0.9" height="15.0" fill="rgb(253,203,9)" rx="2" ry="2" />
<text  x="1017.49" y="511.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::visitLoadInst (1 samples, 0.08%)</title><rect x="836.3" y="581" width="0.9" height="15.0" fill="rgb(207,54,18)" rx="2" ry="2" />
<text  x="839.27" y="591.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.23%)</title><rect x="937.1" y="725" width="2.7" height="15.0" fill="rgb(207,66,50)" rx="2" ry="2" />
<text  x="940.08" y="735.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (1 samples, 0.08%)</title><rect x="911.9" y="565" width="0.9" height="15.0" fill="rgb(207,228,7)" rx="2" ry="2" />
<text  x="914.88" y="575.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.08%)</title><rect x="1043.3" y="693" width="0.9" height="15.0" fill="rgb(221,0,9)" rx="2" ry="2" />
<text  x="1046.29" y="703.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::createSCEV (1 samples, 0.08%)</title><rect x="1118.0" y="709" width="0.9" height="15.0" fill="rgb(207,102,42)" rx="2" ry="2" />
<text  x="1120.99" y="719.5" ></text>
</g>
<g >
<title>dlopen_doit (2 samples, 0.15%)</title><rect x="989.3" y="821" width="1.8" height="15.0" fill="rgb(249,117,41)" rx="2" ry="2" />
<text  x="992.28" y="831.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.08%)</title><rect x="35.2" y="853" width="0.9" height="15.0" fill="rgb(249,70,16)" rx="2" ry="2" />
<text  x="38.20" y="863.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalDefinition (1 samples, 0.08%)</title><rect x="1017.2" y="725" width="0.9" height="15.0" fill="rgb(251,123,51)" rx="2" ry="2" />
<text  x="1020.19" y="735.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (5 samples, 0.38%)</title><rect x="1033.4" y="741" width="4.5" height="15.0" fill="rgb(246,0,7)" rx="2" ry="2" />
<text  x="1036.39" y="751.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddTemplateArgument (1 samples, 0.08%)</title><rect x="1058.6" y="661" width="0.9" height="15.0" fill="rgb(244,225,51)" rx="2" ry="2" />
<text  x="1061.59" y="671.5" ></text>
</g>
<g >
<title>cling::MetaProcessor::process (2 samples, 0.15%)</title><rect x="202.6" y="933" width="1.8" height="15.0" fill="rgb(240,68,18)" rx="2" ry="2" />
<text  x="205.62" y="943.5" ></text>
</g>
<g >
<title>llvm::DataLayout::getStructLayout (1 samples, 0.08%)</title><rect x="818.3" y="613" width="0.9" height="15.0" fill="rgb(210,202,38)" rx="2" ry="2" />
<text  x="821.27" y="623.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallee (1 samples, 0.08%)</title><rect x="1018.1" y="757" width="0.9" height="15.0" fill="rgb(254,195,37)" rx="2" ry="2" />
<text  x="1021.09" y="767.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="43.3" y="757" width="0.9" height="15.0" fill="rgb(220,152,38)" rx="2" ry="2" />
<text  x="46.30" y="767.5" ></text>
</g>
<g >
<title>cling::MetaParser::isCommand (1 samples, 0.08%)</title><rect x="838.1" y="741" width="0.9" height="15.0" fill="rgb(225,4,22)" rx="2" ry="2" />
<text  x="841.07" y="751.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::setAddrOfLocalVar (1 samples, 0.08%)</title><rect x="1024.4" y="869" width="0.9" height="15.0" fill="rgb(223,14,34)" rx="2" ry="2" />
<text  x="1027.39" y="879.5" ></text>
</g>
<g >
<title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::attachNewSubtree (1 samples, 0.08%)</title><rect x="905.6" y="565" width="0.9" height="15.0" fill="rgb(213,106,27)" rx="2" ry="2" />
<text  x="908.58" y="575.5" ></text>
</g>
<g >
<title>clang::Sema::PerformImplicitConversion (1 samples, 0.08%)</title><rect x="1068.5" y="885" width="0.9" height="15.0" fill="rgb(250,196,3)" rx="2" ry="2" />
<text  x="1071.49" y="895.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddDecl (1 samples, 0.08%)</title><rect x="1072.1" y="597" width="0.9" height="15.0" fill="rgb(226,28,41)" rx="2" ry="2" />
<text  x="1075.09" y="607.5" ></text>
</g>
<g >
<title>llvm::orc::LambdaSymbolResolver&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt; const&amp;)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}&gt;::lookup (1 samples, 0.08%)</title><rect x="1110.8" y="773" width="0.9" height="15.0" fill="rgb(227,70,2)" rx="2" ry="2" />
<text  x="1113.79" y="783.5" ></text>
</g>
<g >
<title>cling::LookupHelper::findScope (1 samples, 0.08%)</title><rect x="1109.0" y="949" width="0.9" height="15.0" fill="rgb(219,191,33)" rx="2" ry="2" />
<text  x="1111.99" y="959.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.08%)</title><rect x="674.3" y="581" width="0.9" height="15.0" fill="rgb(243,59,37)" rx="2" ry="2" />
<text  x="677.26" y="591.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="24.4" y="213" width="0.9" height="15.0" fill="rgb(216,11,47)" rx="2" ry="2" />
<text  x="27.40" y="223.5" ></text>
</g>
<g >
<title>TCling::Calc (2 samples, 0.15%)</title><rect x="212.5" y="901" width="1.8" height="15.0" fill="rgb(235,75,5)" rx="2" ry="2" />
<text  x="215.52" y="911.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.08%)</title><rect x="1065.8" y="789" width="0.9" height="15.0" fill="rgb(239,37,35)" rx="2" ry="2" />
<text  x="1068.79" y="799.5" ></text>
</g>
<g >
<title>llvm::ConstantFoldInstruction (1 samples, 0.08%)</title><rect x="857.0" y="597" width="0.9" height="15.0" fill="rgb(208,113,52)" rx="2" ry="2" />
<text  x="859.97" y="607.5" ></text>
</g>
<g >
<title>llvm::MemorySSAWrapperPass::runOnFunction (1 samples, 0.08%)</title><rect x="817.4" y="677" width="0.9" height="15.0" fill="rgb(205,210,32)" rx="2" ry="2" />
<text  x="820.37" y="687.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::ConstructAttributeList (1 samples, 0.08%)</title><rect x="1020.8" y="677" width="0.9" height="15.0" fill="rgb(211,50,26)" rx="2" ry="2" />
<text  x="1023.79" y="687.5" ></text>
</g>
<g >
<title>[bash] (4 samples, 0.31%)</title><rect x="36.1" y="197" width="3.6" height="15.0" fill="rgb(212,82,4)" rx="2" ry="2" />
<text  x="39.10" y="207.5" ></text>
</g>
<g >
<title>clang::Parser::ConsumeToken (1 samples, 0.08%)</title><rect x="941.6" y="789" width="0.9" height="15.0" fill="rgb(227,68,10)" rx="2" ry="2" />
<text  x="944.58" y="799.5" ></text>
</g>
<g >
<title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::MachineBasicBlock, false&gt; &gt;::CalculateFromScratch (2 samples, 0.15%)</title><rect x="243.1" y="709" width="1.8" height="15.0" fill="rgb(250,48,32)" rx="2" ry="2" />
<text  x="246.12" y="719.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ComputeRecordLayout (1 samples, 0.08%)</title><rect x="1048.7" y="885" width="0.9" height="15.0" fill="rgb(244,175,5)" rx="2" ry="2" />
<text  x="1051.69" y="895.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization (2 samples, 0.15%)</title><rect x="1094.6" y="869" width="1.8" height="15.0" fill="rgb(227,184,47)" rx="2" ry="2" />
<text  x="1097.59" y="879.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (3 samples, 0.23%)</title><rect x="1127.0" y="901" width="2.7" height="15.0" fill="rgb(226,110,43)" rx="2" ry="2" />
<text  x="1129.99" y="911.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::getBackedgeTakenInfo (1 samples, 0.08%)</title><rect x="1109.9" y="693" width="0.9" height="15.0" fill="rgb(211,200,8)" rx="2" ry="2" />
<text  x="1112.89" y="703.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (1 samples, 0.08%)</title><rect x="870.5" y="597" width="0.9" height="15.0" fill="rgb(217,215,43)" rx="2" ry="2" />
<text  x="873.47" y="607.5" ></text>
</g>
<g >
<title>llvm::LoopInfoWrapperPass::runOnFunction (1 samples, 0.08%)</title><rect x="239.5" y="741" width="0.9" height="15.0" fill="rgb(252,14,45)" rx="2" ry="2" />
<text  x="242.52" y="751.5" ></text>
</g>
<g >
<title>TString::Gets (1 samples, 0.08%)</title><rect x="992.0" y="853" width="0.9" height="15.0" fill="rgb(237,22,5)" rx="2" ry="2" />
<text  x="994.98" y="863.5" ></text>
</g>
<g >
<title>clang::TemplateArgumentList::ComputeODRHash (1 samples, 0.08%)</title><rect x="1097.3" y="629" width="0.9" height="15.0" fill="rgb(240,220,33)" rx="2" ry="2" />
<text  x="1100.29" y="639.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord (1 samples, 0.08%)</title><rect x="1009.1" y="677" width="0.9" height="15.0" fill="rgb(249,218,20)" rx="2" ry="2" />
<text  x="1012.08" y="687.5" ></text>
</g>
<g >
<title>cling::DynamicLibraryManager::loadLibrary (1 samples, 0.08%)</title><rect x="839.0" y="869" width="0.9" height="15.0" fill="rgb(245,45,5)" rx="2" ry="2" />
<text  x="841.97" y="879.5" ></text>
</g>
<g >
<title>ROOT::Internal::TTreeReaderValueBase::ProxyReadTemplate&lt;&amp;ROOT::Detail::TBranchProxy::ReadNoParentNoBranchCountNoCollection&gt; (225 samples, 17.16%)</title><rect x="468.1" y="917" width="202.6" height="15.0" fill="rgb(247,36,40)" rx="2" ry="2" />
<text  x="471.14" y="927.5" >ROOT::Internal::TTreeReade..</text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (2 samples, 0.15%)</title><rect x="1015.4" y="725" width="1.8" height="15.0" fill="rgb(236,216,2)" rx="2" ry="2" />
<text  x="1018.39" y="735.5" ></text>
</g>
<g >
<title>llvm::InstructionCombiningPass::runOnFunction (1 samples, 0.08%)</title><rect x="203.5" y="725" width="0.9" height="15.0" fill="rgb(222,223,41)" rx="2" ry="2" />
<text  x="206.52" y="735.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDeclRefExpr (1 samples, 0.08%)</title><rect x="1084.7" y="629" width="0.9" height="15.0" fill="rgb(231,205,31)" rx="2" ry="2" />
<text  x="1087.69" y="639.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveRelocations (1 samples, 0.08%)</title><rect x="1107.2" y="869" width="0.9" height="15.0" fill="rgb(210,138,9)" rx="2" ry="2" />
<text  x="1110.19" y="879.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;clang::Decl const*, clang::CodeGen::Address, llvm::DenseMapInfo&lt;clang::Decl const*&gt;, llvm::detail::DenseMapPair&lt;clang::Decl const*, clang::CodeGen::Address&gt; &gt;, clang::Decl const*, clang::CodeGen::Address, llvm::DenseMapInfo&lt;clang::Decl const*&gt;, llvm::detail::DenseMapPair&lt;clang::Decl const*, clang::CodeGen::Address&gt; &gt;::InsertIntoBucketImpl&lt;clang::Decl const*&gt; (1 samples, 0.08%)</title><rect x="1024.4" y="853" width="0.9" height="15.0" fill="rgb(234,99,0)" rx="2" ry="2" />
<text  x="1027.39" y="863.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::createSCEV (1 samples, 0.08%)</title><rect x="1129.7" y="757" width="0.9" height="15.0" fill="rgb(222,65,3)" rx="2" ry="2" />
<text  x="1132.69" y="767.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (1 samples, 0.08%)</title><rect x="1100.0" y="677" width="0.9" height="15.0" fill="rgb(222,126,53)" rx="2" ry="2" />
<text  x="1102.99" y="687.5" ></text>
</g>
<g >
<title>clang::TemplateDeclInstantiator::VisitVarDecl (1 samples, 0.08%)</title><rect x="1084.7" y="725" width="0.9" height="15.0" fill="rgb(252,156,25)" rx="2" ry="2" />
<text  x="1087.69" y="735.5" ></text>
</g>
<g >
<title>AddReachableCodeToWorklist (2 samples, 0.15%)</title><rect x="822.8" y="629" width="1.8" height="15.0" fill="rgb(226,5,40)" rx="2" ry="2" />
<text  x="825.77" y="639.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::SCEV const*, unsigned int, llvm::DenseMapInfo&lt;llvm::SCEV const*&gt;, llvm::detail::DenseMapPair&lt;llvm::SCEV const*, unsigned int&gt; &gt;, llvm::SCEV const*, unsigned int, llvm::DenseMapInfo&lt;llvm::SCEV const*&gt;, llvm::detail::DenseMapPair&lt;llvm::SCEV const*, unsigned int&gt; &gt;::LookupBucketFor&lt;llvm::SCEV const*&gt; (1 samples, 0.08%)</title><rect x="1129.7" y="437" width="0.9" height="15.0" fill="rgb(238,105,33)" rx="2" ry="2" />
<text  x="1132.69" y="447.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformInitializer (3 samples, 0.23%)</title><rect x="1098.2" y="949" width="2.7" height="15.0" fill="rgb(251,122,39)" rx="2" ry="2" />
<text  x="1101.19" y="959.5" ></text>
</g>
<g >
<title>llvm::AttributeList::hasAttribute (1 samples, 0.08%)</title><rect x="823.7" y="565" width="0.9" height="15.0" fill="rgb(250,0,10)" rx="2" ry="2" />
<text  x="826.67" y="575.5" ></text>
</g>
<g >
<title>clang::DiagnosticIDs::getDiagnosticSeverity (1 samples, 0.08%)</title><rect x="1082.9" y="869" width="0.9" height="15.0" fill="rgb(217,120,21)" rx="2" ry="2" />
<text  x="1085.89" y="879.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.08%)</title><rect x="1088.3" y="709" width="0.9" height="15.0" fill="rgb(214,48,18)" rx="2" ry="2" />
<text  x="1091.29" y="719.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::findOrEmitSection (26 samples, 1.98%)</title><rect x="773.3" y="565" width="23.4" height="15.0" fill="rgb(236,190,3)" rx="2" ry="2" />
<text  x="776.26" y="575.5" >l..</text>
</g>
<g >
<title>cling::MetaParser::isXCommand (2 samples, 0.15%)</title><rect x="202.6" y="901" width="1.8" height="15.0" fill="rgb(233,27,1)" rx="2" ry="2" />
<text  x="205.62" y="911.5" ></text>
</g>
<g >
<title>llvm::MachineFunctionPass::runOnFunction (14 samples, 1.07%)</title><rect x="240.4" y="741" width="12.6" height="15.0" fill="rgb(209,94,9)" rx="2" ry="2" />
<text  x="243.42" y="751.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="995.6" y="757" width="0.9" height="15.0" fill="rgb(218,99,24)" rx="2" ry="2" />
<text  x="998.58" y="767.5" ></text>
</g>
<g >
<title>llvm::BasicAAResult::getModRefBehavior (1 samples, 0.08%)</title><rect x="817.4" y="597" width="0.9" height="15.0" fill="rgb(205,137,44)" rx="2" ry="2" />
<text  x="820.37" y="607.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::getMinusSCEV (1 samples, 0.08%)</title><rect x="1129.7" y="533" width="0.9" height="15.0" fill="rgb(232,189,26)" rx="2" ry="2" />
<text  x="1132.69" y="543.5" ></text>
</g>
<g >
<title>clang::Sema::WarnOnPendingNoDerefs (1 samples, 0.08%)</title><rect x="1055.0" y="805" width="0.9" height="15.0" fill="rgb(230,115,34)" rx="2" ry="2" />
<text  x="1057.99" y="815.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetTypeSourceInfo (1 samples, 0.08%)</title><rect x="1012.7" y="533" width="0.9" height="15.0" fill="rgb(253,176,44)" rx="2" ry="2" />
<text  x="1015.68" y="543.5" ></text>
</g>
<g >
<title>llvm::AttributeList::getAttribute (1 samples, 0.08%)</title><rect x="713.0" y="485" width="0.9" height="15.0" fill="rgb(206,23,53)" rx="2" ry="2" />
<text  x="715.96" y="495.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformReferenceType (1 samples, 0.08%)</title><rect x="1055.9" y="805" width="0.9" height="15.0" fill="rgb(220,135,0)" rx="2" ry="2" />
<text  x="1058.89" y="815.5" ></text>
</g>
<g >
<title>llvm::PMTopLevelManager::findAnalysisPass (1 samples, 0.08%)</title><rect x="870.5" y="581" width="0.9" height="15.0" fill="rgb(237,202,3)" rx="2" ry="2" />
<text  x="873.47" y="591.5" ></text>
</g>
<g >
<title>TBufferFile::ReadClassBuffer (1 samples, 0.08%)</title><rect x="1118.9" y="709" width="0.9" height="15.0" fill="rgb(234,168,51)" rx="2" ry="2" />
<text  x="1121.89" y="719.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1074.8" y="501" width="0.9" height="15.0" fill="rgb(249,178,42)" rx="2" ry="2" />
<text  x="1077.79" y="511.5" ></text>
</g>
<g >
<title>clang::RecursiveASTVisitor&lt;(anonymous namespace)::PointerCheckInjector&gt;::TraverseStmt (1 samples, 0.08%)</title><rect x="855.2" y="549" width="0.9" height="15.0" fill="rgb(222,100,10)" rx="2" ry="2" />
<text  x="858.17" y="559.5" ></text>
</g>
<g >
<title>llvm::orc::JITSymbolResolverAdapter::lookup (3 samples, 0.23%)</title><rect x="747.2" y="565" width="2.7" height="15.0" fill="rgb(246,77,49)" rx="2" ry="2" />
<text  x="750.16" y="575.5" ></text>
</g>
<g >
<title>llvm::MachineInstr::dropMemRefs (1 samples, 0.08%)</title><rect x="1114.4" y="565" width="0.9" height="15.0" fill="rgb(233,80,50)" rx="2" ry="2" />
<text  x="1117.39" y="575.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1147.7" y="853" width="0.9" height="15.0" fill="rgb(248,57,43)" rx="2" ry="2" />
<text  x="1150.70" y="863.5" ></text>
</g>
<g >
<title>clang::ASTReader::readTypeRecord (1 samples, 0.08%)</title><rect x="1008.2" y="805" width="0.9" height="15.0" fill="rgb(240,197,12)" rx="2" ry="2" />
<text  x="1011.18" y="815.5" ></text>
</g>
<g >
<title>llvm::MachineFunctionPass::runOnFunction (1 samples, 0.08%)</title><rect x="1119.8" y="805" width="0.9" height="15.0" fill="rgb(222,14,6)" rx="2" ry="2" />
<text  x="1122.79" y="815.5" ></text>
</g>
<g >
<title>llvm::canConstantFoldCallTo (1 samples, 0.08%)</title><rect x="827.3" y="581" width="0.9" height="15.0" fill="rgb(226,57,50)" rx="2" ry="2" />
<text  x="830.27" y="591.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="990.2" y="725" width="0.9" height="15.0" fill="rgb(208,196,51)" rx="2" ry="2" />
<text  x="993.18" y="735.5" ></text>
</g>
<g >
<title>R__unzip (105 samples, 8.01%)</title><rect x="544.6" y="821" width="94.6" height="15.0" fill="rgb(240,1,41)" rx="2" ry="2" />
<text  x="547.65" y="831.5" >R__unzip</text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl (1 samples, 0.08%)</title><rect x="1089.2" y="805" width="0.9" height="15.0" fill="rgb(229,129,4)" rx="2" ry="2" />
<text  x="1092.19" y="815.5" ></text>
</g>
<g >
<title>llvm::LPPassManager::runOnFunction (3 samples, 0.23%)</title><rect x="851.6" y="709" width="2.7" height="15.0" fill="rgb(210,111,34)" rx="2" ry="2" />
<text  x="854.57" y="719.5" ></text>
</g>
<g >
<title>llvm::InstrEmitter::EmitCopyFromReg (2 samples, 0.15%)</title><rect x="1104.5" y="581" width="1.8" height="15.0" fill="rgb(232,152,21)" rx="2" ry="2" />
<text  x="1107.49" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;void const*, void const*, std::_Identity&lt;void const*&gt;, std::less&lt;void const*&gt;, std::allocator&lt;void const*&gt; &gt;::_M_erase (1 samples, 0.08%)</title><rect x="928.1" y="549" width="0.9" height="15.0" fill="rgb(245,226,39)" rx="2" ry="2" />
<text  x="931.08" y="559.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1183.7" y="741" width="0.9" height="15.0" fill="rgb(227,4,17)" rx="2" ry="2" />
<text  x="1186.70" y="751.5" ></text>
</g>
<g >
<title>clang::Preprocessor::EvaluateDirectiveExpression (1 samples, 0.08%)</title><rect x="942.5" y="661" width="0.9" height="15.0" fill="rgb(249,45,43)" rx="2" ry="2" />
<text  x="945.48" y="671.5" ></text>
</g>
<g >
<title>cling::MetaSema::actOnLCommand (37 samples, 2.82%)</title><rect x="798.5" y="821" width="33.3" height="15.0" fill="rgb(251,0,24)" rx="2" ry="2" />
<text  x="801.47" y="831.5" >cl..</text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (5 samples, 0.38%)</title><rect x="1102.7" y="709" width="4.5" height="15.0" fill="rgb(221,139,35)" rx="2" ry="2" />
<text  x="1105.69" y="719.5" ></text>
</g>
<g >
<title>.annobin_rtld.c (6 samples, 0.46%)</title><rect x="1137.8" y="949" width="5.4" height="15.0" fill="rgb(220,186,36)" rx="2" ry="2" />
<text  x="1140.80" y="959.5" ></text>
</g>
<g >
<title>ReduceLoopStrength (3 samples, 0.23%)</title><rect x="670.7" y="949" width="2.7" height="15.0" fill="rgb(222,176,4)" rx="2" ry="2" />
<text  x="673.66" y="959.5" ></text>
</g>
<g >
<title>llvm::AttributeSetNode::get (1 samples, 0.08%)</title><rect x="1034.3" y="501" width="0.9" height="15.0" fill="rgb(241,84,42)" rx="2" ry="2" />
<text  x="1037.29" y="511.5" ></text>
</g>
<g >
<title>isCallingConvCCompatible (1 samples, 0.08%)</title><rect x="218.8" y="629" width="0.9" height="15.0" fill="rgb(234,211,51)" rx="2" ry="2" />
<text  x="221.82" y="639.5" ></text>
</g>
<g >
<title>llvm::FoldingSetBase::FindNodeOrInsertPos (1 samples, 0.08%)</title><rect x="1121.6" y="853" width="0.9" height="15.0" fill="rgb(211,159,6)" rx="2" ry="2" />
<text  x="1124.59" y="863.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.08%)</title><rect x="229.6" y="693" width="0.9" height="15.0" fill="rgb(252,90,15)" rx="2" ry="2" />
<text  x="232.62" y="703.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl (1 samples, 0.08%)</title><rect x="1012.7" y="917" width="0.9" height="15.0" fill="rgb(223,114,54)" rx="2" ry="2" />
<text  x="1015.68" y="927.5" ></text>
</g>
<g >
<title>llvm::MachineFunctionPass::runOnFunction (1 samples, 0.08%)</title><rect x="1120.7" y="789" width="0.9" height="15.0" fill="rgb(254,71,15)" rx="2" ry="2" />
<text  x="1123.69" y="799.5" ></text>
</g>
<g >
<title>clang::Sema::SubstituteExplicitTemplateArguments (1 samples, 0.08%)</title><rect x="1063.1" y="853" width="0.9" height="15.0" fill="rgb(221,122,26)" rx="2" ry="2" />
<text  x="1066.09" y="863.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1160.3" y="725" width="0.9" height="15.0" fill="rgb(251,131,53)" rx="2" ry="2" />
<text  x="1163.30" y="735.5" ></text>
</g>
<g >
<title>llvm::scc_iterator&lt;llvm::CallGraph*, llvm::GraphTraits&lt;llvm::CallGraph*&gt; &gt;::GetNextSCC (1 samples, 0.08%)</title><rect x="927.2" y="629" width="0.9" height="15.0" fill="rgb(226,78,54)" rx="2" ry="2" />
<text  x="930.18" y="639.5" ></text>
</g>
<g >
<title>TStreamerInfoActions::GenericReadAction (1 samples, 0.08%)</title><rect x="1118.9" y="645" width="0.9" height="15.0" fill="rgb(239,44,8)" rx="2" ry="2" />
<text  x="1121.89" y="655.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="34.3" y="501" width="0.9" height="15.0" fill="rgb(242,219,39)" rx="2" ry="2" />
<text  x="37.30" y="511.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.08%)</title><rect x="992.0" y="869" width="0.9" height="15.0" fill="rgb(250,7,32)" rx="2" ry="2" />
<text  x="994.98" y="879.5" ></text>
</g>
<g >
<title>__longjmp_chk (1 samples, 0.08%)</title><rect x="29.8" y="485" width="0.9" height="15.0" fill="rgb(230,192,2)" rx="2" ry="2" />
<text  x="32.80" y="495.5" ></text>
</g>
<g >
<title>TCling::LazyFunctionCreatorAutoload (1 samples, 0.08%)</title><rect x="202.6" y="549" width="0.9" height="15.0" fill="rgb(226,153,14)" rx="2" ry="2" />
<text  x="205.62" y="559.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::freePass (5 samples, 0.38%)</title><rect x="880.4" y="597" width="4.5" height="15.0" fill="rgb(207,106,17)" rx="2" ry="2" />
<text  x="883.37" y="607.5" ></text>
</g>
<g >
<title>clang::Sema::BuildQualifiedDeclarationNameExpr (1 samples, 0.08%)</title><rect x="1064.0" y="853" width="0.9" height="15.0" fill="rgb(240,214,49)" rx="2" ry="2" />
<text  x="1066.99" y="863.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (1 samples, 0.08%)</title><rect x="1118.0" y="805" width="0.9" height="15.0" fill="rgb(210,195,48)" rx="2" ry="2" />
<text  x="1120.99" y="815.5" ></text>
</g>
<g >
<title>clang::DeclContext::LoadLexicalDeclsFromExternalStorage (1 samples, 0.08%)</title><rect x="1083.8" y="853" width="0.9" height="15.0" fill="rgb(251,209,24)" rx="2" ry="2" />
<text  x="1086.79" y="863.5" ></text>
</g>
<g >
<title>TCling::Initialize (11 samples, 0.84%)</title><rect x="943.4" y="885" width="9.9" height="15.0" fill="rgb(205,94,42)" rx="2" ry="2" />
<text  x="946.38" y="895.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGBuilder::visitLandingPad (1 samples, 0.08%)</title><rect x="844.4" y="517" width="0.9" height="15.0" fill="rgb(216,24,38)" rx="2" ry="2" />
<text  x="847.37" y="527.5" ></text>
</g>
<g >
<title>cling::DeclCollector::Transform (1 samples, 0.08%)</title><rect x="855.2" y="629" width="0.9" height="15.0" fill="rgb(214,34,6)" rx="2" ry="2" />
<text  x="858.17" y="639.5" ></text>
</g>
<g >
<title>TCling::ProcessLine (175 samples, 13.35%)</title><rect x="674.3" y="917" width="157.5" height="15.0" fill="rgb(208,210,12)" rx="2" ry="2" />
<text  x="677.26" y="927.5" >TCling::ProcessLine</text>
</g>
<g >
<title>clang::ASTDeclReader::VisitFunctionDecl (1 samples, 0.08%)</title><rect x="1071.2" y="709" width="0.9" height="15.0" fill="rgb(222,86,50)" rx="2" ry="2" />
<text  x="1074.19" y="719.5" ></text>
</g>
<g >
<title>clang::Sema::SubstType (1 samples, 0.08%)</title><rect x="1064.0" y="741" width="0.9" height="15.0" fill="rgb(223,196,22)" rx="2" ry="2" />
<text  x="1066.99" y="751.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitFunctionDecl (1 samples, 0.08%)</title><rect x="1022.6" y="597" width="0.9" height="15.0" fill="rgb(211,14,20)" rx="2" ry="2" />
<text  x="1025.59" y="607.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformOffsetOfExpr (1 samples, 0.08%)</title><rect x="1098.2" y="821" width="0.9" height="15.0" fill="rgb(235,127,29)" rx="2" ry="2" />
<text  x="1101.19" y="831.5" ></text>
</g>
<g >
<title>cling::MetaParser::isXCommand (1 samples, 0.08%)</title><rect x="1110.8" y="949" width="0.9" height="15.0" fill="rgb(242,183,7)" rx="2" ry="2" />
<text  x="1113.79" y="959.5" ></text>
</g>
<g >
<title>TBufferFile::ApplySequence (1 samples, 0.08%)</title><rect x="1118.9" y="693" width="0.9" height="15.0" fill="rgb(243,143,0)" rx="2" ry="2" />
<text  x="1121.89" y="703.5" ></text>
</g>
<g >
<title>llvm::MemorySSA::verifyDomination (1 samples, 0.08%)</title><rect x="884.9" y="581" width="0.9" height="15.0" fill="rgb(210,150,37)" rx="2" ry="2" />
<text  x="887.87" y="591.5" ></text>
</g>
<g >
<title>unset_bash_input (1 samples, 0.08%)</title><rect x="14.5" y="389" width="0.9" height="15.0" fill="rgb(239,223,29)" rx="2" ry="2" />
<text  x="17.50" y="399.5" ></text>
</g>
<g >
<title>cling::Interpreter::executeTransaction (1 samples, 0.08%)</title><rect x="856.1" y="645" width="0.9" height="15.0" fill="rgb(240,92,20)" rx="2" ry="2" />
<text  x="859.07" y="655.5" ></text>
</g>
<g >
<title>clang::ASTStmtReader::VisitUnresolvedLookupExpr (1 samples, 0.08%)</title><rect x="1077.5" y="837" width="0.9" height="15.0" fill="rgb(238,134,50)" rx="2" ry="2" />
<text  x="1080.49" y="847.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::PopCleanupBlocks (1 samples, 0.08%)</title><rect x="1019.0" y="709" width="0.9" height="15.0" fill="rgb(253,130,31)" rx="2" ry="2" />
<text  x="1021.99" y="719.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentNameType (1 samples, 0.08%)</title><rect x="1097.3" y="757" width="0.9" height="15.0" fill="rgb(252,29,28)" rx="2" ry="2" />
<text  x="1100.29" y="767.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitBinaryOperatorLValue (1 samples, 0.08%)</title><rect x="1019.9" y="837" width="0.9" height="15.0" fill="rgb(242,8,38)" rx="2" ry="2" />
<text  x="1022.89" y="847.5" ></text>
</g>
<g >
<title>clang::ASTContext::getTemplateSpecializationType (1 samples, 0.08%)</title><rect x="1109.0" y="597" width="0.9" height="15.0" fill="rgb(214,186,21)" rx="2" ry="2" />
<text  x="1111.99" y="607.5" ></text>
</g>
<g >
<title>[bash] (4 samples, 0.31%)</title><rect x="36.1" y="213" width="3.6" height="15.0" fill="rgb(233,60,51)" rx="2" ry="2" />
<text  x="39.10" y="223.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.08%)</title><rect x="35.2" y="661" width="0.9" height="15.0" fill="rgb(224,16,29)" rx="2" ry="2" />
<text  x="38.20" y="671.5" ></text>
</g>
<g >
<title>[bash] (4 samples, 0.31%)</title><rect x="36.1" y="613" width="3.6" height="15.0" fill="rgb(209,226,16)" rx="2" ry="2" />
<text  x="39.10" y="623.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (21 samples, 1.60%)</title><rect x="803.9" y="693" width="18.9" height="15.0" fill="rgb(215,139,19)" rx="2" ry="2" />
<text  x="806.87" y="703.5" ></text>
</g>
<g >
<title>__libc_start_main (27 samples, 2.06%)</title><rect x="10.9" y="933" width="24.3" height="15.0" fill="rgb(244,217,6)" rx="2" ry="2" />
<text  x="13.90" y="943.5" >_..</text>
</g>
<g >
<title>_int_malloc (1 samples, 0.08%)</title><rect x="24.4" y="261" width="0.9" height="15.0" fill="rgb(252,69,54)" rx="2" ry="2" />
<text  x="27.40" y="271.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::CodeGenAndEmitDAG (1 samples, 0.08%)</title><rect x="246.7" y="693" width="0.9" height="15.0" fill="rgb(225,58,24)" rx="2" ry="2" />
<text  x="249.72" y="703.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="17.2" y="213" width="0.9" height="15.0" fill="rgb(226,2,49)" rx="2" ry="2" />
<text  x="20.20" y="223.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::createAddRecFromPHI (1 samples, 0.08%)</title><rect x="1118.0" y="597" width="0.9" height="15.0" fill="rgb(238,64,22)" rx="2" ry="2" />
<text  x="1120.99" y="607.5" ></text>
</g>
<g >
<title>_start (42 samples, 3.20%)</title><rect x="1152.2" y="949" width="37.8" height="15.0" fill="rgb(223,97,38)" rx="2" ry="2" />
<text  x="1155.20" y="959.5" >_st..</text>
</g>
<g >
<title>TCling::TCling (16 samples, 1.22%)</title><rect x="929.0" y="869" width="14.4" height="15.0" fill="rgb(207,190,23)" rx="2" ry="2" />
<text  x="931.98" y="879.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitAggExpr (1 samples, 0.08%)</title><rect x="1014.5" y="773" width="0.9" height="15.0" fill="rgb(248,196,34)" rx="2" ry="2" />
<text  x="1017.49" y="783.5" ></text>
</g>
<g >
<title>clang::CodeGeneratorImpl::HandleTranslationUnit (1 samples, 0.08%)</title><rect x="850.7" y="757" width="0.9" height="15.0" fill="rgb(208,31,22)" rx="2" ry="2" />
<text  x="853.67" y="767.5" ></text>
</g>
<g >
<title>__GI___tunables_init (1 samples, 0.08%)</title><rect x="1141.4" y="901" width="0.9" height="15.0" fill="rgb(246,64,6)" rx="2" ry="2" />
<text  x="1144.40" y="911.5" ></text>
</g>
<g >
<title>llvm::StringMapImpl::LookupBucketFor (1 samples, 0.08%)</title><rect x="746.3" y="549" width="0.9" height="15.0" fill="rgb(235,18,38)" rx="2" ry="2" />
<text  x="749.26" y="559.5" ></text>
</g>
<g >
<title>clang::CXXRecordDecl::getDestructor (1 samples, 0.08%)</title><rect x="1019.0" y="629" width="0.9" height="15.0" fill="rgb(209,81,39)" rx="2" ry="2" />
<text  x="1021.99" y="639.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="931.7" y="677" width="0.9" height="15.0" fill="rgb(205,173,46)" rx="2" ry="2" />
<text  x="934.68" y="687.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject&lt;std::shared_ptr&lt;llvm::RuntimeDyld::MemoryManager&gt; &gt;::getSymbolMaterializer(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda()#1}&gt;::_M_invoke (8 samples, 0.61%)</title><rect x="1130.6" y="949" width="7.2" height="15.0" fill="rgb(247,44,6)" rx="2" ry="2" />
<text  x="1133.59" y="959.5" ></text>
</g>
<g >
<title>DynamicPath (1 samples, 0.08%)</title><rect x="953.3" y="805" width="0.9" height="15.0" fill="rgb(228,151,9)" rx="2" ry="2" />
<text  x="956.28" y="815.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::InfoRec, llvm::DenseMapInfo&lt;llvm::BasicBlock*&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::InfoRec&gt; &gt;, llvm::BasicBlock*, llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::InfoRec, llvm::DenseMapInfo&lt;llvm::BasicBlock*&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::InfoRec&gt; &gt;::FindAndConstruct (1 samples, 0.08%)</title><rect x="684.2" y="517" width="0.9" height="15.0" fill="rgb(216,94,28)" rx="2" ry="2" />
<text  x="687.16" y="527.5" ></text>
</g>
<g >
<title>clang::ASTContext::getDeclAttrs (1 samples, 0.08%)</title><rect x="1035.2" y="501" width="0.9" height="15.0" fill="rgb(232,14,20)" rx="2" ry="2" />
<text  x="1038.19" y="511.5" ></text>
</g>
<g >
<title>clang::ASTReader::readTypeRecord (1 samples, 0.08%)</title><rect x="1010.0" y="629" width="0.9" height="15.0" fill="rgb(245,21,49)" rx="2" ry="2" />
<text  x="1012.98" y="639.5" ></text>
</g>
<g >
<title>clang::FunctionDecl::getBody (1 samples, 0.08%)</title><rect x="1111.7" y="661" width="0.9" height="15.0" fill="rgb(221,113,38)" rx="2" ry="2" />
<text  x="1114.69" y="671.5" ></text>
</g>
<g >
<title>cling::Interpreter::Interpreter (15 samples, 1.14%)</title><rect x="929.0" y="821" width="13.5" height="15.0" fill="rgb(229,69,31)" rx="2" ry="2" />
<text  x="931.98" y="831.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateArgument (1 samples, 0.08%)</title><rect x="1075.7" y="789" width="0.9" height="15.0" fill="rgb(210,20,41)" rx="2" ry="2" />
<text  x="1078.69" y="799.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="43.3" y="837" width="0.9" height="15.0" fill="rgb(231,119,18)" rx="2" ry="2" />
<text  x="46.30" y="847.5" ></text>
</g>
<g >
<title>llvm::MachineFunctionPass::runOnFunction (31 samples, 2.36%)</title><rect x="686.0" y="565" width="27.9" height="15.0" fill="rgb(251,183,14)" rx="2" ry="2" />
<text  x="688.96" y="575.5" >l..</text>
</g>
<g >
<title>llvm::MachineInstr::mayStore (1 samples, 0.08%)</title><rect x="699.5" y="533" width="0.9" height="15.0" fill="rgb(211,217,36)" rx="2" ry="2" />
<text  x="702.46" y="543.5" ></text>
</g>
<g >
<title>clang::ASTReader::FinishedDeserializing (1 samples, 0.08%)</title><rect x="1111.7" y="613" width="0.9" height="15.0" fill="rgb(224,159,38)" rx="2" ry="2" />
<text  x="1114.69" y="623.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddTemplateArgument (1 samples, 0.08%)</title><rect x="1094.6" y="597" width="0.9" height="15.0" fill="rgb(239,28,24)" rx="2" ry="2" />
<text  x="1097.59" y="607.5" ></text>
</g>
<g >
<title>llvm::FoldingSetBase::InsertNode (1 samples, 0.08%)</title><rect x="1082.0" y="885" width="0.9" height="15.0" fill="rgb(224,229,22)" rx="2" ry="2" />
<text  x="1084.99" y="895.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.08%)</title><rect x="35.2" y="933" width="0.9" height="15.0" fill="rgb(212,16,27)" rx="2" ry="2" />
<text  x="38.20" y="943.5" ></text>
</g>
<g >
<title>clang::Sema::PerformPendingInstantiations (1 samples, 0.08%)</title><rect x="1054.1" y="885" width="0.9" height="15.0" fill="rgb(230,70,13)" rx="2" ry="2" />
<text  x="1057.09" y="895.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.08%)</title><rect x="1087.4" y="821" width="0.9" height="15.0" fill="rgb(245,4,7)" rx="2" ry="2" />
<text  x="1090.39" y="831.5" ></text>
</g>
<g >
<title>cling::Interpreter::EvaluateInternal (2 samples, 0.15%)</title><rect x="212.5" y="885" width="1.8" height="15.0" fill="rgb(246,100,34)" rx="2" ry="2" />
<text  x="215.52" y="895.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddDecl (1 samples, 0.08%)</title><rect x="1094.6" y="549" width="0.9" height="15.0" fill="rgb(209,106,45)" rx="2" ry="2" />
<text  x="1097.59" y="559.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord (1 samples, 0.08%)</title><rect x="1012.7" y="597" width="0.9" height="15.0" fill="rgb(254,176,26)" rx="2" ry="2" />
<text  x="1015.68" y="607.5" ></text>
</g>
<g >
<title>TFile::Open (1 samples, 0.08%)</title><rect x="448.3" y="869" width="0.9" height="15.0" fill="rgb(214,112,43)" rx="2" ry="2" />
<text  x="451.34" y="879.5" ></text>
</g>
<g >
<title>llvm::CallBase::hasFnAttrOnCalledFunction (1 samples, 0.08%)</title><rect x="823.7" y="581" width="0.9" height="15.0" fill="rgb(206,182,26)" rx="2" ry="2" />
<text  x="826.67" y="591.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::computeExitLimitFromCond (1 samples, 0.08%)</title><rect x="1109.9" y="645" width="0.9" height="15.0" fill="rgb(251,29,2)" rx="2" ry="2" />
<text  x="1112.89" y="655.5" ></text>
</g>
<g >
<title>TTreeCache::ReadBufferNormal (1 samples, 0.08%)</title><rect x="639.2" y="821" width="0.9" height="15.0" fill="rgb(247,136,35)" rx="2" ry="2" />
<text  x="642.15" y="831.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke (5 samples, 0.38%)</title><rect x="1113.5" y="885" width="4.5" height="15.0" fill="rgb(253,173,50)" rx="2" ry="2" />
<text  x="1116.49" y="895.5" ></text>
</g>
<g >
<title>clang::Sema::ActOnEndOfTranslationUnitFragment (2 samples, 0.15%)</title><rect x="798.5" y="709" width="1.8" height="15.0" fill="rgb(236,123,24)" rx="2" ry="2" />
<text  x="801.47" y="719.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformReferenceType (1 samples, 0.08%)</title><rect x="1087.4" y="853" width="0.9" height="15.0" fill="rgb(251,99,8)" rx="2" ry="2" />
<text  x="1090.39" y="863.5" ></text>
</g>
<g >
<title>llvm::TargetPassConfig::addPass (1 samples, 0.08%)</title><rect x="675.2" y="565" width="0.9" height="15.0" fill="rgb(227,28,6)" rx="2" ry="2" />
<text  x="678.16" y="575.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.15%)</title><rect x="1186.4" y="741" width="1.8" height="15.0" fill="rgb(222,228,27)" rx="2" ry="2" />
<text  x="1189.40" y="751.5" ></text>
</g>
<g >
<title>clang::Sema::LookupConstructors (1 samples, 0.08%)</title><rect x="1059.5" y="901" width="0.9" height="15.0" fill="rgb(234,152,11)" rx="2" ry="2" />
<text  x="1062.49" y="911.5" ></text>
</g>
<g >
<title>__GI___libc_realloc (1 samples, 0.08%)</title><rect x="24.4" y="293" width="0.9" height="15.0" fill="rgb(254,131,18)" rx="2" ry="2" />
<text  x="27.40" y="303.5" ></text>
</g>
<g >
<title>ClingMemberIterInternal::DCIter::AdvanceToFirstValidDecl (1 samples, 0.08%)</title><rect x="1118.9" y="325" width="0.9" height="15.0" fill="rgb(233,158,54)" rx="2" ry="2" />
<text  x="1121.89" y="335.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitLifetimeStart (1 samples, 0.08%)</title><rect x="1015.4" y="453" width="0.9" height="15.0" fill="rgb(223,49,11)" rx="2" ry="2" />
<text  x="1018.39" y="463.5" ></text>
</g>
<g >
<title>llvm::MCObjectStreamer::EmitInstruction (1 samples, 0.08%)</title><rect x="1117.1" y="597" width="0.9" height="15.0" fill="rgb(234,190,33)" rx="2" ry="2" />
<text  x="1120.09" y="607.5" ></text>
</g>
<g >
<title>TStreamerString::Streamer (1 samples, 0.08%)</title><rect x="448.3" y="597" width="0.9" height="15.0" fill="rgb(223,209,20)" rx="2" ry="2" />
<text  x="451.34" y="607.5" ></text>
</g>
<g >
<title>llvm::PMTopLevelManager::findAnalysisPass (1 samples, 0.08%)</title><rect x="899.3" y="565" width="0.9" height="15.0" fill="rgb(244,226,50)" rx="2" ry="2" />
<text  x="902.28" y="575.5" ></text>
</g>
<g >
<title>TFileCacheRead::ReadBufferExtNormal (1 samples, 0.08%)</title><rect x="639.2" y="789" width="0.9" height="15.0" fill="rgb(228,27,12)" rx="2" ry="2" />
<text  x="642.15" y="799.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="939.8" y="693" width="0.9" height="15.0" fill="rgb(248,205,9)" rx="2" ry="2" />
<text  x="942.78" y="703.5" ></text>
</g>
<g >
<title>clang::Parser::ParseOptionalCXXScopeSpecifier (1 samples, 0.08%)</title><rect x="1098.2" y="581" width="0.9" height="15.0" fill="rgb(224,164,44)" rx="2" ry="2" />
<text  x="1101.19" y="591.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization (2 samples, 0.15%)</title><rect x="1073.0" y="773" width="1.8" height="15.0" fill="rgb(218,38,7)" rx="2" ry="2" />
<text  x="1075.99" y="783.5" ></text>
</g>
<g >
<title>[unknown] (12 samples, 0.92%)</title><rect x="960.5" y="789" width="10.8" height="15.0" fill="rgb(231,74,11)" rx="2" ry="2" />
<text  x="963.48" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (3 samples, 0.23%)</title><rect x="943.4" y="789" width="2.7" height="15.0" fill="rgb(239,2,32)" rx="2" ry="2" />
<text  x="946.38" y="799.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitFunctionDecl (2 samples, 0.15%)</title><rect x="1007.3" y="949" width="1.8" height="15.0" fill="rgb(243,94,49)" rx="2" ry="2" />
<text  x="1010.28" y="959.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_erase (1 samples, 0.08%)</title><rect x="1037.0" y="597" width="0.9" height="15.0" fill="rgb(206,79,31)" rx="2" ry="2" />
<text  x="1039.99" y="607.5" ></text>
</g>
<g >
<title>TCling::Load (1 samples, 0.08%)</title><rect x="991.1" y="917" width="0.9" height="15.0" fill="rgb(238,128,28)" rx="2" ry="2" />
<text  x="994.08" y="927.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (3 samples, 0.23%)</title><rect x="1033.4" y="629" width="2.7" height="15.0" fill="rgb(251,64,47)" rx="2" ry="2" />
<text  x="1036.39" y="639.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.08%)</title><rect x="1020.8" y="581" width="0.9" height="15.0" fill="rgb(216,48,41)" rx="2" ry="2" />
<text  x="1023.79" y="591.5" ></text>
</g>
<g >
<title>llvm::ConstantFoldTerminator (1 samples, 0.08%)</title><rect x="830.9" y="661" width="0.9" height="15.0" fill="rgb(239,175,26)" rx="2" ry="2" />
<text  x="833.87" y="671.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="24.4" y="165" width="0.9" height="15.0" fill="rgb(238,6,9)" rx="2" ry="2" />
<text  x="27.40" y="175.5" ></text>
</g>
<g >
<title>llvm::legacy::FunctionPassManagerImpl::releaseMemoryOnTheFly (1 samples, 0.08%)</title><rect x="1101.8" y="821" width="0.9" height="15.0" fill="rgb(239,154,54)" rx="2" ry="2" />
<text  x="1104.79" y="831.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallArgs (1 samples, 0.08%)</title><rect x="1014.5" y="597" width="0.9" height="15.0" fill="rgb(215,38,19)" rx="2" ry="2" />
<text  x="1017.49" y="607.5" ></text>
</g>
<g >
<title>llvm::PMTopLevelManager::findAnalysisPassInfo (1 samples, 0.08%)</title><rect x="717.5" y="533" width="0.9" height="15.0" fill="rgb(232,41,33)" rx="2" ry="2" />
<text  x="720.46" y="543.5" ></text>
</g>
<g >
<title>operator() (1 samples, 0.08%)</title><rect x="839.0" y="917" width="0.9" height="15.0" fill="rgb(218,94,33)" rx="2" ry="2" />
<text  x="841.97" y="927.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.08%)</title><rect x="1118.9" y="677" width="0.9" height="15.0" fill="rgb(216,130,42)" rx="2" ry="2" />
<text  x="1121.89" y="687.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::executeWrapper (1 samples, 0.08%)</title><rect x="1110.8" y="885" width="0.9" height="15.0" fill="rgb(243,26,15)" rx="2" ry="2" />
<text  x="1113.79" y="895.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadNestedNameSpecifierLoc (1 samples, 0.08%)</title><rect x="1012.7" y="485" width="0.9" height="15.0" fill="rgb(252,120,21)" rx="2" ry="2" />
<text  x="1015.68" y="495.5" ></text>
</g>
<g >
<title>llvm::function_ref&lt;llvm::AnalysisResultsForFn (llvm::Function&amp;)&gt;::callback_fn&lt;(anonymous namespace)::IPSCCPLegacyPass::runOnModule(llvm::Module&amp;)::{lambda(llvm::Function&amp;)#1}&gt; (1 samples, 0.08%)</title><rect x="1100.9" y="853" width="0.9" height="15.0" fill="rgb(226,92,7)" rx="2" ry="2" />
<text  x="1103.89" y="863.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization (1 samples, 0.08%)</title><rect x="1064.0" y="789" width="0.9" height="15.0" fill="rgb(207,132,51)" rx="2" ry="2" />
<text  x="1066.99" y="799.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::SelectBasicBlock (1 samples, 0.08%)</title><rect x="247.6" y="693" width="0.9" height="15.0" fill="rgb(237,226,46)" rx="2" ry="2" />
<text  x="250.62" y="703.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveRelocations (5 samples, 0.38%)</title><rect x="1113.5" y="837" width="4.5" height="15.0" fill="rgb(253,89,28)" rx="2" ry="2" />
<text  x="1116.49" y="847.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetTemplateArgumentLocInfo (1 samples, 0.08%)</title><rect x="1077.5" y="565" width="0.9" height="15.0" fill="rgb(213,67,20)" rx="2" ry="2" />
<text  x="1080.49" y="575.5" ></text>
</g>
<g >
<title>TPluginManager::LoadHandlersFromPluginDirs (1 samples, 0.08%)</title><rect x="838.1" y="885" width="0.9" height="15.0" fill="rgb(252,36,50)" rx="2" ry="2" />
<text  x="841.07" y="895.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalDefinition (2 samples, 0.15%)</title><rect x="1037.9" y="741" width="1.8" height="15.0" fill="rgb(224,139,25)" rx="2" ry="2" />
<text  x="1040.89" y="751.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::ConstructAttributeList (1 samples, 0.08%)</title><rect x="1046.9" y="805" width="0.9" height="15.0" fill="rgb(251,215,13)" rx="2" ry="2" />
<text  x="1049.89" y="815.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1050.5" y="933" width="0.9" height="15.0" fill="rgb(226,174,34)" rx="2" ry="2" />
<text  x="1053.49" y="943.5" ></text>
</g>
<g >
<title>cling::utils::platform::DLOpen (1 samples, 0.08%)</title><rect x="991.1" y="885" width="0.9" height="15.0" fill="rgb(238,37,20)" rx="2" ry="2" />
<text  x="994.08" y="895.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="20.8" y="197" width="0.9" height="15.0" fill="rgb(208,63,7)" rx="2" ry="2" />
<text  x="23.80" y="207.5" ></text>
</g>
<g >
<title>llvm::MachineBasicBlock::canFallThrough (2 samples, 0.15%)</title><rect x="690.5" y="501" width="1.8" height="15.0" fill="rgb(216,189,21)" rx="2" ry="2" />
<text  x="693.46" y="511.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveExternalSymbols (1 samples, 0.08%)</title><rect x="202.6" y="757" width="0.9" height="15.0" fill="rgb(235,229,9)" rx="2" ry="2" />
<text  x="205.62" y="767.5" ></text>
</g>
<g >
<title>llvm::FoldingSetNodeID::ComputeHash (1 samples, 0.08%)</title><rect x="1065.8" y="629" width="0.9" height="15.0" fill="rgb(238,182,27)" rx="2" ry="2" />
<text  x="1068.79" y="639.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertTypeForMem (1 samples, 0.08%)</title><rect x="1049.6" y="837" width="0.9" height="15.0" fill="rgb(210,151,7)" rx="2" ry="2" />
<text  x="1052.59" y="847.5" ></text>
</g>
<g >
<title>TList::Streamer (1 samples, 0.08%)</title><rect x="448.3" y="773" width="0.9" height="15.0" fill="rgb(245,217,6)" rx="2" ry="2" />
<text  x="451.34" y="783.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTypenameType (1 samples, 0.08%)</title><rect x="1066.7" y="949" width="0.9" height="15.0" fill="rgb(224,88,31)" rx="2" ry="2" />
<text  x="1069.69" y="959.5" ></text>
</g>
<g >
<title>llvm::DAGTypeLegalizer::run (1 samples, 0.08%)</title><rect x="1120.7" y="709" width="0.9" height="15.0" fill="rgb(213,213,12)" rx="2" ry="2" />
<text  x="1123.69" y="719.5" ></text>
</g>
<g >
<title>__mprotect (1 samples, 0.08%)</title><rect x="43.3" y="853" width="0.9" height="15.0" fill="rgb(246,191,41)" rx="2" ry="2" />
<text  x="46.30" y="863.5" ></text>
</g>
<g >
<title>cling::Interpreter::DeclareInternal (1 samples, 0.08%)</title><rect x="1108.1" y="933" width="0.9" height="15.0" fill="rgb(214,87,43)" rx="2" ry="2" />
<text  x="1111.09" y="943.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1161.2" y="725" width="0.9" height="15.0" fill="rgb(215,106,6)" rx="2" ry="2" />
<text  x="1164.20" y="735.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition (1 samples, 0.08%)</title><rect x="1017.2" y="709" width="0.9" height="15.0" fill="rgb(236,20,10)" rx="2" ry="2" />
<text  x="1020.19" y="719.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadTemplateArgument (1 samples, 0.08%)</title><rect x="1007.3" y="805" width="0.9" height="15.0" fill="rgb(247,176,44)" rx="2" ry="2" />
<text  x="1010.28" y="815.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1145.9" y="837" width="0.9" height="15.0" fill="rgb(206,60,42)" rx="2" ry="2" />
<text  x="1148.90" y="847.5" ></text>
</g>
<g >
<title>frombuf (2 samples, 0.15%)</title><rect x="658.1" y="853" width="1.8" height="15.0" fill="rgb(217,56,14)" rx="2" ry="2" />
<text  x="661.05" y="863.5" ></text>
</g>
<g >
<title>clang::Sema::BuildReferenceType (1 samples, 0.08%)</title><rect x="1060.4" y="677" width="0.9" height="15.0" fill="rgb(216,58,37)" rx="2" ry="2" />
<text  x="1063.39" y="687.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.08%)</title><rect x="806.6" y="645" width="0.9" height="15.0" fill="rgb(251,158,5)" rx="2" ry="2" />
<text  x="809.57" y="655.5" ></text>
</g>
<g >
<title>cling::MetaSema::actOnxCommand (2 samples, 0.15%)</title><rect x="202.6" y="885" width="1.8" height="15.0" fill="rgb(251,153,14)" rx="2" ry="2" />
<text  x="205.62" y="895.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::ParseInternal (1 samples, 0.08%)</title><rect x="1111.7" y="821" width="0.9" height="15.0" fill="rgb(228,58,4)" rx="2" ry="2" />
<text  x="1114.69" y="831.5" ></text>
</g>
<g >
<title>clang::Sema::PerformPendingInstantiations (1 samples, 0.08%)</title><rect x="1078.4" y="773" width="0.9" height="15.0" fill="rgb(212,121,18)" rx="2" ry="2" />
<text  x="1081.39" y="783.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (1 samples, 0.08%)</title><rect x="854.3" y="597" width="0.9" height="15.0" fill="rgb(216,162,10)" rx="2" ry="2" />
<text  x="857.27" y="607.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1183.7" y="725" width="0.9" height="15.0" fill="rgb(211,125,17)" rx="2" ry="2" />
<text  x="1186.70" y="735.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::FindExternalLexicalDecls (1 samples, 0.08%)</title><rect x="1083.8" y="837" width="0.9" height="15.0" fill="rgb(243,205,6)" rx="2" ry="2" />
<text  x="1086.79" y="847.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType (1 samples, 0.08%)</title><rect x="1075.7" y="805" width="0.9" height="15.0" fill="rgb(220,147,51)" rx="2" ry="2" />
<text  x="1078.69" y="815.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformNestedNameSpecifierLoc (1 samples, 0.08%)</title><rect x="1064.9" y="837" width="0.9" height="15.0" fill="rgb(232,202,51)" rx="2" ry="2" />
<text  x="1067.89" y="847.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitSimpleStmt (1 samples, 0.08%)</title><rect x="1014.5" y="885" width="0.9" height="15.0" fill="rgb(207,142,33)" rx="2" ry="2" />
<text  x="1017.49" y="895.5" ></text>
</g>
<g >
<title>llvm::LPPassManager::runOnFunction (1 samples, 0.08%)</title><rect x="829.1" y="661" width="0.9" height="15.0" fill="rgb(244,139,13)" rx="2" ry="2" />
<text  x="832.07" y="671.5" ></text>
</g>
<g >
<title>inflate (105 samples, 8.01%)</title><rect x="544.6" y="789" width="94.6" height="15.0" fill="rgb(219,45,31)" rx="2" ry="2" />
<text  x="547.65" y="799.5" >inflate</text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;llvm::orc::SymbolStringPool, std::allocator&lt;llvm::orc::SymbolStringPool&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (1 samples, 0.08%)</title><rect x="858.8" y="741" width="0.9" height="15.0" fill="rgb(245,143,22)" rx="2" ry="2" />
<text  x="861.77" y="751.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.08%)</title><rect x="241.3" y="629" width="0.9" height="15.0" fill="rgb(250,102,16)" rx="2" ry="2" />
<text  x="244.32" y="639.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.08%)</title><rect x="1001.9" y="581" width="0.9" height="15.0" fill="rgb(216,136,53)" rx="2" ry="2" />
<text  x="1004.88" y="591.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformReturnStmt (1 samples, 0.08%)</title><rect x="1081.1" y="837" width="0.9" height="15.0" fill="rgb(248,9,19)" rx="2" ry="2" />
<text  x="1084.09" y="847.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::SmallDenseMap&lt;void const*, llvm::ImmutablePass*, 8u, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::ImmutablePass*&gt; &gt;, void const*, llvm::ImmutablePass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::ImmutablePass*&gt; &gt;::LookupBucketFor&lt;void const*&gt; (1 samples, 0.08%)</title><rect x="253.9" y="693" width="0.9" height="15.0" fill="rgb(237,27,34)" rx="2" ry="2" />
<text  x="256.92" y="703.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::GenerateCode (1 samples, 0.08%)</title><rect x="1045.1" y="821" width="0.9" height="15.0" fill="rgb(239,19,33)" rx="2" ry="2" />
<text  x="1048.09" y="831.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadExpr (1 samples, 0.08%)</title><rect x="1051.4" y="533" width="0.9" height="15.0" fill="rgb(224,141,44)" rx="2" ry="2" />
<text  x="1054.39" y="543.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.08%)</title><rect x="35.2" y="773" width="0.9" height="15.0" fill="rgb(238,1,27)" rx="2" ry="2" />
<text  x="38.20" y="783.5" ></text>
</g>
<g >
<title>llvm::AAResults::getModRefInfo (1 samples, 0.08%)</title><rect x="817.4" y="629" width="0.9" height="15.0" fill="rgb(215,41,12)" rx="2" ry="2" />
<text  x="820.37" y="639.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCXXMemberOrOperatorCall (1 samples, 0.08%)</title><rect x="1090.1" y="805" width="0.9" height="15.0" fill="rgb(248,226,39)" rx="2" ry="2" />
<text  x="1093.09" y="815.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="946.1" y="725" width="0.9" height="15.0" fill="rgb(241,98,3)" rx="2" ry="2" />
<text  x="949.08" y="735.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.08%)</title><rect x="1089.2" y="901" width="0.9" height="15.0" fill="rgb(231,3,23)" rx="2" ry="2" />
<text  x="1092.19" y="911.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (22 samples, 1.68%)</title><rect x="238.6" y="757" width="19.8" height="15.0" fill="rgb(227,65,40)" rx="2" ry="2" />
<text  x="241.62" y="767.5" ></text>
</g>
<g >
<title>llvm::legacy::FunctionPassManager::run (1 samples, 0.08%)</title><rect x="831.8" y="661" width="0.9" height="15.0" fill="rgb(245,100,48)" rx="2" ry="2" />
<text  x="834.77" y="671.5" ></text>
</g>
<g >
<title>llvm::FoldingSet&lt;clang::RValueReferenceType&gt;::NodeEquals (1 samples, 0.08%)</title><rect x="1060.4" y="629" width="0.9" height="15.0" fill="rgb(216,205,13)" rx="2" ry="2" />
<text  x="1063.39" y="639.5" ></text>
</g>
<g >
<title>TFile::ReadStreamerInfo (1 samples, 0.08%)</title><rect x="448.3" y="821" width="0.9" height="15.0" fill="rgb(243,132,8)" rx="2" ry="2" />
<text  x="451.34" y="831.5" ></text>
</g>
<g >
<title>TClingDataMemberInfo::TClingDataMemberInfo (1 samples, 0.08%)</title><rect x="1118.9" y="389" width="0.9" height="15.0" fill="rgb(221,226,32)" rx="2" ry="2" />
<text  x="1121.89" y="399.5" ></text>
</g>
<g >
<title>SubstDefaultTemplateArgument (1 samples, 0.08%)</title><rect x="673.4" y="949" width="0.9" height="15.0" fill="rgb(240,104,23)" rx="2" ry="2" />
<text  x="676.36" y="959.5" ></text>
</g>
<g >
<title>llvm::legacy::FunctionPassManagerImpl::run (2 samples, 0.15%)</title><rect x="214.3" y="757" width="1.8" height="15.0" fill="rgb(253,193,47)" rx="2" ry="2" />
<text  x="217.32" y="767.5" ></text>
</g>
<g >
<title>ls (5 samples, 0.38%)</title><rect x="39.7" y="965" width="4.5" height="15.0" fill="rgb(227,179,28)" rx="2" ry="2" />
<text  x="42.70" y="975.5" ></text>
</g>
<g >
<title>llvm::Value::getValueName (2 samples, 0.15%)</title><rect x="924.5" y="581" width="1.8" height="15.0" fill="rgb(235,68,32)" rx="2" ry="2" />
<text  x="927.48" y="591.5" ></text>
</g>
<g >
<title>llvm::runIPSCCP (1 samples, 0.08%)</title><rect x="1101.8" y="853" width="0.9" height="15.0" fill="rgb(239,70,37)" rx="2" ry="2" />
<text  x="1104.79" y="863.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformReferenceType (1 samples, 0.08%)</title><rect x="1060.4" y="693" width="0.9" height="15.0" fill="rgb(247,120,8)" rx="2" ry="2" />
<text  x="1063.39" y="703.5" ></text>
</g>
<g >
<title>llvm::orc::LambdaSymbolResolver&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt; const&amp;)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}&gt;::lookup (5 samples, 0.38%)</title><rect x="1113.5" y="789" width="4.5" height="15.0" fill="rgb(240,1,2)" rx="2" ry="2" />
<text  x="1116.49" y="799.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertTypeForMem (1 samples, 0.08%)</title><rect x="1049.6" y="581" width="0.9" height="15.0" fill="rgb(209,136,12)" rx="2" ry="2" />
<text  x="1052.59" y="591.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (1 samples, 0.08%)</title><rect x="202.6" y="293" width="0.9" height="15.0" fill="rgb(222,94,37)" rx="2" ry="2" />
<text  x="205.62" y="303.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1148.6" y="805" width="0.9" height="15.0" fill="rgb(217,218,46)" rx="2" ry="2" />
<text  x="1151.60" y="815.5" ></text>
</g>
<g >
<title>llvm::MachineFunctionPass::runOnFunction (3 samples, 0.23%)</title><rect x="1127.0" y="853" width="2.7" height="15.0" fill="rgb(230,16,25)" rx="2" ry="2" />
<text  x="1129.99" y="863.5" ></text>
</g>
<g >
<title>llvm::MachineLoopInfo::runOnMachineFunction (4 samples, 0.31%)</title><rect x="700.4" y="549" width="3.6" height="15.0" fill="rgb(251,57,46)" rx="2" ry="2" />
<text  x="703.36" y="559.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::runStaticInitializersOnce (35 samples, 2.67%)</title><rect x="800.3" y="725" width="31.5" height="15.0" fill="rgb(234,107,28)" rx="2" ry="2" />
<text  x="803.27" y="735.5" >cl..</text>
</g>
<g >
<title>llvm::PMTopLevelManager::findAnalysisUsage (1 samples, 0.08%)</title><rect x="721.1" y="549" width="0.9" height="15.0" fill="rgb(240,169,34)" rx="2" ry="2" />
<text  x="724.06" y="559.5" ></text>
</g>
<g >
<title>_dl_protect_relro (1 samples, 0.08%)</title><rect x="43.3" y="869" width="0.9" height="15.0" fill="rgb(220,7,21)" rx="2" ry="2" />
<text  x="46.30" y="879.5" ></text>
</g>
<g >
<title>llvm::Function::addAttributes (1 samples, 0.08%)</title><rect x="1037.0" y="661" width="0.9" height="15.0" fill="rgb(253,74,50)" rx="2" ry="2" />
<text  x="1039.99" y="671.5" ></text>
</g>
<g >
<title>llvm::AttrBuilder::AttrBuilder (1 samples, 0.08%)</title><rect x="1043.3" y="757" width="0.9" height="15.0" fill="rgb(234,124,49)" rx="2" ry="2" />
<text  x="1046.29" y="767.5" ></text>
</g>
<g >
<title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::CalculateFromScratch (1 samples, 0.08%)</title><rect x="851.6" y="613" width="0.9" height="15.0" fill="rgb(207,69,3)" rx="2" ry="2" />
<text  x="854.57" y="623.5" ></text>
</g>
<g >
<title>TString::EndsWith (1 samples, 0.08%)</title><rect x="952.4" y="837" width="0.9" height="15.0" fill="rgb(215,147,50)" rx="2" ry="2" />
<text  x="955.38" y="847.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnModule (1 samples, 0.08%)</title><rect x="1110.8" y="693" width="0.9" height="15.0" fill="rgb(235,180,9)" rx="2" ry="2" />
<text  x="1113.79" y="703.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::runStaticInitializersOnce (1 samples, 0.08%)</title><rect x="203.5" y="773" width="0.9" height="15.0" fill="rgb(209,73,41)" rx="2" ry="2" />
<text  x="206.52" y="783.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::SetFunctionAttributes (1 samples, 0.08%)</title><rect x="1019.9" y="661" width="0.9" height="15.0" fill="rgb(221,51,20)" rx="2" ry="2" />
<text  x="1022.89" y="671.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.08%)</title><rect x="1024.4" y="789" width="0.9" height="15.0" fill="rgb(227,129,24)" rx="2" ry="2" />
<text  x="1027.39" y="799.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::Compile (27 samples, 2.06%)</title><rect x="214.3" y="853" width="24.3" height="15.0" fill="rgb(222,100,51)" rx="2" ry="2" />
<text  x="217.32" y="863.5" >c..</text>
</g>
<g >
<title>__GI__dl_catch_exception (2 samples, 0.15%)</title><rect x="989.3" y="789" width="1.8" height="15.0" fill="rgb(239,131,17)" rx="2" ry="2" />
<text  x="992.28" y="799.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::Compile (37 samples, 2.82%)</title><rect x="798.5" y="773" width="33.3" height="15.0" fill="rgb(238,185,35)" rx="2" ry="2" />
<text  x="801.47" y="783.5" >cl..</text>
</g>
<g >
<title>clang::Parser::ParseTopLevelDecl (1 samples, 0.08%)</title><rect x="1111.7" y="805" width="0.9" height="15.0" fill="rgb(238,196,6)" rx="2" ry="2" />
<text  x="1114.69" y="815.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.23%)</title><rect x="31.6" y="501" width="2.7" height="15.0" fill="rgb(240,98,48)" rx="2" ry="2" />
<text  x="34.60" y="511.5" ></text>
</g>
<g >
<title>do_lookup_x (2 samples, 0.15%)</title><rect x="41.5" y="853" width="1.8" height="15.0" fill="rgb(213,116,10)" rx="2" ry="2" />
<text  x="44.50" y="863.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.23%)</title><rect x="37.0" y="69" width="2.7" height="15.0" fill="rgb(235,135,29)" rx="2" ry="2" />
<text  x="40.00" y="79.5" ></text>
</g>
<g >
<title>llvm::JumpThreadingPass::ComputeValueKnownInPredecessorsImpl (2 samples, 0.15%)</title><rect x="815.6" y="613" width="1.8" height="15.0" fill="rgb(216,176,34)" rx="2" ry="2" />
<text  x="818.57" y="623.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::GenerateCode (8 samples, 0.61%)</title><rect x="1018.1" y="933" width="7.2" height="15.0" fill="rgb(226,196,7)" rx="2" ry="2" />
<text  x="1021.09" y="943.5" ></text>
</g>
<g >
<title>llvm::AliasSet::aliasesUnknownInst (1 samples, 0.08%)</title><rect x="230.5" y="677" width="0.9" height="15.0" fill="rgb(246,178,10)" rx="2" ry="2" />
<text  x="233.52" y="687.5" ></text>
</g>
<g >
<title>clang::Sema::CheckBaseSpecifier (1 samples, 0.08%)</title><rect x="1072.1" y="917" width="0.9" height="15.0" fill="rgb(224,173,41)" rx="2" ry="2" />
<text  x="1075.09" y="927.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization (1 samples, 0.08%)</title><rect x="1085.6" y="837" width="0.9" height="15.0" fill="rgb(223,91,33)" rx="2" ry="2" />
<text  x="1088.59" y="847.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization (1 samples, 0.08%)</title><rect x="1092.8" y="869" width="0.9" height="15.0" fill="rgb(234,43,38)" rx="2" ry="2" />
<text  x="1095.79" y="879.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.15%)</title><rect x="1144.1" y="885" width="1.8" height="15.0" fill="rgb(208,166,2)" rx="2" ry="2" />
<text  x="1147.10" y="895.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl (1 samples, 0.08%)</title><rect x="1011.8" y="645" width="0.9" height="15.0" fill="rgb(224,177,25)" rx="2" ry="2" />
<text  x="1014.78" y="655.5" ></text>
</g>
<g >
<title>clang::ASTReader::readTypeRecord (1 samples, 0.08%)</title><rect x="1007.3" y="837" width="0.9" height="15.0" fill="rgb(236,7,43)" rx="2" ry="2" />
<text  x="1010.28" y="847.5" ></text>
</g>
<g >
<title>llvm::AsmPrinter::EmitFunctionBody (2 samples, 0.15%)</title><rect x="249.4" y="709" width="1.8" height="15.0" fill="rgb(234,35,24)" rx="2" ry="2" />
<text  x="252.42" y="719.5" ></text>
</g>
<g >
<title>HandleInterpreterException (7 samples, 0.53%)</title><rect x="831.8" y="869" width="6.3" height="15.0" fill="rgb(243,83,3)" rx="2" ry="2" />
<text  x="834.77" y="879.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="974.9" y="741" width="0.9" height="15.0" fill="rgb(251,173,10)" rx="2" ry="2" />
<text  x="977.88" y="751.5" ></text>
</g>
<g >
<title>simplifyFunctionCFG (1 samples, 0.08%)</title><rect x="834.5" y="645" width="0.9" height="15.0" fill="rgb(210,93,15)" rx="2" ry="2" />
<text  x="837.47" y="655.5" ></text>
</g>
<g >
<title>TCling::LazyFunctionCreatorAutoload (1 samples, 0.08%)</title><rect x="839.0" y="949" width="0.9" height="15.0" fill="rgb(212,198,34)" rx="2" ry="2" />
<text  x="841.97" y="959.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCompoundStmtWithoutScope (1 samples, 0.08%)</title><rect x="1015.4" y="581" width="0.9" height="15.0" fill="rgb(236,44,35)" rx="2" ry="2" />
<text  x="1018.39" y="591.5" ></text>
</g>
<g >
<title>clang::TemplateDeclInstantiator::VisitFieldDecl (1 samples, 0.08%)</title><rect x="1092.8" y="949" width="0.9" height="15.0" fill="rgb(230,194,20)" rx="2" ry="2" />
<text  x="1095.79" y="959.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::CodeGenAndEmitDAG (2 samples, 0.15%)</title><rect x="840.8" y="549" width="1.8" height="15.0" fill="rgb(216,189,29)" rx="2" ry="2" />
<text  x="843.77" y="559.5" ></text>
</g>
<g >
<title>clang::Sema::SubstExpr (1 samples, 0.08%)</title><rect x="1064.0" y="917" width="0.9" height="15.0" fill="rgb(230,172,9)" rx="2" ry="2" />
<text  x="1066.99" y="927.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnModule (1 samples, 0.08%)</title><rect x="1120.7" y="821" width="0.9" height="15.0" fill="rgb(219,102,13)" rx="2" ry="2" />
<text  x="1123.69" y="831.5" ></text>
</g>
<g >
<title>llvm::ConstantFoldLoadFromConstPtr (1 samples, 0.08%)</title><rect x="857.0" y="581" width="0.9" height="15.0" fill="rgb(219,178,39)" rx="2" ry="2" />
<text  x="859.97" y="591.5" ></text>
</g>
<g >
<title>clang::Decl::getASTContext (1 samples, 0.08%)</title><rect x="857.9" y="757" width="0.9" height="15.0" fill="rgb(220,140,43)" rx="2" ry="2" />
<text  x="860.87" y="767.5" ></text>
</g>
<g >
<title>clang::ASTReader::readTypeRecord (1 samples, 0.08%)</title><rect x="1010.9" y="821" width="0.9" height="15.0" fill="rgb(212,102,8)" rx="2" ry="2" />
<text  x="1013.88" y="831.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::computeExitLimit (1 samples, 0.08%)</title><rect x="1109.9" y="661" width="0.9" height="15.0" fill="rgb(215,198,9)" rx="2" ry="2" />
<text  x="1112.89" y="671.5" ></text>
</g>
<g >
<title>llvm::formLCSSA (1 samples, 0.08%)</title><rect x="830.0" y="629" width="0.9" height="15.0" fill="rgb(216,208,27)" rx="2" ry="2" />
<text  x="832.97" y="639.5" ></text>
</g>
<g >
<title>_IO_new_popen (4 samples, 0.31%)</title><rect x="929.0" y="741" width="3.6" height="15.0" fill="rgb(232,120,36)" rx="2" ry="2" />
<text  x="931.98" y="751.5" ></text>
</g>
<g >
<title>TClass::CallShowMembers (1 samples, 0.08%)</title><rect x="447.4" y="693" width="0.9" height="15.0" fill="rgb(205,29,25)" rx="2" ry="2" />
<text  x="450.44" y="703.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCall (1 samples, 0.08%)</title><rect x="1090.1" y="789" width="0.9" height="15.0" fill="rgb(238,61,42)" rx="2" ry="2" />
<text  x="1093.09" y="799.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitStmt (7 samples, 0.53%)</title><rect x="1018.1" y="885" width="6.3" height="15.0" fill="rgb(232,1,46)" rx="2" ry="2" />
<text  x="1021.09" y="895.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddTemplateArgument (1 samples, 0.08%)</title><rect x="1058.6" y="565" width="0.9" height="15.0" fill="rgb(217,17,54)" rx="2" ry="2" />
<text  x="1061.59" y="575.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnModule (3 samples, 0.23%)</title><rect x="1127.0" y="885" width="2.7" height="15.0" fill="rgb(212,181,49)" rx="2" ry="2" />
<text  x="1129.99" y="895.5" ></text>
</g>
<g >
<title>clang::Sema::PerformPendingInstantiations (1 samples, 0.08%)</title><rect x="1054.1" y="853" width="0.9" height="15.0" fill="rgb(239,10,33)" rx="2" ry="2" />
<text  x="1057.09" y="863.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.08%)</title><rect x="696.8" y="533" width="0.9" height="15.0" fill="rgb(243,37,13)" rx="2" ry="2" />
<text  x="699.76" y="543.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::arrangeLLVMFunctionInfo (1 samples, 0.08%)</title><rect x="1013.6" y="789" width="0.9" height="15.0" fill="rgb(212,132,50)" rx="2" ry="2" />
<text  x="1016.59" y="799.5" ></text>
</g>
<g >
<title>execute_command_internal (4 samples, 0.31%)</title><rect x="36.1" y="757" width="3.6" height="15.0" fill="rgb(206,133,2)" rx="2" ry="2" />
<text  x="39.10" y="767.5" ></text>
</g>
<g >
<title>[bash] (5 samples, 0.38%)</title><rect x="10.9" y="517" width="4.5" height="15.0" fill="rgb(253,226,47)" rx="2" ry="2" />
<text  x="13.90" y="527.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTSIInObjectScope (1 samples, 0.08%)</title><rect x="1065.8" y="837" width="0.9" height="15.0" fill="rgb(205,191,27)" rx="2" ry="2" />
<text  x="1068.79" y="847.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke (1 samples, 0.08%)</title><rect x="1120.7" y="869" width="0.9" height="15.0" fill="rgb(218,5,4)" rx="2" ry="2" />
<text  x="1123.69" y="879.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitNonTypeTemplateParmDecl (1 samples, 0.08%)</title><rect x="1010.0" y="917" width="0.9" height="15.0" fill="rgb(213,217,4)" rx="2" ry="2" />
<text  x="1012.98" y="927.5" ></text>
</g>
<g >
<title>llvm::TargetLibraryInfoImpl::getLibFunc (1 samples, 0.08%)</title><rect x="828.2" y="581" width="0.9" height="15.0" fill="rgb(213,225,32)" rx="2" ry="2" />
<text  x="831.17" y="591.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="17.2" y="181" width="0.9" height="15.0" fill="rgb(231,162,33)" rx="2" ry="2" />
<text  x="20.20" y="191.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::SelectBasicBlock (1 samples, 0.08%)</title><rect x="1119.8" y="757" width="0.9" height="15.0" fill="rgb(226,11,16)" rx="2" ry="2" />
<text  x="1122.79" y="767.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.08%)</title><rect x="1015.4" y="405" width="0.9" height="15.0" fill="rgb(227,85,20)" rx="2" ry="2" />
<text  x="1018.39" y="415.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::FindExternalVisibleDeclsByName (1 samples, 0.08%)</title><rect x="1071.2" y="885" width="0.9" height="15.0" fill="rgb(242,102,24)" rx="2" ry="2" />
<text  x="1074.19" y="895.5" ></text>
</g>
<g >
<title>llvm::FortifiedLibCallSimplifier::optimizeCall (2 samples, 0.15%)</title><rect x="812.0" y="565" width="1.8" height="15.0" fill="rgb(221,127,22)" rx="2" ry="2" />
<text  x="814.97" y="575.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTemplateIdType (1 samples, 0.08%)</title><rect x="1097.3" y="693" width="0.9" height="15.0" fill="rgb(220,3,20)" rx="2" ry="2" />
<text  x="1100.29" y="703.5" ></text>
</g>
<g >
<title>llvm::AttrBuilder::AttrBuilder (1 samples, 0.08%)</title><rect x="1036.1" y="597" width="0.9" height="15.0" fill="rgb(253,160,4)" rx="2" ry="2" />
<text  x="1039.09" y="607.5" ></text>
</g>
<g >
<title>clang::Parser::ParseTopLevelDecl (2 samples, 0.15%)</title><rect x="798.5" y="741" width="1.8" height="15.0" fill="rgb(207,154,41)" rx="2" ry="2" />
<text  x="801.47" y="751.5" ></text>
</g>
<g >
<title>execute_command (27 samples, 2.06%)</title><rect x="10.9" y="885" width="24.3" height="15.0" fill="rgb(218,167,18)" rx="2" ry="2" />
<text  x="13.90" y="895.5" >e..</text>
</g>
<g >
<title>__nptl_set_robust (1 samples, 0.08%)</title><rect x="939.8" y="725" width="0.9" height="15.0" fill="rgb(236,160,10)" rx="2" ry="2" />
<text  x="942.78" y="735.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::removeDeadPasses (1 samples, 0.08%)</title><rect x="253.0" y="741" width="0.9" height="15.0" fill="rgb(234,49,1)" rx="2" ry="2" />
<text  x="256.02" y="751.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass (1 samples, 0.08%)</title><rect x="1085.6" y="821" width="0.9" height="15.0" fill="rgb(224,46,27)" rx="2" ry="2" />
<text  x="1088.59" y="831.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitAggExpr (1 samples, 0.08%)</title><rect x="1090.1" y="917" width="0.9" height="15.0" fill="rgb(208,216,1)" rx="2" ry="2" />
<text  x="1093.09" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (2 samples, 0.15%)</title><rect x="956.0" y="789" width="1.8" height="15.0" fill="rgb(239,49,23)" rx="2" ry="2" />
<text  x="958.98" y="799.5" ></text>
</g>
<g >
<title>TApplication::ProcessLine (76 samples, 5.80%)</title><rect x="860.6" y="917" width="68.4" height="15.0" fill="rgb(235,175,28)" rx="2" ry="2" />
<text  x="863.57" y="927.5" >TApplic..</text>
</g>
<g >
<title>llvm::AsmPrinter::EmitFunctionBody (1 samples, 0.08%)</title><rect x="710.3" y="533" width="0.9" height="15.0" fill="rgb(254,56,32)" rx="2" ry="2" />
<text  x="713.26" y="543.5" ></text>
</g>
<g >
<title>llvm::isAllocLikeFn (1 samples, 0.08%)</title><rect x="215.2" y="709" width="0.9" height="15.0" fill="rgb(224,41,0)" rx="2" ry="2" />
<text  x="218.22" y="719.5" ></text>
</g>
<g >
<title>llvm::object::ELFFile&lt;llvm::object::ELFType&lt;(llvm::support::endianness)1, true&gt; &gt;::getSection (1 samples, 0.08%)</title><rect x="785.0" y="501" width="0.9" height="15.0" fill="rgb(227,225,19)" rx="2" ry="2" />
<text  x="787.97" y="511.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadNestedNameSpecifier (1 samples, 0.08%)</title><rect x="1010.0" y="837" width="0.9" height="15.0" fill="rgb(243,191,11)" rx="2" ry="2" />
<text  x="1012.98" y="847.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::getInvokeDestImpl (1 samples, 0.08%)</title><rect x="1090.1" y="773" width="0.9" height="15.0" fill="rgb(242,88,4)" rx="2" ry="2" />
<text  x="1093.09" y="783.5" ></text>
</g>
<g >
<title>llvm::StringMapImpl::FindKey (1 samples, 0.08%)</title><rect x="796.7" y="565" width="0.9" height="15.0" fill="rgb(213,45,12)" rx="2" ry="2" />
<text  x="799.67" y="575.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCompoundStmtWithoutScope (1 samples, 0.08%)</title><rect x="1019.0" y="805" width="0.9" height="15.0" fill="rgb(249,14,4)" rx="2" ry="2" />
<text  x="1021.99" y="815.5" ></text>
</g>
<g >
<title>llvm::ScheduleDAGSDNodes::EmitSchedule (3 samples, 0.23%)</title><rect x="1113.5" y="613" width="2.7" height="15.0" fill="rgb(246,112,32)" rx="2" ry="2" />
<text  x="1116.49" y="623.5" ></text>
</g>
<g >
<title>llvm::TargetPassConfig::addMachinePasses (1 samples, 0.08%)</title><rect x="675.2" y="581" width="0.9" height="15.0" fill="rgb(210,44,30)" rx="2" ry="2" />
<text  x="678.16" y="591.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadCXXBaseSpecifier (1 samples, 0.08%)</title><rect x="1066.7" y="789" width="0.9" height="15.0" fill="rgb(241,62,1)" rx="2" ry="2" />
<text  x="1069.69" y="799.5" ></text>
</g>
<g >
<title>__GI___libc_sigaction (2 samples, 0.15%)</title><rect x="1186.4" y="789" width="1.8" height="15.0" fill="rgb(229,66,23)" rx="2" ry="2" />
<text  x="1189.40" y="799.5" ></text>
</g>
<g >
<title>make_child (1 samples, 0.08%)</title><rect x="35.2" y="197" width="0.9" height="15.0" fill="rgb(228,194,54)" rx="2" ry="2" />
<text  x="38.20" y="207.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::GetOrCreateLLVMFunction (2 samples, 0.15%)</title><rect x="1046.9" y="853" width="1.8" height="15.0" fill="rgb(242,220,21)" rx="2" ry="2" />
<text  x="1049.89" y="863.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (1 samples, 0.08%)</title><rect x="991.1" y="821" width="0.9" height="15.0" fill="rgb(241,2,2)" rx="2" ry="2" />
<text  x="994.08" y="831.5" ></text>
</g>
<g >
<title>clang::RecursiveASTVisitor&lt;(anonymous namespace)::PointerCheckInjector&gt;::TraverseFunctionHelper (1 samples, 0.08%)</title><rect x="855.2" y="565" width="0.9" height="15.0" fill="rgb(236,177,0)" rx="2" ry="2" />
<text  x="858.17" y="575.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType (1 samples, 0.08%)</title><rect x="1081.1" y="661" width="0.9" height="15.0" fill="rgb(213,56,4)" rx="2" ry="2" />
<text  x="1084.09" y="671.5" ></text>
</g>
<g >
<title>llvm::hash_combine&lt;llvm::Instruction::BinaryOps, llvm::Value*, llvm::Value*&gt; (1 samples, 0.08%)</title><rect x="807.5" y="645" width="0.9" height="15.0" fill="rgb(247,205,35)" rx="2" ry="2" />
<text  x="810.47" y="655.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit (1 samples, 0.08%)</title><rect x="1009.1" y="581" width="0.9" height="15.0" fill="rgb(245,41,52)" rx="2" ry="2" />
<text  x="1012.08" y="591.5" ></text>
</g>
<g >
<title>cling::MetaParser::isXCommand (1 samples, 0.08%)</title><rect x="838.1" y="725" width="0.9" height="15.0" fill="rgb(248,132,8)" rx="2" ry="2" />
<text  x="841.07" y="735.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExprs (1 samples, 0.08%)</title><rect x="1080.2" y="725" width="0.9" height="15.0" fill="rgb(224,121,14)" rx="2" ry="2" />
<text  x="1083.19" y="735.5" ></text>
</g>
<g >
<title>llvm::LivePhysRegs::stepBackward (1 samples, 0.08%)</title><rect x="693.2" y="549" width="0.9" height="15.0" fill="rgb(249,109,40)" rx="2" ry="2" />
<text  x="696.16" y="559.5" ></text>
</g>
<g >
<title>clang::Sema::PopExpressionEvaluationContext (1 samples, 0.08%)</title><rect x="1055.0" y="821" width="0.9" height="15.0" fill="rgb(220,11,38)" rx="2" ry="2" />
<text  x="1057.99" y="831.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (3 samples, 0.23%)</title><rect x="851.6" y="741" width="2.7" height="15.0" fill="rgb(221,73,20)" rx="2" ry="2" />
<text  x="854.57" y="751.5" ></text>
</g>
<g >
<title>adler32_z (10 samples, 0.76%)</title><rect x="630.2" y="773" width="9.0" height="15.0" fill="rgb(225,154,54)" rx="2" ry="2" />
<text  x="633.15" y="783.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.08%)</title><rect x="1081.1" y="805" width="0.9" height="15.0" fill="rgb(213,38,38)" rx="2" ry="2" />
<text  x="1084.09" y="815.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddTemplateArgument (1 samples, 0.08%)</title><rect x="1072.1" y="533" width="0.9" height="15.0" fill="rgb(241,183,47)" rx="2" ry="2" />
<text  x="1075.09" y="543.5" ></text>
</g>
<g >
<title>llvm::MCELFStreamer::EmitInstToData (2 samples, 0.15%)</title><rect x="249.4" y="629" width="1.8" height="15.0" fill="rgb(219,26,35)" rx="2" ry="2" />
<text  x="252.42" y="639.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.15%)</title><rect x="938.0" y="661" width="1.8" height="15.0" fill="rgb(245,190,12)" rx="2" ry="2" />
<text  x="940.98" y="671.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.23%)</title><rect x="19.0" y="229" width="2.7" height="15.0" fill="rgb(237,154,27)" rx="2" ry="2" />
<text  x="22.00" y="239.5" ></text>
</g>
<g >
<title>make_child (5 samples, 0.38%)</title><rect x="18.1" y="309" width="4.5" height="15.0" fill="rgb(217,45,47)" rx="2" ry="2" />
<text  x="21.10" y="319.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl (1 samples, 0.08%)</title><rect x="448.3" y="277" width="0.9" height="15.0" fill="rgb(222,103,19)" rx="2" ry="2" />
<text  x="451.34" y="287.5" ></text>
</g>
<g >
<title>execute_command_internal (10 samples, 0.76%)</title><rect x="1152.2" y="837" width="9.0" height="15.0" fill="rgb(210,138,44)" rx="2" ry="2" />
<text  x="1155.20" y="847.5" ></text>
</g>
<g >
<title>llvm::MachineFunctionPass::runOnFunction (1 samples, 0.08%)</title><rect x="449.2" y="773" width="0.9" height="15.0" fill="rgb(254,186,5)" rx="2" ry="2" />
<text  x="452.24" y="783.5" ></text>
</g>
<g >
<title>execute_command_internal (5 samples, 0.38%)</title><rect x="10.9" y="677" width="4.5" height="15.0" fill="rgb(217,64,0)" rx="2" ry="2" />
<text  x="13.90" y="687.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallArg (1 samples, 0.08%)</title><rect x="1014.5" y="581" width="0.9" height="15.0" fill="rgb(209,169,38)" rx="2" ry="2" />
<text  x="1017.49" y="591.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.08%)</title><rect x="805.7" y="565" width="0.9" height="15.0" fill="rgb(248,205,46)" rx="2" ry="2" />
<text  x="808.67" y="575.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadTemplateArgument (1 samples, 0.08%)</title><rect x="1010.0" y="773" width="0.9" height="15.0" fill="rgb(228,187,34)" rx="2" ry="2" />
<text  x="1012.98" y="783.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformNestedNameSpecifierLoc (1 samples, 0.08%)</title><rect x="1064.0" y="677" width="0.9" height="15.0" fill="rgb(217,89,7)" rx="2" ry="2" />
<text  x="1066.99" y="687.5" ></text>
</g>
<g >
<title>clang::TemplateDeclInstantiator::VisitFieldDecl (1 samples, 0.08%)</title><rect x="1061.3" y="709" width="0.9" height="15.0" fill="rgb(244,21,9)" rx="2" ry="2" />
<text  x="1064.29" y="719.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.08%)</title><rect x="1001.9" y="661" width="0.9" height="15.0" fill="rgb(240,198,18)" rx="2" ry="2" />
<text  x="1004.88" y="671.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertRecordDeclType (1 samples, 0.08%)</title><rect x="1048.7" y="533" width="0.9" height="15.0" fill="rgb(241,126,30)" rx="2" ry="2" />
<text  x="1051.69" y="543.5" ></text>
</g>
<g >
<title>TCling::TCling (15 samples, 1.14%)</title><rect x="929.0" y="837" width="13.5" height="15.0" fill="rgb(220,84,26)" rx="2" ry="2" />
<text  x="931.98" y="847.5" ></text>
</g>
<g >
<title>cling::MetaSema::actOnxCommand (1 samples, 0.08%)</title><rect x="857.0" y="805" width="0.9" height="15.0" fill="rgb(221,36,3)" rx="2" ry="2" />
<text  x="859.97" y="815.5" ></text>
</g>
<g >
<title>llvm::LoopInfoBase&lt;llvm::MachineBasicBlock, llvm::MachineLoop&gt;::analyze (4 samples, 0.31%)</title><rect x="700.4" y="533" width="3.6" height="15.0" fill="rgb(206,111,48)" rx="2" ry="2" />
<text  x="703.36" y="543.5" ></text>
</g>
<g >
<title>malloc_consolidate (1 samples, 0.08%)</title><rect x="923.6" y="517" width="0.9" height="15.0" fill="rgb(218,47,15)" rx="2" ry="2" />
<text  x="926.58" y="527.5" ></text>
</g>
<g >
<title>execute_command_internal (4 samples, 0.31%)</title><rect x="36.1" y="565" width="3.6" height="15.0" fill="rgb(209,200,17)" rx="2" ry="2" />
<text  x="39.10" y="575.5" ></text>
</g>
<g >
<title>clang::NamedDecl::getLinkageInternal (2 samples, 0.15%)</title><rect x="1029.8" y="885" width="1.8" height="15.0" fill="rgb(232,33,5)" rx="2" ry="2" />
<text  x="1032.79" y="895.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.38%)</title><rect x="1179.2" y="741" width="4.5" height="15.0" fill="rgb(241,100,13)" rx="2" ry="2" />
<text  x="1182.20" y="751.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.23%)</title><rect x="37.0" y="85" width="2.7" height="15.0" fill="rgb(209,74,29)" rx="2" ry="2" />
<text  x="40.00" y="95.5" ></text>
</g>
<g >
<title>llvm::ScheduleDAGSDNodes::BuildSchedUnits (1 samples, 0.08%)</title><rect x="1110.8" y="581" width="0.9" height="15.0" fill="rgb(238,135,24)" rx="2" ry="2" />
<text  x="1113.79" y="591.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1147.7" y="901" width="0.9" height="15.0" fill="rgb(241,55,29)" rx="2" ry="2" />
<text  x="1150.70" y="911.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;std::add_pointer, (anonymous namespace)::ScalarExprEmitter, llvm::Value*&gt;::Visit (1 samples, 0.08%)</title><rect x="1020.8" y="837" width="0.9" height="15.0" fill="rgb(243,25,23)" rx="2" ry="2" />
<text  x="1023.79" y="847.5" ></text>
</g>
<g >
<title>llvm::LazyValueInfo::releaseMemory (1 samples, 0.08%)</title><rect x="882.2" y="581" width="0.9" height="15.0" fill="rgb(235,30,15)" rx="2" ry="2" />
<text  x="885.17" y="591.5" ></text>
</g>
<g >
<title>execute_command_internal (27 samples, 2.06%)</title><rect x="10.9" y="837" width="24.3" height="15.0" fill="rgb(246,42,35)" rx="2" ry="2" />
<text  x="13.90" y="847.5" >e..</text>
</g>
<g >
<title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::CalculateFromScratch (2 samples, 0.15%)</title><rect x="904.7" y="581" width="1.8" height="15.0" fill="rgb(246,32,48)" rx="2" ry="2" />
<text  x="907.68" y="591.5" ></text>
</g>
<g >
<title>_dl_check_map_versions (1 samples, 0.08%)</title><rect x="10.0" y="837" width="0.9" height="15.0" fill="rgb(227,15,7)" rx="2" ry="2" />
<text  x="13.00" y="847.5" ></text>
</g>
<g >
<title>clang::Redeclarable&lt;clang::FunctionDecl&gt;::DeclLink::getPrevious (1 samples, 0.08%)</title><rect x="1019.9" y="597" width="0.9" height="15.0" fill="rgb(226,109,45)" rx="2" ry="2" />
<text  x="1022.89" y="607.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadTemplateArgument (2 samples, 0.15%)</title><rect x="1010.9" y="917" width="1.8" height="15.0" fill="rgb(241,96,46)" rx="2" ry="2" />
<text  x="1013.88" y="927.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::CompleteRedeclChain (1 samples, 0.08%)</title><rect x="1018.1" y="581" width="0.9" height="15.0" fill="rgb(228,225,54)" rx="2" ry="2" />
<text  x="1021.09" y="591.5" ></text>
</g>
<g >
<title>[bash] (4 samples, 0.31%)</title><rect x="36.1" y="661" width="3.6" height="15.0" fill="rgb(210,35,47)" rx="2" ry="2" />
<text  x="39.10" y="671.5" ></text>
</g>
<g >
<title>llvm::AAResults::getModRefInfo (1 samples, 0.08%)</title><rect x="804.8" y="613" width="0.9" height="15.0" fill="rgb(225,4,36)" rx="2" ry="2" />
<text  x="807.77" y="623.5" ></text>
</g>
<g >
<title>clang::ASTReader::readTypeRecord (3 samples, 0.23%)</title><rect x="1010.9" y="949" width="2.7" height="15.0" fill="rgb(252,6,45)" rx="2" ry="2" />
<text  x="1013.88" y="959.5" ></text>
</g>
<g >
<title>llvm::SelectionDAG::getZExtOrTrunc (1 samples, 0.08%)</title><rect x="844.4" y="501" width="0.9" height="15.0" fill="rgb(248,146,8)" rx="2" ry="2" />
<text  x="847.37" y="511.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (1 samples, 0.08%)</title><rect x="865.1" y="549" width="0.9" height="15.0" fill="rgb(210,57,12)" rx="2" ry="2" />
<text  x="868.07" y="559.5" ></text>
</g>
<g >
<title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::CalculateFromScratch (1 samples, 0.08%)</title><rect x="819.2" y="645" width="0.9" height="15.0" fill="rgb(223,4,30)" rx="2" ry="2" />
<text  x="822.17" y="655.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddType (1 samples, 0.08%)</title><rect x="1094.6" y="517" width="0.9" height="15.0" fill="rgb(231,125,48)" rx="2" ry="2" />
<text  x="1097.59" y="527.5" ></text>
</g>
<g >
<title>clang::VarDecl::getInstantiatedFromStaticDataMember (1 samples, 0.08%)</title><rect x="1023.5" y="565" width="0.9" height="15.0" fill="rgb(205,21,10)" rx="2" ry="2" />
<text  x="1026.49" y="575.5" ></text>
</g>
<g >
<title>llvm::object::ELFObjectFile&lt;llvm::object::ELFType&lt;(llvm::support::endianness)1, true&gt; &gt;::getRelocatedSection (16 samples, 1.22%)</title><rect x="780.5" y="517" width="14.4" height="15.0" fill="rgb(238,57,10)" rx="2" ry="2" />
<text  x="783.47" y="527.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::emitDestroy (1 samples, 0.08%)</title><rect x="1019.0" y="661" width="0.9" height="15.0" fill="rgb(222,168,2)" rx="2" ry="2" />
<text  x="1021.99" y="671.5" ></text>
</g>
<g >
<title>EmitFunctionDeclPointer (1 samples, 0.08%)</title><rect x="1019.9" y="709" width="0.9" height="15.0" fill="rgb(225,151,23)" rx="2" ry="2" />
<text  x="1022.89" y="719.5" ></text>
</g>
<g >
<title>clang::InitializationSequence::Perform (1 samples, 0.08%)</title><rect x="201.7" y="933" width="0.9" height="15.0" fill="rgb(222,57,36)" rx="2" ry="2" />
<text  x="204.72" y="943.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.08%)</title><rect x="1112.6" y="629" width="0.9" height="15.0" fill="rgb(235,123,49)" rx="2" ry="2" />
<text  x="1115.59" y="639.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddTemplateArgument (1 samples, 0.08%)</title><rect x="1072.1" y="581" width="0.9" height="15.0" fill="rgb(254,226,14)" rx="2" ry="2" />
<text  x="1075.09" y="591.5" ></text>
</g>
<g >
<title>llvm::PMTopLevelManager::findAnalysisPassInfo (1 samples, 0.08%)</title><rect x="675.2" y="517" width="0.9" height="15.0" fill="rgb(240,97,49)" rx="2" ry="2" />
<text  x="678.16" y="527.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertType (1 samples, 0.08%)</title><rect x="1048.7" y="661" width="0.9" height="15.0" fill="rgb(229,109,5)" rx="2" ry="2" />
<text  x="1051.69" y="671.5" ></text>
</g>
<g >
<title>TClingDataMemberInfo::TClingDataMemberInfo (1 samples, 0.08%)</title><rect x="447.4" y="501" width="0.9" height="15.0" fill="rgb(208,229,2)" rx="2" ry="2" />
<text  x="450.44" y="511.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::setNonAliasAttributes (1 samples, 0.08%)</title><rect x="1037.0" y="677" width="0.9" height="15.0" fill="rgb(219,158,31)" rx="2" ry="2" />
<text  x="1039.99" y="687.5" ></text>
</g>
<g >
<title>llvm::X86AsmPrinter::runOnMachineFunction (2 samples, 0.15%)</title><rect x="1116.2" y="661" width="1.8" height="15.0" fill="rgb(217,48,0)" rx="2" ry="2" />
<text  x="1119.19" y="671.5" ></text>
</g>
<g >
<title>clang::Sema::PerformPendingInstantiations (1 samples, 0.08%)</title><rect x="1084.7" y="821" width="0.9" height="15.0" fill="rgb(250,92,34)" rx="2" ry="2" />
<text  x="1087.69" y="831.5" ></text>
</g>
<g >
<title>llvm::legacy::FunctionPassManager::run (4 samples, 0.31%)</title><rect x="860.6" y="629" width="3.6" height="15.0" fill="rgb(224,82,26)" rx="2" ry="2" />
<text  x="863.57" y="639.5" ></text>
</g>
<g >
<title>main (5 samples, 0.38%)</title><rect x="1143.2" y="949" width="4.5" height="15.0" fill="rgb(206,197,22)" rx="2" ry="2" />
<text  x="1146.20" y="959.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.15%)</title><rect x="1184.6" y="789" width="1.8" height="15.0" fill="rgb(227,41,48)" rx="2" ry="2" />
<text  x="1187.60" y="799.5" ></text>
</g>
<g >
<title>clang::ASTReader::FindExternalVisibleDeclsByName (1 samples, 0.08%)</title><rect x="1051.4" y="869" width="0.9" height="15.0" fill="rgb(249,171,5)" rx="2" ry="2" />
<text  x="1054.39" y="879.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallExpr (1 samples, 0.08%)</title><rect x="1018.1" y="773" width="0.9" height="15.0" fill="rgb(232,112,48)" rx="2" ry="2" />
<text  x="1021.09" y="783.5" ></text>
</g>
<g >
<title>__GI___fork (4 samples, 0.31%)</title><rect x="996.5" y="837" width="3.6" height="15.0" fill="rgb(242,153,54)" rx="2" ry="2" />
<text  x="999.48" y="847.5" ></text>
</g>
<g >
<title>clang::LinkageComputer::getLVForNamespaceScopeDecl (1 samples, 0.08%)</title><rect x="1016.3" y="373" width="0.9" height="15.0" fill="rgb(209,160,31)" rx="2" ry="2" />
<text  x="1019.29" y="383.5" ></text>
</g>
<g >
<title>llvm::SimplifyCall (1 samples, 0.08%)</title><rect x="827.3" y="597" width="0.9" height="15.0" fill="rgb(207,144,37)" rx="2" ry="2" />
<text  x="830.27" y="607.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::SetLLVMFunctionAttributes (1 samples, 0.08%)</title><rect x="1020.8" y="693" width="0.9" height="15.0" fill="rgb(213,25,14)" rx="2" ry="2" />
<text  x="1023.79" y="703.5" ></text>
</g>
<g >
<title>llvm::LoopRotation (1 samples, 0.08%)</title><rect x="851.6" y="693" width="0.9" height="15.0" fill="rgb(251,190,17)" rx="2" ry="2" />
<text  x="854.57" y="703.5" ></text>
</g>
<g >
<title>cling::utils::platform::Popen (9 samples, 0.69%)</title><rect x="929.0" y="757" width="8.1" height="15.0" fill="rgb(230,213,18)" rx="2" ry="2" />
<text  x="931.98" y="767.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.08%)</title><rect x="1064.0" y="885" width="0.9" height="15.0" fill="rgb(206,22,51)" rx="2" ry="2" />
<text  x="1066.99" y="895.5" ></text>
</g>
<g >
<title>llvm::AttributeSetNode::hasAttribute (1 samples, 0.08%)</title><rect x="248.5" y="693" width="0.9" height="15.0" fill="rgb(253,109,39)" rx="2" ry="2" />
<text  x="251.52" y="703.5" ></text>
</g>
<g >
<title>close_buffered_fd (1 samples, 0.08%)</title><rect x="34.3" y="549" width="0.9" height="15.0" fill="rgb(212,38,54)" rx="2" ry="2" />
<text  x="37.30" y="559.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetType (1 samples, 0.08%)</title><rect x="1010.9" y="757" width="0.9" height="15.0" fill="rgb(237,80,14)" rx="2" ry="2" />
<text  x="1013.88" y="767.5" ></text>
</g>
<g >
<title>ldd (32 samples, 2.44%)</title><rect x="10.9" y="965" width="28.8" height="15.0" fill="rgb(237,226,12)" rx="2" ry="2" />
<text  x="13.90" y="975.5" >ldd</text>
</g>
<g >
<title>?? (5 samples, 0.38%)</title><rect x="371.8" y="869" width="4.5" height="15.0" fill="rgb(217,176,15)" rx="2" ry="2" />
<text  x="374.83" y="879.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (3 samples, 0.23%)</title><rect x="1073.0" y="901" width="2.7" height="15.0" fill="rgb(210,212,50)" rx="2" ry="2" />
<text  x="1075.99" y="911.5" ></text>
</g>
<g >
<title>clang::Sema::PerformPendingInstantiations (1 samples, 0.08%)</title><rect x="849.8" y="725" width="0.9" height="15.0" fill="rgb(241,109,16)" rx="2" ry="2" />
<text  x="852.77" y="735.5" ></text>
</g>
<g >
<title>clang::Sema::PopFunctionScopeInfo (1 samples, 0.08%)</title><rect x="849.8" y="677" width="0.9" height="15.0" fill="rgb(249,78,50)" rx="2" ry="2" />
<text  x="852.77" y="687.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadNestedNameSpecifier (1 samples, 0.08%)</title><rect x="1051.4" y="613" width="0.9" height="15.0" fill="rgb(217,182,10)" rx="2" ry="2" />
<text  x="1054.39" y="623.5" ></text>
</g>
<g >
<title>HandleInterpreterException (2 samples, 0.15%)</title><rect x="202.6" y="949" width="1.8" height="15.0" fill="rgb(212,161,20)" rx="2" ry="2" />
<text  x="205.62" y="959.5" ></text>
</g>
<g >
<title>check_match (1 samples, 0.08%)</title><rect x="42.4" y="837" width="0.9" height="15.0" fill="rgb(221,224,32)" rx="2" ry="2" />
<text  x="45.40" y="847.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (1 samples, 0.08%)</title><rect x="856.1" y="597" width="0.9" height="15.0" fill="rgb(226,165,11)" rx="2" ry="2" />
<text  x="859.07" y="607.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadTemplateName (1 samples, 0.08%)</title><rect x="1009.1" y="709" width="0.9" height="15.0" fill="rgb(231,94,6)" rx="2" ry="2" />
<text  x="1012.08" y="719.5" ></text>
</g>
<g >
<title>llvm::AttrBuilder::addAttribute (1 samples, 0.08%)</title><rect x="1044.2" y="757" width="0.9" height="15.0" fill="rgb(217,16,54)" rx="2" ry="2" />
<text  x="1047.19" y="767.5" ></text>
</g>
<g >
<title>__mprotect (2 samples, 0.15%)</title><rect x="1150.4" y="853" width="1.8" height="15.0" fill="rgb(225,42,30)" rx="2" ry="2" />
<text  x="1153.40" y="863.5" ></text>
</g>
<g >
<title>clang::Sema::SubstParmVarDecl (1 samples, 0.08%)</title><rect x="1060.4" y="757" width="0.9" height="15.0" fill="rgb(239,159,47)" rx="2" ry="2" />
<text  x="1063.39" y="767.5" ></text>
</g>
<g >
<title>llvm::raw_ostream::write (1 samples, 0.08%)</title><rect x="250.3" y="613" width="0.9" height="15.0" fill="rgb(215,97,5)" rx="2" ry="2" />
<text  x="253.32" y="623.5" ></text>
</g>
<g >
<title>llvm::Value::getContext (1 samples, 0.08%)</title><rect x="830.9" y="645" width="0.9" height="15.0" fill="rgb(240,79,6)" rx="2" ry="2" />
<text  x="833.87" y="655.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveExternalSymbols (1 samples, 0.08%)</title><rect x="1119.8" y="949" width="0.9" height="15.0" fill="rgb(240,6,11)" rx="2" ry="2" />
<text  x="1122.79" y="959.5" ></text>
</g>
<g >
<title>llvm::AAResults::getModRefInfo (1 samples, 0.08%)</title><rect x="230.5" y="645" width="0.9" height="15.0" fill="rgb(213,158,14)" rx="2" ry="2" />
<text  x="233.52" y="655.5" ></text>
</g>
<g >
<title>clang::LinkageComputer::mergeTemplateLV (1 samples, 0.08%)</title><rect x="1016.3" y="485" width="0.9" height="15.0" fill="rgb(236,228,21)" rx="2" ry="2" />
<text  x="1019.29" y="495.5" ></text>
</g>
<g >
<title>TH1D::AddBinContent (24 samples, 1.83%)</title><rect x="424.9" y="869" width="21.6" height="15.0" fill="rgb(236,113,41)" rx="2" ry="2" />
<text  x="427.94" y="879.5" >T..</text>
</g>
<g >
<title>cling::Interpreter::executeTransaction (3 samples, 0.23%)</title><rect x="851.6" y="773" width="2.7" height="15.0" fill="rgb(235,161,17)" rx="2" ry="2" />
<text  x="854.57" y="783.5" ></text>
</g>
<g >
<title>llvm::ExecutionDomainFix::leaveBasicBlock (1 samples, 0.08%)</title><rect x="240.4" y="693" width="0.9" height="15.0" fill="rgb(234,54,38)" rx="2" ry="2" />
<text  x="243.42" y="703.5" ></text>
</g>
<g >
<title>__memchr_avx2 (1 samples, 0.08%)</title><rect x="951.5" y="789" width="0.9" height="15.0" fill="rgb(228,181,10)" rx="2" ry="2" />
<text  x="954.48" y="799.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl (1 samples, 0.08%)</title><rect x="1100.0" y="661" width="0.9" height="15.0" fill="rgb(238,168,32)" rx="2" ry="2" />
<text  x="1102.99" y="671.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::ScalarEvolution (1 samples, 0.08%)</title><rect x="893.9" y="597" width="0.9" height="15.0" fill="rgb(232,17,49)" rx="2" ry="2" />
<text  x="896.87" y="607.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.08%)</title><rect x="1080.2" y="661" width="0.9" height="15.0" fill="rgb(227,64,44)" rx="2" ry="2" />
<text  x="1083.19" y="671.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EvaluateExprAsBool (1 samples, 0.08%)</title><rect x="1018.1" y="837" width="0.9" height="15.0" fill="rgb(207,55,54)" rx="2" ry="2" />
<text  x="1021.09" y="847.5" ></text>
</g>
<g >
<title>[bash] (4 samples, 0.31%)</title><rect x="36.1" y="469" width="3.6" height="15.0" fill="rgb(206,34,2)" rx="2" ry="2" />
<text  x="39.10" y="479.5" ></text>
</g>
<g >
<title>llvm::MachineFunction::CreateMachineInstr (1 samples, 0.08%)</title><rect x="692.3" y="533" width="0.9" height="15.0" fill="rgb(221,228,47)" rx="2" ry="2" />
<text  x="695.26" y="543.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::runOnMachineFunction (1 samples, 0.08%)</title><rect x="1120.7" y="773" width="0.9" height="15.0" fill="rgb(207,82,8)" rx="2" ry="2" />
<text  x="1123.69" y="783.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::GetFunctionType (1 samples, 0.08%)</title><rect x="1112.6" y="581" width="0.9" height="15.0" fill="rgb(238,38,52)" rx="2" ry="2" />
<text  x="1115.59" y="591.5" ></text>
</g>
<g >
<title>execute_command (4 samples, 0.31%)</title><rect x="36.1" y="245" width="3.6" height="15.0" fill="rgb(254,187,19)" rx="2" ry="2" />
<text  x="39.10" y="255.5" ></text>
</g>
<g >
<title>__GI_exit (3 samples, 0.23%)</title><rect x="857.9" y="901" width="2.7" height="15.0" fill="rgb(236,16,49)" rx="2" ry="2" />
<text  x="860.87" y="911.5" ></text>
</g>
<g >
<title>llvm::PopulateLoopsDFS&lt;llvm::BasicBlock, llvm::Loop&gt;::traverse (1 samples, 0.08%)</title><rect x="239.5" y="709" width="0.9" height="15.0" fill="rgb(248,145,22)" rx="2" ry="2" />
<text  x="242.52" y="719.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass (1 samples, 0.08%)</title><rect x="1100.0" y="629" width="0.9" height="15.0" fill="rgb(208,186,21)" rx="2" ry="2" />
<text  x="1102.99" y="639.5" ></text>
</g>
<g >
<title>cling::MetaParser::isXCommand (1 samples, 0.08%)</title><rect x="857.0" y="821" width="0.9" height="15.0" fill="rgb(236,88,42)" rx="2" ry="2" />
<text  x="859.97" y="831.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentScopeDeclRefExpr (1 samples, 0.08%)</title><rect x="1081.1" y="709" width="0.9" height="15.0" fill="rgb(209,212,8)" rx="2" ry="2" />
<text  x="1084.09" y="719.5" ></text>
</g>
<g >
<title>clang::TemplateDeclInstantiator::VisitCXXMethodDecl (1 samples, 0.08%)</title><rect x="1057.7" y="837" width="0.9" height="15.0" fill="rgb(252,94,27)" rx="2" ry="2" />
<text  x="1060.69" y="847.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitUnaryOpLValue (1 samples, 0.08%)</title><rect x="1091.9" y="789" width="0.9" height="15.0" fill="rgb(247,159,39)" rx="2" ry="2" />
<text  x="1094.89" y="799.5" ></text>
</g>
<g >
<title>clang::DeclContext::getPrimaryContext (1 samples, 0.08%)</title><rect x="1061.3" y="677" width="0.9" height="15.0" fill="rgb(220,149,8)" rx="2" ry="2" />
<text  x="1064.29" y="687.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnModule (1 samples, 0.08%)</title><rect x="1107.2" y="741" width="0.9" height="15.0" fill="rgb(229,17,54)" rx="2" ry="2" />
<text  x="1110.19" y="751.5" ></text>
</g>
<g >
<title>malloc_consolidate (1 samples, 0.08%)</title><rect x="858.8" y="709" width="0.9" height="15.0" fill="rgb(221,216,51)" rx="2" ry="2" />
<text  x="861.77" y="719.5" ></text>
</g>
<g >
<title>_dlerror_run (1 samples, 0.08%)</title><rect x="991.1" y="853" width="0.9" height="15.0" fill="rgb(234,18,6)" rx="2" ry="2" />
<text  x="994.08" y="863.5" ></text>
</g>
<g >
<title>cling::MetaSema::actOnLCommand (1 samples, 0.08%)</title><rect x="1109.9" y="901" width="0.9" height="15.0" fill="rgb(241,119,38)" rx="2" ry="2" />
<text  x="1112.89" y="911.5" ></text>
</g>
<g >
<title>llvm::MachineInstr::hasOrderedMemoryRef (1 samples, 0.08%)</title><rect x="698.6" y="533" width="0.9" height="15.0" fill="rgb(216,103,1)" rx="2" ry="2" />
<text  x="701.56" y="543.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadStmtFromStream (1 samples, 0.08%)</title><rect x="1054.1" y="677" width="0.9" height="15.0" fill="rgb(207,24,31)" rx="2" ry="2" />
<text  x="1057.09" y="687.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.08%)</title><rect x="850.7" y="629" width="0.9" height="15.0" fill="rgb(224,25,47)" rx="2" ry="2" />
<text  x="853.67" y="639.5" ></text>
</g>
<g >
<title>llvm::MCObjectStreamer::EmitInstructionImpl (1 samples, 0.08%)</title><rect x="847.1" y="501" width="0.9" height="15.0" fill="rgb(231,209,20)" rx="2" ry="2" />
<text  x="850.07" y="511.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass (1 samples, 0.08%)</title><rect x="1066.7" y="869" width="0.9" height="15.0" fill="rgb(240,118,19)" rx="2" ry="2" />
<text  x="1069.69" y="879.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::SelectAllBasicBlocks (2 samples, 0.15%)</title><rect x="246.7" y="709" width="1.8" height="15.0" fill="rgb(240,83,0)" rx="2" ry="2" />
<text  x="249.72" y="719.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.23%)</title><rect x="947.0" y="773" width="2.7" height="15.0" fill="rgb(237,95,35)" rx="2" ry="2" />
<text  x="949.98" y="783.5" ></text>
</g>
<g >
<title>llvm::GlobalDCEPass::UpdateGVDependencies (1 samples, 0.08%)</title><rect x="236.8" y="757" width="0.9" height="15.0" fill="rgb(241,162,2)" rx="2" ry="2" />
<text  x="239.82" y="767.5" ></text>
</g>
<g >
<title>clang::InitializationSequence::Perform (2 samples, 0.15%)</title><rect x="1067.6" y="901" width="1.8" height="15.0" fill="rgb(254,5,45)" rx="2" ry="2" />
<text  x="1070.59" y="911.5" ></text>
</g>
<g >
<title>clang::LinkageComputer::getLVForDecl (1 samples, 0.08%)</title><rect x="1016.3" y="581" width="0.9" height="15.0" fill="rgb(221,136,11)" rx="2" ry="2" />
<text  x="1019.29" y="591.5" ></text>
</g>
<g >
<title>llvm::PMTopLevelManager::initializeAllAnalysisInfo (1 samples, 0.08%)</title><rect x="1100.9" y="821" width="0.9" height="15.0" fill="rgb(238,126,27)" rx="2" ry="2" />
<text  x="1103.89" y="831.5" ></text>
</g>
<g >
<title>llvm::orc::SimpleCompiler::operator() (80 samples, 6.10%)</title><rect x="675.2" y="629" width="72.0" height="15.0" fill="rgb(230,205,13)" rx="2" ry="2" />
<text  x="678.16" y="639.5" >llvm::or..</text>
</g>
<g >
<title>clang::ASTReader::ReadTypeLoc (1 samples, 0.08%)</title><rect x="1012.7" y="453" width="0.9" height="15.0" fill="rgb(222,60,21)" rx="2" ry="2" />
<text  x="1015.68" y="463.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldELF::loadObject (53 samples, 4.04%)</title><rect x="750.8" y="597" width="47.7" height="15.0" fill="rgb(241,130,35)" rx="2" ry="2" />
<text  x="753.76" y="607.5" >llvm..</text>
</g>
<g >
<title>clang::ASTReader::ReadStmtFromStream (1 samples, 0.08%)</title><rect x="798.5" y="581" width="0.9" height="15.0" fill="rgb(225,125,30)" rx="2" ry="2" />
<text  x="801.47" y="591.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::GetAddrOfFunction (1 samples, 0.08%)</title><rect x="1025.3" y="885" width="0.9" height="15.0" fill="rgb(244,28,17)" rx="2" ry="2" />
<text  x="1028.29" y="895.5" ></text>
</g>
<g >
<title>clang::Lexer::Lex (1 samples, 0.08%)</title><rect x="942.5" y="725" width="0.9" height="15.0" fill="rgb(243,159,26)" rx="2" ry="2" />
<text  x="945.48" y="735.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::SelectAllBasicBlocks (1 samples, 0.08%)</title><rect x="1119.8" y="773" width="0.9" height="15.0" fill="rgb(232,51,40)" rx="2" ry="2" />
<text  x="1122.79" y="783.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnModule (8 samples, 0.61%)</title><rect x="1130.6" y="789" width="7.2" height="15.0" fill="rgb(239,160,36)" rx="2" ry="2" />
<text  x="1133.59" y="799.5" ></text>
</g>
<g >
<title>llvm::AAResults::getModRefInfo (1 samples, 0.08%)</title><rect x="829.1" y="581" width="0.9" height="15.0" fill="rgb(237,92,49)" rx="2" ry="2" />
<text  x="832.07" y="591.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1187.3" y="709" width="0.9" height="15.0" fill="rgb(206,75,30)" rx="2" ry="2" />
<text  x="1190.30" y="719.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitFunctionTemplateDecl (1 samples, 0.08%)</title><rect x="1077.5" y="757" width="0.9" height="15.0" fill="rgb(223,146,17)" rx="2" ry="2" />
<text  x="1080.49" y="767.5" ></text>
</g>
<g >
<title>execute_command_internal (27 samples, 2.06%)</title><rect x="10.9" y="789" width="24.3" height="15.0" fill="rgb(253,127,6)" rx="2" ry="2" />
<text  x="13.90" y="799.5" >e..</text>
</g>
<g >
<title>execute_command (4 samples, 0.31%)</title><rect x="36.1" y="309" width="3.6" height="15.0" fill="rgb(241,99,48)" rx="2" ry="2" />
<text  x="39.10" y="319.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallArgs (1 samples, 0.08%)</title><rect x="1091.9" y="853" width="0.9" height="15.0" fill="rgb(205,217,38)" rx="2" ry="2" />
<text  x="1094.89" y="863.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::emitSection (2 samples, 0.15%)</title><rect x="260.2" y="725" width="1.8" height="15.0" fill="rgb(234,35,42)" rx="2" ry="2" />
<text  x="263.22" y="735.5" ></text>
</g>
<g >
<title>cling::MetaProcessor::process (1 samples, 0.08%)</title><rect x="838.1" y="757" width="0.9" height="15.0" fill="rgb(232,45,28)" rx="2" ry="2" />
<text  x="841.07" y="767.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitScalarExpr (1 samples, 0.08%)</title><rect x="1019.9" y="805" width="0.9" height="15.0" fill="rgb(211,45,36)" rx="2" ry="2" />
<text  x="1022.89" y="815.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition (1 samples, 0.08%)</title><rect x="1054.1" y="741" width="0.9" height="15.0" fill="rgb(207,222,15)" rx="2" ry="2" />
<text  x="1057.09" y="751.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;std::add_pointer, (anonymous namespace)::ScalarExprEmitter, llvm::Value*&gt;::Visit (1 samples, 0.08%)</title><rect x="1018.1" y="805" width="0.9" height="15.0" fill="rgb(235,19,19)" rx="2" ry="2" />
<text  x="1021.09" y="815.5" ></text>
</g>
<g >
<title>evalstring (1 samples, 0.08%)</title><rect x="35.2" y="261" width="0.9" height="15.0" fill="rgb(212,39,17)" rx="2" ry="2" />
<text  x="38.20" y="271.5" ></text>
</g>
<g >
<title>llvm::InstVisitor&lt;llvm::InstCombiner, llvm::Instruction*&gt;::delegateCallInst (1 samples, 0.08%)</title><rect x="910.1" y="549" width="0.9" height="15.0" fill="rgb(241,56,31)" rx="2" ry="2" />
<text  x="913.08" y="559.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.08%)</title><rect x="29.8" y="549" width="0.9" height="15.0" fill="rgb(251,201,22)" rx="2" ry="2" />
<text  x="32.80" y="559.5" ></text>
</g>
<g >
<title>make_child (5 samples, 0.38%)</title><rect x="30.7" y="581" width="4.5" height="15.0" fill="rgb(207,123,13)" rx="2" ry="2" />
<text  x="33.70" y="591.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::Release (15 samples, 1.14%)</title><rect x="1033.4" y="949" width="13.5" height="15.0" fill="rgb(241,182,49)" rx="2" ry="2" />
<text  x="1036.39" y="959.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitStmt (1 samples, 0.08%)</title><rect x="1019.0" y="853" width="0.9" height="15.0" fill="rgb(253,102,29)" rx="2" ry="2" />
<text  x="1021.99" y="863.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitLValue (1 samples, 0.08%)</title><rect x="1019.0" y="757" width="0.9" height="15.0" fill="rgb(230,103,4)" rx="2" ry="2" />
<text  x="1021.99" y="767.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass (1 samples, 0.08%)</title><rect x="1100.0" y="821" width="0.9" height="15.0" fill="rgb(249,9,1)" rx="2" ry="2" />
<text  x="1102.99" y="831.5" ></text>
</g>
<g >
<title>ROOT::Detail::RDF::RLoopManager::Run (258 samples, 19.68%)</title><rect x="214.3" y="949" width="232.2" height="15.0" fill="rgb(224,120,20)" rx="2" ry="2" />
<text  x="217.32" y="959.5" >ROOT::Detail::RDF::RLoopManage..</text>
</g>
<g >
<title>llvm::ScalarEvolution::getZeroExtendExpr (1 samples, 0.08%)</title><rect x="853.4" y="661" width="0.9" height="15.0" fill="rgb(208,114,50)" rx="2" ry="2" />
<text  x="856.37" y="671.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;, void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;::LookupBucketFor&lt;void const*&gt; (3 samples, 0.23%)</title><rect x="724.7" y="533" width="2.7" height="15.0" fill="rgb(227,15,19)" rx="2" ry="2" />
<text  x="727.66" y="543.5" ></text>
</g>
<g >
<title>clang::Parser::AnnotateTemplateIdToken (1 samples, 0.08%)</title><rect x="1109.0" y="901" width="0.9" height="15.0" fill="rgb(239,24,3)" rx="2" ry="2" />
<text  x="1111.99" y="911.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl (1 samples, 0.08%)</title><rect x="1012.7" y="693" width="0.9" height="15.0" fill="rgb(216,133,45)" rx="2" ry="2" />
<text  x="1015.68" y="703.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallee (1 samples, 0.08%)</title><rect x="1018.1" y="741" width="0.9" height="15.0" fill="rgb(244,43,21)" rx="2" ry="2" />
<text  x="1021.09" y="751.5" ></text>
</g>
<g >
<title>clang::Sema::SubstExpr (1 samples, 0.08%)</title><rect x="1086.5" y="821" width="0.9" height="15.0" fill="rgb(223,178,24)" rx="2" ry="2" />
<text  x="1089.49" y="831.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke (5 samples, 0.38%)</title><rect x="1113.5" y="757" width="4.5" height="15.0" fill="rgb(227,151,36)" rx="2" ry="2" />
<text  x="1116.49" y="767.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.08%)</title><rect x="1043.3" y="677" width="0.9" height="15.0" fill="rgb(213,205,27)" rx="2" ry="2" />
<text  x="1046.29" y="687.5" ></text>
</g>
<g >
<title>fgets (2 samples, 0.15%)</title><rect x="950.6" y="821" width="1.8" height="15.0" fill="rgb(237,131,16)" rx="2" ry="2" />
<text  x="953.58" y="831.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (5 samples, 0.38%)</title><rect x="39.7" y="917" width="4.5" height="15.0" fill="rgb(227,209,6)" rx="2" ry="2" />
<text  x="42.70" y="927.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTemplateArgumentList (1 samples, 0.08%)</title><rect x="1086.5" y="853" width="0.9" height="15.0" fill="rgb(221,8,13)" rx="2" ry="2" />
<text  x="1089.49" y="863.5" ></text>
</g>
<g >
<title>llvm::MCContext::createSymbol (1 samples, 0.08%)</title><rect x="1116.2" y="581" width="0.9" height="15.0" fill="rgb(215,164,38)" rx="2" ry="2" />
<text  x="1119.19" y="591.5" ></text>
</g>
<g >
<title>ROOT::Detail::RDF::RLoopManager::Jit (2 samples, 0.15%)</title><rect x="212.5" y="949" width="1.8" height="15.0" fill="rgb(217,142,30)" rx="2" ry="2" />
<text  x="215.52" y="959.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization (2 samples, 0.15%)</title><rect x="1060.4" y="853" width="1.8" height="15.0" fill="rgb(221,222,16)" rx="2" ry="2" />
<text  x="1063.39" y="863.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.23%)</title><rect x="929.0" y="677" width="2.7" height="15.0" fill="rgb(228,112,16)" rx="2" ry="2" />
<text  x="931.98" y="687.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.08%)</title><rect x="1065.8" y="901" width="0.9" height="15.0" fill="rgb(215,32,21)" rx="2" ry="2" />
<text  x="1068.79" y="911.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, int, std::_Identity&lt;int&gt;, std::less&lt;int&gt;, std::allocator&lt;int&gt; &gt;::_M_erase (1 samples, 0.08%)</title><rect x="848.9" y="581" width="0.9" height="15.0" fill="rgb(248,73,1)" rx="2" ry="2" />
<text  x="851.87" y="591.5" ></text>
</g>
<g >
<title>clang::CodeGen::CGBuilderTy::CreateStore (1 samples, 0.08%)</title><rect x="1040.6" y="693" width="0.9" height="15.0" fill="rgb(238,176,21)" rx="2" ry="2" />
<text  x="1043.59" y="703.5" ></text>
</g>
<g >
<title>TCling::RegisterModule (1 samples, 0.08%)</title><rect x="1118.9" y="869" width="0.9" height="15.0" fill="rgb(247,183,2)" rx="2" ry="2" />
<text  x="1121.89" y="879.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetExternalDeclStmt (1 samples, 0.08%)</title><rect x="798.5" y="597" width="0.9" height="15.0" fill="rgb(243,103,51)" rx="2" ry="2" />
<text  x="801.47" y="607.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGBuilder::lowerInvokable (1 samples, 0.08%)</title><rect x="1122.5" y="869" width="0.9" height="15.0" fill="rgb(226,207,5)" rx="2" ry="2" />
<text  x="1125.49" y="879.5" ></text>
</g>
<g >
<title>clang::ASTReader::readTypeRecord (1 samples, 0.08%)</title><rect x="1066.7" y="677" width="0.9" height="15.0" fill="rgb(219,109,0)" rx="2" ry="2" />
<text  x="1069.69" y="687.5" ></text>
</g>
<g >
<title>cling::MultiplexInterpreterCallbacks::TransactionCommitted (1 samples, 0.08%)</title><rect x="928.1" y="677" width="0.9" height="15.0" fill="rgb(237,86,45)" rx="2" ry="2" />
<text  x="931.08" y="687.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization (1 samples, 0.08%)</title><rect x="1061.3" y="741" width="0.9" height="15.0" fill="rgb(237,26,49)" rx="2" ry="2" />
<text  x="1064.29" y="751.5" ></text>
</g>
<g >
<title>clang::Parser::TryAnnotateCXXScopeToken (1 samples, 0.08%)</title><rect x="1098.2" y="597" width="0.9" height="15.0" fill="rgb(208,101,49)" rx="2" ry="2" />
<text  x="1101.19" y="607.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.08%)</title><rect x="956.9" y="757" width="0.9" height="15.0" fill="rgb(250,180,21)" rx="2" ry="2" />
<text  x="959.88" y="767.5" ></text>
</g>
<g >
<title>_nl_find_locale (2 samples, 0.15%)</title><rect x="1188.2" y="869" width="1.8" height="15.0" fill="rgb(253,130,46)" rx="2" ry="2" />
<text  x="1191.20" y="879.5" ></text>
</g>
<g >
<title>clang::RedeclarableTemplateDecl::addSpecializationImpl&lt;clang::ClassTemplateDecl, clang::ClassTemplateSpecializationDecl&gt; (1 samples, 0.08%)</title><rect x="1073.9" y="597" width="0.9" height="15.0" fill="rgb(226,137,3)" rx="2" ry="2" />
<text  x="1076.89" y="607.5" ></text>
</g>
<g >
<title>llvm::removeUnreachableBlocks (2 samples, 0.15%)</title><rect x="821.0" y="661" width="1.8" height="15.0" fill="rgb(227,40,14)" rx="2" ry="2" />
<text  x="823.97" y="671.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord (1 samples, 0.08%)</title><rect x="1111.7" y="549" width="0.9" height="15.0" fill="rgb(215,136,12)" rx="2" ry="2" />
<text  x="1114.69" y="559.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.08%)</title><rect x="35.2" y="389" width="0.9" height="15.0" fill="rgb(235,208,34)" rx="2" ry="2" />
<text  x="38.20" y="399.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType (1 samples, 0.08%)</title><rect x="1064.9" y="805" width="0.9" height="15.0" fill="rgb(214,19,28)" rx="2" ry="2" />
<text  x="1067.89" y="815.5" ></text>
</g>
<g >
<title>BuildImplicitMemberInitializer (1 samples, 0.08%)</title><rect x="201.7" y="949" width="0.9" height="15.0" fill="rgb(232,201,32)" rx="2" ry="2" />
<text  x="204.72" y="959.5" ></text>
</g>
<g >
<title>clang::CodeGen::ConstantEmitter::tryEmitAbstractForInitializer (1 samples, 0.08%)</title><rect x="1023.5" y="773" width="0.9" height="15.0" fill="rgb(225,164,53)" rx="2" ry="2" />
<text  x="1026.49" y="783.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::SetCommonAttributes (1 samples, 0.08%)</title><rect x="1016.3" y="645" width="0.9" height="15.0" fill="rgb(247,19,3)" rx="2" ry="2" />
<text  x="1019.29" y="655.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.15%)</title><rect x="938.0" y="709" width="1.8" height="15.0" fill="rgb(228,128,31)" rx="2" ry="2" />
<text  x="940.98" y="719.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;std::add_pointer, (anonymous namespace)::AggExprEmitter, void&gt;::Visit (3 samples, 0.23%)</title><rect x="1090.1" y="949" width="2.7" height="15.0" fill="rgb(218,87,4)" rx="2" ry="2" />
<text  x="1093.09" y="959.5" ></text>
</g>
<g >
<title>llvm::Value::getName (1 samples, 0.08%)</title><rect x="215.2" y="661" width="0.9" height="15.0" fill="rgb(208,138,7)" rx="2" ry="2" />
<text  x="218.22" y="671.5" ></text>
</g>
<g >
<title>llvm::object::ELFFile&lt;llvm::object::ELFType&lt;(llvm::support::endianness)1, true&gt; &gt;::sections (8 samples, 0.61%)</title><rect x="787.7" y="485" width="7.2" height="15.0" fill="rgb(214,172,20)" rx="2" ry="2" />
<text  x="790.67" y="495.5" ></text>
</g>
<g >
<title>llvm::orc::LambdaSymbolResolver&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt; const&amp;)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}&gt;::lookup (1 samples, 0.08%)</title><rect x="1120.7" y="901" width="0.9" height="15.0" fill="rgb(241,48,21)" rx="2" ry="2" />
<text  x="1123.69" y="911.5" ></text>
</g>
<g >
<title>TAxis::FindBin (41 samples, 3.13%)</title><rect x="388.0" y="869" width="36.9" height="15.0" fill="rgb(239,147,9)" rx="2" ry="2" />
<text  x="391.03" y="879.5" >TAx..</text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertTypeForMem (1 samples, 0.08%)</title><rect x="1049.6" y="709" width="0.9" height="15.0" fill="rgb(229,101,52)" rx="2" ry="2" />
<text  x="1052.59" y="719.5" ></text>
</g>
<g >
<title>TBranch::GetBasketImpl (106 samples, 8.09%)</title><rect x="544.6" y="853" width="95.5" height="15.0" fill="rgb(205,124,44)" rx="2" ry="2" />
<text  x="547.65" y="863.5" >TBranch::Ge..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.08%)</title><rect x="1043.3" y="709" width="0.9" height="15.0" fill="rgb(206,179,28)" rx="2" ry="2" />
<text  x="1046.29" y="719.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::commitTransaction (1 samples, 0.08%)</title><rect x="856.1" y="661" width="0.9" height="15.0" fill="rgb(231,204,48)" rx="2" ry="2" />
<text  x="859.07" y="671.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitBranchOnBoolExpr (1 samples, 0.08%)</title><rect x="1018.1" y="853" width="0.9" height="15.0" fill="rgb(218,158,47)" rx="2" ry="2" />
<text  x="1021.09" y="863.5" ></text>
</g>
<g >
<title>cling::MultiplexInterpreterCallbacks::LookupObject (1 samples, 0.08%)</title><rect x="1018.1" y="501" width="0.9" height="15.0" fill="rgb(232,122,30)" rx="2" ry="2" />
<text  x="1021.09" y="511.5" ></text>
</g>
<g >
<title>llvm::Value::getName (2 samples, 0.15%)</title><rect x="809.3" y="581" width="1.8" height="15.0" fill="rgb(252,44,11)" rx="2" ry="2" />
<text  x="812.27" y="591.5" ></text>
</g>
<g >
<title>clang::ASTContext::getRValueReferenceType (1 samples, 0.08%)</title><rect x="1060.4" y="661" width="0.9" height="15.0" fill="rgb(246,188,37)" rx="2" ry="2" />
<text  x="1063.39" y="671.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExprs (1 samples, 0.08%)</title><rect x="1096.4" y="917" width="0.9" height="15.0" fill="rgb(232,96,6)" rx="2" ry="2" />
<text  x="1099.39" y="927.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::removeDeadPasses (3 samples, 0.23%)</title><rect x="716.6" y="565" width="2.7" height="15.0" fill="rgb(219,20,15)" rx="2" ry="2" />
<text  x="719.56" y="575.5" ></text>
</g>
<g >
<title>__GI___poll (1 samples, 0.08%)</title><rect x="1006.4" y="693" width="0.9" height="15.0" fill="rgb(251,180,48)" rx="2" ry="2" />
<text  x="1009.38" y="703.5" ></text>
</g>
<g >
<title>[bash] (10 samples, 0.76%)</title><rect x="1152.2" y="821" width="9.0" height="15.0" fill="rgb(243,200,49)" rx="2" ry="2" />
<text  x="1155.20" y="831.5" ></text>
</g>
<g >
<title>cling::Interpreter::RunFunction (1 samples, 0.08%)</title><rect x="449.2" y="885" width="0.9" height="15.0" fill="rgb(214,87,27)" rx="2" ry="2" />
<text  x="452.24" y="895.5" ></text>
</g>
<g >
<title>clang::Parser::ParseDeclGroup (1 samples, 0.08%)</title><rect x="1053.2" y="837" width="0.9" height="15.0" fill="rgb(248,183,46)" rx="2" ry="2" />
<text  x="1056.19" y="847.5" ></text>
</g>
<g >
<title>clang::Sema::SubstStmt (1 samples, 0.08%)</title><rect x="1081.1" y="869" width="0.9" height="15.0" fill="rgb(244,192,12)" rx="2" ry="2" />
<text  x="1084.09" y="879.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::SetLLVMFunctionAttributes (1 samples, 0.08%)</title><rect x="1019.9" y="645" width="0.9" height="15.0" fill="rgb(245,58,35)" rx="2" ry="2" />
<text  x="1022.89" y="655.5" ></text>
</g>
<g >
<title>llvm::zlib::uncompress (1 samples, 0.08%)</title><rect x="1082.9" y="773" width="0.9" height="15.0" fill="rgb(216,115,5)" rx="2" ry="2" />
<text  x="1085.89" y="783.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.08%)</title><rect x="1001.9" y="597" width="0.9" height="15.0" fill="rgb(247,187,9)" rx="2" ry="2" />
<text  x="1004.88" y="607.5" ></text>
</g>
<g >
<title>llvm::IVUsers::AddUsersImpl (1 samples, 0.08%)</title><rect x="1129.7" y="789" width="0.9" height="15.0" fill="rgb(226,82,46)" rx="2" ry="2" />
<text  x="1132.69" y="799.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.46%)</title><rect x="1154.9" y="741" width="5.4" height="15.0" fill="rgb(227,6,29)" rx="2" ry="2" />
<text  x="1157.90" y="751.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (4 samples, 0.31%)</title><rect x="1033.4" y="693" width="3.6" height="15.0" fill="rgb(228,117,39)" rx="2" ry="2" />
<text  x="1036.39" y="703.5" ></text>
</g>
<g >
<title>clang::Sema::SubstType (1 samples, 0.08%)</title><rect x="1060.4" y="741" width="0.9" height="15.0" fill="rgb(240,156,8)" rx="2" ry="2" />
<text  x="1063.39" y="751.5" ></text>
</g>
<g >
<title>llvm::Attribute::hasAttribute (1 samples, 0.08%)</title><rect x="252.1" y="661" width="0.9" height="15.0" fill="rgb(225,139,27)" rx="2" ry="2" />
<text  x="255.12" y="671.5" ></text>
</g>
<g >
<title>clang::Sema::SubstBaseSpecifiers (1 samples, 0.08%)</title><rect x="1066.7" y="853" width="0.9" height="15.0" fill="rgb(219,59,41)" rx="2" ry="2" />
<text  x="1069.69" y="863.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::visitLandingPadInst (1 samples, 0.08%)</title><rect x="835.4" y="581" width="0.9" height="15.0" fill="rgb(253,9,18)" rx="2" ry="2" />
<text  x="838.37" y="591.5" ></text>
</g>
<g >
<title>llvm::LoopInfoBase&lt;llvm::BasicBlock, llvm::Loop&gt;::analyze (1 samples, 0.08%)</title><rect x="239.5" y="725" width="0.9" height="15.0" fill="rgb(254,198,43)" rx="2" ry="2" />
<text  x="242.52" y="735.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalDefinition (1 samples, 0.08%)</title><rect x="1015.4" y="645" width="0.9" height="15.0" fill="rgb(206,211,11)" rx="2" ry="2" />
<text  x="1018.39" y="655.5" ></text>
</g>
<g >
<title>clang::RedeclarableTemplateDecl::findSpecializationImpl&lt;clang::ClassTemplateSpecializationDecl&gt; (1 samples, 0.08%)</title><rect x="1097.3" y="661" width="0.9" height="15.0" fill="rgb(210,75,14)" rx="2" ry="2" />
<text  x="1100.29" y="671.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::CodeGenAndEmitDAG (1 samples, 0.08%)</title><rect x="1107.2" y="661" width="0.9" height="15.0" fill="rgb(240,102,21)" rx="2" ry="2" />
<text  x="1110.19" y="671.5" ></text>
</g>
<g >
<title>LazyFunctionCreatorAutoloadForModule (3 samples, 0.23%)</title><rect x="747.2" y="485" width="2.7" height="15.0" fill="rgb(205,106,47)" rx="2" ry="2" />
<text  x="750.16" y="495.5" ></text>
</g>
<g >
<title>llvm::Pass::getAnalysis&lt;llvm::MachineModuleInfo&gt; (1 samples, 0.08%)</title><rect x="705.8" y="549" width="0.9" height="15.0" fill="rgb(205,104,7)" rx="2" ry="2" />
<text  x="708.76" y="559.5" ></text>
</g>
<g >
<title>llvm::orc::LambdaSymbolResolver&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt; const&amp;)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}&gt;::lookup (1 samples, 0.08%)</title><rect x="202.6" y="725" width="0.9" height="15.0" fill="rgb(219,78,2)" rx="2" ry="2" />
<text  x="205.62" y="735.5" ></text>
</g>
<g >
<title>clang::targets::X86TargetInfo::hasFeature (1 samples, 0.08%)</title><rect x="1090.1" y="741" width="0.9" height="15.0" fill="rgb(221,96,6)" rx="2" ry="2" />
<text  x="1093.09" y="751.5" ></text>
</g>
<g >
<title>cling::MetaSema::actOnxCommand (1 samples, 0.08%)</title><rect x="838.1" y="709" width="0.9" height="15.0" fill="rgb(228,62,45)" rx="2" ry="2" />
<text  x="841.07" y="719.5" ></text>
</g>
<g >
<title>clang::NestedNameSpecifier::getAsNamespace (1 samples, 0.08%)</title><rect x="1098.2" y="517" width="0.9" height="15.0" fill="rgb(212,40,8)" rx="2" ry="2" />
<text  x="1101.19" y="527.5" ></text>
</g>
<g >
<title>clang::Sema::BuildMemberInitializer (1 samples, 0.08%)</title><rect x="1059.5" y="949" width="0.9" height="15.0" fill="rgb(209,89,52)" rx="2" ry="2" />
<text  x="1062.49" y="959.5" ></text>
</g>
<g >
<title>combineInstructionsOverFunction (2 samples, 0.15%)</title><rect x="835.4" y="613" width="1.8" height="15.0" fill="rgb(228,101,23)" rx="2" ry="2" />
<text  x="838.37" y="623.5" ></text>
</g>
<g >
<title>iterativelySimplifyCFG (1 samples, 0.08%)</title><rect x="834.5" y="629" width="0.9" height="15.0" fill="rgb(237,208,29)" rx="2" ry="2" />
<text  x="837.47" y="639.5" ></text>
</g>
<g >
<title>llvm::SetVector&lt;llvm::Value const*, llvm::SmallVector&lt;llvm::Value const*, 16u&gt;, llvm::SmallDenseSet&lt;llvm::Value const*, 16u, llvm::DenseMapInfo&lt;llvm::Value const*&gt; &gt; &gt;::TestAndEraseFromSet&lt;handleEndBlock(llvm::BasicBlock&amp;, llvm::AAResults*, llvm::MemoryDependenceResults*, llvm::TargetLibraryInfo const*, llvm::DenseMap&lt;llvm::Instruction*, std::map&lt;long, long, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;, llvm::DenseMapInfo&lt;llvm::Instruction*&gt;, llvm::detail::DenseMapPair&lt;llvm::Instruction*, std::map&lt;long, long, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt; &gt; &gt;&amp;, llvm::OrderedBasicBlock&amp;)::{lambda(llvm::Value const*)#1}&gt;::operator()&lt;llvm::Value const*&gt; (1 samples, 0.08%)</title><rect x="804.8" y="629" width="0.9" height="15.0" fill="rgb(222,203,28)" rx="2" ry="2" />
<text  x="807.77" y="639.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::ScalarEvolution (1 samples, 0.08%)</title><rect x="923.6" y="581" width="0.9" height="15.0" fill="rgb(241,31,9)" rx="2" ry="2" />
<text  x="926.58" y="591.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitIfStmt (2 samples, 0.15%)</title><rect x="1018.1" y="869" width="1.8" height="15.0" fill="rgb(243,118,1)" rx="2" ry="2" />
<text  x="1021.09" y="879.5" ></text>
</g>
<g >
<title>malloc_consolidate (1 samples, 0.08%)</title><rect x="1024.4" y="773" width="0.9" height="15.0" fill="rgb(230,124,39)" rx="2" ry="2" />
<text  x="1027.39" y="783.5" ></text>
</g>
<g >
<title>DynamicPath (4 samples, 0.31%)</title><rect x="954.2" y="821" width="3.6" height="15.0" fill="rgb(253,229,22)" rx="2" ry="2" />
<text  x="957.18" y="831.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit (1 samples, 0.08%)</title><rect x="1010.9" y="773" width="0.9" height="15.0" fill="rgb(212,54,3)" rx="2" ry="2" />
<text  x="1013.88" y="783.5" ></text>
</g>
<g >
<title>clang::Sema::BuildDeclRefExpr (1 samples, 0.08%)</title><rect x="1095.5" y="581" width="0.9" height="15.0" fill="rgb(240,149,38)" rx="2" ry="2" />
<text  x="1098.49" y="591.5" ></text>
</g>
<g >
<title>clang::Sema::ArgumentDependentLookup (1 samples, 0.08%)</title><rect x="1071.2" y="917" width="0.9" height="15.0" fill="rgb(248,138,40)" rx="2" ry="2" />
<text  x="1074.19" y="927.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.15%)</title><rect x="1150.4" y="789" width="1.8" height="15.0" fill="rgb(214,200,29)" rx="2" ry="2" />
<text  x="1153.40" y="799.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (5 samples, 0.38%)</title><rect x="1033.4" y="725" width="4.5" height="15.0" fill="rgb(251,123,19)" rx="2" ry="2" />
<text  x="1036.39" y="735.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertType (1 samples, 0.08%)</title><rect x="1049.6" y="565" width="0.9" height="15.0" fill="rgb(208,165,5)" rx="2" ry="2" />
<text  x="1052.59" y="575.5" ></text>
</g>
<g >
<title>clang::Parser::ParseDeclaration (1 samples, 0.08%)</title><rect x="1053.2" y="869" width="0.9" height="15.0" fill="rgb(235,166,11)" rx="2" ry="2" />
<text  x="1056.19" y="879.5" ></text>
</g>
<g >
<title>llvm::MVT::getSizeInBits (1 samples, 0.08%)</title><rect x="1122.5" y="821" width="0.9" height="15.0" fill="rgb(207,188,29)" rx="2" ry="2" />
<text  x="1125.49" y="831.5" ></text>
</g>
<g >
<title>clang::Parser::ParseFunctionDefinition (1 samples, 0.08%)</title><rect x="1053.2" y="949" width="0.9" height="15.0" fill="rgb(222,104,15)" rx="2" ry="2" />
<text  x="1056.19" y="959.5" ></text>
</g>
<g >
<title>TListOfDataMembers::UnmapObject (1 samples, 0.08%)</title><rect x="857.9" y="789" width="0.9" height="15.0" fill="rgb(249,85,52)" rx="2" ry="2" />
<text  x="860.87" y="799.5" ></text>
</g>
<g >
<title>llvm::TargetTransformInfoWrapperPass::getTTI (2 samples, 0.15%)</title><rect x="861.5" y="581" width="1.8" height="15.0" fill="rgb(243,201,1)" rx="2" ry="2" />
<text  x="864.47" y="591.5" ></text>
</g>
<g >
<title>clang::RedeclarableTemplateDecl::loadLazySpecializationsImpl (1 samples, 0.08%)</title><rect x="1062.2" y="709" width="0.9" height="15.0" fill="rgb(237,103,22)" rx="2" ry="2" />
<text  x="1065.19" y="719.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, true&gt; &gt;::InfoRec, llvm::DenseMapInfo&lt;llvm::BasicBlock*&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, true&gt; &gt;::InfoRec&gt; &gt;, llvm::BasicBlock*, llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, true&gt; &gt;::InfoRec, llvm::DenseMapInfo&lt;llvm::BasicBlock*&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, true&gt; &gt;::InfoRec&gt; &gt;::LookupBucketFor&lt;llvm::BasicBlock*&gt; (1 samples, 0.08%)</title><rect x="893.0" y="533" width="0.9" height="15.0" fill="rgb(215,80,37)" rx="2" ry="2" />
<text  x="895.97" y="543.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnModule (1 samples, 0.08%)</title><rect x="838.1" y="597" width="0.9" height="15.0" fill="rgb(238,112,24)" rx="2" ry="2" />
<text  x="841.07" y="607.5" ></text>
</g>
<g >
<title>clang::LinkageComputer::computeLVForDecl (1 samples, 0.08%)</title><rect x="1016.3" y="389" width="0.9" height="15.0" fill="rgb(232,169,20)" rx="2" ry="2" />
<text  x="1019.29" y="399.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadNestedNameSpecifierLoc (1 samples, 0.08%)</title><rect x="1010.0" y="709" width="0.9" height="15.0" fill="rgb(233,91,19)" rx="2" ry="2" />
<text  x="1012.98" y="719.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.15%)</title><rect x="1188.2" y="789" width="1.8" height="15.0" fill="rgb(219,218,44)" rx="2" ry="2" />
<text  x="1191.20" y="799.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (2 samples, 0.15%)</title><rect x="800.3" y="661" width="1.8" height="15.0" fill="rgb(221,185,53)" rx="2" ry="2" />
<text  x="803.27" y="671.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetType (2 samples, 0.15%)</title><rect x="1007.3" y="885" width="1.8" height="15.0" fill="rgb(241,201,27)" rx="2" ry="2" />
<text  x="1010.28" y="895.5" ></text>
</g>
<g >
<title>execute_command_internal (27 samples, 2.06%)</title><rect x="10.9" y="821" width="24.3" height="15.0" fill="rgb(251,174,33)" rx="2" ry="2" />
<text  x="13.90" y="831.5" >e..</text>
</g>
<g >
<title>llvm::ScalarEvolution::getRangeRef (1 samples, 0.08%)</title><rect x="1109.9" y="501" width="0.9" height="15.0" fill="rgb(226,193,36)" rx="2" ry="2" />
<text  x="1112.89" y="511.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject&lt;std::shared_ptr&lt;llvm::RuntimeDyld::MemoryManager&gt; &gt;::getSymbolMaterializer(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda()#1}&gt;::_M_invoke (1 samples, 0.08%)</title><rect x="1110.8" y="853" width="0.9" height="15.0" fill="rgb(219,114,13)" rx="2" ry="2" />
<text  x="1113.79" y="863.5" ></text>
</g>
<g >
<title>llvm::post_order&lt;llvm::BasicBlock const*&gt; (1 samples, 0.08%)</title><rect x="681.5" y="533" width="0.9" height="15.0" fill="rgb(210,34,39)" rx="2" ry="2" />
<text  x="684.46" y="543.5" ></text>
</g>
<g >
<title>llvm::visitAll&lt;llvm::SCEVExprContains&lt;llvm::ScalarEvolution::checkValidity(llvm::SCEV const*) const::{lambda(llvm::SCEV const*)#1}&gt;(llvm::SCEV const*, llvm::ScalarEvolution::checkValidity(llvm::SCEV const*) const::{lambda(llvm::SCEV const*)#1})::FindClosure&gt; (1 samples, 0.08%)</title><rect x="670.7" y="885" width="0.9" height="15.0" fill="rgb(254,89,9)" rx="2" ry="2" />
<text  x="673.66" y="895.5" ></text>
</g>
<g >
<title>llvm::Twine::str[abi:cxx11] (1 samples, 0.08%)</title><rect x="677.0" y="517" width="0.9" height="15.0" fill="rgb(243,8,30)" rx="2" ry="2" />
<text  x="679.96" y="527.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.08%)</title><rect x="1025.3" y="805" width="0.9" height="15.0" fill="rgb(213,114,37)" rx="2" ry="2" />
<text  x="1028.29" y="815.5" ></text>
</g>
<g >
<title>[libc-2.28.so] (1 samples, 0.08%)</title><rect x="993.8" y="837" width="0.9" height="15.0" fill="rgb(246,103,30)" rx="2" ry="2" />
<text  x="996.78" y="847.5" ></text>
</g>
<g >
<title>clang::Sema::SubstType (1 samples, 0.08%)</title><rect x="673.4" y="933" width="0.9" height="15.0" fill="rgb(250,4,22)" rx="2" ry="2" />
<text  x="676.36" y="943.5" ></text>
</g>
<g >
<title>cling::MetaParser::isXCommand (7 samples, 0.53%)</title><rect x="831.8" y="821" width="6.3" height="15.0" fill="rgb(221,17,29)" rx="2" ry="2" />
<text  x="834.77" y="831.5" ></text>
</g>
<g >
<title>clang::ASTContext::getTypeInfoImpl (1 samples, 0.08%)</title><rect x="1013.6" y="757" width="0.9" height="15.0" fill="rgb(227,150,37)" rx="2" ry="2" />
<text  x="1016.59" y="767.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::createAddRecFromPHI (1 samples, 0.08%)</title><rect x="1118.0" y="677" width="0.9" height="15.0" fill="rgb(212,90,25)" rx="2" ry="2" />
<text  x="1120.99" y="687.5" ></text>
</g>
<g >
<title>ROOT::Detail::RDF::RLoopManager::RunTreeReader (205 samples, 15.64%)</title><rect x="262.0" y="933" width="184.5" height="15.0" fill="rgb(214,26,33)" rx="2" ry="2" />
<text  x="265.02" y="943.5" >ROOT::Detail::RDF::RLoop..</text>
</g>
<g >
<title>clang::ASTDeclReader::VisitRedeclarableTemplateDecl (1 samples, 0.08%)</title><rect x="1083.8" y="757" width="0.9" height="15.0" fill="rgb(221,6,33)" rx="2" ry="2" />
<text  x="1086.79" y="767.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1183.7" y="677" width="0.9" height="15.0" fill="rgb(206,55,32)" rx="2" ry="2" />
<text  x="1186.70" y="687.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::destroyCXXObject (1 samples, 0.08%)</title><rect x="1019.0" y="645" width="0.9" height="15.0" fill="rgb(210,45,9)" rx="2" ry="2" />
<text  x="1021.99" y="655.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.08%)</title><rect x="639.2" y="773" width="0.9" height="15.0" fill="rgb(227,95,41)" rx="2" ry="2" />
<text  x="642.15" y="783.5" ></text>
</g>
<g >
<title>llvm::AAResultsWrapperPass::runOnFunction (5 samples, 0.38%)</title><rect x="898.4" y="597" width="4.5" height="15.0" fill="rgb(240,27,37)" rx="2" ry="2" />
<text  x="901.38" y="607.5" ></text>
</g>
<g >
<title>_dlerror_run (1 samples, 0.08%)</title><rect x="865.1" y="581" width="0.9" height="15.0" fill="rgb(224,80,47)" rx="2" ry="2" />
<text  x="868.07" y="591.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTSIInObjectScope (1 samples, 0.08%)</title><rect x="1065.8" y="725" width="0.9" height="15.0" fill="rgb(252,95,15)" rx="2" ry="2" />
<text  x="1068.79" y="735.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition (1 samples, 0.08%)</title><rect x="1084.7" y="805" width="0.9" height="15.0" fill="rgb(229,46,17)" rx="2" ry="2" />
<text  x="1087.69" y="815.5" ></text>
</g>
<g >
<title>clang::FunctionDecl::getBody (1 samples, 0.08%)</title><rect x="1022.6" y="741" width="0.9" height="15.0" fill="rgb(206,2,9)" rx="2" ry="2" />
<text  x="1025.59" y="751.5" ></text>
</g>
<g >
<title>llvm::X86FrameLowering::hasFP (1 samples, 0.08%)</title><rect x="713.0" y="517" width="0.9" height="15.0" fill="rgb(215,44,34)" rx="2" ry="2" />
<text  x="715.96" y="527.5" ></text>
</g>
<g >
<title>TListOfDataMembers::Unload (1 samples, 0.08%)</title><rect x="857.9" y="805" width="0.9" height="15.0" fill="rgb(242,167,33)" rx="2" ry="2" />
<text  x="860.87" y="815.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::computeTotalAllocSize (2 samples, 0.15%)</title><rect x="258.4" y="741" width="1.8" height="15.0" fill="rgb(215,185,47)" rx="2" ry="2" />
<text  x="261.42" y="751.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::GetAddrOfGlobal (1 samples, 0.08%)</title><rect x="1112.6" y="597" width="0.9" height="15.0" fill="rgb(218,212,50)" rx="2" ry="2" />
<text  x="1115.59" y="607.5" ></text>
</g>
<g >
<title>clang::Sema::SetCtorInitializers (1 samples, 0.08%)</title><rect x="1083.8" y="885" width="0.9" height="15.0" fill="rgb(254,94,26)" rx="2" ry="2" />
<text  x="1086.79" y="895.5" ></text>
</g>
<g >
<title>HandleInterpreterException (175 samples, 13.35%)</title><rect x="674.3" y="901" width="157.5" height="15.0" fill="rgb(217,61,41)" rx="2" ry="2" />
<text  x="677.26" y="911.5" >HandleInterpreterExc..</text>
</g>
<g >
<title>[bash] (22 samples, 1.68%)</title><rect x="15.4" y="629" width="19.8" height="15.0" fill="rgb(230,204,41)" rx="2" ry="2" />
<text  x="18.40" y="639.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke (3 samples, 0.23%)</title><rect x="1127.0" y="933" width="2.7" height="15.0" fill="rgb(225,80,26)" rx="2" ry="2" />
<text  x="1129.99" y="943.5" ></text>
</g>
<g >
<title>cling::Interpreter::executeTransaction (1 samples, 0.08%)</title><rect x="203.5" y="789" width="0.9" height="15.0" fill="rgb(223,91,29)" rx="2" ry="2" />
<text  x="206.52" y="799.5" ></text>
</g>
<g >
<title>_dlerror_run (1 samples, 0.08%)</title><rect x="202.6" y="421" width="0.9" height="15.0" fill="rgb(226,146,15)" rx="2" ry="2" />
<text  x="205.62" y="431.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::Compile (2 samples, 0.15%)</title><rect x="855.2" y="677" width="1.8" height="15.0" fill="rgb(241,58,48)" rx="2" ry="2" />
<text  x="858.17" y="687.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitIgnoredExpr (1 samples, 0.08%)</title><rect x="1019.9" y="869" width="0.9" height="15.0" fill="rgb(210,32,36)" rx="2" ry="2" />
<text  x="1022.89" y="879.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::loadObjectImpl (4 samples, 0.31%)</title><rect x="258.4" y="757" width="3.6" height="15.0" fill="rgb(225,65,24)" rx="2" ry="2" />
<text  x="261.42" y="767.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="43.3" y="773" width="0.9" height="15.0" fill="rgb(236,215,19)" rx="2" ry="2" />
<text  x="46.30" y="783.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit (1 samples, 0.08%)</title><rect x="1051.4" y="709" width="0.9" height="15.0" fill="rgb(222,141,54)" rx="2" ry="2" />
<text  x="1054.39" y="719.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke (5 samples, 0.38%)</title><rect x="1102.7" y="773" width="4.5" height="15.0" fill="rgb(221,2,17)" rx="2" ry="2" />
<text  x="1105.69" y="783.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="946.1" y="789" width="0.9" height="15.0" fill="rgb(251,171,9)" rx="2" ry="2" />
<text  x="949.08" y="799.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="10.0" y="805" width="0.9" height="15.0" fill="rgb(228,15,42)" rx="2" ry="2" />
<text  x="13.00" y="815.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitTypeAliasDecl (1 samples, 0.08%)</title><rect x="1012.7" y="565" width="0.9" height="15.0" fill="rgb(238,168,34)" rx="2" ry="2" />
<text  x="1015.68" y="575.5" ></text>
</g>
<g >
<title>clang::TypeLocBuilder::getTypeSourceInfo (1 samples, 0.08%)</title><rect x="1074.8" y="597" width="0.9" height="15.0" fill="rgb(240,199,49)" rx="2" ry="2" />
<text  x="1077.79" y="607.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.08%)</title><rect x="35.2" y="325" width="0.9" height="15.0" fill="rgb(253,229,1)" rx="2" ry="2" />
<text  x="38.20" y="335.5" ></text>
</g>
<g >
<title>getHashValueImpl (1 samples, 0.08%)</title><rect x="807.5" y="661" width="0.9" height="15.0" fill="rgb(235,164,33)" rx="2" ry="2" />
<text  x="810.47" y="671.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::executeWrapper (5 samples, 0.38%)</title><rect x="1113.5" y="901" width="4.5" height="15.0" fill="rgb(236,36,14)" rx="2" ry="2" />
<text  x="1116.49" y="911.5" ></text>
</g>
<g >
<title>llvm::FindAvailablePtrLoadStore (1 samples, 0.08%)</title><rect x="814.7" y="597" width="0.9" height="15.0" fill="rgb(232,208,47)" rx="2" ry="2" />
<text  x="817.67" y="607.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformFunctionTypeParams (1 samples, 0.08%)</title><rect x="1060.4" y="773" width="0.9" height="15.0" fill="rgb(228,227,21)" rx="2" ry="2" />
<text  x="1063.39" y="783.5" ></text>
</g>
<g >
<title>TROOT::InitInterpreter (69 samples, 5.26%)</title><rect x="929.0" y="901" width="62.1" height="15.0" fill="rgb(234,200,16)" rx="2" ry="2" />
<text  x="931.98" y="911.5" >TROOT:..</text>
</g>
<g >
<title>llvm::AttributeList::hasAttribute (1 samples, 0.08%)</title><rect x="221.5" y="629" width="0.9" height="15.0" fill="rgb(244,181,27)" rx="2" ry="2" />
<text  x="224.52" y="639.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitSimpleStmt (1 samples, 0.08%)</title><rect x="1019.0" y="837" width="0.9" height="15.0" fill="rgb(241,42,9)" rx="2" ry="2" />
<text  x="1021.99" y="847.5" ></text>
</g>
<g >
<title>llvm::orc::lookupWithLegacyFn&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}::operator()(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;) const::{lambda(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)#1}&gt; (1 samples, 0.08%)</title><rect x="1120.7" y="885" width="0.9" height="15.0" fill="rgb(241,102,33)" rx="2" ry="2" />
<text  x="1123.69" y="895.5" ></text>
</g>
<g >
<title>clang::Lexer::LexTokenInternal (1 samples, 0.08%)</title><rect x="942.5" y="709" width="0.9" height="15.0" fill="rgb(230,11,24)" rx="2" ry="2" />
<text  x="945.48" y="719.5" ></text>
</g>
<g >
<title>dlsym_doit (1 samples, 0.08%)</title><rect x="865.1" y="533" width="0.9" height="15.0" fill="rgb(215,144,3)" rx="2" ry="2" />
<text  x="868.07" y="543.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitTypedefNameDecl (1 samples, 0.08%)</title><rect x="1012.7" y="549" width="0.9" height="15.0" fill="rgb(235,39,53)" rx="2" ry="2" />
<text  x="1015.68" y="559.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertType (1 samples, 0.08%)</title><rect x="1049.6" y="885" width="0.9" height="15.0" fill="rgb(209,12,14)" rx="2" ry="2" />
<text  x="1052.59" y="895.5" ></text>
</g>
<g >
<title>llvm::TargetOptions::DisableFramePointerElim (1 samples, 0.08%)</title><rect x="252.1" y="693" width="0.9" height="15.0" fill="rgb(205,84,20)" rx="2" ry="2" />
<text  x="255.12" y="703.5" ></text>
</g>
<g >
<title>llvm::SCEVExpander::expandCodeFor (1 samples, 0.08%)</title><rect x="671.6" y="933" width="0.9" height="15.0" fill="rgb(245,212,13)" rx="2" ry="2" />
<text  x="674.56" y="943.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.08%)</title><rect x="1037.0" y="533" width="0.9" height="15.0" fill="rgb(216,20,3)" rx="2" ry="2" />
<text  x="1039.99" y="543.5" ></text>
</g>
<g >
<title>clang::Parser::ParseCastExpression (1 samples, 0.08%)</title><rect x="1052.3" y="901" width="0.9" height="15.0" fill="rgb(231,119,10)" rx="2" ry="2" />
<text  x="1055.29" y="911.5" ></text>
</g>
<g >
<title>cling::Interpreter::RunFunction (1 samples, 0.08%)</title><rect x="854.3" y="821" width="0.9" height="15.0" fill="rgb(248,127,24)" rx="2" ry="2" />
<text  x="857.27" y="831.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateArgument (1 samples, 0.08%)</title><rect x="1074.8" y="805" width="0.9" height="15.0" fill="rgb(218,225,46)" rx="2" ry="2" />
<text  x="1077.79" y="815.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.08%)</title><rect x="923.6" y="565" width="0.9" height="15.0" fill="rgb(232,133,19)" rx="2" ry="2" />
<text  x="926.58" y="575.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.08%)</title><rect x="673.4" y="709" width="0.9" height="15.0" fill="rgb(240,84,24)" rx="2" ry="2" />
<text  x="676.36" y="719.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke (138 samples, 10.53%)</title><rect x="674.3" y="773" width="124.2" height="15.0" fill="rgb(237,151,19)" rx="2" ry="2" />
<text  x="677.26" y="783.5" >std::_Function_..</text>
</g>
<g >
<title>llvm::AliasSetTracker::addUnknown (1 samples, 0.08%)</title><rect x="829.1" y="629" width="0.9" height="15.0" fill="rgb(252,15,27)" rx="2" ry="2" />
<text  x="832.07" y="639.5" ></text>
</g>
<g >
<title>llvm::X86Subtarget::getTargetLowering (1 samples, 0.08%)</title><rect x="745.4" y="565" width="0.9" height="15.0" fill="rgb(241,117,45)" rx="2" ry="2" />
<text  x="748.36" y="575.5" ></text>
</g>
<g >
<title>execute_command_internal (4 samples, 0.31%)</title><rect x="36.1" y="293" width="3.6" height="15.0" fill="rgb(214,131,4)" rx="2" ry="2" />
<text  x="39.10" y="303.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertType (1 samples, 0.08%)</title><rect x="1049.6" y="821" width="0.9" height="15.0" fill="rgb(247,209,23)" rx="2" ry="2" />
<text  x="1052.59" y="831.5" ></text>
</g>
<g >
<title>TROOT::TROOT (6 samples, 0.46%)</title><rect x="1001.9" y="837" width="5.4" height="15.0" fill="rgb(248,225,51)" rx="2" ry="2" />
<text  x="1004.88" y="847.5" ></text>
</g>
<g >
<title>TClass::BuildRealData (1 samples, 0.08%)</title><rect x="447.4" y="805" width="0.9" height="15.0" fill="rgb(212,61,16)" rx="2" ry="2" />
<text  x="450.44" y="815.5" ></text>
</g>
<g >
<title>TCling::Load (1 samples, 0.08%)</title><rect x="202.6" y="485" width="0.9" height="15.0" fill="rgb(220,156,2)" rx="2" ry="2" />
<text  x="205.62" y="495.5" ></text>
</g>
<g >
<title>[bash] (22 samples, 1.68%)</title><rect x="15.4" y="613" width="19.8" height="15.0" fill="rgb(228,15,17)" rx="2" ry="2" />
<text  x="18.40" y="623.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitAggExpr (1 samples, 0.08%)</title><rect x="1014.5" y="709" width="0.9" height="15.0" fill="rgb(239,38,20)" rx="2" ry="2" />
<text  x="1017.49" y="719.5" ></text>
</g>
<g >
<title>llvm::X86TargetMachine::getSubtargetImpl (1 samples, 0.08%)</title><rect x="227.8" y="709" width="0.9" height="15.0" fill="rgb(221,44,30)" rx="2" ry="2" />
<text  x="230.82" y="719.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddType (1 samples, 0.08%)</title><rect x="1094.6" y="629" width="0.9" height="15.0" fill="rgb(210,109,27)" rx="2" ry="2" />
<text  x="1097.59" y="639.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="990.2" y="709" width="0.9" height="15.0" fill="rgb(213,31,7)" rx="2" ry="2" />
<text  x="993.18" y="719.5" ></text>
</g>
<g >
<title>llvm::SelectionDAG::clear (1 samples, 0.08%)</title><rect x="841.7" y="533" width="0.9" height="15.0" fill="rgb(208,88,32)" rx="2" ry="2" />
<text  x="844.67" y="543.5" ></text>
</g>
<g >
<title>fgets (3 samples, 0.23%)</title><rect x="992.9" y="869" width="2.7" height="15.0" fill="rgb(254,71,6)" rx="2" ry="2" />
<text  x="995.88" y="879.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyld::finalizeWithMemoryManagerLocking (1 samples, 0.08%)</title><rect x="202.6" y="661" width="0.9" height="15.0" fill="rgb(235,20,12)" rx="2" ry="2" />
<text  x="205.62" y="671.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::arrangeCXXMethodType (1 samples, 0.08%)</title><rect x="1013.6" y="821" width="0.9" height="15.0" fill="rgb(206,195,26)" rx="2" ry="2" />
<text  x="1016.59" y="831.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentScopeDeclRefExpr (1 samples, 0.08%)</title><rect x="1075.7" y="741" width="0.9" height="15.0" fill="rgb(254,195,7)" rx="2" ry="2" />
<text  x="1078.69" y="751.5" ></text>
</g>
<g >
<title>clang::CodeGen::ConstantEmitter::tryEmitPrivateForVarInit (1 samples, 0.08%)</title><rect x="1023.5" y="757" width="0.9" height="15.0" fill="rgb(242,49,52)" rx="2" ry="2" />
<text  x="1026.49" y="767.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (1 samples, 0.08%)</title><rect x="1092.8" y="917" width="0.9" height="15.0" fill="rgb(245,138,28)" rx="2" ry="2" />
<text  x="1095.79" y="927.5" ></text>
</g>
<g >
<title>clang::CXXRecordDecl::DefinitionData::getBasesSlowCase (1 samples, 0.08%)</title><rect x="1066.7" y="837" width="0.9" height="15.0" fill="rgb(226,58,46)" rx="2" ry="2" />
<text  x="1069.69" y="847.5" ></text>
</g>
<g >
<title>clang::ASTContext::getLValueReferenceType (1 samples, 0.08%)</title><rect x="1089.2" y="597" width="0.9" height="15.0" fill="rgb(221,210,9)" rx="2" ry="2" />
<text  x="1092.19" y="607.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="990.2" y="629" width="0.9" height="15.0" fill="rgb(247,208,11)" rx="2" ry="2" />
<text  x="993.18" y="639.5" ></text>
</g>
<g >
<title>llvm::orc::SimpleCompiler::operator() (1 samples, 0.08%)</title><rect x="854.3" y="645" width="0.9" height="15.0" fill="rgb(245,171,16)" rx="2" ry="2" />
<text  x="857.27" y="655.5" ></text>
</g>
<g >
<title>llvm::isFreeCall (2 samples, 0.15%)</title><rect x="809.3" y="597" width="1.8" height="15.0" fill="rgb(216,163,39)" rx="2" ry="2" />
<text  x="812.27" y="607.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTSIInObjectScope (2 samples, 0.15%)</title><rect x="1094.6" y="741" width="1.8" height="15.0" fill="rgb(242,39,35)" rx="2" ry="2" />
<text  x="1097.59" y="751.5" ></text>
</g>
<g >
<title>llvm::SimplifyCall (1 samples, 0.08%)</title><rect x="814.7" y="517" width="0.9" height="15.0" fill="rgb(207,101,9)" rx="2" ry="2" />
<text  x="817.67" y="527.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization (1 samples, 0.08%)</title><rect x="1074.8" y="677" width="0.9" height="15.0" fill="rgb(242,169,10)" rx="2" ry="2" />
<text  x="1077.79" y="687.5" ></text>
</g>
<g >
<title>clang::ASTReader::readTypeRecord (1 samples, 0.08%)</title><rect x="1071.2" y="661" width="0.9" height="15.0" fill="rgb(205,197,34)" rx="2" ry="2" />
<text  x="1074.19" y="671.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateArgument (1 samples, 0.08%)</title><rect x="1065.8" y="805" width="0.9" height="15.0" fill="rgb(229,181,15)" rx="2" ry="2" />
<text  x="1068.79" y="815.5" ></text>
</g>
<g >
<title>clang::Sema::SubstType (1 samples, 0.08%)</title><rect x="673.4" y="853" width="0.9" height="15.0" fill="rgb(242,113,29)" rx="2" ry="2" />
<text  x="676.36" y="863.5" ></text>
</g>
<g >
<title>ROOT::Internal::RDF::GetBranchNames[abi:cxx11] (3 samples, 0.23%)</title><rect x="446.5" y="917" width="2.7" height="15.0" fill="rgb(237,206,39)" rx="2" ry="2" />
<text  x="449.54" y="927.5" ></text>
</g>
<g >
<title>clang::ASTRecordReader::readRecord (1 samples, 0.08%)</title><rect x="1051.4" y="501" width="0.9" height="15.0" fill="rgb(248,217,4)" rx="2" ry="2" />
<text  x="1054.39" y="511.5" ></text>
</g>
<g >
<title>llvm::InstrEmitter::EmitSpecialNode (2 samples, 0.15%)</title><rect x="1104.5" y="597" width="1.8" height="15.0" fill="rgb(209,226,32)" rx="2" ry="2" />
<text  x="1107.49" y="607.5" ></text>
</g>
<g >
<title>clang::Sema::BuildDeclRefExpr (1 samples, 0.08%)</title><rect x="1079.3" y="629" width="0.9" height="15.0" fill="rgb(229,69,48)" rx="2" ry="2" />
<text  x="1082.29" y="639.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitSimpleStmt (1 samples, 0.08%)</title><rect x="1023.5" y="869" width="0.9" height="15.0" fill="rgb(233,186,3)" rx="2" ry="2" />
<text  x="1026.49" y="879.5" ></text>
</g>
<g >
<title>llvm::MemorySSA::verifyMemorySSA (1 samples, 0.08%)</title><rect x="884.9" y="597" width="0.9" height="15.0" fill="rgb(242,84,28)" rx="2" ry="2" />
<text  x="887.87" y="607.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition (5 samples, 0.38%)</title><rect x="1077.5" y="917" width="4.5" height="15.0" fill="rgb(221,181,43)" rx="2" ry="2" />
<text  x="1080.49" y="927.5" ></text>
</g>
<g >
<title>all (1,311 samples, 100%)</title><rect x="10.0" y="981" width="1180.0" height="15.0" fill="rgb(212,125,32)" rx="2" ry="2" />
<text  x="13.00" y="991.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl (1 samples, 0.08%)</title><rect x="1073.0" y="693" width="0.9" height="15.0" fill="rgb(230,141,4)" rx="2" ry="2" />
<text  x="1075.99" y="703.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitReferenceBindingToExpr (1 samples, 0.08%)</title><rect x="1014.5" y="565" width="0.9" height="15.0" fill="rgb(213,227,49)" rx="2" ry="2" />
<text  x="1017.49" y="575.5" ></text>
</g>
<g >
<title>llvm::Attribute::hasAttribute (1 samples, 0.08%)</title><rect x="248.5" y="677" width="0.9" height="15.0" fill="rgb(228,174,12)" rx="2" ry="2" />
<text  x="251.52" y="687.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;inferAttrsFromFunctionBodies(llvm::SmallSetVector&lt;llvm::Function*, 8u&gt; const&amp;)::{lambda(llvm::Instruction&amp;)#5}&gt;::_M_manager (1 samples, 0.08%)</title><rect x="803.0" y="677" width="0.9" height="15.0" fill="rgb(228,208,33)" rx="2" ry="2" />
<text  x="805.97" y="687.5" ></text>
</g>
<g >
<title>cling::Interpreter::DeclareInternal (2 samples, 0.15%)</title><rect x="1111.7" y="853" width="1.8" height="15.0" fill="rgb(215,26,49)" rx="2" ry="2" />
<text  x="1114.69" y="863.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::setGVPropertiesAux (1 samples, 0.08%)</title><rect x="1016.3" y="629" width="0.9" height="15.0" fill="rgb(244,183,25)" rx="2" ry="2" />
<text  x="1019.29" y="639.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl (1 samples, 0.08%)</title><rect x="1100.0" y="853" width="0.9" height="15.0" fill="rgb(228,119,46)" rx="2" ry="2" />
<text  x="1102.99" y="863.5" ></text>
</g>
<g >
<title>_dl_relocate_object (1 samples, 0.08%)</title><rect x="1142.3" y="885" width="0.9" height="15.0" fill="rgb(229,101,3)" rx="2" ry="2" />
<text  x="1145.30" y="895.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1151.3" y="741" width="0.9" height="15.0" fill="rgb(247,142,49)" rx="2" ry="2" />
<text  x="1154.30" y="751.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition (1 samples, 0.08%)</title><rect x="1040.6" y="789" width="0.9" height="15.0" fill="rgb(208,54,33)" rx="2" ry="2" />
<text  x="1043.59" y="799.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.08%)</title><rect x="1001.9" y="533" width="0.9" height="15.0" fill="rgb(205,179,10)" rx="2" ry="2" />
<text  x="1004.88" y="543.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (7 samples, 0.53%)</title><rect x="1033.4" y="789" width="6.3" height="15.0" fill="rgb(213,224,19)" rx="2" ry="2" />
<text  x="1036.39" y="799.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="956.9" y="725" width="0.9" height="15.0" fill="rgb(241,88,11)" rx="2" ry="2" />
<text  x="959.88" y="735.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord (1 samples, 0.08%)</title><rect x="1010.0" y="949" width="0.9" height="15.0" fill="rgb(230,9,18)" rx="2" ry="2" />
<text  x="1012.98" y="959.5" ></text>
</g>
<g >
<title>llvm::SROA::rewritePartition (2 samples, 0.15%)</title><rect x="800.3" y="581" width="1.8" height="15.0" fill="rgb(236,49,4)" rx="2" ry="2" />
<text  x="803.27" y="591.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGBuilder::visit (1 samples, 0.08%)</title><rect x="1128.8" y="789" width="0.9" height="15.0" fill="rgb(237,119,26)" rx="2" ry="2" />
<text  x="1131.79" y="799.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentScopeDeclRefExpr (1 samples, 0.08%)</title><rect x="1088.3" y="805" width="0.9" height="15.0" fill="rgb(232,90,31)" rx="2" ry="2" />
<text  x="1091.29" y="815.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.08%)</title><rect x="35.2" y="469" width="0.9" height="15.0" fill="rgb(242,137,11)" rx="2" ry="2" />
<text  x="38.20" y="479.5" ></text>
</g>
<g >
<title>llvm::BlockFrequencyInfoImpl&lt;llvm::MachineBasicBlock&gt;::calculate (2 samples, 0.15%)</title><rect x="694.1" y="517" width="1.8" height="15.0" fill="rgb(226,87,10)" rx="2" ry="2" />
<text  x="697.06" y="527.5" ></text>
</g>
<g >
<title>clang::RedeclarableTemplateDecl::loadLazySpecializationsImpl (1 samples, 0.08%)</title><rect x="1097.3" y="645" width="0.9" height="15.0" fill="rgb(250,167,17)" rx="2" ry="2" />
<text  x="1100.29" y="655.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::isImpliedCond (1 samples, 0.08%)</title><rect x="853.4" y="629" width="0.9" height="15.0" fill="rgb(237,207,46)" rx="2" ry="2" />
<text  x="856.37" y="639.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.08%)</title><rect x="1024.4" y="805" width="0.9" height="15.0" fill="rgb(229,43,48)" rx="2" ry="2" />
<text  x="1027.39" y="815.5" ></text>
</g>
<g >
<title>clang::Preprocessor::ReadOptionalMacroParameterListAndBody (1 samples, 0.08%)</title><rect x="941.6" y="693" width="0.9" height="15.0" fill="rgb(248,108,45)" rx="2" ry="2" />
<text  x="944.58" y="703.5" ></text>
</g>
<g >
<title>clang::Parser::ParseAssignmentExpression (1 samples, 0.08%)</title><rect x="1052.3" y="917" width="0.9" height="15.0" fill="rgb(227,61,12)" rx="2" ry="2" />
<text  x="1055.29" y="927.5" ></text>
</g>
<g >
<title>llvm::BlockFrequencyInfo::calculate (1 samples, 0.08%)</title><rect x="238.6" y="725" width="0.9" height="15.0" fill="rgb(207,136,43)" rx="2" ry="2" />
<text  x="241.62" y="735.5" ></text>
</g>
<g >
<title>_dl_start (1 samples, 0.08%)</title><rect x="200.8" y="933" width="0.9" height="15.0" fill="rgb(245,228,21)" rx="2" ry="2" />
<text  x="203.82" y="943.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitAutoVarDecl (1 samples, 0.08%)</title><rect x="1015.4" y="485" width="0.9" height="15.0" fill="rgb(206,69,2)" rx="2" ry="2" />
<text  x="1018.39" y="495.5" ></text>
</g>
<g >
<title>llvm::InstructionCombiningPass::runOnFunction (1 samples, 0.08%)</title><rect x="857.0" y="645" width="0.9" height="15.0" fill="rgb(231,115,6)" rx="2" ry="2" />
<text  x="859.97" y="655.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::getMangledName (1 samples, 0.08%)</title><rect x="1091.9" y="597" width="0.9" height="15.0" fill="rgb(237,84,47)" rx="2" ry="2" />
<text  x="1094.89" y="607.5" ></text>
</g>
<g >
<title>clang::TemplateDeclInstantiator::VisitFunctionTemplateDecl (1 samples, 0.08%)</title><rect x="1057.7" y="853" width="0.9" height="15.0" fill="rgb(240,89,9)" rx="2" ry="2" />
<text  x="1060.69" y="863.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::FinishFunction (1 samples, 0.08%)</title><rect x="1039.7" y="741" width="0.9" height="15.0" fill="rgb(219,99,1)" rx="2" ry="2" />
<text  x="1042.69" y="751.5" ></text>
</g>
<g >
<title>clang::Sema::PerformPendingInstantiations (3 samples, 0.23%)</title><rect x="1078.4" y="869" width="2.7" height="15.0" fill="rgb(248,89,8)" rx="2" ry="2" />
<text  x="1081.39" y="879.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.08%)</title><rect x="673.4" y="821" width="0.9" height="15.0" fill="rgb(211,134,52)" rx="2" ry="2" />
<text  x="676.36" y="831.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (2 samples, 0.15%)</title><rect x="1060.4" y="885" width="1.8" height="15.0" fill="rgb(227,89,19)" rx="2" ry="2" />
<text  x="1063.39" y="895.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGBuilder::visitCall (1 samples, 0.08%)</title><rect x="1128.8" y="773" width="0.9" height="15.0" fill="rgb(231,123,38)" rx="2" ry="2" />
<text  x="1131.79" y="783.5" ></text>
</g>
<g >
<title>llvm::MachinePostDominatorTree::runOnMachineFunction (2 samples, 0.15%)</title><rect x="704.0" y="549" width="1.8" height="15.0" fill="rgb(243,213,15)" rx="2" ry="2" />
<text  x="706.96" y="559.5" ></text>
</g>
<g >
<title>_dl_relocate_object (1 samples, 0.08%)</title><rect x="991.1" y="741" width="0.9" height="15.0" fill="rgb(211,13,36)" rx="2" ry="2" />
<text  x="994.08" y="751.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::verifyPreservedAnalysis (4 samples, 0.31%)</title><rect x="232.3" y="741" width="3.6" height="15.0" fill="rgb(223,209,47)" rx="2" ry="2" />
<text  x="235.32" y="751.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1146.8" y="837" width="0.9" height="15.0" fill="rgb(246,111,2)" rx="2" ry="2" />
<text  x="1149.80" y="847.5" ></text>
</g>
<g >
<title>clang::Preprocessor::Lex (1 samples, 0.08%)</title><rect x="942.5" y="629" width="0.9" height="15.0" fill="rgb(212,145,24)" rx="2" ry="2" />
<text  x="945.48" y="639.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnModule (22 samples, 1.68%)</title><rect x="238.6" y="773" width="19.8" height="15.0" fill="rgb(218,163,45)" rx="2" ry="2" />
<text  x="241.62" y="783.5" ></text>
</g>
<g >
<title>llvm::MCAssembler::Finish (2 samples, 0.15%)</title><rect x="676.1" y="549" width="1.8" height="15.0" fill="rgb(252,62,16)" rx="2" ry="2" />
<text  x="679.06" y="559.5" ></text>
</g>
<g >
<title>clang::NamedDecl::getLinkageInternal (1 samples, 0.08%)</title><rect x="1035.2" y="533" width="0.9" height="15.0" fill="rgb(239,202,40)" rx="2" ry="2" />
<text  x="1038.19" y="543.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (3 samples, 0.23%)</title><rect x="1015.4" y="821" width="2.7" height="15.0" fill="rgb(218,19,33)" rx="2" ry="2" />
<text  x="1018.39" y="831.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (1 samples, 0.08%)</title><rect x="1129.7" y="917" width="0.9" height="15.0" fill="rgb(211,68,50)" rx="2" ry="2" />
<text  x="1132.69" y="927.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalDefinition (2 samples, 0.15%)</title><rect x="1041.5" y="821" width="1.8" height="15.0" fill="rgb(239,183,50)" rx="2" ry="2" />
<text  x="1044.49" y="831.5" ></text>
</g>
<g >
<title>llvm::AttributeSetNode::hasAttribute (1 samples, 0.08%)</title><rect x="848.0" y="533" width="0.9" height="15.0" fill="rgb(246,11,38)" rx="2" ry="2" />
<text  x="850.97" y="543.5" ></text>
</g>
<g >
<title>cling::MetaSema::actOnxCommand (76 samples, 5.80%)</title><rect x="860.6" y="773" width="68.4" height="15.0" fill="rgb(225,51,47)" rx="2" ry="2" />
<text  x="863.57" y="783.5" >cling::..</text>
</g>
<g >
<title>clang::Parser::isCXXTypeId (1 samples, 0.08%)</title><rect x="1109.0" y="709" width="0.9" height="15.0" fill="rgb(233,124,38)" rx="2" ry="2" />
<text  x="1111.99" y="719.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl (3 samples, 0.23%)</title><rect x="1056.8" y="901" width="2.7" height="15.0" fill="rgb(239,137,25)" rx="2" ry="2" />
<text  x="1059.79" y="911.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitVarDecl (1 samples, 0.08%)</title><rect x="1015.4" y="501" width="0.9" height="15.0" fill="rgb(205,1,51)" rx="2" ry="2" />
<text  x="1018.39" y="511.5" ></text>
</g>
<g >
<title>cling::MetaProcessor::process (175 samples, 13.35%)</title><rect x="674.3" y="885" width="157.5" height="15.0" fill="rgb(245,85,39)" rx="2" ry="2" />
<text  x="677.26" y="895.5" >cling::MetaProcessor..</text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (3 samples, 0.23%)</title><rect x="1098.2" y="933" width="2.7" height="15.0" fill="rgb(240,215,8)" rx="2" ry="2" />
<text  x="1101.19" y="943.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyld::finalizeWithMemoryManagerLocking (138 samples, 10.53%)</title><rect x="674.3" y="741" width="124.2" height="15.0" fill="rgb(240,57,10)" rx="2" ry="2" />
<text  x="677.26" y="751.5" >llvm::RuntimeDy..</text>
</g>
<g >
<title>llvm::AttributeList::addAttributes (1 samples, 0.08%)</title><rect x="1036.1" y="613" width="0.9" height="15.0" fill="rgb(247,3,17)" rx="2" ry="2" />
<text  x="1039.09" y="623.5" ></text>
</g>
<g >
<title>cling::Interpreter::PushTransactionRAII::pop (1 samples, 0.08%)</title><rect x="447.4" y="453" width="0.9" height="15.0" fill="rgb(226,5,49)" rx="2" ry="2" />
<text  x="450.44" y="463.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (7 samples, 0.53%)</title><rect x="1033.4" y="773" width="6.3" height="15.0" fill="rgb(236,49,15)" rx="2" ry="2" />
<text  x="1036.39" y="783.5" ></text>
</g>
<g >
<title>runImpl (2 samples, 0.15%)</title><rect x="819.2" y="677" width="1.8" height="15.0" fill="rgb(251,66,36)" rx="2" ry="2" />
<text  x="822.17" y="687.5" ></text>
</g>
<g >
<title>clang::Sema::PerformPendingInstantiations (1 samples, 0.08%)</title><rect x="1084.7" y="885" width="0.9" height="15.0" fill="rgb(210,80,19)" rx="2" ry="2" />
<text  x="1087.69" y="895.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::Initialize (1 samples, 0.08%)</title><rect x="941.6" y="805" width="0.9" height="15.0" fill="rgb(227,155,37)" rx="2" ry="2" />
<text  x="944.58" y="815.5" ></text>
</g>
<g >
<title>[bash] (5 samples, 0.38%)</title><rect x="10.9" y="453" width="4.5" height="15.0" fill="rgb(247,15,54)" rx="2" ry="2" />
<text  x="13.90" y="463.5" ></text>
</g>
<g >
<title>ROOT::Internal::RDF::RJittedAction::Run (5 samples, 0.38%)</title><rect x="371.8" y="853" width="4.5" height="15.0" fill="rgb(248,92,32)" rx="2" ry="2" />
<text  x="374.83" y="863.5" ></text>
</g>
<g >
<title>llvm::Function::getPersonalityFn (1 samples, 0.08%)</title><rect x="835.4" y="565" width="0.9" height="15.0" fill="rgb(244,92,28)" rx="2" ry="2" />
<text  x="838.37" y="575.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveExternalSymbols (1 samples, 0.08%)</title><rect x="1107.2" y="853" width="0.9" height="15.0" fill="rgb(240,158,39)" rx="2" ry="2" />
<text  x="1110.19" y="863.5" ></text>
</g>
<g >
<title>cling::Interpreter::DeclareInternal (76 samples, 5.80%)</title><rect x="860.6" y="725" width="68.4" height="15.0" fill="rgb(238,108,53)" rx="2" ry="2" />
<text  x="863.57" y="735.5" >cling::..</text>
</g>
<g >
<title>operator new (1 samples, 0.08%)</title><rect x="695.9" y="501" width="0.9" height="15.0" fill="rgb(224,24,47)" rx="2" ry="2" />
<text  x="698.86" y="511.5" ></text>
</g>
<g >
<title>llvm::MachineBlockFrequencyInfo::runOnMachineFunction (2 samples, 0.15%)</title><rect x="694.1" y="549" width="1.8" height="15.0" fill="rgb(206,228,36)" rx="2" ry="2" />
<text  x="697.06" y="559.5" ></text>
</g>
<g >
<title>llvm::orc::lookupWithLegacyFn&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}::operator()(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;) const::{lambda(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)#1}&gt; (11 samples, 0.84%)</title><rect x="839.9" y="693" width="9.9" height="15.0" fill="rgb(234,198,37)" rx="2" ry="2" />
<text  x="842.87" y="703.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::codeGenTransaction (1 samples, 0.08%)</title><rect x="1112.6" y="805" width="0.9" height="15.0" fill="rgb(219,161,39)" rx="2" ry="2" />
<text  x="1115.59" y="815.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition (3 samples, 0.23%)</title><rect x="1078.4" y="821" width="2.7" height="15.0" fill="rgb(242,118,16)" rx="2" ry="2" />
<text  x="1081.39" y="831.5" ></text>
</g>
<g >
<title>TCling::DataMemberInfo_Factory (1 samples, 0.08%)</title><rect x="448.3" y="421" width="0.9" height="15.0" fill="rgb(247,23,25)" rx="2" ry="2" />
<text  x="451.34" y="431.5" ></text>
</g>
<g >
<title>llvm::StringMapImpl::RehashTable (1 samples, 0.08%)</title><rect x="748.1" y="421" width="0.9" height="15.0" fill="rgb(208,149,35)" rx="2" ry="2" />
<text  x="751.06" y="431.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::computeSectionStubBufSize (24 samples, 1.83%)</title><rect x="751.7" y="549" width="21.6" height="15.0" fill="rgb(250,169,8)" rx="2" ry="2" />
<text  x="754.66" y="559.5" >l..</text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalDefinition (1 samples, 0.08%)</title><rect x="1036.1" y="677" width="0.9" height="15.0" fill="rgb(212,101,23)" rx="2" ry="2" />
<text  x="1039.09" y="687.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformFunctionTypeParams (1 samples, 0.08%)</title><rect x="1055.9" y="885" width="0.9" height="15.0" fill="rgb(227,160,2)" rx="2" ry="2" />
<text  x="1058.89" y="895.5" ></text>
</g>
<g >
<title>llvm::AttributeList::addParamAttribute (1 samples, 0.08%)</title><rect x="1091.0" y="725" width="0.9" height="15.0" fill="rgb(214,148,25)" rx="2" ry="2" />
<text  x="1093.99" y="735.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType (1 samples, 0.08%)</title><rect x="1073.9" y="629" width="0.9" height="15.0" fill="rgb(215,171,35)" rx="2" ry="2" />
<text  x="1076.89" y="639.5" ></text>
</g>
<g >
<title>cling::Interpreter::loadHeader (76 samples, 5.80%)</title><rect x="860.6" y="741" width="68.4" height="15.0" fill="rgb(252,186,30)" rx="2" ry="2" />
<text  x="863.57" y="751.5" >cling::..</text>
</g>
<g >
<title>LazyFunctionCreatorAutoloadForModule (1 samples, 0.08%)</title><rect x="202.6" y="533" width="0.9" height="15.0" fill="rgb(225,37,41)" rx="2" ry="2" />
<text  x="205.62" y="543.5" ></text>
</g>
<g >
<title>_dl_protect_relro (2 samples, 0.15%)</title><rect x="1150.4" y="869" width="1.8" height="15.0" fill="rgb(214,0,4)" rx="2" ry="2" />
<text  x="1153.40" y="879.5" ></text>
</g>
<g >
<title>TList::NewLink (1 samples, 0.08%)</title><rect x="1001.9" y="549" width="0.9" height="15.0" fill="rgb(252,41,33)" rx="2" ry="2" />
<text  x="1004.88" y="559.5" ></text>
</g>
<g >
<title>clang::DeclContext::collectAllContexts (1 samples, 0.08%)</title><rect x="1100.0" y="549" width="0.9" height="15.0" fill="rgb(233,21,22)" rx="2" ry="2" />
<text  x="1102.99" y="559.5" ></text>
</g>
<g >
<title>ROOT::TGenericClassInfo::~TGenericClassInfo (1 samples, 0.08%)</title><rect x="857.9" y="853" width="0.9" height="15.0" fill="rgb(238,130,23)" rx="2" ry="2" />
<text  x="860.87" y="863.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::FinishFunction (1 samples, 0.08%)</title><rect x="1017.2" y="677" width="0.9" height="15.0" fill="rgb(237,117,51)" rx="2" ry="2" />
<text  x="1020.19" y="687.5" ></text>
</g>
<g >
<title>[bash] (16 samples, 1.22%)</title><rect x="15.4" y="437" width="14.4" height="15.0" fill="rgb(206,195,3)" rx="2" ry="2" />
<text  x="18.40" y="447.5" ></text>
</g>
<g >
<title>llvm::AttrBuilder::AttrBuilder (1 samples, 0.08%)</title><rect x="1044.2" y="773" width="0.9" height="15.0" fill="rgb(239,81,30)" rx="2" ry="2" />
<text  x="1047.19" y="783.5" ></text>
</g>
<g >
<title>clang::Preprocessor::HandleIfDirective (1 samples, 0.08%)</title><rect x="942.5" y="677" width="0.9" height="15.0" fill="rgb(207,174,7)" rx="2" ry="2" />
<text  x="945.48" y="687.5" ></text>
</g>
<g >
<title>clang::InitializationSequence::Perform (1 samples, 0.08%)</title><rect x="1001.0" y="933" width="0.9" height="15.0" fill="rgb(249,22,54)" rx="2" ry="2" />
<text  x="1003.98" y="943.5" ></text>
</g>
<g >
<title>llvm::object::ELFFile&lt;llvm::object::ELFType&lt;(llvm::support::endianness)1, true&gt; &gt;::getSectionName (1 samples, 0.08%)</title><rect x="750.8" y="517" width="0.9" height="15.0" fill="rgb(221,63,35)" rx="2" ry="2" />
<text  x="753.76" y="527.5" ></text>
</g>
<g >
<title>llvm::LPPassManager::runOnFunction (1 samples, 0.08%)</title><rect x="230.5" y="741" width="0.9" height="15.0" fill="rgb(236,95,44)" rx="2" ry="2" />
<text  x="233.52" y="751.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExprs (1 samples, 0.08%)</title><rect x="1081.1" y="773" width="0.9" height="15.0" fill="rgb(254,44,35)" rx="2" ry="2" />
<text  x="1084.09" y="783.5" ></text>
</g>
<g >
<title>clang::DeclContext::lookup (1 samples, 0.08%)</title><rect x="1071.2" y="901" width="0.9" height="15.0" fill="rgb(224,157,41)" rx="2" ry="2" />
<text  x="1074.19" y="911.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveLocalRelocations (1 samples, 0.08%)</title><rect x="749.9" y="581" width="0.9" height="15.0" fill="rgb(243,105,23)" rx="2" ry="2" />
<text  x="752.86" y="591.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (1 samples, 0.08%)</title><rect x="831.8" y="629" width="0.9" height="15.0" fill="rgb(248,8,27)" rx="2" ry="2" />
<text  x="834.77" y="639.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::recordAvailableAnalysis (1 samples, 0.08%)</title><rect x="856.1" y="581" width="0.9" height="15.0" fill="rgb(215,208,3)" rx="2" ry="2" />
<text  x="859.07" y="591.5" ></text>
</g>
<g >
<title>clang::ASTReader::FindExternalLexicalDecls (1 samples, 0.08%)</title><rect x="448.3" y="293" width="0.9" height="15.0" fill="rgb(220,43,6)" rx="2" ry="2" />
<text  x="451.34" y="303.5" ></text>
</g>
<g >
<title>TBasket::ReadBasketBuffers (106 samples, 8.09%)</title><rect x="544.6" y="837" width="95.5" height="15.0" fill="rgb(221,188,54)" rx="2" ry="2" />
<text  x="547.65" y="847.5" >TBasket::Re..</text>
</g>
<g >
<title>getAsCarry (1 samples, 0.08%)</title><rect x="1127.0" y="773" width="0.9" height="15.0" fill="rgb(206,112,54)" rx="2" ry="2" />
<text  x="1129.99" y="783.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (1 samples, 0.08%)</title><rect x="678.8" y="517" width="0.9" height="15.0" fill="rgb(234,229,22)" rx="2" ry="2" />
<text  x="681.76" y="527.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.23%)</title><rect x="31.6" y="517" width="2.7" height="15.0" fill="rgb(211,181,26)" rx="2" ry="2" />
<text  x="34.60" y="527.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetType (1 samples, 0.08%)</title><rect x="1010.0" y="821" width="0.9" height="15.0" fill="rgb(228,107,35)" rx="2" ry="2" />
<text  x="1012.98" y="831.5" ></text>
</g>
<g >
<title>llvm::AttributeSetNode::get (1 samples, 0.08%)</title><rect x="1046.0" y="837" width="0.9" height="15.0" fill="rgb(208,195,17)" rx="2" ry="2" />
<text  x="1048.99" y="847.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.08%)</title><rect x="1087.4" y="613" width="0.9" height="15.0" fill="rgb(245,66,19)" rx="2" ry="2" />
<text  x="1090.39" y="623.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitFunctionTemplateDecl (1 samples, 0.08%)</title><rect x="1071.2" y="805" width="0.9" height="15.0" fill="rgb(206,66,24)" rx="2" ry="2" />
<text  x="1074.19" y="815.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl (1 samples, 0.08%)</title><rect x="1074.8" y="693" width="0.9" height="15.0" fill="rgb(223,28,11)" rx="2" ry="2" />
<text  x="1077.79" y="703.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="445.6" y="773" width="0.9" height="15.0" fill="rgb(239,219,31)" rx="2" ry="2" />
<text  x="448.64" y="783.5" ></text>
</g>
<g >
<title>clang::DeclRefExpr::DeclRefExpr (1 samples, 0.08%)</title><rect x="1095.5" y="533" width="0.9" height="15.0" fill="rgb(247,37,18)" rx="2" ry="2" />
<text  x="1098.49" y="543.5" ></text>
</g>
<g >
<title>TCling::ProcessLine (1 samples, 0.08%)</title><rect x="838.1" y="789" width="0.9" height="15.0" fill="rgb(236,103,45)" rx="2" ry="2" />
<text  x="841.07" y="799.5" ></text>
</g>
<g >
<title>llvm::FoldingSetBase::GrowBucketCount (1 samples, 0.08%)</title><rect x="1082.0" y="869" width="0.9" height="15.0" fill="rgb(217,119,52)" rx="2" ry="2" />
<text  x="1084.99" y="879.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.08%)</title><rect x="988.4" y="805" width="0.9" height="15.0" fill="rgb(247,184,43)" rx="2" ry="2" />
<text  x="991.38" y="815.5" ></text>
</g>
<g >
<title>llvm::TargetLowering::LowerCallTo (1 samples, 0.08%)</title><rect x="1121.6" y="917" width="0.9" height="15.0" fill="rgb(236,182,44)" rx="2" ry="2" />
<text  x="1124.59" y="927.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallee (1 samples, 0.08%)</title><rect x="1019.9" y="757" width="0.9" height="15.0" fill="rgb(253,37,45)" rx="2" ry="2" />
<text  x="1022.89" y="767.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (15 samples, 1.14%)</title><rect x="731.0" y="517" width="13.5" height="15.0" fill="rgb(218,56,0)" rx="2" ry="2" />
<text  x="733.96" y="527.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="931.7" y="629" width="0.9" height="15.0" fill="rgb(237,13,10)" rx="2" ry="2" />
<text  x="934.68" y="639.5" ></text>
</g>
<g >
<title>_dl_start (5 samples, 0.38%)</title><rect x="1138.7" y="933" width="4.5" height="15.0" fill="rgb(250,208,31)" rx="2" ry="2" />
<text  x="1141.70" y="943.5" ></text>
</g>
<g >
<title>llvm::orc::JITSymbolResolverAdapter::lookup (5 samples, 0.38%)</title><rect x="1102.7" y="821" width="4.5" height="15.0" fill="rgb(214,216,46)" rx="2" ry="2" />
<text  x="1105.69" y="831.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallee (1 samples, 0.08%)</title><rect x="1020.8" y="805" width="0.9" height="15.0" fill="rgb(232,34,46)" rx="2" ry="2" />
<text  x="1023.79" y="815.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTemplateIdType (1 samples, 0.08%)</title><rect x="1109.0" y="613" width="0.9" height="15.0" fill="rgb(210,155,51)" rx="2" ry="2" />
<text  x="1111.99" y="623.5" ></text>
</g>
<g >
<title>clang::ASTReader::readTypeRecord (2 samples, 0.15%)</title><rect x="1007.3" y="869" width="1.8" height="15.0" fill="rgb(230,31,26)" rx="2" ry="2" />
<text  x="1010.28" y="879.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (2 samples, 0.15%)</title><rect x="1094.6" y="789" width="1.8" height="15.0" fill="rgb(254,97,45)" rx="2" ry="2" />
<text  x="1097.59" y="799.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddDecl (1 samples, 0.08%)</title><rect x="1048.7" y="341" width="0.9" height="15.0" fill="rgb(242,208,45)" rx="2" ry="2" />
<text  x="1051.69" y="351.5" ></text>
</g>
<g >
<title>llvm::AsmPrinter::SetupMachineFunction (2 samples, 0.15%)</title><rect x="711.2" y="533" width="1.8" height="15.0" fill="rgb(247,57,54)" rx="2" ry="2" />
<text  x="714.16" y="543.5" ></text>
</g>
<g >
<title>clang::Preprocessor::HandleDefineDirective (1 samples, 0.08%)</title><rect x="941.6" y="709" width="0.9" height="15.0" fill="rgb(212,1,17)" rx="2" ry="2" />
<text  x="944.58" y="719.5" ></text>
</g>
<g >
<title>llvm::PMTopLevelManager::schedulePass (1 samples, 0.08%)</title><rect x="675.2" y="533" width="0.9" height="15.0" fill="rgb(223,167,13)" rx="2" ry="2" />
<text  x="678.16" y="543.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="342.1" y="773" width="0.9" height="15.0" fill="rgb(223,92,11)" rx="2" ry="2" />
<text  x="345.13" y="783.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitFunctionBody (7 samples, 0.53%)</title><rect x="1018.1" y="917" width="6.3" height="15.0" fill="rgb(230,167,16)" rx="2" ry="2" />
<text  x="1021.09" y="927.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTemplateArgumentList (1 samples, 0.08%)</title><rect x="1064.0" y="949" width="0.9" height="15.0" fill="rgb(217,140,13)" rx="2" ry="2" />
<text  x="1066.99" y="959.5" ></text>
</g>
<g >
<title>make_child (30 samples, 2.29%)</title><rect x="1161.2" y="837" width="27.0" height="15.0" fill="rgb(210,123,22)" rx="2" ry="2" />
<text  x="1164.20" y="847.5" >m..</text>
</g>
<g >
<title>clang::Sema::CheckTemplateIdType (1 samples, 0.08%)</title><rect x="1064.0" y="629" width="0.9" height="15.0" fill="rgb(229,200,38)" rx="2" ry="2" />
<text  x="1066.99" y="639.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (1 samples, 0.08%)</title><rect x="854.3" y="629" width="0.9" height="15.0" fill="rgb(249,25,26)" rx="2" ry="2" />
<text  x="857.27" y="639.5" ></text>
</g>
<g >
<title>command_substitute (5 samples, 0.38%)</title><rect x="10.9" y="421" width="4.5" height="15.0" fill="rgb(249,61,39)" rx="2" ry="2" />
<text  x="13.90" y="431.5" ></text>
</g>
<g >
<title>dl_open_worker (1 samples, 0.08%)</title><rect x="1118.9" y="949" width="0.9" height="15.0" fill="rgb(228,165,46)" rx="2" ry="2" />
<text  x="1121.89" y="959.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallee (1 samples, 0.08%)</title><rect x="1091.9" y="661" width="0.9" height="15.0" fill="rgb(240,167,37)" rx="2" ry="2" />
<text  x="1094.89" y="671.5" ></text>
</g>
<g >
<title>clang::Sema::BuildResolvedCallExpr (2 samples, 0.15%)</title><rect x="1060.4" y="917" width="1.8" height="15.0" fill="rgb(247,216,16)" rx="2" ry="2" />
<text  x="1063.39" y="927.5" ></text>
</g>
<g >
<title>execute_command (22 samples, 1.68%)</title><rect x="15.4" y="693" width="19.8" height="15.0" fill="rgb(214,59,19)" rx="2" ry="2" />
<text  x="18.40" y="703.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformNestedNameSpecifierLoc (1 samples, 0.08%)</title><rect x="673.4" y="773" width="0.9" height="15.0" fill="rgb(222,211,37)" rx="2" ry="2" />
<text  x="676.36" y="783.5" ></text>
</g>
<g >
<title>getAllocationData (1 samples, 0.08%)</title><rect x="907.4" y="517" width="0.9" height="15.0" fill="rgb(245,52,48)" rx="2" ry="2" />
<text  x="910.38" y="527.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.08%)</title><rect x="1087.4" y="869" width="0.9" height="15.0" fill="rgb(217,6,48)" rx="2" ry="2" />
<text  x="1090.39" y="879.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.08%)</title><rect x="1096.4" y="885" width="0.9" height="15.0" fill="rgb(212,21,43)" rx="2" ry="2" />
<text  x="1099.39" y="895.5" ></text>
</g>
<g >
<title>clang::Sema::BuildQualifiedDeclarationNameExpr (1 samples, 0.08%)</title><rect x="1074.8" y="741" width="0.9" height="15.0" fill="rgb(214,51,22)" rx="2" ry="2" />
<text  x="1077.79" y="751.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.08%)</title><rect x="1093.7" y="853" width="0.9" height="15.0" fill="rgb(223,74,5)" rx="2" ry="2" />
<text  x="1096.69" y="863.5" ></text>
</g>
<g >
<title>clang::Sema::AddTemplateOverloadCandidate (1 samples, 0.08%)</title><rect x="1055.9" y="949" width="0.9" height="15.0" fill="rgb(215,4,37)" rx="2" ry="2" />
<text  x="1058.89" y="959.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (2 samples, 0.15%)</title><rect x="1088.3" y="933" width="1.8" height="15.0" fill="rgb(212,175,17)" rx="2" ry="2" />
<text  x="1091.29" y="943.5" ></text>
</g>
<g >
<title>[bash] (5 samples, 0.38%)</title><rect x="10.9" y="533" width="4.5" height="15.0" fill="rgb(238,53,42)" rx="2" ry="2" />
<text  x="13.90" y="543.5" ></text>
</g>
<g >
<title>cling::Interpreter::~Interpreter (2 samples, 0.15%)</title><rect x="858.8" y="789" width="1.8" height="15.0" fill="rgb(244,11,10)" rx="2" ry="2" />
<text  x="861.77" y="799.5" ></text>
</g>
<g >
<title>zread (4 samples, 0.31%)</title><rect x="25.3" y="309" width="3.6" height="15.0" fill="rgb(245,15,26)" rx="2" ry="2" />
<text  x="28.30" y="319.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadTemplateArgumentList (1 samples, 0.08%)</title><rect x="1022.6" y="581" width="0.9" height="15.0" fill="rgb(228,170,15)" rx="2" ry="2" />
<text  x="1025.59" y="591.5" ></text>
</g>
<g >
<title>_IO_new_popen (5 samples, 0.38%)</title><rect x="995.6" y="869" width="4.5" height="15.0" fill="rgb(220,114,27)" rx="2" ry="2" />
<text  x="998.58" y="879.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::beginTransaction (1 samples, 0.08%)</title><rect x="447.4" y="421" width="0.9" height="15.0" fill="rgb(232,41,52)" rx="2" ry="2" />
<text  x="450.44" y="431.5" ></text>
</g>
<g >
<title>TClass::BuildRealData (1 samples, 0.08%)</title><rect x="448.3" y="565" width="0.9" height="15.0" fill="rgb(250,113,42)" rx="2" ry="2" />
<text  x="451.34" y="575.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass (1 samples, 0.08%)</title><rect x="1085.6" y="917" width="0.9" height="15.0" fill="rgb(234,41,19)" rx="2" ry="2" />
<text  x="1088.59" y="927.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetType (1 samples, 0.08%)</title><rect x="1066.7" y="757" width="0.9" height="15.0" fill="rgb(227,129,41)" rx="2" ry="2" />
<text  x="1069.69" y="767.5" ></text>
</g>
<g >
<title>TUnixSystem::GetLinkedLibraries (10 samples, 0.76%)</title><rect x="992.0" y="901" width="9.0" height="15.0" fill="rgb(249,143,45)" rx="2" ry="2" />
<text  x="994.98" y="911.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition (2 samples, 0.15%)</title><rect x="1034.3" y="581" width="1.8" height="15.0" fill="rgb(217,174,25)" rx="2" ry="2" />
<text  x="1037.29" y="591.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateArgument (1 samples, 0.08%)</title><rect x="1087.4" y="677" width="0.9" height="15.0" fill="rgb(206,143,50)" rx="2" ry="2" />
<text  x="1090.39" y="687.5" ></text>
</g>
<g >
<title>clang::CXXScopeSpec::Extend (1 samples, 0.08%)</title><rect x="1087.4" y="565" width="0.9" height="15.0" fill="rgb(226,44,26)" rx="2" ry="2" />
<text  x="1090.39" y="575.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.08%)</title><rect x="850.7" y="677" width="0.9" height="15.0" fill="rgb(251,92,8)" rx="2" ry="2" />
<text  x="853.67" y="687.5" ></text>
</g>
<g >
<title>TClass::CreateListOfDataMembers (1 samples, 0.08%)</title><rect x="447.4" y="581" width="0.9" height="15.0" fill="rgb(246,152,39)" rx="2" ry="2" />
<text  x="450.44" y="591.5" ></text>
</g>
<g >
<title>clang::Sema::AddBuiltinOperatorCandidates (1 samples, 0.08%)</title><rect x="1069.4" y="933" width="0.9" height="15.0" fill="rgb(215,228,5)" rx="2" ry="2" />
<text  x="1072.39" y="943.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveRelocations (5 samples, 0.38%)</title><rect x="1102.7" y="853" width="4.5" height="15.0" fill="rgb(209,70,35)" rx="2" ry="2" />
<text  x="1105.69" y="863.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::CodeGenAndEmitDAG (1 samples, 0.08%)</title><rect x="449.2" y="725" width="0.9" height="15.0" fill="rgb(227,73,14)" rx="2" ry="2" />
<text  x="452.24" y="735.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.08%)</title><rect x="35.2" y="341" width="0.9" height="15.0" fill="rgb(225,103,48)" rx="2" ry="2" />
<text  x="38.20" y="351.5" ></text>
</g>
<g >
<title>clang::Parser::ParseTemplateArgument (1 samples, 0.08%)</title><rect x="1109.0" y="725" width="0.9" height="15.0" fill="rgb(244,198,24)" rx="2" ry="2" />
<text  x="1111.99" y="735.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.08%)</title><rect x="1075.7" y="773" width="0.9" height="15.0" fill="rgb(230,70,15)" rx="2" ry="2" />
<text  x="1078.69" y="783.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="28.0" y="245" width="0.9" height="15.0" fill="rgb(253,94,43)" rx="2" ry="2" />
<text  x="31.00" y="255.5" ></text>
</g>
<g >
<title>execute_command (5 samples, 0.38%)</title><rect x="10.9" y="661" width="4.5" height="15.0" fill="rgb(231,187,40)" rx="2" ry="2" />
<text  x="13.90" y="671.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformNestedNameSpecifierLoc (1 samples, 0.08%)</title><rect x="1073.9" y="661" width="0.9" height="15.0" fill="rgb(236,40,10)" rx="2" ry="2" />
<text  x="1076.89" y="671.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.08%)</title><rect x="673.4" y="901" width="0.9" height="15.0" fill="rgb(231,84,9)" rx="2" ry="2" />
<text  x="676.36" y="911.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddType (1 samples, 0.08%)</title><rect x="1072.1" y="517" width="0.9" height="15.0" fill="rgb(220,183,30)" rx="2" ry="2" />
<text  x="1075.09" y="527.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateMemInitializers (1 samples, 0.08%)</title><rect x="1083.8" y="917" width="0.9" height="15.0" fill="rgb(251,134,44)" rx="2" ry="2" />
<text  x="1086.79" y="927.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_erase (1 samples, 0.08%)</title><rect x="1037.0" y="517" width="0.9" height="15.0" fill="rgb(247,148,28)" rx="2" ry="2" />
<text  x="1039.99" y="527.5" ></text>
</g>
<g >
<title>TTreeReader::SetEntryBase (2 samples, 0.15%)</title><rect x="340.3" y="869" width="1.8" height="15.0" fill="rgb(234,113,16)" rx="2" ry="2" />
<text  x="343.33" y="879.5" ></text>
</g>
<g >
<title>llvm::X86AsmPrinter::EmitAndCountInstruction (2 samples, 0.15%)</title><rect x="249.4" y="677" width="1.8" height="15.0" fill="rgb(237,183,27)" rx="2" ry="2" />
<text  x="252.42" y="687.5" ></text>
</g>
<g >
<title>cling::MetaParser::isXCommand (2 samples, 0.15%)</title><rect x="1111.7" y="917" width="1.8" height="15.0" fill="rgb(228,79,33)" rx="2" ry="2" />
<text  x="1114.69" y="927.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl (1 samples, 0.08%)</title><rect x="1010.9" y="805" width="0.9" height="15.0" fill="rgb(246,216,22)" rx="2" ry="2" />
<text  x="1013.88" y="815.5" ></text>
</g>
<g >
<title>_IO_new_proc_open (5 samples, 0.38%)</title><rect x="995.6" y="853" width="4.5" height="15.0" fill="rgb(212,119,36)" rx="2" ry="2" />
<text  x="998.58" y="863.5" ></text>
</g>
<g >
<title>strcmp (1 samples, 0.08%)</title><rect x="42.4" y="821" width="0.9" height="15.0" fill="rgb(233,44,29)" rx="2" ry="2" />
<text  x="45.40" y="831.5" ></text>
</g>
<g >
<title>clang::VarDecl::evaluateValue (1 samples, 0.08%)</title><rect x="1023.5" y="725" width="0.9" height="15.0" fill="rgb(215,3,23)" rx="2" ry="2" />
<text  x="1026.49" y="735.5" ></text>
</g>
<g >
<title>clang::LinkageComputer::getLVForDecl (1 samples, 0.08%)</title><rect x="1035.2" y="517" width="0.9" height="15.0" fill="rgb(221,4,23)" rx="2" ry="2" />
<text  x="1038.19" y="527.5" ></text>
</g>
<g >
<title>TCling::RegisterModule (1 samples, 0.08%)</title><rect x="839.0" y="629" width="0.9" height="15.0" fill="rgb(206,88,44)" rx="2" ry="2" />
<text  x="841.97" y="639.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord (1 samples, 0.08%)</title><rect x="1012.7" y="821" width="0.9" height="15.0" fill="rgb(220,184,52)" rx="2" ry="2" />
<text  x="1015.68" y="831.5" ></text>
</g>
<g >
<title>[bash] (4 samples, 0.31%)</title><rect x="36.1" y="389" width="3.6" height="15.0" fill="rgb(254,178,47)" rx="2" ry="2" />
<text  x="39.10" y="399.5" ></text>
</g>
<g >
<title>llvm::orc::SimpleCompiler::operator() (22 samples, 1.68%)</title><rect x="238.6" y="805" width="19.8" height="15.0" fill="rgb(244,57,14)" rx="2" ry="2" />
<text  x="241.62" y="815.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::ComputeLiveOutVRegInfo (1 samples, 0.08%)</title><rect x="1107.2" y="645" width="0.9" height="15.0" fill="rgb(240,194,39)" rx="2" ry="2" />
<text  x="1110.19" y="655.5" ></text>
</g>
<g >
<title>clang::Parser::ParseCastExpression (1 samples, 0.08%)</title><rect x="1052.3" y="885" width="0.9" height="15.0" fill="rgb(236,84,11)" rx="2" ry="2" />
<text  x="1055.29" y="895.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::setNonAliasAttributes (1 samples, 0.08%)</title><rect x="1046.0" y="885" width="0.9" height="15.0" fill="rgb(244,208,6)" rx="2" ry="2" />
<text  x="1048.99" y="895.5" ></text>
</g>
<g >
<title>llvm::GetUnderlyingObject (1 samples, 0.08%)</title><rect x="814.7" y="549" width="0.9" height="15.0" fill="rgb(210,173,32)" rx="2" ry="2" />
<text  x="817.67" y="559.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.08%)</title><rect x="28.9" y="293" width="0.9" height="15.0" fill="rgb(246,198,18)" rx="2" ry="2" />
<text  x="31.90" y="303.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.08%)</title><rect x="945.2" y="741" width="0.9" height="15.0" fill="rgb(225,45,41)" rx="2" ry="2" />
<text  x="948.18" y="751.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;, void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;::LookupBucketFor&lt;void const*&gt; (3 samples, 0.23%)</title><rect x="224.2" y="693" width="2.7" height="15.0" fill="rgb(221,104,38)" rx="2" ry="2" />
<text  x="227.22" y="703.5" ></text>
</g>
<g >
<title>EvaluatePointer (1 samples, 0.08%)</title><rect x="1022.6" y="773" width="0.9" height="15.0" fill="rgb(209,182,10)" rx="2" ry="2" />
<text  x="1025.59" y="783.5" ></text>
</g>
<g >
<title>execute_command (4 samples, 0.31%)</title><rect x="36.1" y="549" width="3.6" height="15.0" fill="rgb(233,127,16)" rx="2" ry="2" />
<text  x="39.10" y="559.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::NotifyLazyFunctionCreators (1 samples, 0.08%)</title><rect x="202.6" y="565" width="0.9" height="15.0" fill="rgb(251,50,9)" rx="2" ry="2" />
<text  x="205.62" y="575.5" ></text>
</g>
<g >
<title>clang::Sema::BuildDeclarationNameExpr (1 samples, 0.08%)</title><rect x="1095.5" y="613" width="0.9" height="15.0" fill="rgb(219,10,41)" rx="2" ry="2" />
<text  x="1098.49" y="623.5" ></text>
</g>
<g >
<title>clang::Sema::SubstParmVarDecl (1 samples, 0.08%)</title><rect x="1055.9" y="869" width="0.9" height="15.0" fill="rgb(211,66,13)" rx="2" ry="2" />
<text  x="1058.89" y="879.5" ></text>
</g>
<g >
<title>clang::TemplateDeclInstantiator::VisitCXXMethodDecl (1 samples, 0.08%)</title><rect x="1092.8" y="709" width="0.9" height="15.0" fill="rgb(233,41,48)" rx="2" ry="2" />
<text  x="1095.79" y="719.5" ></text>
</g>
<g >
<title>llvm::Function::addAttributes (1 samples, 0.08%)</title><rect x="1044.2" y="805" width="0.9" height="15.0" fill="rgb(244,154,38)" rx="2" ry="2" />
<text  x="1047.19" y="815.5" ></text>
</g>
<g >
<title>llvm::orc::SimpleCompiler::operator() (1 samples, 0.08%)</title><rect x="1129.7" y="933" width="0.9" height="15.0" fill="rgb(240,199,50)" rx="2" ry="2" />
<text  x="1132.69" y="943.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl (1 samples, 0.08%)</title><rect x="1011.8" y="725" width="0.9" height="15.0" fill="rgb(233,195,0)" rx="2" ry="2" />
<text  x="1014.78" y="735.5" ></text>
</g>
<g >
<title>llvm::MCObjectStreamer::EmitInstruction (2 samples, 0.15%)</title><rect x="249.4" y="661" width="1.8" height="15.0" fill="rgb(218,161,21)" rx="2" ry="2" />
<text  x="252.42" y="671.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1146.8" y="853" width="0.9" height="15.0" fill="rgb(232,120,43)" rx="2" ry="2" />
<text  x="1149.80" y="863.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.08%)</title><rect x="1112.6" y="693" width="0.9" height="15.0" fill="rgb(248,164,13)" rx="2" ry="2" />
<text  x="1115.59" y="703.5" ></text>
</g>
<g >
<title>llvm::InstructionCombiningPass::runOnFunction (2 samples, 0.15%)</title><rect x="835.4" y="629" width="1.8" height="15.0" fill="rgb(209,45,54)" rx="2" ry="2" />
<text  x="838.37" y="639.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.08%)</title><rect x="1100.0" y="773" width="0.9" height="15.0" fill="rgb(229,102,34)" rx="2" ry="2" />
<text  x="1102.99" y="783.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitFunctionTemplateDecl (1 samples, 0.08%)</title><rect x="1051.4" y="805" width="0.9" height="15.0" fill="rgb(224,132,26)" rx="2" ry="2" />
<text  x="1054.39" y="815.5" ></text>
</g>
<g >
<title>clang::Parser::ConsumeAnnotationToken (1 samples, 0.08%)</title><rect x="942.5" y="757" width="0.9" height="15.0" fill="rgb(223,223,23)" rx="2" ry="2" />
<text  x="945.48" y="767.5" ></text>
</g>
<g >
<title>clang::DeclContext::lookup (1 samples, 0.08%)</title><rect x="1059.5" y="885" width="0.9" height="15.0" fill="rgb(215,136,31)" rx="2" ry="2" />
<text  x="1062.49" y="895.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitTemplateDecl (1 samples, 0.08%)</title><rect x="1012.7" y="629" width="0.9" height="15.0" fill="rgb(207,227,14)" rx="2" ry="2" />
<text  x="1015.68" y="639.5" ></text>
</g>
<g >
<title>[bash] (16 samples, 1.22%)</title><rect x="15.4" y="373" width="14.4" height="15.0" fill="rgb(218,103,23)" rx="2" ry="2" />
<text  x="18.40" y="383.5" ></text>
</g>
<g >
<title>multikeySort (1 samples, 0.08%)</title><rect x="839.9" y="485" width="0.9" height="15.0" fill="rgb(223,19,1)" rx="2" ry="2" />
<text  x="842.87" y="495.5" ></text>
</g>
<g >
<title>TFile::Init (1 samples, 0.08%)</title><rect x="448.3" y="837" width="0.9" height="15.0" fill="rgb(218,131,28)" rx="2" ry="2" />
<text  x="451.34" y="847.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="21.7" y="261" width="0.9" height="15.0" fill="rgb(209,222,11)" rx="2" ry="2" />
<text  x="24.70" y="271.5" ></text>
</g>
<g >
<title>llvm::Function::addAttribute (1 samples, 0.08%)</title><rect x="1034.3" y="549" width="0.9" height="15.0" fill="rgb(248,4,45)" rx="2" ry="2" />
<text  x="1037.29" y="559.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1182.8" y="725" width="0.9" height="15.0" fill="rgb(228,163,41)" rx="2" ry="2" />
<text  x="1185.80" y="735.5" ></text>
</g>
<g >
<title>dlopen_doit (1 samples, 0.08%)</title><rect x="202.6" y="373" width="0.9" height="15.0" fill="rgb(215,116,34)" rx="2" ry="2" />
<text  x="205.62" y="383.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddType (1 samples, 0.08%)</title><rect x="1072.1" y="613" width="0.9" height="15.0" fill="rgb(205,35,2)" rx="2" ry="2" />
<text  x="1075.09" y="623.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentScopeDeclRefExpr (1 samples, 0.08%)</title><rect x="1062.2" y="805" width="0.9" height="15.0" fill="rgb(248,96,30)" rx="2" ry="2" />
<text  x="1065.19" y="815.5" ></text>
</g>
<g >
<title>llvm::PMTopLevelManager::findAnalysisPassInfo (1 samples, 0.08%)</title><rect x="856.1" y="565" width="0.9" height="15.0" fill="rgb(252,25,2)" rx="2" ry="2" />
<text  x="859.07" y="575.5" ></text>
</g>
<g >
<title>llvm::LoopTraversal::traverse (1 samples, 0.08%)</title><rect x="241.3" y="693" width="0.9" height="15.0" fill="rgb(226,92,43)" rx="2" ry="2" />
<text  x="244.32" y="703.5" ></text>
</g>
<g >
<title>call_init.part.0 (1 samples, 0.08%)</title><rect x="1118.9" y="901" width="0.9" height="15.0" fill="rgb(214,200,23)" rx="2" ry="2" />
<text  x="1121.89" y="911.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitDelegateCXXConstructorCall (2 samples, 0.15%)</title><rect x="1046.9" y="901" width="1.8" height="15.0" fill="rgb(227,32,6)" rx="2" ry="2" />
<text  x="1049.89" y="911.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="990.2" y="741" width="0.9" height="15.0" fill="rgb(216,30,27)" rx="2" ry="2" />
<text  x="993.18" y="751.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveExternalSymbols (5 samples, 0.38%)</title><rect x="1102.7" y="837" width="4.5" height="15.0" fill="rgb(215,21,30)" rx="2" ry="2" />
<text  x="1105.69" y="847.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization (1 samples, 0.08%)</title><rect x="1075.7" y="661" width="0.9" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1078.69" y="671.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitCXXMethodDecl (1 samples, 0.08%)</title><rect x="1022.6" y="613" width="0.9" height="15.0" fill="rgb(240,156,30)" rx="2" ry="2" />
<text  x="1025.59" y="623.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.08%)</title><rect x="35.2" y="757" width="0.9" height="15.0" fill="rgb(237,139,49)" rx="2" ry="2" />
<text  x="38.20" y="767.5" ></text>
</g>
<g >
<title>clang::Sema::Subst (1 samples, 0.08%)</title><rect x="1089.2" y="725" width="0.9" height="15.0" fill="rgb(247,133,36)" rx="2" ry="2" />
<text  x="1092.19" y="735.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::Release (1 samples, 0.08%)</title><rect x="1112.6" y="773" width="0.9" height="15.0" fill="rgb(206,120,21)" rx="2" ry="2" />
<text  x="1115.59" y="783.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.08%)</title><rect x="673.4" y="597" width="0.9" height="15.0" fill="rgb(251,67,3)" rx="2" ry="2" />
<text  x="676.36" y="607.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::commitTransaction (1 samples, 0.08%)</title><rect x="857.0" y="725" width="0.9" height="15.0" fill="rgb(242,210,37)" rx="2" ry="2" />
<text  x="859.97" y="735.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCall (1 samples, 0.08%)</title><rect x="1091.9" y="885" width="0.9" height="15.0" fill="rgb(220,193,54)" rx="2" ry="2" />
<text  x="1094.89" y="895.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::commitTransaction (1 samples, 0.08%)</title><rect x="1109.9" y="837" width="0.9" height="15.0" fill="rgb(216,88,31)" rx="2" ry="2" />
<text  x="1112.89" y="847.5" ></text>
</g>
<g >
<title>cling::Interpreter::RunFunction (5 samples, 0.38%)</title><rect x="1102.7" y="933" width="4.5" height="15.0" fill="rgb(246,35,34)" rx="2" ry="2" />
<text  x="1105.69" y="943.5" ></text>
</g>
<g >
<title>clang::LinkageComputer::getLVForClassMember (1 samples, 0.08%)</title><rect x="1016.3" y="549" width="0.9" height="15.0" fill="rgb(234,129,31)" rx="2" ry="2" />
<text  x="1019.29" y="559.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTSIInObjectScope (1 samples, 0.08%)</title><rect x="1088.3" y="885" width="0.9" height="15.0" fill="rgb(215,36,15)" rx="2" ry="2" />
<text  x="1091.29" y="895.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformCallExpr (1 samples, 0.08%)</title><rect x="1079.3" y="725" width="0.9" height="15.0" fill="rgb(252,95,0)" rx="2" ry="2" />
<text  x="1082.29" y="735.5" ></text>
</g>
<g >
<title>llvm::BlockFrequencyInfoImpl&lt;llvm::MachineBasicBlock&gt;::propagateMassToSuccessors (1 samples, 0.08%)</title><rect x="695.0" y="485" width="0.9" height="15.0" fill="rgb(254,193,41)" rx="2" ry="2" />
<text  x="697.96" y="495.5" ></text>
</g>
<g >
<title>llvm::PMTopLevelManager::findAnalysisPass (2 samples, 0.15%)</title><rect x="868.7" y="581" width="1.8" height="15.0" fill="rgb(217,16,18)" rx="2" ry="2" />
<text  x="871.67" y="591.5" ></text>
</g>
<g >
<title>multikeySort (1 samples, 0.08%)</title><rect x="839.9" y="501" width="0.9" height="15.0" fill="rgb(252,15,7)" rx="2" ry="2" />
<text  x="842.87" y="511.5" ></text>
</g>
<g >
<title>__GI__dl_addr (1 samples, 0.08%)</title><rect x="839.0" y="597" width="0.9" height="15.0" fill="rgb(239,199,16)" rx="2" ry="2" />
<text  x="841.97" y="607.5" ></text>
</g>
<g >
<title>clang::RedeclarableTemplateDecl::addSpecializationImpl&lt;clang::ClassTemplateDecl, clang::ClassTemplateSpecializationDecl&gt; (1 samples, 0.08%)</title><rect x="1064.0" y="613" width="0.9" height="15.0" fill="rgb(237,8,53)" rx="2" ry="2" />
<text  x="1066.99" y="623.5" ></text>
</g>
<g >
<title>clang::ASTReader::FindExternalVisibleDeclsByName (1 samples, 0.08%)</title><rect x="1071.2" y="869" width="0.9" height="15.0" fill="rgb(212,91,2)" rx="2" ry="2" />
<text  x="1074.19" y="879.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="995.6" y="773" width="0.9" height="15.0" fill="rgb(232,131,43)" rx="2" ry="2" />
<text  x="998.58" y="783.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt;, llvm::DenseMapInfo&lt;llvm::BasicBlock*&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt; &gt; &gt;, llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt;, llvm::DenseMapInfo&lt;llvm::BasicBlock*&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt; &gt; &gt;::clear (1 samples, 0.08%)</title><rect x="851.6" y="597" width="0.9" height="15.0" fill="rgb(212,109,54)" rx="2" ry="2" />
<text  x="854.57" y="607.5" ></text>
</g>
<g >
<title>llvm::TargetLoweringBase::getTypeConversion (1 samples, 0.08%)</title><rect x="1136.9" y="661" width="0.9" height="15.0" fill="rgb(207,222,21)" rx="2" ry="2" />
<text  x="1139.90" y="671.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCompoundStmtWithoutScope (1 samples, 0.08%)</title><rect x="1014.5" y="917" width="0.9" height="15.0" fill="rgb(254,147,32)" rx="2" ry="2" />
<text  x="1017.49" y="927.5" ></text>
</g>
<g >
<title>_IO_new_proc_open (5 samples, 0.38%)</title><rect x="937.1" y="757" width="4.5" height="15.0" fill="rgb(251,138,52)" rx="2" ry="2" />
<text  x="940.08" y="767.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord (1 samples, 0.08%)</title><rect x="1012.7" y="901" width="0.9" height="15.0" fill="rgb(214,190,28)" rx="2" ry="2" />
<text  x="1015.68" y="911.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1005.5" y="597" width="0.9" height="15.0" fill="rgb(211,144,45)" rx="2" ry="2" />
<text  x="1008.48" y="607.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl (1 samples, 0.08%)</title><rect x="1092.8" y="773" width="0.9" height="15.0" fill="rgb(220,203,52)" rx="2" ry="2" />
<text  x="1095.79" y="783.5" ></text>
</g>
<g >
<title>clang::Lexer::Lex (1 samples, 0.08%)</title><rect x="942.5" y="613" width="0.9" height="15.0" fill="rgb(206,216,28)" rx="2" ry="2" />
<text  x="945.48" y="623.5" ></text>
</g>
<g >
<title>[bash] (4 samples, 0.31%)</title><rect x="36.1" y="405" width="3.6" height="15.0" fill="rgb(241,11,40)" rx="2" ry="2" />
<text  x="39.10" y="415.5" ></text>
</g>
<g >
<title>TCling::LoadLibraryMap (11 samples, 0.84%)</title><rect x="943.4" y="853" width="9.9" height="15.0" fill="rgb(248,194,8)" rx="2" ry="2" />
<text  x="946.38" y="863.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.23%)</title><rect x="1138.7" y="917" width="2.7" height="15.0" fill="rgb(212,211,25)" rx="2" ry="2" />
<text  x="1141.70" y="927.5" ></text>
</g>
<g >
<title>llvm::Use::getUser (1 samples, 0.08%)</title><rect x="873.2" y="565" width="0.9" height="15.0" fill="rgb(240,121,50)" rx="2" ry="2" />
<text  x="876.17" y="575.5" ></text>
</g>
<g >
<title>isSafeToConvert (1 samples, 0.08%)</title><rect x="1049.6" y="517" width="0.9" height="15.0" fill="rgb(243,189,13)" rx="2" ry="2" />
<text  x="1052.59" y="527.5" ></text>
</g>
<g >
<title>cling::utils::Synthesize::CStyleCastPtrExpr (1 samples, 0.08%)</title><rect x="855.2" y="501" width="0.9" height="15.0" fill="rgb(214,160,35)" rx="2" ry="2" />
<text  x="858.17" y="511.5" ></text>
</g>
<g >
<title>cling::Interpreter::DeclareInternal (2 samples, 0.15%)</title><rect x="855.2" y="693" width="1.8" height="15.0" fill="rgb(213,146,9)" rx="2" ry="2" />
<text  x="858.17" y="703.5" ></text>
</g>
<g >
<title>llvm::AAResults::getModRefBehavior (1 samples, 0.08%)</title><rect x="817.4" y="613" width="0.9" height="15.0" fill="rgb(210,227,19)" rx="2" ry="2" />
<text  x="820.37" y="623.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadStmtFromStream (1 samples, 0.08%)</title><rect x="1011.8" y="885" width="0.9" height="15.0" fill="rgb(240,72,35)" rx="2" ry="2" />
<text  x="1014.78" y="895.5" ></text>
</g>
<g >
<title>TCling::InspectMembers (1 samples, 0.08%)</title><rect x="1118.9" y="501" width="0.9" height="15.0" fill="rgb(246,41,21)" rx="2" ry="2" />
<text  x="1121.89" y="511.5" ></text>
</g>
<g >
<title>clang::Sema::SubstBaseSpecifiers (1 samples, 0.08%)</title><rect x="1093.7" y="725" width="0.9" height="15.0" fill="rgb(217,90,20)" rx="2" ry="2" />
<text  x="1096.69" y="735.5" ></text>
</g>
<g >
<title>TApplication::Terminate (3 samples, 0.23%)</title><rect x="857.9" y="933" width="2.7" height="15.0" fill="rgb(235,150,39)" rx="2" ry="2" />
<text  x="860.87" y="943.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteDeclContext (1 samples, 0.08%)</title><rect x="1066.7" y="933" width="0.9" height="15.0" fill="rgb(251,70,24)" rx="2" ry="2" />
<text  x="1069.69" y="943.5" ></text>
</g>
<g >
<title>clang::Sema::SubstType (1 samples, 0.08%)</title><rect x="1092.8" y="629" width="0.9" height="15.0" fill="rgb(238,164,41)" rx="2" ry="2" />
<text  x="1095.79" y="639.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1161.2" y="661" width="0.9" height="15.0" fill="rgb(208,2,2)" rx="2" ry="2" />
<text  x="1164.20" y="671.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1159.4" y="709" width="0.9" height="15.0" fill="rgb(205,39,45)" rx="2" ry="2" />
<text  x="1162.40" y="719.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadStmtFromStream (1 samples, 0.08%)</title><rect x="1083.8" y="581" width="0.9" height="15.0" fill="rgb(254,94,19)" rx="2" ry="2" />
<text  x="1086.79" y="591.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::getAddrAndTypeOfCXXStructor (2 samples, 0.15%)</title><rect x="1046.9" y="869" width="1.8" height="15.0" fill="rgb(239,213,42)" rx="2" ry="2" />
<text  x="1049.89" y="879.5" ></text>
</g>
<g >
<title>llvm::BlockFrequencyInfoImpl&lt;llvm::BasicBlock&gt;::calculate (1 samples, 0.08%)</title><rect x="238.6" y="709" width="0.9" height="15.0" fill="rgb(223,6,15)" rx="2" ry="2" />
<text  x="241.62" y="719.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::foldBinOpIntoSelectOrPhi (1 samples, 0.08%)</title><rect x="217.9" y="677" width="0.9" height="15.0" fill="rgb(217,78,39)" rx="2" ry="2" />
<text  x="220.92" y="687.5" ></text>
</g>
<g >
<title>llvm::make_unique&lt;llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject&lt;std::shared_ptr&lt;llvm::RuntimeDyld::MemoryManager&gt; &gt;, llvm::orc::LegacyRTDyldObjectLinkingLayer&amp;, unsigned long, llvm::object::OwningBinary&lt;llvm::object::ObjectFile&gt;, std::shared_ptr&lt;llvm::RuntimeDyld::MemoryManager&gt;, std::shared_ptr&lt;llvm::orc::SymbolResolver&gt;, bool&amp;&gt; (1 samples, 0.08%)</title><rect x="674.3" y="629" width="0.9" height="15.0" fill="rgb(240,117,8)" rx="2" ry="2" />
<text  x="677.26" y="639.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnModule (33 samples, 2.52%)</title><rect x="897.5" y="629" width="29.7" height="15.0" fill="rgb(243,216,54)" rx="2" ry="2" />
<text  x="900.48" y="639.5" >ll..</text>
</g>
<g >
<title>llvm::ScalarEvolution::createNodeForGEP (1 samples, 0.08%)</title><rect x="1129.7" y="741" width="0.9" height="15.0" fill="rgb(205,217,27)" rx="2" ry="2" />
<text  x="1132.69" y="751.5" ></text>
</g>
<g >
<title>clang::Sema::BuildQualifiedDeclarationNameExpr (1 samples, 0.08%)</title><rect x="1100.0" y="901" width="0.9" height="15.0" fill="rgb(209,66,50)" rx="2" ry="2" />
<text  x="1102.99" y="911.5" ></text>
</g>
<g >
<title>clang::FunctionDecl::getBody (1 samples, 0.08%)</title><rect x="1054.1" y="725" width="0.9" height="15.0" fill="rgb(228,36,38)" rx="2" ry="2" />
<text  x="1057.09" y="735.5" ></text>
</g>
<g >
<title>llvm::AttributeList::hasAttribute (1 samples, 0.08%)</title><rect x="827.3" y="565" width="0.9" height="15.0" fill="rgb(232,181,9)" rx="2" ry="2" />
<text  x="830.27" y="575.5" ></text>
</g>
<g >
<title>__dlopen_check (1 samples, 0.08%)</title><rect x="202.6" y="437" width="0.9" height="15.0" fill="rgb(237,209,18)" rx="2" ry="2" />
<text  x="205.62" y="447.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (1 samples, 0.08%)</title><rect x="1101.8" y="869" width="0.9" height="15.0" fill="rgb(250,35,37)" rx="2" ry="2" />
<text  x="1104.79" y="879.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnModule (5 samples, 0.38%)</title><rect x="1102.7" y="725" width="4.5" height="15.0" fill="rgb(224,45,47)" rx="2" ry="2" />
<text  x="1105.69" y="735.5" ></text>
</g>
<g >
<title>dlopen_doit (1 samples, 0.08%)</title><rect x="839.0" y="773" width="0.9" height="15.0" fill="rgb(251,105,41)" rx="2" ry="2" />
<text  x="841.97" y="783.5" ></text>
</g>
<g >
<title>command_substitute (4 samples, 0.31%)</title><rect x="36.1" y="357" width="3.6" height="15.0" fill="rgb(244,223,26)" rx="2" ry="2" />
<text  x="39.10" y="367.5" ></text>
</g>
<g >
<title>FinishOverloadedCallExpr (3 samples, 0.23%)</title><rect x="1060.4" y="933" width="2.7" height="15.0" fill="rgb(249,80,48)" rx="2" ry="2" />
<text  x="1063.39" y="943.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.15%)</title><rect x="938.0" y="693" width="1.8" height="15.0" fill="rgb(209,3,14)" rx="2" ry="2" />
<text  x="940.98" y="703.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::GenerateCode (1 samples, 0.08%)</title><rect x="1034.3" y="565" width="0.9" height="15.0" fill="rgb(240,137,38)" rx="2" ry="2" />
<text  x="1037.29" y="575.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformInitializer (1 samples, 0.08%)</title><rect x="1080.2" y="709" width="0.9" height="15.0" fill="rgb(246,65,36)" rx="2" ry="2" />
<text  x="1083.19" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.08%)</title><rect x="1037.9" y="565" width="0.9" height="15.0" fill="rgb(218,11,42)" rx="2" ry="2" />
<text  x="1040.89" y="575.5" ></text>
</g>
<g >
<title>SimplifyExtractValueInst (1 samples, 0.08%)</title><rect x="860.6" y="565" width="0.9" height="15.0" fill="rgb(217,55,3)" rx="2" ry="2" />
<text  x="863.57" y="575.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.08%)</title><rect x="1020.8" y="629" width="0.9" height="15.0" fill="rgb(208,169,40)" rx="2" ry="2" />
<text  x="1023.79" y="639.5" ></text>
</g>
<g >
<title>dl_main (1 samples, 0.08%)</title><rect x="10.0" y="901" width="0.9" height="15.0" fill="rgb(253,224,7)" rx="2" ry="2" />
<text  x="13.00" y="911.5" ></text>
</g>
<g >
<title>TH1::Fill (75 samples, 5.72%)</title><rect x="379.0" y="885" width="67.5" height="15.0" fill="rgb(232,160,48)" rx="2" ry="2" />
<text  x="382.03" y="895.5" >TH1::Fill</text>
</g>
<g >
<title>TRint::TRint (80 samples, 6.10%)</title><rect x="929.0" y="949" width="72.0" height="15.0" fill="rgb(216,174,44)" rx="2" ry="2" />
<text  x="931.98" y="959.5" >TRint::T..</text>
</g>
<g >
<title>llvm::AttributeList::removeAttribute (1 samples, 0.08%)</title><rect x="1043.3" y="789" width="0.9" height="15.0" fill="rgb(209,114,13)" rx="2" ry="2" />
<text  x="1046.29" y="799.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition (4 samples, 0.31%)</title><rect x="1078.4" y="885" width="3.6" height="15.0" fill="rgb(237,49,4)" rx="2" ry="2" />
<text  x="1081.39" y="895.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (7 samples, 0.53%)</title><rect x="1033.4" y="757" width="6.3" height="15.0" fill="rgb(245,72,33)" rx="2" ry="2" />
<text  x="1036.39" y="767.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::codegenCXXStructor (2 samples, 0.15%)</title><rect x="1046.9" y="949" width="1.8" height="15.0" fill="rgb(241,44,22)" rx="2" ry="2" />
<text  x="1049.89" y="959.5" ></text>
</g>
<g >
<title>__GI__IO_file_underflow (1 samples, 0.08%)</title><rect x="994.7" y="821" width="0.9" height="15.0" fill="rgb(226,66,8)" rx="2" ry="2" />
<text  x="997.68" y="831.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.15%)</title><rect x="1184.6" y="805" width="1.8" height="15.0" fill="rgb(235,167,9)" rx="2" ry="2" />
<text  x="1187.60" y="815.5" ></text>
</g>
<g >
<title>clang::Sema::LookupSpecialMember (1 samples, 0.08%)</title><rect x="1082.0" y="949" width="0.9" height="15.0" fill="rgb(215,70,0)" rx="2" ry="2" />
<text  x="1084.99" y="959.5" ></text>
</g>
<g >
<title>llvm::wouldInstructionBeTriviallyDead (1 samples, 0.08%)</title><rect x="215.2" y="725" width="0.9" height="15.0" fill="rgb(219,46,7)" rx="2" ry="2" />
<text  x="218.22" y="735.5" ></text>
</g>
<g >
<title>LazyFunctionCreatorAutoloadForModule (1 samples, 0.08%)</title><rect x="839.0" y="933" width="0.9" height="15.0" fill="rgb(205,99,50)" rx="2" ry="2" />
<text  x="841.97" y="943.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddType (1 samples, 0.08%)</title><rect x="1072.1" y="565" width="0.9" height="15.0" fill="rgb(219,162,50)" rx="2" ry="2" />
<text  x="1075.09" y="575.5" ></text>
</g>
<g >
<title>Evaluate (2 samples, 0.15%)</title><rect x="1021.7" y="789" width="1.8" height="15.0" fill="rgb(205,223,16)" rx="2" ry="2" />
<text  x="1024.69" y="799.5" ></text>
</g>
<g >
<title>__nptl_set_robust (2 samples, 0.15%)</title><rect x="971.3" y="789" width="1.8" height="15.0" fill="rgb(241,229,44)" rx="2" ry="2" />
<text  x="974.28" y="799.5" ></text>
</g>
<g >
<title>llvm::SelectionDAG::Combine (7 samples, 0.53%)</title><rect x="1130.6" y="693" width="6.3" height="15.0" fill="rgb(210,141,47)" rx="2" ry="2" />
<text  x="1133.59" y="703.5" ></text>
</g>
<g >
<title>__reclaim_stacks (3 samples, 0.23%)</title><rect x="973.1" y="773" width="2.7" height="15.0" fill="rgb(217,41,33)" rx="2" ry="2" />
<text  x="976.08" y="783.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetTypeSourceInfo (1 samples, 0.08%)</title><rect x="1066.7" y="773" width="0.9" height="15.0" fill="rgb(246,149,6)" rx="2" ry="2" />
<text  x="1069.69" y="783.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::tryOptimizeCall (1 samples, 0.08%)</title><rect x="218.8" y="677" width="0.9" height="15.0" fill="rgb(227,86,12)" rx="2" ry="2" />
<text  x="221.82" y="687.5" ></text>
</g>
<g >
<title>llvm::Value::getName (1 samples, 0.08%)</title><rect x="744.5" y="565" width="0.9" height="15.0" fill="rgb(226,218,17)" rx="2" ry="2" />
<text  x="747.46" y="575.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertRecordDeclType (1 samples, 0.08%)</title><rect x="1048.7" y="773" width="0.9" height="15.0" fill="rgb(247,25,36)" rx="2" ry="2" />
<text  x="1051.69" y="783.5" ></text>
</g>
<g >
<title>llvm::Argument::getDereferenceableBytes (1 samples, 0.08%)</title><rect x="826.4" y="517" width="0.9" height="15.0" fill="rgb(254,94,45)" rx="2" ry="2" />
<text  x="829.37" y="527.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetType (1 samples, 0.08%)</title><rect x="1010.0" y="677" width="0.9" height="15.0" fill="rgb(218,58,21)" rx="2" ry="2" />
<text  x="1012.98" y="687.5" ></text>
</g>
<g >
<title>TPluginManager::FindHandler (2 samples, 0.15%)</title><rect x="855.2" y="933" width="1.8" height="15.0" fill="rgb(239,93,4)" rx="2" ry="2" />
<text  x="858.17" y="943.5" ></text>
</g>
<g >
<title>_dl_fini (1 samples, 0.08%)</title><rect x="17.2" y="277" width="0.9" height="15.0" fill="rgb(216,155,18)" rx="2" ry="2" />
<text  x="20.20" y="287.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::removeDeadPasses (4 samples, 0.31%)</title><rect x="913.7" y="597" width="3.6" height="15.0" fill="rgb(244,36,7)" rx="2" ry="2" />
<text  x="916.68" y="607.5" ></text>
</g>
<g >
<title>TCling::AutoParse (1 samples, 0.08%)</title><rect x="1098.2" y="709" width="0.9" height="15.0" fill="rgb(243,149,5)" rx="2" ry="2" />
<text  x="1101.19" y="719.5" ></text>
</g>
<g >
<title>CheckFallThroughForBody (1 samples, 0.08%)</title><rect x="849.8" y="645" width="0.9" height="15.0" fill="rgb(247,5,3)" rx="2" ry="2" />
<text  x="852.77" y="655.5" ></text>
</g>
<g >
<title>clang::Sema::PopExpressionEvaluationContext (1 samples, 0.08%)</title><rect x="1063.1" y="837" width="0.9" height="15.0" fill="rgb(210,179,18)" rx="2" ry="2" />
<text  x="1066.09" y="847.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;llvm::MachineBasicBlock*, __gnu_cxx::__normal_iterator&lt;llvm::MachineBasicBlock**, std::vector&lt;llvm::MachineBasicBlock*, std::allocator&lt;llvm::MachineBasicBlock*&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;llvm::MachineBasicBlock*, __gnu_cxx::__normal_iterator&lt;llvm::MachineBasicBlock**, std::vector&lt;llvm::MachineBasicBlock*, std::allocator&lt;llvm::MachineBasicBlock*&gt; &gt; &gt; &gt; &gt; &gt;::emplace_back&lt;std::pair&lt;llvm::MachineBasicBlock*, __gnu_cxx::__normal_iterator&lt;llvm::MachineBasicBlock**, std::vector&lt;llvm::MachineBasicBlock*, std::allocator&lt;llvm::MachineBasicBlock*&gt; &gt; &gt; &gt; &gt; (1 samples, 0.08%)</title><rect x="702.2" y="485" width="0.9" height="15.0" fill="rgb(205,203,47)" rx="2" ry="2" />
<text  x="705.16" y="495.5" ></text>
</g>
<g >
<title>llvm::AttributeSetNode::get (1 samples, 0.08%)</title><rect x="1041.5" y="693" width="0.9" height="15.0" fill="rgb(235,121,0)" rx="2" ry="2" />
<text  x="1044.49" y="703.5" ></text>
</g>
<g >
<title>ROOT::Detail::RDF::RLoopManager::Jit (53 samples, 4.04%)</title><rect x="214.3" y="933" width="47.7" height="15.0" fill="rgb(237,113,15)" rx="2" ry="2" />
<text  x="217.32" y="943.5" >ROOT..</text>
</g>
<g >
<title>cling::MetaProcessor::process (1 samples, 0.08%)</title><rect x="854.3" y="901" width="0.9" height="15.0" fill="rgb(226,202,27)" rx="2" ry="2" />
<text  x="857.27" y="911.5" ></text>
</g>
<g >
<title>llvm::Function::addAttribute (1 samples, 0.08%)</title><rect x="1045.1" y="789" width="0.9" height="15.0" fill="rgb(227,22,27)" rx="2" ry="2" />
<text  x="1048.09" y="799.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ComputeRecordLayout (1 samples, 0.08%)</title><rect x="1049.6" y="917" width="0.9" height="15.0" fill="rgb(252,100,7)" rx="2" ry="2" />
<text  x="1052.59" y="927.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformReturnStmt (1 samples, 0.08%)</title><rect x="1079.3" y="773" width="0.9" height="15.0" fill="rgb(244,227,10)" rx="2" ry="2" />
<text  x="1082.29" y="783.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddTemplateArgument (1 samples, 0.08%)</title><rect x="1058.6" y="517" width="0.9" height="15.0" fill="rgb(250,180,6)" rx="2" ry="2" />
<text  x="1061.59" y="527.5" ></text>
</g>
<g >
<title>llvm::IVUsers::AddUsersImpl (1 samples, 0.08%)</title><rect x="1129.7" y="805" width="0.9" height="15.0" fill="rgb(232,5,16)" rx="2" ry="2" />
<text  x="1132.69" y="815.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition (8 samples, 0.61%)</title><rect x="1018.1" y="949" width="7.2" height="15.0" fill="rgb(248,207,23)" rx="2" ry="2" />
<text  x="1021.09" y="959.5" ></text>
</g>
<g >
<title>ClingMemberIterInternal::DCIter::HandleInlineDeclContext (1 samples, 0.08%)</title><rect x="1118.9" y="309" width="0.9" height="15.0" fill="rgb(234,206,31)" rx="2" ry="2" />
<text  x="1121.89" y="319.5" ></text>
</g>
<g >
<title>HandleInterpreterException (76 samples, 5.80%)</title><rect x="860.6" y="837" width="68.4" height="15.0" fill="rgb(226,18,21)" rx="2" ry="2" />
<text  x="863.57" y="847.5" >HandleI..</text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentNameType (1 samples, 0.08%)</title><rect x="673.4" y="789" width="0.9" height="15.0" fill="rgb(235,136,10)" rx="2" ry="2" />
<text  x="676.36" y="799.5" ></text>
</g>
<g >
<title>clang::Preprocessor::HandleIdentifier (1 samples, 0.08%)</title><rect x="942.5" y="565" width="0.9" height="15.0" fill="rgb(216,113,14)" rx="2" ry="2" />
<text  x="945.48" y="575.5" ></text>
</g>
<g >
<title>__GI__IO_getline_info (2 samples, 0.15%)</title><rect x="950.6" y="805" width="1.8" height="15.0" fill="rgb(218,77,42)" rx="2" ry="2" />
<text  x="953.58" y="815.5" ></text>
</g>
<g >
<title>llvm::MachineFunctionPass::runOnFunction (10 samples, 0.76%)</title><rect x="840.8" y="597" width="9.0" height="15.0" fill="rgb(209,53,13)" rx="2" ry="2" />
<text  x="843.77" y="607.5" ></text>
</g>
<g >
<title>EvaluateAsRValue (2 samples, 0.15%)</title><rect x="1021.7" y="821" width="1.8" height="15.0" fill="rgb(205,196,24)" rx="2" ry="2" />
<text  x="1024.69" y="831.5" ></text>
</g>
<g >
<title>llvm::MachineLoopInfo::runOnMachineFunction (1 samples, 0.08%)</title><rect x="244.9" y="725" width="0.9" height="15.0" fill="rgb(244,9,17)" rx="2" ry="2" />
<text  x="247.92" y="735.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.08%)</title><rect x="35.2" y="629" width="0.9" height="15.0" fill="rgb(215,159,39)" rx="2" ry="2" />
<text  x="38.20" y="639.5" ></text>
</g>
<g >
<title>clang::ASTReader::finishPendingActions (1 samples, 0.08%)</title><rect x="1049.6" y="437" width="0.9" height="15.0" fill="rgb(235,199,12)" rx="2" ry="2" />
<text  x="1052.59" y="447.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.08%)</title><rect x="239.5" y="661" width="0.9" height="15.0" fill="rgb(237,18,3)" rx="2" ry="2" />
<text  x="242.52" y="671.5" ></text>
</g>
<g >
<title>clang::Sema::BuildQualifiedDeclarationNameExpr (1 samples, 0.08%)</title><rect x="1075.7" y="725" width="0.9" height="15.0" fill="rgb(227,37,52)" rx="2" ry="2" />
<text  x="1078.69" y="735.5" ></text>
</g>
<g >
<title>llvm::AttributeImpl::operator&lt; (1 samples, 0.08%)</title><rect x="1041.5" y="645" width="0.9" height="15.0" fill="rgb(226,91,51)" rx="2" ry="2" />
<text  x="1044.49" y="655.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (3 samples, 0.23%)</title><rect x="1015.4" y="789" width="2.7" height="15.0" fill="rgb(251,55,50)" rx="2" ry="2" />
<text  x="1018.39" y="799.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.08%)</title><rect x="35.2" y="901" width="0.9" height="15.0" fill="rgb(218,155,13)" rx="2" ry="2" />
<text  x="38.20" y="911.5" ></text>
</g>
<g >
<title>llvm::InstructionCombiningPass::runOnFunction (5 samples, 0.38%)</title><rect x="906.5" y="597" width="4.5" height="15.0" fill="rgb(226,213,4)" rx="2" ry="2" />
<text  x="909.48" y="607.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1152.2" y="693" width="0.9" height="15.0" fill="rgb(214,47,41)" rx="2" ry="2" />
<text  x="1155.20" y="703.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl (1 samples, 0.08%)</title><rect x="1083.8" y="805" width="0.9" height="15.0" fill="rgb(235,162,29)" rx="2" ry="2" />
<text  x="1086.79" y="815.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentScopeDeclRefExpr (1 samples, 0.08%)</title><rect x="1095.5" y="661" width="0.9" height="15.0" fill="rgb(242,128,4)" rx="2" ry="2" />
<text  x="1098.49" y="671.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (2 samples, 0.15%)</title><rect x="1094.6" y="805" width="1.8" height="15.0" fill="rgb(245,76,33)" rx="2" ry="2" />
<text  x="1097.59" y="815.5" ></text>
</g>
<g >
<title>cling::utils::platform::DLOpen (1 samples, 0.08%)</title><rect x="202.6" y="453" width="0.9" height="15.0" fill="rgb(219,128,17)" rx="2" ry="2" />
<text  x="205.62" y="463.5" ></text>
</g>
<g >
<title>DynamicPath (10 samples, 0.76%)</title><rect x="943.4" y="837" width="9.0" height="15.0" fill="rgb(254,39,17)" rx="2" ry="2" />
<text  x="946.38" y="847.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformBinaryOperator (1 samples, 0.08%)</title><rect x="1096.4" y="869" width="0.9" height="15.0" fill="rgb(233,6,26)" rx="2" ry="2" />
<text  x="1099.39" y="879.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.08%)</title><rect x="1161.2" y="821" width="0.9" height="15.0" fill="rgb(248,196,53)" rx="2" ry="2" />
<text  x="1164.20" y="831.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTSIInObjectScope (1 samples, 0.08%)</title><rect x="1055.9" y="741" width="0.9" height="15.0" fill="rgb(238,88,22)" rx="2" ry="2" />
<text  x="1058.89" y="751.5" ></text>
</g>
<g >
<title>EvaluateAsRValue (2 samples, 0.15%)</title><rect x="1021.7" y="805" width="1.8" height="15.0" fill="rgb(208,0,13)" rx="2" ry="2" />
<text  x="1024.69" y="815.5" ></text>
</g>
<g >
<title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::CalculateFromScratch (1 samples, 0.08%)</title><rect x="229.6" y="725" width="0.9" height="15.0" fill="rgb(219,21,20)" rx="2" ry="2" />
<text  x="232.62" y="735.5" ></text>
</g>
<g >
<title>isKnownNonZero (1 samples, 0.08%)</title><rect x="813.8" y="581" width="0.9" height="15.0" fill="rgb(207,138,26)" rx="2" ry="2" />
<text  x="816.77" y="591.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.08%)</title><rect x="673.4" y="837" width="0.9" height="15.0" fill="rgb(245,205,3)" rx="2" ry="2" />
<text  x="676.36" y="847.5" ></text>
</g>
<g >
<title>cling::Interpreter::EvaluateInternal (1 samples, 0.08%)</title><rect x="449.2" y="901" width="0.9" height="15.0" fill="rgb(219,162,27)" rx="2" ry="2" />
<text  x="452.24" y="911.5" ></text>
</g>
<g >
<title>clang::Sema::CreateBuiltinBinOp (1 samples, 0.08%)</title><rect x="1096.4" y="837" width="0.9" height="15.0" fill="rgb(245,57,4)" rx="2" ry="2" />
<text  x="1099.39" y="847.5" ></text>
</g>
<g >
<title>llvm::SimplifyCall (1 samples, 0.08%)</title><rect x="219.7" y="693" width="0.9" height="15.0" fill="rgb(220,23,16)" rx="2" ry="2" />
<text  x="222.72" y="703.5" ></text>
</g>
<g >
<title>llvm::SCEVExpander::getAddRecExprPHILiterally (1 samples, 0.08%)</title><rect x="671.6" y="885" width="0.9" height="15.0" fill="rgb(214,220,32)" rx="2" ry="2" />
<text  x="674.56" y="895.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;llvm::make_const_ptr, (anonymous namespace)::IntExprEvaluator, bool&gt;::Visit (1 samples, 0.08%)</title><rect x="1023.5" y="661" width="0.9" height="15.0" fill="rgb(253,82,38)" rx="2" ry="2" />
<text  x="1026.49" y="671.5" ></text>
</g>
<g >
<title>EmitDirectCallee (1 samples, 0.08%)</title><rect x="1020.8" y="773" width="0.9" height="15.0" fill="rgb(228,132,35)" rx="2" ry="2" />
<text  x="1023.79" y="783.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::runOnMachineFunction (1 samples, 0.08%)</title><rect x="1107.2" y="693" width="0.9" height="15.0" fill="rgb(211,150,18)" rx="2" ry="2" />
<text  x="1110.19" y="703.5" ></text>
</g>
<g >
<title>call_init.part.0 (6 samples, 0.46%)</title><rect x="1001.9" y="917" width="5.4" height="15.0" fill="rgb(230,149,51)" rx="2" ry="2" />
<text  x="1004.88" y="927.5" ></text>
</g>
<g >
<title>TApplication::ExecuteFile (175 samples, 13.35%)</title><rect x="674.3" y="949" width="157.5" height="15.0" fill="rgb(228,190,38)" rx="2" ry="2" />
<text  x="677.26" y="959.5" >TApplication::Execut..</text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::ConstructAttributeList (1 samples, 0.08%)</title><rect x="1019.9" y="629" width="0.9" height="15.0" fill="rgb(253,90,2)" rx="2" ry="2" />
<text  x="1022.89" y="639.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddQualType (1 samples, 0.08%)</title><rect x="1064.9" y="549" width="0.9" height="15.0" fill="rgb(253,131,30)" rx="2" ry="2" />
<text  x="1067.89" y="559.5" ></text>
</g>
<g >
<title>clang::Lexer::LexTokenInternal (1 samples, 0.08%)</title><rect x="941.6" y="741" width="0.9" height="15.0" fill="rgb(214,27,18)" rx="2" ry="2" />
<text  x="944.58" y="751.5" ></text>
</g>
<g >
<title>TListOfDataMembers::Load (1 samples, 0.08%)</title><rect x="448.3" y="437" width="0.9" height="15.0" fill="rgb(239,149,53)" rx="2" ry="2" />
<text  x="451.34" y="447.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.15%)</title><rect x="1188.2" y="741" width="1.8" height="15.0" fill="rgb(217,45,52)" rx="2" ry="2" />
<text  x="1191.20" y="751.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertType (1 samples, 0.08%)</title><rect x="1049.6" y="693" width="0.9" height="15.0" fill="rgb(225,156,27)" rx="2" ry="2" />
<text  x="1052.59" y="703.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (1 samples, 0.08%)</title><rect x="1118.9" y="933" width="0.9" height="15.0" fill="rgb(246,33,30)" rx="2" ry="2" />
<text  x="1121.89" y="943.5" ></text>
</g>
<g >
<title>__reclaim_stacks (1 samples, 0.08%)</title><rect x="940.7" y="709" width="0.9" height="15.0" fill="rgb(240,68,5)" rx="2" ry="2" />
<text  x="943.68" y="719.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (3 samples, 0.23%)</title><rect x="1015.4" y="869" width="2.7" height="15.0" fill="rgb(243,224,39)" rx="2" ry="2" />
<text  x="1018.39" y="879.5" ></text>
</g>
<g >
<title>llvm::orc::LambdaSymbolResolver&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt; const&amp;)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}&gt;::lookup (1 samples, 0.08%)</title><rect x="854.3" y="693" width="0.9" height="15.0" fill="rgb(210,124,43)" rx="2" ry="2" />
<text  x="857.27" y="703.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.08%)</title><rect x="1064.0" y="725" width="0.9" height="15.0" fill="rgb(247,90,8)" rx="2" ry="2" />
<text  x="1066.99" y="735.5" ></text>
</g>
<g >
<title>ROOT::Internal::RDF::InterpreterCalc (1 samples, 0.08%)</title><rect x="449.2" y="949" width="0.9" height="15.0" fill="rgb(238,42,14)" rx="2" ry="2" />
<text  x="452.24" y="959.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;, void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;::LookupBucketFor&lt;void const*&gt; (3 samples, 0.23%)</title><rect x="889.4" y="549" width="2.7" height="15.0" fill="rgb(212,38,50)" rx="2" ry="2" />
<text  x="892.37" y="559.5" ></text>
</g>
<g >
<title>llvm::GlobalsAAResult::getModRefBehavior (1 samples, 0.08%)</title><rect x="804.8" y="581" width="0.9" height="15.0" fill="rgb(208,121,53)" rx="2" ry="2" />
<text  x="807.77" y="591.5" ></text>
</g>
<g >
<title>clang::Sema::AddOverloadCandidate (1 samples, 0.08%)</title><rect x="1055.0" y="837" width="0.9" height="15.0" fill="rgb(237,37,8)" rx="2" ry="2" />
<text  x="1057.99" y="847.5" ></text>
</g>
<g >
<title>[bash] (16 samples, 1.22%)</title><rect x="15.4" y="357" width="14.4" height="15.0" fill="rgb(208,76,51)" rx="2" ry="2" />
<text  x="18.40" y="367.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;llvm::make_const_ptr, (anonymous namespace)::PointerExprEvaluator, bool&gt;::Visit (1 samples, 0.08%)</title><rect x="1022.6" y="757" width="0.9" height="15.0" fill="rgb(213,209,3)" rx="2" ry="2" />
<text  x="1025.59" y="767.5" ></text>
</g>
<g >
<title>llvm::object::ELFObjectFile&lt;llvm::object::ELFType&lt;(llvm::support::endianness)1, true&gt; &gt;::getRelocatedSection (1 samples, 0.08%)</title><rect x="259.3" y="709" width="0.9" height="15.0" fill="rgb(206,156,8)" rx="2" ry="2" />
<text  x="262.32" y="719.5" ></text>
</g>
<g >
<title>AddReachableCodeToWorklist (1 samples, 0.08%)</title><rect x="203.5" y="693" width="0.9" height="15.0" fill="rgb(235,54,46)" rx="2" ry="2" />
<text  x="206.52" y="703.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.15%)</title><rect x="27.1" y="277" width="1.8" height="15.0" fill="rgb(248,206,35)" rx="2" ry="2" />
<text  x="30.10" y="287.5" ></text>
</g>
<g >
<title>clang::Sema::PerformPendingInstantiations (1 samples, 0.08%)</title><rect x="1054.1" y="757" width="0.9" height="15.0" fill="rgb(208,227,4)" rx="2" ry="2" />
<text  x="1057.09" y="767.5" ></text>
</g>
<g >
<title>llvm::AttributeList::addAttributes (1 samples, 0.08%)</title><rect x="1037.0" y="645" width="0.9" height="15.0" fill="rgb(219,51,5)" rx="2" ry="2" />
<text  x="1039.99" y="655.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddDecl (1 samples, 0.08%)</title><rect x="1094.6" y="613" width="0.9" height="15.0" fill="rgb(206,13,45)" rx="2" ry="2" />
<text  x="1097.59" y="623.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.08%)</title><rect x="35.2" y="517" width="0.9" height="15.0" fill="rgb(209,134,49)" rx="2" ry="2" />
<text  x="38.20" y="527.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::PopCleanupBlocks (1 samples, 0.08%)</title><rect x="1019.0" y="725" width="0.9" height="15.0" fill="rgb(240,187,8)" rx="2" ry="2" />
<text  x="1021.99" y="735.5" ></text>
</g>
<g >
<title>llvm::sroa::AllocaSliceRewriter::visit (1 samples, 0.08%)</title><rect x="801.2" y="565" width="0.9" height="15.0" fill="rgb(253,183,34)" rx="2" ry="2" />
<text  x="804.17" y="575.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.08%)</title><rect x="1062.2" y="821" width="0.9" height="15.0" fill="rgb(246,184,31)" rx="2" ry="2" />
<text  x="1065.19" y="831.5" ></text>
</g>
<g >
<title>llvm::AttrBuilder::addAttribute (1 samples, 0.08%)</title><rect x="1038.8" y="629" width="0.9" height="15.0" fill="rgb(210,203,35)" rx="2" ry="2" />
<text  x="1041.79" y="639.5" ></text>
</g>
<g >
<title>?? (3 samples, 0.23%)</title><rect x="368.2" y="901" width="2.7" height="15.0" fill="rgb(238,45,50)" rx="2" ry="2" />
<text  x="371.23" y="911.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (1 samples, 0.08%)</title><rect x="856.1" y="613" width="0.9" height="15.0" fill="rgb(233,116,19)" rx="2" ry="2" />
<text  x="859.07" y="623.5" ></text>
</g>
<g >
<title>[unknown] (10 samples, 0.76%)</title><rect x="962.3" y="773" width="9.0" height="15.0" fill="rgb(233,21,4)" rx="2" ry="2" />
<text  x="965.28" y="783.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertRecordDeclType (1 samples, 0.08%)</title><rect x="1048.7" y="901" width="0.9" height="15.0" fill="rgb(254,43,49)" rx="2" ry="2" />
<text  x="1051.69" y="911.5" ></text>
</g>
<g >
<title>clang::Sema::AddTemplateOverloadCandidate (1 samples, 0.08%)</title><rect x="1063.1" y="885" width="0.9" height="15.0" fill="rgb(222,111,11)" rx="2" ry="2" />
<text  x="1066.09" y="895.5" ></text>
</g>
<g >
<title>clang::FunctionDecl::getParamDecl (1 samples, 0.08%)</title><rect x="1057.7" y="789" width="0.9" height="15.0" fill="rgb(232,148,33)" rx="2" ry="2" />
<text  x="1060.69" y="799.5" ></text>
</g>
<g >
<title>combineInstructionsOverFunction (1 samples, 0.08%)</title><rect x="833.6" y="629" width="0.9" height="15.0" fill="rgb(251,60,26)" rx="2" ry="2" />
<text  x="836.57" y="639.5" ></text>
</g>
<g >
<title>TSystem::Load (1 samples, 0.08%)</title><rect x="839.0" y="901" width="0.9" height="15.0" fill="rgb(247,195,34)" rx="2" ry="2" />
<text  x="841.97" y="911.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (9 samples, 0.69%)</title><rect x="1033.4" y="821" width="8.1" height="15.0" fill="rgb(249,169,27)" rx="2" ry="2" />
<text  x="1036.39" y="831.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="970.4" y="709" width="0.9" height="15.0" fill="rgb(206,34,35)" rx="2" ry="2" />
<text  x="973.38" y="719.5" ></text>
</g>
<g >
<title>clang::CodeGen::ApplyDebugLocation::ApplyDebugLocation (1 samples, 0.08%)</title><rect x="1014.5" y="533" width="0.9" height="15.0" fill="rgb(213,168,53)" rx="2" ry="2" />
<text  x="1017.49" y="543.5" ></text>
</g>
<g >
<title>llvm::CallBase::hasFnAttrOnCalledFunction (1 samples, 0.08%)</title><rect x="817.4" y="581" width="0.9" height="15.0" fill="rgb(234,171,36)" rx="2" ry="2" />
<text  x="820.37" y="591.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallee (1 samples, 0.08%)</title><rect x="1091.9" y="677" width="0.9" height="15.0" fill="rgb(215,107,33)" rx="2" ry="2" />
<text  x="1094.89" y="687.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass (1 samples, 0.08%)</title><rect x="1092.8" y="741" width="0.9" height="15.0" fill="rgb(216,188,52)" rx="2" ry="2" />
<text  x="1095.79" y="751.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="17.2" y="229" width="0.9" height="15.0" fill="rgb(222,163,5)" rx="2" ry="2" />
<text  x="20.20" y="239.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::run (1 samples, 0.08%)</title><rect x="833.6" y="613" width="0.9" height="15.0" fill="rgb(212,49,45)" rx="2" ry="2" />
<text  x="836.57" y="623.5" ></text>
</g>
<g >
<title>clang::ASTReader::resolvePendingMacro (1 samples, 0.08%)</title><rect x="942.5" y="501" width="0.9" height="15.0" fill="rgb(240,229,24)" rx="2" ry="2" />
<text  x="945.48" y="511.5" ></text>
</g>
<g >
<title>TPluginManager::FindHandler (1 samples, 0.08%)</title><rect x="838.1" y="901" width="0.9" height="15.0" fill="rgb(209,38,42)" rx="2" ry="2" />
<text  x="841.07" y="911.5" ></text>
</g>
<g >
<title>execute_command (16 samples, 1.22%)</title><rect x="15.4" y="485" width="14.4" height="15.0" fill="rgb(238,185,23)" rx="2" ry="2" />
<text  x="18.40" y="495.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::run (5 samples, 0.38%)</title><rect x="824.6" y="629" width="4.5" height="15.0" fill="rgb(206,107,14)" rx="2" ry="2" />
<text  x="827.57" y="639.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::SetLLVMFunctionAttributesForDefinition (1 samples, 0.08%)</title><rect x="1037.9" y="709" width="0.9" height="15.0" fill="rgb(252,147,41)" rx="2" ry="2" />
<text  x="1040.89" y="719.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGBuilder::visit (1 samples, 0.08%)</title><rect x="247.6" y="677" width="0.9" height="15.0" fill="rgb(212,195,11)" rx="2" ry="2" />
<text  x="250.62" y="687.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExceptionSpec (1 samples, 0.08%)</title><rect x="1062.2" y="837" width="0.9" height="15.0" fill="rgb(223,152,47)" rx="2" ry="2" />
<text  x="1065.19" y="847.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt;, llvm::DenseMapInfo&lt;llvm::BasicBlock*&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt; &gt; &gt;, llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt;, llvm::DenseMapInfo&lt;llvm::BasicBlock*&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt; &gt; &gt;::clear (1 samples, 0.08%)</title><rect x="880.4" y="565" width="0.9" height="15.0" fill="rgb(254,113,53)" rx="2" ry="2" />
<text  x="883.37" y="575.5" ></text>
</g>
<g >
<title>_dl_start (5 samples, 0.38%)</title><rect x="1147.7" y="933" width="4.5" height="15.0" fill="rgb(251,92,22)" rx="2" ry="2" />
<text  x="1150.70" y="943.5" ></text>
</g>
<g >
<title>clang::DeclContext::decls_begin (1 samples, 0.08%)</title><rect x="1083.8" y="869" width="0.9" height="15.0" fill="rgb(241,38,27)" rx="2" ry="2" />
<text  x="1086.79" y="879.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyld::loadObject (53 samples, 4.04%)</title><rect x="750.8" y="613" width="47.7" height="15.0" fill="rgb(228,148,48)" rx="2" ry="2" />
<text  x="753.76" y="623.5" >llvm..</text>
</g>
<g >
<title>dl_open_worker (1 samples, 0.08%)</title><rect x="202.6" y="325" width="0.9" height="15.0" fill="rgb(235,128,32)" rx="2" ry="2" />
<text  x="205.62" y="335.5" ></text>
</g>
<g >
<title>llvm::FoldingSetNodeID::ComputeHash (1 samples, 0.08%)</title><rect x="1055.9" y="645" width="0.9" height="15.0" fill="rgb(236,110,54)" rx="2" ry="2" />
<text  x="1058.89" y="655.5" ></text>
</g>
<g >
<title>clang::Type::isIntegerType (1 samples, 0.08%)</title><rect x="1099.1" y="869" width="0.9" height="15.0" fill="rgb(236,66,11)" rx="2" ry="2" />
<text  x="1102.09" y="879.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="946.1" y="757" width="0.9" height="15.0" fill="rgb(242,186,54)" rx="2" ry="2" />
<text  x="949.08" y="767.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.23%)</title><rect x="11.8" y="373" width="2.7" height="15.0" fill="rgb(249,98,10)" rx="2" ry="2" />
<text  x="14.80" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.08%)</title><rect x="237.7" y="709" width="0.9" height="15.0" fill="rgb(251,159,2)" rx="2" ry="2" />
<text  x="240.72" y="719.5" ></text>
</g>
<g >
<title>llvm::InstrEmitter::AddOperand (1 samples, 0.08%)</title><rect x="1103.6" y="581" width="0.9" height="15.0" fill="rgb(215,158,7)" rx="2" ry="2" />
<text  x="1106.59" y="591.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition (2 samples, 0.15%)</title><rect x="1083.8" y="933" width="1.8" height="15.0" fill="rgb(242,64,32)" rx="2" ry="2" />
<text  x="1086.79" y="943.5" ></text>
</g>
<g >
<title>clang::Preprocessor::HandleDirective (1 samples, 0.08%)</title><rect x="941.6" y="725" width="0.9" height="15.0" fill="rgb(205,198,3)" rx="2" ry="2" />
<text  x="944.58" y="735.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl (1 samples, 0.08%)</title><rect x="1049.6" y="405" width="0.9" height="15.0" fill="rgb(222,213,41)" rx="2" ry="2" />
<text  x="1052.59" y="415.5" ></text>
</g>
<g >
<title>llvm::AAResults::getModRefInfo (1 samples, 0.08%)</title><rect x="230.5" y="661" width="0.9" height="15.0" fill="rgb(227,12,20)" rx="2" ry="2" />
<text  x="233.52" y="671.5" ></text>
</g>
<g >
<title>_dlerror_run (1 samples, 0.08%)</title><rect x="839.0" y="821" width="0.9" height="15.0" fill="rgb(210,108,1)" rx="2" ry="2" />
<text  x="841.97" y="831.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (33 samples, 2.52%)</title><rect x="897.5" y="613" width="29.7" height="15.0" fill="rgb(250,217,13)" rx="2" ry="2" />
<text  x="900.48" y="623.5" >ll..</text>
</g>
<g >
<title>TBufferFile::ReadFastArray (1 samples, 0.08%)</title><rect x="1118.9" y="613" width="0.9" height="15.0" fill="rgb(247,74,6)" rx="2" ry="2" />
<text  x="1121.89" y="623.5" ></text>
</g>
<g >
<title>llvm::orc::lookupWithLegacyFn&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}::operator()(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;) const::{lambda(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)#1}&gt; (1 samples, 0.08%)</title><rect x="1119.8" y="901" width="0.9" height="15.0" fill="rgb(231,167,42)" rx="2" ry="2" />
<text  x="1122.79" y="911.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallArg (1 samples, 0.08%)</title><rect x="1091.0" y="869" width="0.9" height="15.0" fill="rgb(228,23,9)" rx="2" ry="2" />
<text  x="1093.99" y="879.5" ></text>
</g>
<g >
<title>llvm::object::ELFObjectFile&lt;llvm::object::ELFType&lt;(llvm::support::endianness)1, true&gt; &gt;::section_end (9 samples, 0.69%)</title><rect x="763.4" y="517" width="8.1" height="15.0" fill="rgb(248,93,17)" rx="2" ry="2" />
<text  x="766.36" y="527.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke (1 samples, 0.08%)</title><rect x="1110.8" y="741" width="0.9" height="15.0" fill="rgb(218,11,31)" rx="2" ry="2" />
<text  x="1113.79" y="751.5" ></text>
</g>
<g >
<title>__nptl_set_robust (1 samples, 0.08%)</title><rect x="1145.9" y="917" width="0.9" height="15.0" fill="rgb(238,25,27)" rx="2" ry="2" />
<text  x="1148.90" y="927.5" ></text>
</g>
<g >
<title>clang::LinkageComputer::getLVForDecl (1 samples, 0.08%)</title><rect x="1016.3" y="533" width="0.9" height="15.0" fill="rgb(211,184,0)" rx="2" ry="2" />
<text  x="1019.29" y="543.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="445.6" y="725" width="0.9" height="15.0" fill="rgb(222,125,22)" rx="2" ry="2" />
<text  x="448.64" y="735.5" ></text>
</g>
<g >
<title>clang::Sema::buildOverloadedCallSet (1 samples, 0.08%)</title><rect x="1063.1" y="933" width="0.9" height="15.0" fill="rgb(205,17,42)" rx="2" ry="2" />
<text  x="1066.09" y="943.5" ></text>
</g>
<g >
<title>clang::Sema::SubstBaseSpecifiers (1 samples, 0.08%)</title><rect x="1072.1" y="837" width="0.9" height="15.0" fill="rgb(208,86,4)" rx="2" ry="2" />
<text  x="1075.09" y="847.5" ></text>
</g>
<g >
<title>llvm::Value::getName (2 samples, 0.15%)</title><rect x="924.5" y="597" width="1.8" height="15.0" fill="rgb(245,53,13)" rx="2" ry="2" />
<text  x="927.48" y="607.5" ></text>
</g>
<g >
<title>llvm::orc::LambdaSymbolResolver&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt; const&amp;)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}&gt;::lookup (1 samples, 0.08%)</title><rect x="1119.8" y="917" width="0.9" height="15.0" fill="rgb(222,17,34)" rx="2" ry="2" />
<text  x="1122.79" y="927.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallArgs&lt;clang::FunctionProtoType&gt; (1 samples, 0.08%)</title><rect x="1091.9" y="869" width="0.9" height="15.0" fill="rgb(229,88,8)" rx="2" ry="2" />
<text  x="1094.89" y="879.5" ></text>
</g>
<g >
<title>TryStaticImplicitCast (1 samples, 0.08%)</title><rect x="1001.0" y="949" width="0.9" height="15.0" fill="rgb(220,30,3)" rx="2" ry="2" />
<text  x="1003.98" y="959.5" ></text>
</g>
<g >
<title>std::vector&lt;llvm::MachineBasicBlock*, std::allocator&lt;llvm::MachineBasicBlock*&gt; &gt;::_M_realloc_insert&lt;llvm::MachineBasicBlock* const&amp;&gt; (1 samples, 0.08%)</title><rect x="244.0" y="677" width="0.9" height="15.0" fill="rgb(238,160,49)" rx="2" ry="2" />
<text  x="247.02" y="687.5" ></text>
</g>
<g >
<title>TFile::Open (2 samples, 0.15%)</title><rect x="855.2" y="949" width="1.8" height="15.0" fill="rgb(251,1,50)" rx="2" ry="2" />
<text  x="858.17" y="959.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.08%)</title><rect x="1001.9" y="565" width="0.9" height="15.0" fill="rgb(241,171,13)" rx="2" ry="2" />
<text  x="1004.88" y="575.5" ></text>
</g>
<g >
<title>cling::DeclCollector::HandleTopLevelDecl (1 samples, 0.08%)</title><rect x="855.2" y="645" width="0.9" height="15.0" fill="rgb(209,24,29)" rx="2" ry="2" />
<text  x="858.17" y="655.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetExternalDeclStmt (1 samples, 0.08%)</title><rect x="1077.5" y="869" width="0.9" height="15.0" fill="rgb(223,0,53)" rx="2" ry="2" />
<text  x="1080.49" y="879.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="445.6" y="789" width="0.9" height="15.0" fill="rgb(252,219,43)" rx="2" ry="2" />
<text  x="448.64" y="799.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.08%)</title><rect x="1037.9" y="597" width="0.9" height="15.0" fill="rgb(206,120,30)" rx="2" ry="2" />
<text  x="1040.89" y="607.5" ></text>
</g>
<g >
<title>llvm::BitstreamCursor::readRecord (1 samples, 0.08%)</title><rect x="1083.8" y="549" width="0.9" height="15.0" fill="rgb(216,219,5)" rx="2" ry="2" />
<text  x="1086.79" y="559.5" ></text>
</g>
<g >
<title>llvm::getOrEnforceKnownAlignment (1 samples, 0.08%)</title><rect x="836.3" y="565" width="0.9" height="15.0" fill="rgb(239,142,44)" rx="2" ry="2" />
<text  x="839.27" y="575.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="43.3" y="741" width="0.9" height="15.0" fill="rgb(217,121,6)" rx="2" ry="2" />
<text  x="46.30" y="751.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;, void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;::LookupBucketFor&lt;void const*&gt; (12 samples, 0.92%)</title><rect x="733.7" y="501" width="10.8" height="15.0" fill="rgb(247,197,17)" rx="2" ry="2" />
<text  x="736.66" y="511.5" ></text>
</g>
<g >
<title>llvm::hashing::detail::hash_state::mix (1 samples, 0.08%)</title><rect x="1065.8" y="597" width="0.9" height="15.0" fill="rgb(233,22,51)" rx="2" ry="2" />
<text  x="1068.79" y="607.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadStmtFromStream (1 samples, 0.08%)</title><rect x="1009.1" y="389" width="0.9" height="15.0" fill="rgb(222,208,15)" rx="2" ry="2" />
<text  x="1012.08" y="399.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="34.3" y="469" width="0.9" height="15.0" fill="rgb(244,48,39)" rx="2" ry="2" />
<text  x="37.30" y="479.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.08%)</title><rect x="35.2" y="309" width="0.9" height="15.0" fill="rgb(227,145,42)" rx="2" ry="2" />
<text  x="38.20" y="319.5" ></text>
</g>
<g >
<title>llvm::InstrEmitter::EmitMachineNode (2 samples, 0.15%)</title><rect x="1113.5" y="581" width="1.8" height="15.0" fill="rgb(214,55,42)" rx="2" ry="2" />
<text  x="1116.49" y="591.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::GetExternalDeclStmt (1 samples, 0.08%)</title><rect x="798.5" y="613" width="0.9" height="15.0" fill="rgb(242,135,17)" rx="2" ry="2" />
<text  x="801.47" y="623.5" ></text>
</g>
<g >
<title>memcpy@plt (1 samples, 0.08%)</title><rect x="1087.4" y="517" width="0.9" height="15.0" fill="rgb(214,80,39)" rx="2" ry="2" />
<text  x="1090.39" y="527.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetTypeSourceInfo (1 samples, 0.08%)</title><rect x="1010.0" y="693" width="0.9" height="15.0" fill="rgb(243,124,53)" rx="2" ry="2" />
<text  x="1012.98" y="703.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.08%)</title><rect x="35.2" y="805" width="0.9" height="15.0" fill="rgb(205,182,30)" rx="2" ry="2" />
<text  x="38.20" y="815.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="17.2" y="165" width="0.9" height="15.0" fill="rgb(215,82,42)" rx="2" ry="2" />
<text  x="20.20" y="175.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization (1 samples, 0.08%)</title><rect x="1100.0" y="837" width="0.9" height="15.0" fill="rgb(227,64,50)" rx="2" ry="2" />
<text  x="1102.99" y="847.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateArgument (1 samples, 0.08%)</title><rect x="1095.5" y="709" width="0.9" height="15.0" fill="rgb(250,176,25)" rx="2" ry="2" />
<text  x="1098.49" y="719.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClass (1 samples, 0.08%)</title><rect x="1074.8" y="661" width="0.9" height="15.0" fill="rgb(241,37,0)" rx="2" ry="2" />
<text  x="1077.79" y="671.5" ></text>
</g>
<g >
<title>_start (27 samples, 2.06%)</title><rect x="10.9" y="949" width="24.3" height="15.0" fill="rgb(216,182,40)" rx="2" ry="2" />
<text  x="13.90" y="959.5" >_..</text>
</g>
<g >
<title>llvm::GetElementPtrInst::getOperand (1 samples, 0.08%)</title><rect x="685.1" y="565" width="0.9" height="15.0" fill="rgb(228,199,45)" rx="2" ry="2" />
<text  x="688.06" y="575.5" ></text>
</g>
<g >
<title>clang::RedeclarableTemplateDecl::findSpecializationImpl&lt;clang::ClassTemplateSpecializationDecl&gt; (1 samples, 0.08%)</title><rect x="1094.6" y="693" width="0.9" height="15.0" fill="rgb(242,62,14)" rx="2" ry="2" />
<text  x="1097.59" y="703.5" ></text>
</g>
<g >
<title>clang::Sema::BuildQualifiedDeclarationNameExpr (1 samples, 0.08%)</title><rect x="1095.5" y="645" width="0.9" height="15.0" fill="rgb(245,224,29)" rx="2" ry="2" />
<text  x="1098.49" y="655.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (2 samples, 0.15%)</title><rect x="1125.2" y="901" width="1.8" height="15.0" fill="rgb(247,112,45)" rx="2" ry="2" />
<text  x="1128.19" y="911.5" ></text>
</g>
<g >
<title>cling::MetaParser::isXCommand (2 samples, 0.15%)</title><rect x="855.2" y="757" width="1.8" height="15.0" fill="rgb(215,47,29)" rx="2" ry="2" />
<text  x="858.17" y="767.5" ></text>
</g>
<g >
<title>cling::DynamicLibraryManager::DynamicLibraryManager (9 samples, 0.69%)</title><rect x="929.0" y="789" width="8.1" height="15.0" fill="rgb(222,79,6)" rx="2" ry="2" />
<text  x="931.98" y="799.5" ></text>
</g>
<g >
<title>clang::Sema::LookupSpecialMember (1 samples, 0.08%)</title><rect x="1055.0" y="853" width="0.9" height="15.0" fill="rgb(215,186,27)" rx="2" ry="2" />
<text  x="1057.99" y="863.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::computeExitLimitFromCondImpl (1 samples, 0.08%)</title><rect x="1109.9" y="613" width="0.9" height="15.0" fill="rgb(236,16,8)" rx="2" ry="2" />
<text  x="1112.89" y="623.5" ></text>
</g>
<g >
<title>_dl_relocate_object (1 samples, 0.08%)</title><rect x="200.8" y="885" width="0.9" height="15.0" fill="rgb(252,197,54)" rx="2" ry="2" />
<text  x="203.82" y="895.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::run (5 samples, 0.38%)</title><rect x="217.9" y="725" width="4.5" height="15.0" fill="rgb(244,171,8)" rx="2" ry="2" />
<text  x="220.92" y="735.5" ></text>
</g>
<g >
<title>clang::ASTStmtReader::VisitDependentScopeDeclRefExpr (1 samples, 0.08%)</title><rect x="1011.8" y="869" width="0.9" height="15.0" fill="rgb(216,138,19)" rx="2" ry="2" />
<text  x="1014.78" y="879.5" ></text>
</g>
<g >
<title>llvm::Expected&lt;llvm::ArrayRef&lt;llvm::object::Elf_Shdr_Impl&lt;llvm::object::ELFType&lt;(llvm::support::endianness)1, true&gt; &gt; &gt; &gt;::~Expected (1 samples, 0.08%)</title><rect x="767.0" y="501" width="0.9" height="15.0" fill="rgb(213,48,22)" rx="2" ry="2" />
<text  x="769.96" y="511.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (1 samples, 0.08%)</title><rect x="899.3" y="549" width="0.9" height="15.0" fill="rgb(213,136,52)" rx="2" ry="2" />
<text  x="902.28" y="559.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::SelectAllBasicBlocks (1 samples, 0.08%)</title><rect x="1110.8" y="629" width="0.9" height="15.0" fill="rgb(233,181,36)" rx="2" ry="2" />
<text  x="1113.79" y="639.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitParmDecl (1 samples, 0.08%)</title><rect x="1024.4" y="885" width="0.9" height="15.0" fill="rgb(248,101,4)" rx="2" ry="2" />
<text  x="1027.39" y="895.5" ></text>
</g>
<g >
<title>llvm::TargetLoweringBase::getTypeConversion (1 samples, 0.08%)</title><rect x="1120.7" y="693" width="0.9" height="15.0" fill="rgb(235,202,13)" rx="2" ry="2" />
<text  x="1123.69" y="703.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTSIInObjectScope (1 samples, 0.08%)</title><rect x="1087.4" y="709" width="0.9" height="15.0" fill="rgb(219,20,5)" rx="2" ry="2" />
<text  x="1090.39" y="719.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitTemplateDecl (1 samples, 0.08%)</title><rect x="1012.7" y="853" width="0.9" height="15.0" fill="rgb(210,58,40)" rx="2" ry="2" />
<text  x="1015.68" y="863.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.08%)</title><rect x="1037.9" y="613" width="0.9" height="15.0" fill="rgb(213,197,44)" rx="2" ry="2" />
<text  x="1040.89" y="623.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1183.7" y="773" width="0.9" height="15.0" fill="rgb(254,117,47)" rx="2" ry="2" />
<text  x="1186.70" y="783.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.08%)</title><rect x="1097.3" y="789" width="0.9" height="15.0" fill="rgb(222,82,22)" rx="2" ry="2" />
<text  x="1100.29" y="799.5" ></text>
</g>
<g >
<title>llvm::DataLayout::getTypeSizeInBits (1 samples, 0.08%)</title><rect x="800.3" y="549" width="0.9" height="15.0" fill="rgb(214,55,42)" rx="2" ry="2" />
<text  x="803.27" y="559.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGBuilder::visitGetElementPtr (1 samples, 0.08%)</title><rect x="843.5" y="517" width="0.9" height="15.0" fill="rgb(217,206,11)" rx="2" ry="2" />
<text  x="846.47" y="527.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="445.6" y="853" width="0.9" height="15.0" fill="rgb(244,218,22)" rx="2" ry="2" />
<text  x="448.64" y="863.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.08%)</title><rect x="858.8" y="725" width="0.9" height="15.0" fill="rgb(233,189,45)" rx="2" ry="2" />
<text  x="861.77" y="735.5" ></text>
</g>
<g >
<title>ROOT::Internal::RDF::GetValidatedColumnNames (3 samples, 0.23%)</title><rect x="446.5" y="949" width="2.7" height="15.0" fill="rgb(252,181,10)" rx="2" ry="2" />
<text  x="449.54" y="959.5" ></text>
</g>
<g >
<title>LookupMemberExprInRecord (1 samples, 0.08%)</title><rect x="1052.3" y="805" width="0.9" height="15.0" fill="rgb(223,44,7)" rx="2" ry="2" />
<text  x="1055.29" y="815.5" ></text>
</g>
<g >
<title>llvm::orc::LambdaSymbolResolver&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt; const&amp;)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}&gt;::lookup (1 samples, 0.08%)</title><rect x="1107.2" y="821" width="0.9" height="15.0" fill="rgb(254,206,20)" rx="2" ry="2" />
<text  x="1110.19" y="831.5" ></text>
</g>
<g >
<title>clang::StmtVisitorBase&lt;std::add_pointer, (anonymous namespace)::AggExprEmitter, void&gt;::Visit (1 samples, 0.08%)</title><rect x="1090.1" y="885" width="0.9" height="15.0" fill="rgb(239,172,4)" rx="2" ry="2" />
<text  x="1093.09" y="895.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.08%)</title><rect x="673.4" y="693" width="0.9" height="15.0" fill="rgb(212,92,30)" rx="2" ry="2" />
<text  x="676.36" y="703.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::Compile (1 samples, 0.08%)</title><rect x="942.5" y="805" width="0.9" height="15.0" fill="rgb(215,20,14)" rx="2" ry="2" />
<text  x="945.48" y="815.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (3 samples, 0.23%)</title><rect x="1033.4" y="613" width="2.7" height="15.0" fill="rgb(208,37,34)" rx="2" ry="2" />
<text  x="1036.39" y="623.5" ></text>
</g>
<g >
<title>llvm::AAResults::~AAResults (1 samples, 0.08%)</title><rect x="867.8" y="597" width="0.9" height="15.0" fill="rgb(211,37,53)" rx="2" ry="2" />
<text  x="870.77" y="607.5" ></text>
</g>
<g >
<title>clang::Sema::LookupQualifiedName (1 samples, 0.08%)</title><rect x="1052.3" y="789" width="0.9" height="15.0" fill="rgb(250,174,10)" rx="2" ry="2" />
<text  x="1055.29" y="799.5" ></text>
</g>
<g >
<title>operator&gt;&gt;&lt;TObjArray&gt; (1 samples, 0.08%)</title><rect x="448.3" y="693" width="0.9" height="15.0" fill="rgb(238,78,47)" rx="2" ry="2" />
<text  x="451.34" y="703.5" ></text>
</g>
<g >
<title>__GI___read (2 samples, 0.15%)</title><rect x="27.1" y="293" width="1.8" height="15.0" fill="rgb(233,165,40)" rx="2" ry="2" />
<text  x="30.10" y="303.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;, void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;::LookupBucketFor&lt;void const*&gt; (1 samples, 0.08%)</title><rect x="709.4" y="517" width="0.9" height="15.0" fill="rgb(236,124,47)" rx="2" ry="2" />
<text  x="712.36" y="527.5" ></text>
</g>
<g >
<title>canConvertValue (1 samples, 0.08%)</title><rect x="800.3" y="565" width="0.9" height="15.0" fill="rgb(243,194,35)" rx="2" ry="2" />
<text  x="803.27" y="575.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitFunctionBody (1 samples, 0.08%)</title><rect x="1014.5" y="933" width="0.9" height="15.0" fill="rgb(222,179,19)" rx="2" ry="2" />
<text  x="1017.49" y="943.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitTemplateDecl (1 samples, 0.08%)</title><rect x="1009.1" y="629" width="0.9" height="15.0" fill="rgb(213,174,49)" rx="2" ry="2" />
<text  x="1012.08" y="639.5" ></text>
</g>
<g >
<title>cling::Interpreter::EvaluateInternal (11 samples, 0.84%)</title><rect x="839.9" y="853" width="9.9" height="15.0" fill="rgb(251,13,21)" rx="2" ry="2" />
<text  x="842.87" y="863.5" ></text>
</g>
<g >
<title>llvm::ScheduleDAGSDNodes::EmitSchedule(llvm::MachineInstrBundleIterator&lt;llvm::MachineInstr, false&gt;&amp;)::{lambda(llvm::SDNode*, bool, bool, llvm::DenseMap&lt;llvm::SDValue, unsigned int, llvm::DenseMapInfo&lt;llvm::SDValue&gt;, llvm::detail::DenseMapPair&lt;llvm::SDValue, unsigned int&gt; &gt;&amp;)#1}::operator() (1 samples, 0.08%)</title><rect x="246.7" y="661" width="0.9" height="15.0" fill="rgb(236,119,42)" rx="2" ry="2" />
<text  x="249.72" y="671.5" ></text>
</g>
<g >
<title>llvm::CallGraph::CallGraph (1 samples, 0.08%)</title><rect x="866.0" y="613" width="0.9" height="15.0" fill="rgb(219,203,44)" rx="2" ry="2" />
<text  x="868.97" y="623.5" ></text>
</g>
<g >
<title>__GI__IO_file_underflow (4 samples, 0.31%)</title><rect x="982.1" y="789" width="3.6" height="15.0" fill="rgb(226,165,7)" rx="2" ry="2" />
<text  x="985.08" y="799.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (1 samples, 0.08%)</title><rect x="991.1" y="725" width="0.9" height="15.0" fill="rgb(216,67,34)" rx="2" ry="2" />
<text  x="994.08" y="735.5" ></text>
</g>
<g >
<title>clang::Sema::SubstType (1 samples, 0.08%)</title><rect x="1085.6" y="789" width="0.9" height="15.0" fill="rgb(205,168,6)" rx="2" ry="2" />
<text  x="1088.59" y="799.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetType (1 samples, 0.08%)</title><rect x="1007.3" y="853" width="0.9" height="15.0" fill="rgb(209,172,49)" rx="2" ry="2" />
<text  x="1010.28" y="863.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition (1 samples, 0.08%)</title><rect x="1084.7" y="901" width="0.9" height="15.0" fill="rgb(215,33,20)" rx="2" ry="2" />
<text  x="1087.69" y="911.5" ></text>
</g>
<g >
<title>TClingCallbacks::LookupObject (1 samples, 0.08%)</title><rect x="1018.1" y="485" width="0.9" height="15.0" fill="rgb(230,205,18)" rx="2" ry="2" />
<text  x="1021.09" y="495.5" ></text>
</g>
<g >
<title>EmitFunctionDeclPointer (1 samples, 0.08%)</title><rect x="1020.8" y="757" width="0.9" height="15.0" fill="rgb(223,196,4)" rx="2" ry="2" />
<text  x="1023.79" y="767.5" ></text>
</g>
<g >
<title>execute_command_internal (5 samples, 0.38%)</title><rect x="10.9" y="549" width="4.5" height="15.0" fill="rgb(246,95,8)" rx="2" ry="2" />
<text  x="13.90" y="559.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject&lt;std::shared_ptr&lt;llvm::RuntimeDyld::MemoryManager&gt; &gt;::getSymbolMaterializer(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda()#1}&gt;::_M_invoke (5 samples, 0.38%)</title><rect x="1113.5" y="869" width="4.5" height="15.0" fill="rgb(247,43,21)" rx="2" ry="2" />
<text  x="1116.49" y="879.5" ></text>
</g>
<g >
<title>version_check_doit (1 samples, 0.08%)</title><rect x="10.0" y="869" width="0.9" height="15.0" fill="rgb(227,162,30)" rx="2" ry="2" />
<text  x="13.00" y="879.5" ></text>
</g>
<g >
<title>llvm::JumpThreadingPass::ProcessThreadableEdges (2 samples, 0.15%)</title><rect x="815.6" y="629" width="1.8" height="15.0" fill="rgb(229,135,1)" rx="2" ry="2" />
<text  x="818.57" y="639.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::createNodeForPHI (1 samples, 0.08%)</title><rect x="1118.0" y="613" width="0.9" height="15.0" fill="rgb(244,208,36)" rx="2" ry="2" />
<text  x="1120.99" y="623.5" ></text>
</g>
<g >
<title>clang::Sema::CheckFieldDecl (1 samples, 0.08%)</title><rect x="1092.8" y="821" width="0.9" height="15.0" fill="rgb(213,64,36)" rx="2" ry="2" />
<text  x="1095.79" y="831.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.08%)</title><rect x="1024.4" y="821" width="0.9" height="15.0" fill="rgb(247,41,48)" rx="2" ry="2" />
<text  x="1027.39" y="831.5" ></text>
</g>
<g >
<title>clang::ASTContext::getTypeInfo (1 samples, 0.08%)</title><rect x="1013.6" y="773" width="0.9" height="15.0" fill="rgb(213,101,2)" rx="2" ry="2" />
<text  x="1016.59" y="783.5" ></text>
</g>
<g >
<title>cling::MetaParser::isXCommand (76 samples, 5.80%)</title><rect x="860.6" y="789" width="68.4" height="15.0" fill="rgb(250,218,23)" rx="2" ry="2" />
<text  x="863.57" y="799.5" >cling::..</text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (1 samples, 0.08%)</title><rect x="1110.8" y="709" width="0.9" height="15.0" fill="rgb(247,114,27)" rx="2" ry="2" />
<text  x="1113.79" y="719.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization (1 samples, 0.08%)</title><rect x="1097.3" y="853" width="0.9" height="15.0" fill="rgb(248,160,53)" rx="2" ry="2" />
<text  x="1100.29" y="863.5" ></text>
</g>
<g >
<title>TApplication::ExecuteFile (1 samples, 0.08%)</title><rect x="838.1" y="821" width="0.9" height="15.0" fill="rgb(254,196,52)" rx="2" ry="2" />
<text  x="841.07" y="831.5" ></text>
</g>
<g >
<title>clang::Sema::LookupQualifiedName (1 samples, 0.08%)</title><rect x="673.4" y="645" width="0.9" height="15.0" fill="rgb(221,209,5)" rx="2" ry="2" />
<text  x="676.36" y="655.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1074.8" y="389" width="0.9" height="15.0" fill="rgb(227,107,16)" rx="2" ry="2" />
<text  x="1077.79" y="399.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.08%)</title><rect x="35.2" y="357" width="0.9" height="15.0" fill="rgb(238,159,23)" rx="2" ry="2" />
<text  x="38.20" y="367.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.15%)</title><rect x="1139.6" y="853" width="1.8" height="15.0" fill="rgb(215,161,22)" rx="2" ry="2" />
<text  x="1142.60" y="863.5" ></text>
</g>
<g >
<title>TClass::CallShowMembers (1 samples, 0.08%)</title><rect x="447.4" y="645" width="0.9" height="15.0" fill="rgb(218,10,24)" rx="2" ry="2" />
<text  x="450.44" y="655.5" ></text>
</g>
<g >
<title>isSafeToConvert (1 samples, 0.08%)</title><rect x="1048.7" y="469" width="0.9" height="15.0" fill="rgb(226,169,7)" rx="2" ry="2" />
<text  x="1051.69" y="479.5" ></text>
</g>
<g >
<title>clang::getPrimaryMergedDecl (1 samples, 0.08%)</title><rect x="857.9" y="773" width="0.9" height="15.0" fill="rgb(240,160,19)" rx="2" ry="2" />
<text  x="860.87" y="783.5" ></text>
</g>
<g >
<title>TBuildRealData::Inspect (1 samples, 0.08%)</title><rect x="448.3" y="485" width="0.9" height="15.0" fill="rgb(240,14,49)" rx="2" ry="2" />
<text  x="451.34" y="495.5" ></text>
</g>
<g >
<title>llvm::IVUsers::IVUsers (1 samples, 0.08%)</title><rect x="1129.7" y="837" width="0.9" height="15.0" fill="rgb(250,136,16)" rx="2" ry="2" />
<text  x="1132.69" y="847.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetType (1 samples, 0.08%)</title><rect x="1083.8" y="629" width="0.9" height="15.0" fill="rgb(234,37,33)" rx="2" ry="2" />
<text  x="1086.79" y="639.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit (1 samples, 0.08%)</title><rect x="1009.1" y="789" width="0.9" height="15.0" fill="rgb(235,127,54)" rx="2" ry="2" />
<text  x="1012.08" y="799.5" ></text>
</g>
<g >
<title>clang::RecordDecl::field_begin (1 samples, 0.08%)</title><rect x="1049.6" y="501" width="0.9" height="15.0" fill="rgb(250,160,48)" rx="2" ry="2" />
<text  x="1052.59" y="511.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::~ScalarEvolution (1 samples, 0.08%)</title><rect x="915.5" y="549" width="0.9" height="15.0" fill="rgb(242,190,30)" rx="2" ry="2" />
<text  x="918.48" y="559.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1146.8" y="885" width="0.9" height="15.0" fill="rgb(238,151,44)" rx="2" ry="2" />
<text  x="1149.80" y="895.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="930.8" y="629" width="0.9" height="15.0" fill="rgb(218,229,4)" rx="2" ry="2" />
<text  x="933.78" y="639.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::run (7 samples, 0.53%)</title><rect x="809.3" y="645" width="6.3" height="15.0" fill="rgb(222,220,53)" rx="2" ry="2" />
<text  x="812.27" y="655.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::GenerateCode (1 samples, 0.08%)</title><rect x="1014.5" y="949" width="0.9" height="15.0" fill="rgb(206,148,40)" rx="2" ry="2" />
<text  x="1017.49" y="959.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.08%)</title><rect x="1039.7" y="613" width="0.9" height="15.0" fill="rgb(232,70,25)" rx="2" ry="2" />
<text  x="1042.69" y="623.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType (1 samples, 0.08%)</title><rect x="1065.8" y="709" width="0.9" height="15.0" fill="rgb(234,95,1)" rx="2" ry="2" />
<text  x="1068.79" y="719.5" ></text>
</g>
<g >
<title>clang::Sema::BuildDeclRefExpr (1 samples, 0.08%)</title><rect x="1079.3" y="613" width="0.9" height="15.0" fill="rgb(227,135,41)" rx="2" ry="2" />
<text  x="1082.29" y="623.5" ></text>
</g>
<g >
<title>TClass::CallShowMembers (1 samples, 0.08%)</title><rect x="447.4" y="709" width="0.9" height="15.0" fill="rgb(219,32,9)" rx="2" ry="2" />
<text  x="450.44" y="719.5" ></text>
</g>
<g >
<title>llvm::BuildMI (1 samples, 0.08%)</title><rect x="692.3" y="549" width="0.9" height="15.0" fill="rgb(225,200,26)" rx="2" ry="2" />
<text  x="695.26" y="559.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::getGEPExpr (1 samples, 0.08%)</title><rect x="852.5" y="629" width="0.9" height="15.0" fill="rgb(221,110,16)" rx="2" ry="2" />
<text  x="855.47" y="639.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::executeWrapper (11 samples, 0.84%)</title><rect x="839.9" y="821" width="9.9" height="15.0" fill="rgb(214,118,19)" rx="2" ry="2" />
<text  x="842.87" y="831.5" ></text>
</g>
<g >
<title>llvm::MachineFunctionPass::runOnFunction (5 samples, 0.38%)</title><rect x="1113.5" y="677" width="4.5" height="15.0" fill="rgb(241,219,51)" rx="2" ry="2" />
<text  x="1116.49" y="687.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (1 samples, 0.08%)</title><rect x="838.1" y="581" width="0.9" height="15.0" fill="rgb(243,25,5)" rx="2" ry="2" />
<text  x="841.07" y="591.5" ></text>
</g>
<g >
<title>__GI_setlocale (2 samples, 0.15%)</title><rect x="1188.2" y="885" width="1.8" height="15.0" fill="rgb(250,157,45)" rx="2" ry="2" />
<text  x="1191.20" y="895.5" ></text>
</g>
<g >
<title>clang::Parser::ParseExpressionList (1 samples, 0.08%)</title><rect x="1053.2" y="805" width="0.9" height="15.0" fill="rgb(244,185,10)" rx="2" ry="2" />
<text  x="1056.19" y="815.5" ></text>
</g>
<g >
<title>ClingMemberIterInternal::DCIter::DCIter (1 samples, 0.08%)</title><rect x="447.4" y="485" width="0.9" height="15.0" fill="rgb(231,201,10)" rx="2" ry="2" />
<text  x="450.44" y="495.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveRelocationList (1 samples, 0.08%)</title><rect x="749.9" y="565" width="0.9" height="15.0" fill="rgb(215,163,29)" rx="2" ry="2" />
<text  x="752.86" y="575.5" ></text>
</g>
<g >
<title>clang::Sema::CheckCallReturnType (2 samples, 0.15%)</title><rect x="1060.4" y="901" width="1.8" height="15.0" fill="rgb(237,12,50)" rx="2" ry="2" />
<text  x="1063.39" y="911.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTemplateIdType (1 samples, 0.08%)</title><rect x="673.4" y="869" width="0.9" height="15.0" fill="rgb(234,161,10)" rx="2" ry="2" />
<text  x="676.36" y="879.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (1 samples, 0.08%)</title><rect x="928.1" y="469" width="0.9" height="15.0" fill="rgb(220,62,22)" rx="2" ry="2" />
<text  x="931.08" y="479.5" ></text>
</g>
<g >
<title>llvm::orc::SimpleCompiler::operator() (1 samples, 0.08%)</title><rect x="1107.2" y="773" width="0.9" height="15.0" fill="rgb(234,87,28)" rx="2" ry="2" />
<text  x="1110.19" y="783.5" ></text>
</g>
<g >
<title>llvm::TargetRegisterInfo::getMinimalPhysRegClass (1 samples, 0.08%)</title><rect x="1105.4" y="565" width="0.9" height="15.0" fill="rgb(244,10,37)" rx="2" ry="2" />
<text  x="1108.39" y="575.5" ></text>
</g>
<g >
<title>clang::Parser::isCXXDeclarationSpecifier (1 samples, 0.08%)</title><rect x="1109.0" y="821" width="0.9" height="15.0" fill="rgb(245,128,46)" rx="2" ry="2" />
<text  x="1111.99" y="831.5" ></text>
</g>
<g >
<title>__GI___fork (4 samples, 0.31%)</title><rect x="947.0" y="789" width="3.6" height="15.0" fill="rgb(235,193,15)" rx="2" ry="2" />
<text  x="949.98" y="799.5" ></text>
</g>
<g >
<title>getCopyToParts (1 samples, 0.08%)</title><rect x="1122.5" y="837" width="0.9" height="15.0" fill="rgb(228,198,11)" rx="2" ry="2" />
<text  x="1125.49" y="847.5" ></text>
</g>
<g >
<title>TBranch::GetEntry (188 samples, 14.34%)</title><rect x="501.4" y="885" width="169.3" height="15.0" fill="rgb(214,84,31)" rx="2" ry="2" />
<text  x="504.44" y="895.5" >TBranch::GetEntry</text>
</g>
<g >
<title>llvm::InstCombiner::visitCallBase (1 samples, 0.08%)</title><rect x="907.4" y="549" width="0.9" height="15.0" fill="rgb(237,189,18)" rx="2" ry="2" />
<text  x="910.38" y="559.5" ></text>
</g>
<g >
<title>llvm::InstrEmitter::EmitMachineNode (1 samples, 0.08%)</title><rect x="246.7" y="645" width="0.9" height="15.0" fill="rgb(224,18,28)" rx="2" ry="2" />
<text  x="249.72" y="655.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadTemplateParameterList (1 samples, 0.08%)</title><rect x="1051.4" y="757" width="0.9" height="15.0" fill="rgb(249,136,48)" rx="2" ry="2" />
<text  x="1054.39" y="767.5" ></text>
</g>
<g >
<title>llvm::TargetLibraryInfoImpl::getLibFunc (1 samples, 0.08%)</title><rect x="812.9" y="549" width="0.9" height="15.0" fill="rgb(217,11,36)" rx="2" ry="2" />
<text  x="815.87" y="559.5" ></text>
</g>
<g >
<title>llvm::SmallPtrSetImplBase::CopyHelper (1 samples, 0.08%)</title><rect x="902.9" y="565" width="0.9" height="15.0" fill="rgb(222,24,24)" rx="2" ry="2" />
<text  x="905.88" y="575.5" ></text>
</g>
<g >
<title>clang::ASTContext::CreateTypeSourceInfo (1 samples, 0.08%)</title><rect x="855.2" y="469" width="0.9" height="15.0" fill="rgb(218,140,40)" rx="2" ry="2" />
<text  x="858.17" y="479.5" ></text>
</g>
<g >
<title>clang::Sema::SubstBaseSpecifiers (1 samples, 0.08%)</title><rect x="1085.6" y="901" width="0.9" height="15.0" fill="rgb(212,70,49)" rx="2" ry="2" />
<text  x="1088.59" y="911.5" ></text>
</g>
<g >
<title>clang::Sema::SubstType (3 samples, 0.23%)</title><rect x="1073.0" y="917" width="2.7" height="15.0" fill="rgb(236,19,33)" rx="2" ry="2" />
<text  x="1075.99" y="927.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::SelectAllBasicBlocks (2 samples, 0.15%)</title><rect x="1125.2" y="853" width="1.8" height="15.0" fill="rgb(243,170,35)" rx="2" ry="2" />
<text  x="1128.19" y="863.5" ></text>
</g>
<g >
<title>clang::Sema::CheckConstructor (1 samples, 0.08%)</title><rect x="1057.7" y="805" width="0.9" height="15.0" fill="rgb(244,1,32)" rx="2" ry="2" />
<text  x="1060.69" y="815.5" ></text>
</g>
<g >
<title>llvm::ReachingDefAnalysis::releaseMemory (1 samples, 0.08%)</title><rect x="718.4" y="533" width="0.9" height="15.0" fill="rgb(214,26,49)" rx="2" ry="2" />
<text  x="721.36" y="543.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.08%)</title><rect x="850.7" y="725" width="0.9" height="15.0" fill="rgb(207,115,13)" rx="2" ry="2" />
<text  x="853.67" y="735.5" ></text>
</g>
<g >
<title>[bash] (15 samples, 1.14%)</title><rect x="15.4" y="341" width="13.5" height="15.0" fill="rgb(210,77,8)" rx="2" ry="2" />
<text  x="18.40" y="351.5" ></text>
</g>
<g >
<title>strcmp (1 samples, 0.08%)</title><rect x="1142.3" y="821" width="0.9" height="15.0" fill="rgb(249,7,21)" rx="2" ry="2" />
<text  x="1145.30" y="831.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddType (1 samples, 0.08%)</title><rect x="1094.6" y="565" width="0.9" height="15.0" fill="rgb(224,143,31)" rx="2" ry="2" />
<text  x="1097.59" y="575.5" ></text>
</g>
<g >
<title>llvm::Pass::getAnalysisIfAvailable&lt;llvm::CFLSteensAAWrapperPass&gt; (1 samples, 0.08%)</title><rect x="900.2" y="581" width="0.9" height="15.0" fill="rgb(232,184,27)" rx="2" ry="2" />
<text  x="903.18" y="591.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (3 samples, 0.23%)</title><rect x="851.6" y="725" width="2.7" height="15.0" fill="rgb(217,134,6)" rx="2" ry="2" />
<text  x="854.57" y="735.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl (2 samples, 0.15%)</title><rect x="1073.0" y="789" width="1.8" height="15.0" fill="rgb(229,101,35)" rx="2" ry="2" />
<text  x="1075.99" y="799.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="995.6" y="709" width="0.9" height="15.0" fill="rgb(205,25,4)" rx="2" ry="2" />
<text  x="998.58" y="719.5" ></text>
</g>
<g >
<title>llvm::SmallPtrSetImplBase::MoveHelper (1 samples, 0.08%)</title><rect x="701.3" y="485" width="0.9" height="15.0" fill="rgb(224,151,46)" rx="2" ry="2" />
<text  x="704.26" y="495.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="949.7" y="709" width="0.9" height="15.0" fill="rgb(212,95,49)" rx="2" ry="2" />
<text  x="952.68" y="719.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt;, llvm::DenseMapInfo&lt;llvm::BasicBlock*&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt; &gt; &gt;, llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt;, llvm::DenseMapInfo&lt;llvm::BasicBlock*&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt; &gt; &gt;::destroyAll (1 samples, 0.08%)</title><rect x="851.6" y="581" width="0.9" height="15.0" fill="rgb(221,145,50)" rx="2" ry="2" />
<text  x="854.57" y="591.5" ></text>
</g>
<g >
<title>llvm::AttributeList::addAttribute (1 samples, 0.08%)</title><rect x="1045.1" y="773" width="0.9" height="15.0" fill="rgb(235,56,8)" rx="2" ry="2" />
<text  x="1048.09" y="783.5" ></text>
</g>
<g >
<title>TString::Gets (4 samples, 0.31%)</title><rect x="992.0" y="885" width="3.6" height="15.0" fill="rgb(211,54,0)" rx="2" ry="2" />
<text  x="994.98" y="895.5" ></text>
</g>
<g >
<title>llvm::object::ELFFile&lt;llvm::object::ELFType&lt;(llvm::support::endianness)1, true&gt; &gt;::sections (4 samples, 0.31%)</title><rect x="767.9" y="501" width="3.6" height="15.0" fill="rgb(250,126,5)" rx="2" ry="2" />
<text  x="770.86" y="511.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.23%)</title><rect x="929.0" y="661" width="2.7" height="15.0" fill="rgb(205,172,40)" rx="2" ry="2" />
<text  x="931.98" y="671.5" ></text>
</g>
<g >
<title>llvm::SparseSolver&lt;llvm::PointerIntPair&lt;llvm::Value*, 2u, (anonymous namespace)::IPOGrouping, llvm::PointerLikeTypeTraits&lt;llvm::Value*&gt;, llvm::PointerIntPairInfo&lt;llvm::Value*, 2u, llvm::PointerLikeTypeTraits&lt;llvm::Value*&gt; &gt; &gt;, (anonymous namespace)::CVPLatticeVal, llvm::LatticeKeyInfo&lt;llvm::PointerIntPair&lt;llvm::Value*, 2u, (anonymous namespace)::IPOGrouping, llvm::PointerLikeTypeTraits&lt;llvm::Value*&gt;, llvm::PointerIntPairInfo&lt;llvm::Value*, 2u, llvm::PointerLikeTypeTraits&lt;llvm::Value*&gt; &gt; &gt; &gt; &gt;::visitInst (1 samples, 0.08%)</title><rect x="837.2" y="645" width="0.9" height="15.0" fill="rgb(221,136,48)" rx="2" ry="2" />
<text  x="840.17" y="655.5" ></text>
</g>
<g >
<title>TCling::Calc (53 samples, 4.04%)</title><rect x="214.3" y="885" width="47.7" height="15.0" fill="rgb(243,186,27)" rx="2" ry="2" />
<text  x="217.32" y="895.5" >TCli..</text>
</g>
<g >
<title>_IO_new_proc_open (20 samples, 1.53%)</title><rect x="957.8" y="821" width="18.0" height="15.0" fill="rgb(213,142,54)" rx="2" ry="2" />
<text  x="960.78" y="831.5" ></text>
</g>
<g >
<title>ccache (1 samples, 0.08%)</title><rect x="10.0" y="965" width="0.9" height="15.0" fill="rgb(236,105,6)" rx="2" ry="2" />
<text  x="13.00" y="975.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::SelectAllBasicBlocks (1 samples, 0.08%)</title><rect x="854.3" y="549" width="0.9" height="15.0" fill="rgb(251,124,34)" rx="2" ry="2" />
<text  x="857.27" y="559.5" ></text>
</g>
<g >
<title>TBufferFile::ReadObjectAny (1 samples, 0.08%)</title><rect x="1118.9" y="725" width="0.9" height="15.0" fill="rgb(205,168,4)" rx="2" ry="2" />
<text  x="1121.89" y="735.5" ></text>
</g>
<g >
<title>llvm::IRBuilderBase::CreateMemCpy (1 samples, 0.08%)</title><rect x="1091.0" y="741" width="0.9" height="15.0" fill="rgb(206,15,47)" rx="2" ry="2" />
<text  x="1093.99" y="751.5" ></text>
</g>
<g >
<title>llvm::LazyValueInfo::getConstant (1 samples, 0.08%)</title><rect x="820.1" y="661" width="0.9" height="15.0" fill="rgb(237,214,46)" rx="2" ry="2" />
<text  x="823.07" y="671.5" ></text>
</g>
<g >
<title>llvm::ScheduleDAGSDNodes::EmitSchedule (1 samples, 0.08%)</title><rect x="246.7" y="677" width="0.9" height="15.0" fill="rgb(225,82,20)" rx="2" ry="2" />
<text  x="249.72" y="687.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (4 samples, 0.31%)</title><rect x="254.8" y="693" width="3.6" height="15.0" fill="rgb(230,186,49)" rx="2" ry="2" />
<text  x="257.82" y="703.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (1 samples, 0.08%)</title><rect x="1142.3" y="869" width="0.9" height="15.0" fill="rgb(240,110,12)" rx="2" ry="2" />
<text  x="1145.30" y="879.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (1 samples, 0.08%)</title><rect x="1086.5" y="725" width="0.9" height="15.0" fill="rgb(230,129,19)" rx="2" ry="2" />
<text  x="1089.49" y="735.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitScalarExpr (1 samples, 0.08%)</title><rect x="1018.1" y="821" width="0.9" height="15.0" fill="rgb(230,37,50)" rx="2" ry="2" />
<text  x="1021.09" y="831.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (1 samples, 0.08%)</title><rect x="838.1" y="613" width="0.9" height="15.0" fill="rgb(222,73,34)" rx="2" ry="2" />
<text  x="841.07" y="623.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.08%)</title><rect x="1087.4" y="885" width="0.9" height="15.0" fill="rgb(247,9,8)" rx="2" ry="2" />
<text  x="1090.39" y="895.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::FinishFunction (1 samples, 0.08%)</title><rect x="1045.1" y="805" width="0.9" height="15.0" fill="rgb(232,120,52)" rx="2" ry="2" />
<text  x="1048.09" y="815.5" ></text>
</g>
<g >
<title>clang::Sema::AddFunctionCandidates (1 samples, 0.08%)</title><rect x="1070.3" y="933" width="0.9" height="15.0" fill="rgb(230,73,42)" rx="2" ry="2" />
<text  x="1073.29" y="943.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (1 samples, 0.08%)</title><rect x="875.9" y="597" width="0.9" height="15.0" fill="rgb(237,92,37)" rx="2" ry="2" />
<text  x="878.87" y="607.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1005.5" y="581" width="0.9" height="15.0" fill="rgb(210,196,46)" rx="2" ry="2" />
<text  x="1008.48" y="591.5" ></text>
</g>
<g >
<title>llvm::Module::~Module (1 samples, 0.08%)</title><rect x="859.7" y="725" width="0.9" height="15.0" fill="rgb(237,223,52)" rx="2" ry="2" />
<text  x="862.67" y="735.5" ></text>
</g>
<g >
<title>clang::Expr::getExprLoc (1 samples, 0.08%)</title><rect x="1014.5" y="517" width="0.9" height="15.0" fill="rgb(210,97,44)" rx="2" ry="2" />
<text  x="1017.49" y="527.5" ></text>
</g>
<g >
<title>clang::ASTReader::readTypeRecord (1 samples, 0.08%)</title><rect x="1066.7" y="741" width="0.9" height="15.0" fill="rgb(234,181,46)" rx="2" ry="2" />
<text  x="1069.69" y="751.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (2 samples, 0.15%)</title><rect x="214.3" y="741" width="1.8" height="15.0" fill="rgb(208,28,42)" rx="2" ry="2" />
<text  x="217.32" y="751.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitRedeclarableTemplateDecl (1 samples, 0.08%)</title><rect x="1009.1" y="869" width="0.9" height="15.0" fill="rgb(243,34,17)" rx="2" ry="2" />
<text  x="1012.08" y="879.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::SelectBasicBlock (1 samples, 0.08%)</title><rect x="854.3" y="533" width="0.9" height="15.0" fill="rgb(220,206,41)" rx="2" ry="2" />
<text  x="857.27" y="543.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.08%)</title><rect x="35.2" y="453" width="0.9" height="15.0" fill="rgb(213,196,35)" rx="2" ry="2" />
<text  x="38.20" y="463.5" ></text>
</g>
<g >
<title>llvm::FindAvailableLoadedValue (1 samples, 0.08%)</title><rect x="221.5" y="693" width="0.9" height="15.0" fill="rgb(223,12,26)" rx="2" ry="2" />
<text  x="224.52" y="703.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.08%)</title><rect x="1118.9" y="213" width="0.9" height="15.0" fill="rgb(211,176,37)" rx="2" ry="2" />
<text  x="1121.89" y="223.5" ></text>
</g>
<g >
<title>getAllocationDataForFunction (1 samples, 0.08%)</title><rect x="215.2" y="677" width="0.9" height="15.0" fill="rgb(254,154,38)" rx="2" ry="2" />
<text  x="218.22" y="687.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::PopCleanupBlock (1 samples, 0.08%)</title><rect x="1019.0" y="693" width="0.9" height="15.0" fill="rgb(250,229,36)" rx="2" ry="2" />
<text  x="1021.99" y="703.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord (1 samples, 0.08%)</title><rect x="1083.8" y="709" width="0.9" height="15.0" fill="rgb(221,137,47)" rx="2" ry="2" />
<text  x="1086.79" y="719.5" ></text>
</g>
<g >
<title>FinishTemplateArgumentDeduction&lt;clang::ClassTemplatePartialSpecializationDecl&gt; (1 samples, 0.08%)</title><rect x="1089.2" y="741" width="0.9" height="15.0" fill="rgb(253,72,44)" rx="2" ry="2" />
<text  x="1092.19" y="751.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::Release (1 samples, 0.08%)</title><rect x="850.7" y="741" width="0.9" height="15.0" fill="rgb(226,2,28)" rx="2" ry="2" />
<text  x="853.67" y="751.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (3 samples, 0.23%)</title><rect x="1073.0" y="885" width="2.7" height="15.0" fill="rgb(211,78,1)" rx="2" ry="2" />
<text  x="1075.99" y="895.5" ></text>
</g>
<g >
<title>llvm::ReversePostOrderTraversal&lt;llvm::MachineBasicBlock*, llvm::GraphTraits&lt;llvm::MachineBasicBlock*&gt; &gt;::Initialize (1 samples, 0.08%)</title><rect x="241.3" y="677" width="0.9" height="15.0" fill="rgb(210,41,11)" rx="2" ry="2" />
<text  x="244.32" y="687.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (2 samples, 0.15%)</title><rect x="22.6" y="293" width="1.8" height="15.0" fill="rgb(215,158,45)" rx="2" ry="2" />
<text  x="25.60" y="303.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="946.1" y="773" width="0.9" height="15.0" fill="rgb(221,43,17)" rx="2" ry="2" />
<text  x="949.08" y="783.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformInitializer (1 samples, 0.08%)</title><rect x="1081.1" y="821" width="0.9" height="15.0" fill="rgb(220,144,53)" rx="2" ry="2" />
<text  x="1084.09" y="831.5" ></text>
</g>
<g >
<title>clang::Sema::ActOnEndOfTranslationUnit (1 samples, 0.08%)</title><rect x="849.8" y="757" width="0.9" height="15.0" fill="rgb(221,83,9)" rx="2" ry="2" />
<text  x="852.77" y="767.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="34.3" y="421" width="0.9" height="15.0" fill="rgb(253,179,41)" rx="2" ry="2" />
<text  x="37.30" y="431.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl (1 samples, 0.08%)</title><rect x="1009.1" y="613" width="0.9" height="15.0" fill="rgb(207,32,9)" rx="2" ry="2" />
<text  x="1012.08" y="623.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::codegenCXXStructor (1 samples, 0.08%)</title><rect x="1038.8" y="725" width="0.9" height="15.0" fill="rgb(254,215,38)" rx="2" ry="2" />
<text  x="1041.79" y="735.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitTemplateDecl (1 samples, 0.08%)</title><rect x="1077.5" y="725" width="0.9" height="15.0" fill="rgb(206,175,26)" rx="2" ry="2" />
<text  x="1080.49" y="735.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTSIInObjectScope (1 samples, 0.08%)</title><rect x="1085.6" y="709" width="0.9" height="15.0" fill="rgb(237,164,5)" rx="2" ry="2" />
<text  x="1088.59" y="719.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.15%)</title><rect x="997.4" y="789" width="1.8" height="15.0" fill="rgb(233,50,19)" rx="2" ry="2" />
<text  x="1000.38" y="799.5" ></text>
</g>
<g >
<title>TBranch::ReadLeaves1Impl (2 samples, 0.15%)</title><rect x="656.3" y="853" width="1.8" height="15.0" fill="rgb(216,229,14)" rx="2" ry="2" />
<text  x="659.25" y="863.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalFunctionDefinition (1 samples, 0.08%)</title><rect x="1046.0" y="901" width="0.9" height="15.0" fill="rgb(229,115,5)" rx="2" ry="2" />
<text  x="1048.99" y="911.5" ></text>
</g>
<g >
<title>clang::Parser::isCXXDeclarationSpecifier (1 samples, 0.08%)</title><rect x="1109.0" y="693" width="0.9" height="15.0" fill="rgb(210,60,5)" rx="2" ry="2" />
<text  x="1111.99" y="703.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::visitCallBase (1 samples, 0.08%)</title><rect x="218.8" y="693" width="0.9" height="15.0" fill="rgb(235,189,21)" rx="2" ry="2" />
<text  x="221.82" y="703.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition (2 samples, 0.15%)</title><rect x="798.5" y="645" width="1.8" height="15.0" fill="rgb(231,147,46)" rx="2" ry="2" />
<text  x="801.47" y="655.5" ></text>
</g>
<g >
<title>TCling::InspectMembers (1 samples, 0.08%)</title><rect x="448.3" y="501" width="0.9" height="15.0" fill="rgb(254,19,9)" rx="2" ry="2" />
<text  x="451.34" y="511.5" ></text>
</g>
<g >
<title>TApplication::TApplication (69 samples, 5.26%)</title><rect x="929.0" y="933" width="62.1" height="15.0" fill="rgb(226,16,14)" rx="2" ry="2" />
<text  x="931.98" y="943.5" >TAppli..</text>
</g>
<g >
<title>llvm::SelectionDAGISel::CodeGenAndEmitDAG (2 samples, 0.15%)</title><rect x="212.5" y="709" width="1.8" height="15.0" fill="rgb(253,229,5)" rx="2" ry="2" />
<text  x="215.52" y="719.5" ></text>
</g>
<g >
<title>execute_command_internal (16 samples, 1.22%)</title><rect x="15.4" y="501" width="14.4" height="15.0" fill="rgb(237,53,50)" rx="2" ry="2" />
<text  x="18.40" y="511.5" ></text>
</g>
<g >
<title>llvm::BitstreamCursor::readRecord (1 samples, 0.08%)</title><rect x="798.5" y="549" width="0.9" height="15.0" fill="rgb(222,30,32)" rx="2" ry="2" />
<text  x="801.47" y="559.5" ></text>
</g>
<g >
<title>cling::MetaSema::actOnxCommand (2 samples, 0.15%)</title><rect x="855.2" y="741" width="1.8" height="15.0" fill="rgb(209,32,13)" rx="2" ry="2" />
<text  x="858.17" y="751.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.08%)</title><rect x="1020.8" y="501" width="0.9" height="15.0" fill="rgb(210,182,0)" rx="2" ry="2" />
<text  x="1023.79" y="511.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadSLocEntry (1 samples, 0.08%)</title><rect x="1082.9" y="805" width="0.9" height="15.0" fill="rgb(214,0,52)" rx="2" ry="2" />
<text  x="1085.89" y="815.5" ></text>
</g>
<g >
<title>clang::ASTReader::CompleteRedeclChain (2 samples, 0.15%)</title><rect x="1029.8" y="805" width="1.8" height="15.0" fill="rgb(227,33,24)" rx="2" ry="2" />
<text  x="1032.79" y="815.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="930.8" y="613" width="0.9" height="15.0" fill="rgb(219,36,46)" rx="2" ry="2" />
<text  x="933.78" y="623.5" ></text>
</g>
<g >
<title>clang::LinkageComputer::getLVForDecl (1 samples, 0.08%)</title><rect x="1016.3" y="405" width="0.9" height="15.0" fill="rgb(245,9,8)" rx="2" ry="2" />
<text  x="1019.29" y="415.5" ></text>
</g>
<g >
<title>clang::RedeclarableTemplateDecl::loadLazySpecializationsImpl (1 samples, 0.08%)</title><rect x="1058.6" y="693" width="0.9" height="15.0" fill="rgb(247,48,12)" rx="2" ry="2" />
<text  x="1061.59" y="703.5" ></text>
</g>
<g >
<title>R__unzipZLIB (105 samples, 8.01%)</title><rect x="544.6" y="805" width="94.6" height="15.0" fill="rgb(244,213,17)" rx="2" ry="2" />
<text  x="547.65" y="815.5" >R__unzipZLIB</text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::TargetTransformInfo (llvm::Function const&amp;), llvm::TargetMachine::getTargetIRAnalysis()::{lambda(llvm::Function const&amp;)#1}&gt;::_M_invoke (1 samples, 0.08%)</title><rect x="227.8" y="741" width="0.9" height="15.0" fill="rgb(234,96,38)" rx="2" ry="2" />
<text  x="230.82" y="751.5" ></text>
</g>
<g >
<title>TClingDataMemberInfo::TClingDataMemberInfo (1 samples, 0.08%)</title><rect x="447.4" y="533" width="0.9" height="15.0" fill="rgb(208,186,41)" rx="2" ry="2" />
<text  x="450.44" y="543.5" ></text>
</g>
<g >
<title>dl_open_worker (1 samples, 0.08%)</title><rect x="991.1" y="757" width="0.9" height="15.0" fill="rgb(250,24,45)" rx="2" ry="2" />
<text  x="994.08" y="767.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadDeclRecord (1 samples, 0.08%)</title><rect x="1051.4" y="725" width="0.9" height="15.0" fill="rgb(213,211,7)" rx="2" ry="2" />
<text  x="1054.39" y="735.5" ></text>
</g>
<g >
<title>TClingDataMemberInfo::TClingDataMemberInfo (1 samples, 0.08%)</title><rect x="448.3" y="405" width="0.9" height="15.0" fill="rgb(243,75,54)" rx="2" ry="2" />
<text  x="451.34" y="415.5" ></text>
</g>
<g >
<title>llvm::MachineInstr::MachineInstr (1 samples, 0.08%)</title><rect x="692.3" y="517" width="0.9" height="15.0" fill="rgb(216,203,9)" rx="2" ry="2" />
<text  x="695.26" y="527.5" ></text>
</g>
<g >
<title>llvm::ExecutionDomainFix::runOnMachineFunction (3 samples, 0.23%)</title><rect x="240.4" y="709" width="2.7" height="15.0" fill="rgb(223,11,40)" rx="2" ry="2" />
<text  x="243.42" y="719.5" ></text>
</g>
<g >
<title>execute_command_internal (5 samples, 0.38%)</title><rect x="10.9" y="613" width="4.5" height="15.0" fill="rgb(243,24,4)" rx="2" ry="2" />
<text  x="13.90" y="623.5" ></text>
</g>
<g >
<title>set_signal_handler (1 samples, 0.08%)</title><rect x="35.2" y="165" width="0.9" height="15.0" fill="rgb(223,73,44)" rx="2" ry="2" />
<text  x="38.20" y="175.5" ></text>
</g>
<g >
<title>DeduceTemplateArgumentsByTypeMatch (1 samples, 0.08%)</title><rect x="1070.3" y="869" width="0.9" height="15.0" fill="rgb(249,7,23)" rx="2" ry="2" />
<text  x="1073.29" y="879.5" ></text>
</g>
<g >
<title>TCling::~TCling (2 samples, 0.15%)</title><rect x="858.8" y="805" width="1.8" height="15.0" fill="rgb(244,135,32)" rx="2" ry="2" />
<text  x="861.77" y="815.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (1 samples, 0.08%)</title><rect x="1093.7" y="789" width="0.9" height="15.0" fill="rgb(239,97,54)" rx="2" ry="2" />
<text  x="1096.69" y="799.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::foldAddWithConstant (1 samples, 0.08%)</title><rect x="217.9" y="693" width="0.9" height="15.0" fill="rgb(247,126,52)" rx="2" ry="2" />
<text  x="220.92" y="703.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertRecordDeclType (1 samples, 0.08%)</title><rect x="1049.6" y="549" width="0.9" height="15.0" fill="rgb(232,186,50)" rx="2" ry="2" />
<text  x="1052.59" y="559.5" ></text>
</g>
<g >
<title>HandleInterpreterException (1 samples, 0.08%)</title><rect x="838.1" y="773" width="0.9" height="15.0" fill="rgb(230,161,53)" rx="2" ry="2" />
<text  x="841.07" y="783.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.08%)</title><rect x="1001.9" y="629" width="0.9" height="15.0" fill="rgb(213,212,53)" rx="2" ry="2" />
<text  x="1004.88" y="639.5" ></text>
</g>
<g >
<title>llvm::FoldingSetNodeID::AddString (1 samples, 0.08%)</title><rect x="1045.1" y="709" width="0.9" height="15.0" fill="rgb(207,147,52)" rx="2" ry="2" />
<text  x="1048.09" y="719.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveExternalSymbols (3 samples, 0.23%)</title><rect x="747.2" y="581" width="2.7" height="15.0" fill="rgb(226,112,7)" rx="2" ry="2" />
<text  x="750.16" y="591.5" ></text>
</g>
<g >
<title>llvm::AsmPrinter::SetupMachineFunction (1 samples, 0.08%)</title><rect x="251.2" y="709" width="0.9" height="15.0" fill="rgb(207,52,5)" rx="2" ry="2" />
<text  x="254.22" y="719.5" ></text>
</g>
<g >
<title>llvm::Attribute::get (1 samples, 0.08%)</title><rect x="1042.4" y="725" width="0.9" height="15.0" fill="rgb(250,101,47)" rx="2" ry="2" />
<text  x="1045.39" y="735.5" ></text>
</g>
<g >
<title>SubstDefaultTemplateArgument (1 samples, 0.08%)</title><rect x="1064.9" y="917" width="0.9" height="15.0" fill="rgb(226,123,10)" rx="2" ry="2" />
<text  x="1067.89" y="927.5" ></text>
</g>
<g >
<title>cling::Interpreter::~Interpreter (2 samples, 0.15%)</title><rect x="858.8" y="773" width="1.8" height="15.0" fill="rgb(228,40,45)" rx="2" ry="2" />
<text  x="861.77" y="783.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit (1 samples, 0.08%)</title><rect x="1077.5" y="677" width="0.9" height="15.0" fill="rgb(208,55,23)" rx="2" ry="2" />
<text  x="1080.49" y="687.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::runOnMachineFunction (1 samples, 0.08%)</title><rect x="854.3" y="565" width="0.9" height="15.0" fill="rgb(218,135,46)" rx="2" ry="2" />
<text  x="857.27" y="575.5" ></text>
</g>
<g >
<title>fgets (15 samples, 1.14%)</title><rect x="975.8" y="837" width="13.5" height="15.0" fill="rgb(228,97,23)" rx="2" ry="2" />
<text  x="978.78" y="847.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit (1 samples, 0.08%)</title><rect x="1012.7" y="581" width="0.9" height="15.0" fill="rgb(247,10,51)" rx="2" ry="2" />
<text  x="1015.68" y="591.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitVarDecl (1 samples, 0.08%)</title><rect x="1014.5" y="837" width="0.9" height="15.0" fill="rgb(222,26,50)" rx="2" ry="2" />
<text  x="1017.49" y="847.5" ></text>
</g>
<g >
<title>TKey::ReadObjWithBuffer (1 samples, 0.08%)</title><rect x="448.3" y="789" width="0.9" height="15.0" fill="rgb(235,214,2)" rx="2" ry="2" />
<text  x="451.34" y="799.5" ></text>
</g>
<g >
<title>cling::MetaSema::actOnxCommand (175 samples, 13.35%)</title><rect x="674.3" y="837" width="157.5" height="15.0" fill="rgb(223,90,22)" rx="2" ry="2" />
<text  x="677.26" y="847.5" >cling::MetaSema::act..</text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformNestedNameSpecifierLoc (1 samples, 0.08%)</title><rect x="1065.8" y="741" width="0.9" height="15.0" fill="rgb(235,216,3)" rx="2" ry="2" />
<text  x="1068.79" y="751.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.08%)</title><rect x="1037.0" y="565" width="0.9" height="15.0" fill="rgb(245,2,17)" rx="2" ry="2" />
<text  x="1039.99" y="575.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::ParseInternal (1 samples, 0.08%)</title><rect x="849.8" y="789" width="0.9" height="15.0" fill="rgb(205,17,25)" rx="2" ry="2" />
<text  x="852.77" y="799.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateClassTemplateSpecialization (1 samples, 0.08%)</title><rect x="1100.0" y="645" width="0.9" height="15.0" fill="rgb(249,46,4)" rx="2" ry="2" />
<text  x="1102.99" y="655.5" ></text>
</g>
<g >
<title>clang::LookupResult::resolveKind (1 samples, 0.08%)</title><rect x="1052.3" y="773" width="0.9" height="15.0" fill="rgb(213,187,38)" rx="2" ry="2" />
<text  x="1055.29" y="783.5" ></text>
</g>
<g >
<title>llvm::SelectionDAG::getConstant (1 samples, 0.08%)</title><rect x="1119.8" y="693" width="0.9" height="15.0" fill="rgb(216,35,45)" rx="2" ry="2" />
<text  x="1122.79" y="703.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.08%)</title><rect x="923.6" y="549" width="0.9" height="15.0" fill="rgb(251,210,35)" rx="2" ry="2" />
<text  x="926.58" y="559.5" ></text>
</g>
<g >
<title>TClass::SetUnloaded (1 samples, 0.08%)</title><rect x="857.9" y="821" width="0.9" height="15.0" fill="rgb(212,94,45)" rx="2" ry="2" />
<text  x="860.87" y="831.5" ></text>
</g>
<g >
<title>clang::ASTReader::FinishedDeserializing (1 samples, 0.08%)</title><rect x="1049.6" y="453" width="0.9" height="15.0" fill="rgb(220,53,0)" rx="2" ry="2" />
<text  x="1052.59" y="463.5" ></text>
</g>
<g >
<title>clang::Sema::diagnoseZeroToNullptrConversion (1 samples, 0.08%)</title><rect x="1082.9" y="885" width="0.9" height="15.0" fill="rgb(254,90,28)" rx="2" ry="2" />
<text  x="1085.89" y="895.5" ></text>
</g>
<g >
<title>execute_command_internal (4 samples, 0.31%)</title><rect x="36.1" y="229" width="3.6" height="15.0" fill="rgb(238,177,7)" rx="2" ry="2" />
<text  x="39.10" y="239.5" ></text>
</g>
<g >
<title>llvm::InstrEmitter::EmitMachineNode (1 samples, 0.08%)</title><rect x="1103.6" y="597" width="0.9" height="15.0" fill="rgb(206,204,4)" rx="2" ry="2" />
<text  x="1106.59" y="607.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.08%)</title><rect x="1088.3" y="725" width="0.9" height="15.0" fill="rgb(229,181,23)" rx="2" ry="2" />
<text  x="1091.29" y="735.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;llvm::BasicBlock*, llvm::BasicBlock*&gt;, std::pair&lt;llvm::BasicBlock*, llvm::BasicBlock*&gt;, std::_Identity&lt;std::pair&lt;llvm::BasicBlock*, llvm::BasicBlock*&gt; &gt;, std::less&lt;std::pair&lt;llvm::BasicBlock*, llvm::BasicBlock*&gt; &gt;, std::allocator&lt;std::pair&lt;llvm::BasicBlock*, llvm::BasicBlock*&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;llvm::BasicBlock*, llvm::BasicBlock*&gt; &gt; (1 samples, 0.08%)</title><rect x="837.2" y="629" width="0.9" height="15.0" fill="rgb(245,168,7)" rx="2" ry="2" />
<text  x="840.17" y="639.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitRedeclarableTemplateDecl (1 samples, 0.08%)</title><rect x="1009.1" y="645" width="0.9" height="15.0" fill="rgb(244,75,21)" rx="2" ry="2" />
<text  x="1012.08" y="655.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::executeWrapper (1 samples, 0.08%)</title><rect x="1107.2" y="933" width="0.9" height="15.0" fill="rgb(231,91,16)" rx="2" ry="2" />
<text  x="1110.19" y="943.5" ></text>
</g>
<g >
<title>execute_command_internal (27 samples, 2.06%)</title><rect x="10.9" y="869" width="24.3" height="15.0" fill="rgb(251,155,35)" rx="2" ry="2" />
<text  x="13.90" y="879.5" >e..</text>
</g>
<g >
<title>llvm::X86AsmPrinter::EmitInstruction (2 samples, 0.15%)</title><rect x="1116.2" y="629" width="1.8" height="15.0" fill="rgb(211,58,28)" rx="2" ry="2" />
<text  x="1119.19" y="639.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="946.1" y="709" width="0.9" height="15.0" fill="rgb(253,177,51)" rx="2" ry="2" />
<text  x="949.08" y="719.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitFunctionBody (1 samples, 0.08%)</title><rect x="1015.4" y="597" width="0.9" height="15.0" fill="rgb(220,61,33)" rx="2" ry="2" />
<text  x="1018.39" y="607.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::SelectAllBasicBlocks (5 samples, 0.38%)</title><rect x="1102.7" y="661" width="4.5" height="15.0" fill="rgb(219,223,18)" rx="2" ry="2" />
<text  x="1105.69" y="671.5" ></text>
</g>
<g >
<title>llvm::orc::LambdaSymbolResolver&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt; const&amp;)#1}, cling::IncrementalJIT::DenseSet(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}&gt;::lookup (138 samples, 10.53%)</title><rect x="674.3" y="677" width="124.2" height="15.0" fill="rgb(231,169,4)" rx="2" ry="2" />
<text  x="677.26" y="687.5" >llvm::orc::Lamb..</text>
</g>
<g >
<title>llvm::SmallPtrSetImplBase::MoveHelper (1 samples, 0.08%)</title><rect x="832.7" y="597" width="0.9" height="15.0" fill="rgb(229,112,51)" rx="2" ry="2" />
<text  x="835.67" y="607.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetDecl (1 samples, 0.08%)</title><rect x="1077.5" y="805" width="0.9" height="15.0" fill="rgb(243,149,37)" rx="2" ry="2" />
<text  x="1080.49" y="815.5" ></text>
</g>
<g >
<title>_nss_sss_getpwuid_r (5 samples, 0.38%)</title><rect x="1002.8" y="741" width="4.5" height="15.0" fill="rgb(216,54,31)" rx="2" ry="2" />
<text  x="1005.78" y="751.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::commitTransaction (76 samples, 5.80%)</title><rect x="860.6" y="693" width="68.4" height="15.0" fill="rgb(209,112,36)" rx="2" ry="2" />
<text  x="863.57" y="703.5" >cling::..</text>
</g>
<g >
<title>clang::ODRHash::AddDecl (1 samples, 0.08%)</title><rect x="1097.3" y="565" width="0.9" height="15.0" fill="rgb(219,131,8)" rx="2" ry="2" />
<text  x="1100.29" y="575.5" ></text>
</g>
<g >
<title>llvm::AliasSetTracker::addUnknown (1 samples, 0.08%)</title><rect x="230.5" y="709" width="0.9" height="15.0" fill="rgb(240,199,9)" rx="2" ry="2" />
<text  x="233.52" y="719.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_erase (1 samples, 0.08%)</title><rect x="1020.8" y="485" width="0.9" height="15.0" fill="rgb(226,229,50)" rx="2" ry="2" />
<text  x="1023.79" y="495.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitTemplateDecl (1 samples, 0.08%)</title><rect x="1083.8" y="741" width="0.9" height="15.0" fill="rgb(227,227,34)" rx="2" ry="2" />
<text  x="1086.79" y="751.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::SelectAllBasicBlocks (1 samples, 0.08%)</title><rect x="1107.2" y="677" width="0.9" height="15.0" fill="rgb(215,208,32)" rx="2" ry="2" />
<text  x="1110.19" y="687.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.46%)</title><rect x="1154.9" y="757" width="5.4" height="15.0" fill="rgb(211,144,38)" rx="2" ry="2" />
<text  x="1157.90" y="767.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.08%)</title><rect x="677.0" y="485" width="0.9" height="15.0" fill="rgb(231,85,53)" rx="2" ry="2" />
<text  x="679.96" y="495.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::runStaticInitializersOnce (26 samples, 1.98%)</title><rect x="214.3" y="805" width="23.4" height="15.0" fill="rgb(249,210,22)" rx="2" ry="2" />
<text  x="217.32" y="815.5" >c..</text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.08%)</title><rect x="896.6" y="565" width="0.9" height="15.0" fill="rgb(213,66,13)" rx="2" ry="2" />
<text  x="899.58" y="575.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.08%)</title><rect x="35.2" y="741" width="0.9" height="15.0" fill="rgb(212,74,48)" rx="2" ry="2" />
<text  x="38.20" y="751.5" ></text>
</g>
<g >
<title>EmitDirectCallee (1 samples, 0.08%)</title><rect x="1091.9" y="645" width="0.9" height="15.0" fill="rgb(218,162,36)" rx="2" ry="2" />
<text  x="1094.89" y="655.5" ></text>
</g>
<g >
<title>llvm::MachineDominatorTree::verifyAnalysis (1 samples, 0.08%)</title><rect x="722.9" y="549" width="0.9" height="15.0" fill="rgb(242,37,12)" rx="2" ry="2" />
<text  x="725.86" y="559.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetType (1 samples, 0.08%)</title><rect x="1007.3" y="789" width="0.9" height="15.0" fill="rgb(254,201,9)" rx="2" ry="2" />
<text  x="1010.28" y="799.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::freePass (1 samples, 0.08%)</title><rect x="253.0" y="725" width="0.9" height="15.0" fill="rgb(218,60,10)" rx="2" ry="2" />
<text  x="256.02" y="735.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (1 samples, 0.08%)</title><rect x="203.5" y="757" width="0.9" height="15.0" fill="rgb(222,24,30)" rx="2" ry="2" />
<text  x="206.52" y="767.5" ></text>
</g>
<g >
<title>TClass::CallShowMembers (1 samples, 0.08%)</title><rect x="448.3" y="549" width="0.9" height="15.0" fill="rgb(241,3,29)" rx="2" ry="2" />
<text  x="451.34" y="559.5" ></text>
</g>
<g >
<title>operator() (53 samples, 4.04%)</title><rect x="214.3" y="901" width="47.7" height="15.0" fill="rgb(225,185,2)" rx="2" ry="2" />
<text  x="217.32" y="911.5" >oper..</text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.08%)</title><rect x="1084.7" y="645" width="0.9" height="15.0" fill="rgb(249,23,51)" rx="2" ry="2" />
<text  x="1087.69" y="655.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::removeDeadPasses (5 samples, 0.38%)</title><rect x="880.4" y="613" width="4.5" height="15.0" fill="rgb(222,189,39)" rx="2" ry="2" />
<text  x="883.37" y="623.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTSIInObjectScope (1 samples, 0.08%)</title><rect x="1074.8" y="837" width="0.9" height="15.0" fill="rgb(210,182,28)" rx="2" ry="2" />
<text  x="1077.79" y="847.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteDeclContext (1 samples, 0.08%)</title><rect x="1100.0" y="885" width="0.9" height="15.0" fill="rgb(228,157,47)" rx="2" ry="2" />
<text  x="1102.99" y="895.5" ></text>
</g>
<g >
<title>execute_command_internal (22 samples, 1.68%)</title><rect x="15.4" y="597" width="19.8" height="15.0" fill="rgb(230,18,38)" rx="2" ry="2" />
<text  x="18.40" y="607.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;, void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;::LookupBucketFor&lt;void const*&gt; (1 samples, 0.08%)</title><rect x="898.4" y="565" width="0.9" height="15.0" fill="rgb(231,141,1)" rx="2" ry="2" />
<text  x="901.38" y="575.5" ></text>
</g>
<g >
<title>cling::Interpreter::DeclareInternal (1 samples, 0.08%)</title><rect x="1109.9" y="869" width="0.9" height="15.0" fill="rgb(225,77,51)" rx="2" ry="2" />
<text  x="1112.89" y="879.5" ></text>
</g>
<g >
<title>llvm::FoldingSetBase::FindNodeOrInsertPos (1 samples, 0.08%)</title><rect x="1060.4" y="645" width="0.9" height="15.0" fill="rgb(246,22,8)" rx="2" ry="2" />
<text  x="1063.39" y="655.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.08%)</title><rect x="673.4" y="613" width="0.9" height="15.0" fill="rgb(229,33,2)" rx="2" ry="2" />
<text  x="676.36" y="623.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGBuilder::visitRet (1 samples, 0.08%)</title><rect x="1119.8" y="725" width="0.9" height="15.0" fill="rgb(240,42,33)" rx="2" ry="2" />
<text  x="1122.79" y="735.5" ></text>
</g>
<g >
<title>llvm::StringMapImpl::FindKey (1 samples, 0.08%)</title><rect x="1047.8" y="821" width="0.9" height="15.0" fill="rgb(231,164,6)" rx="2" ry="2" />
<text  x="1050.79" y="831.5" ></text>
</g>
<g >
<title>__GI__IO_file_underflow (2 samples, 0.15%)</title><rect x="933.5" y="709" width="1.8" height="15.0" fill="rgb(229,127,27)" rx="2" ry="2" />
<text  x="936.48" y="719.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.08%)</title><rect x="1097.3" y="773" width="0.9" height="15.0" fill="rgb(230,67,54)" rx="2" ry="2" />
<text  x="1100.29" y="783.5" ></text>
</g>
<g >
<title>llvm::removeUnreachableBlocks (1 samples, 0.08%)</title><rect x="830.9" y="677" width="0.9" height="15.0" fill="rgb(240,184,31)" rx="2" ry="2" />
<text  x="833.87" y="687.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteDeclContext (1 samples, 0.08%)</title><rect x="1074.8" y="725" width="0.9" height="15.0" fill="rgb(206,102,34)" rx="2" ry="2" />
<text  x="1077.79" y="735.5" ></text>
</g>
<g >
<title>clang::ASTReader::FinishedDeserializing (1 samples, 0.08%)</title><rect x="942.5" y="533" width="0.9" height="15.0" fill="rgb(249,179,28)" rx="2" ry="2" />
<text  x="945.48" y="543.5" ></text>
</g>
<g >
<title>clang::Preprocessor::AllocateMacroInfo (1 samples, 0.08%)</title><rect x="941.6" y="677" width="0.9" height="15.0" fill="rgb(251,203,4)" rx="2" ry="2" />
<text  x="944.58" y="687.5" ></text>
</g>
<g >
<title>llvm::AttributeSetNode::get (1 samples, 0.08%)</title><rect x="1042.4" y="741" width="0.9" height="15.0" fill="rgb(238,165,18)" rx="2" ry="2" />
<text  x="1045.39" y="751.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit (1 samples, 0.08%)</title><rect x="1011.8" y="693" width="0.9" height="15.0" fill="rgb(221,106,30)" rx="2" ry="2" />
<text  x="1014.78" y="703.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.15%)</title><rect x="1139.6" y="901" width="1.8" height="15.0" fill="rgb(236,26,50)" rx="2" ry="2" />
<text  x="1142.60" y="911.5" ></text>
</g>
<g >
<title>parse_and_execute (1 samples, 0.08%)</title><rect x="35.2" y="245" width="0.9" height="15.0" fill="rgb(224,79,16)" rx="2" ry="2" />
<text  x="38.20" y="255.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformCXXOperatorCallExpr (1 samples, 0.08%)</title><rect x="1099.1" y="917" width="0.9" height="15.0" fill="rgb(215,18,49)" rx="2" ry="2" />
<text  x="1102.09" y="927.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddType (1 samples, 0.08%)</title><rect x="1064.9" y="645" width="0.9" height="15.0" fill="rgb(250,68,4)" rx="2" ry="2" />
<text  x="1067.89" y="655.5" ></text>
</g>
<g >
<title>llvm::FoldingSetBase::FindNodeOrInsertPos (1 samples, 0.08%)</title><rect x="1042.4" y="709" width="0.9" height="15.0" fill="rgb(237,14,23)" rx="2" ry="2" />
<text  x="1045.39" y="719.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.08%)</title><rect x="749.0" y="405" width="0.9" height="15.0" fill="rgb(217,217,6)" rx="2" ry="2" />
<text  x="751.96" y="415.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.08%)</title><rect x="797.6" y="533" width="0.9" height="15.0" fill="rgb(210,130,39)" rx="2" ry="2" />
<text  x="800.57" y="543.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertRecordDeclType (1 samples, 0.08%)</title><rect x="1049.6" y="949" width="0.9" height="15.0" fill="rgb(207,137,2)" rx="2" ry="2" />
<text  x="1052.59" y="959.5" ></text>
</g>
<g >
<title>clang::Sema::BuildCallToMemberFunction (3 samples, 0.23%)</title><rect x="1056.8" y="949" width="2.7" height="15.0" fill="rgb(233,5,27)" rx="2" ry="2" />
<text  x="1059.79" y="959.5" ></text>
</g>
<g >
<title>llvm::SelectionDAG::LegalizeTypes (1 samples, 0.08%)</title><rect x="1120.7" y="725" width="0.9" height="15.0" fill="rgb(243,200,54)" rx="2" ry="2" />
<text  x="1123.69" y="735.5" ></text>
</g>
<g >
<title>[libnss_sss.so.2] (5 samples, 0.38%)</title><rect x="1002.8" y="709" width="4.5" height="15.0" fill="rgb(222,125,43)" rx="2" ry="2" />
<text  x="1005.78" y="719.5" ></text>
</g>
<g >
<title>clang::MultiplexExternalSemaSource::FindExternalVisibleDeclsByName (1 samples, 0.08%)</title><rect x="1051.4" y="885" width="0.9" height="15.0" fill="rgb(246,127,6)" rx="2" ry="2" />
<text  x="1054.39" y="895.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertType (1 samples, 0.08%)</title><rect x="1048.7" y="789" width="0.9" height="15.0" fill="rgb(216,145,30)" rx="2" ry="2" />
<text  x="1051.69" y="799.5" ></text>
</g>
<g >
<title>cling::MetaParser::isXCommand (175 samples, 13.35%)</title><rect x="674.3" y="853" width="157.5" height="15.0" fill="rgb(223,216,41)" rx="2" ry="2" />
<text  x="677.26" y="863.5" >cling::MetaParser::i..</text>
</g>
<g >
<title>TCling::ProcessLine (1 samples, 0.08%)</title><rect x="857.0" y="885" width="0.9" height="15.0" fill="rgb(216,77,50)" rx="2" ry="2" />
<text  x="859.97" y="895.5" ></text>
</g>
<g >
<title>clang::Sema::SubstFunctionDeclType (1 samples, 0.08%)</title><rect x="1092.8" y="677" width="0.9" height="15.0" fill="rgb(252,195,31)" rx="2" ry="2" />
<text  x="1095.79" y="687.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::CodeGenAndEmitDAG (2 samples, 0.15%)</title><rect x="1127.0" y="805" width="1.8" height="15.0" fill="rgb(224,120,48)" rx="2" ry="2" />
<text  x="1129.99" y="815.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::isKnownNonNegative (1 samples, 0.08%)</title><rect x="1129.7" y="677" width="0.9" height="15.0" fill="rgb(252,51,15)" rx="2" ry="2" />
<text  x="1132.69" y="687.5" ></text>
</g>
<g >
<title>cling::MetaProcessor::process (2 samples, 0.15%)</title><rect x="855.2" y="789" width="1.8" height="15.0" fill="rgb(205,71,4)" rx="2" ry="2" />
<text  x="858.17" y="799.5" ></text>
</g>
<g >
<title>llvm::BranchFolder::OptimizeFunction (3 samples, 0.23%)</title><rect x="689.6" y="549" width="2.7" height="15.0" fill="rgb(231,50,3)" rx="2" ry="2" />
<text  x="692.56" y="559.5" ></text>
</g>
<g >
<title>ROOT::Detail::RDF::RLoopManager::RunTreeReader (86 samples, 6.56%)</title><rect x="265.6" y="901" width="77.4" height="15.0" fill="rgb(233,121,30)" rx="2" ry="2" />
<text  x="268.62" y="911.5" >ROOT::De..</text>
</g>
<g >
<title>llvm::FunctionType::get (1 samples, 0.08%)</title><rect x="1112.6" y="565" width="0.9" height="15.0" fill="rgb(224,179,51)" rx="2" ry="2" />
<text  x="1115.59" y="575.5" ></text>
</g>
<g >
<title>llvm::Function::addAttribute (1 samples, 0.08%)</title><rect x="1039.7" y="725" width="0.9" height="15.0" fill="rgb(243,181,54)" rx="2" ry="2" />
<text  x="1042.69" y="735.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadStmtFromStream (1 samples, 0.08%)</title><rect x="1051.4" y="517" width="0.9" height="15.0" fill="rgb(212,220,48)" rx="2" ry="2" />
<text  x="1054.39" y="527.5" ></text>
</g>
<g >
<title>clang::ASTReader::readTypeRecord (1 samples, 0.08%)</title><rect x="1066.7" y="709" width="0.9" height="15.0" fill="rgb(231,181,9)" rx="2" ry="2" />
<text  x="1069.69" y="719.5" ></text>
</g>
<g >
<title>llvm::PMTopLevelManager::findAnalysisPass (6 samples, 0.46%)</title><rect x="886.7" y="581" width="5.4" height="15.0" fill="rgb(233,120,11)" rx="2" ry="2" />
<text  x="889.67" y="591.5" ></text>
</g>
<g >
<title>clang::Sema::CheckTemplateIdType (1 samples, 0.08%)</title><rect x="1055.9" y="709" width="0.9" height="15.0" fill="rgb(242,167,17)" rx="2" ry="2" />
<text  x="1058.89" y="719.5" ></text>
</g>
<g >
<title>llvm::MachineDominatorTree::runOnMachineFunction (2 samples, 0.15%)</title><rect x="695.9" y="549" width="1.8" height="15.0" fill="rgb(206,43,42)" rx="2" ry="2" />
<text  x="698.86" y="559.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType (1 samples, 0.08%)</title><rect x="673.4" y="885" width="0.9" height="15.0" fill="rgb(214,208,16)" rx="2" ry="2" />
<text  x="676.36" y="895.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::visitGetElementPtrInst (2 samples, 0.15%)</title><rect x="908.3" y="549" width="1.8" height="15.0" fill="rgb(240,79,21)" rx="2" ry="2" />
<text  x="911.28" y="559.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::computeBackedgeTakenCount (1 samples, 0.08%)</title><rect x="1109.9" y="677" width="0.9" height="15.0" fill="rgb(219,138,35)" rx="2" ry="2" />
<text  x="1112.89" y="687.5" ></text>
</g>
<g >
<title>clang::TemplateArgumentList::ComputeODRHash (1 samples, 0.08%)</title><rect x="1055.9" y="661" width="0.9" height="15.0" fill="rgb(217,196,7)" rx="2" ry="2" />
<text  x="1058.89" y="671.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateMemInitializers (1 samples, 0.08%)</title><rect x="1076.6" y="933" width="0.9" height="15.0" fill="rgb(250,161,47)" rx="2" ry="2" />
<text  x="1079.59" y="943.5" ></text>
</g>
<g >
<title>clang::Sema::CheckBaseSpecifier (1 samples, 0.08%)</title><rect x="1093.7" y="613" width="0.9" height="15.0" fill="rgb(222,135,24)" rx="2" ry="2" />
<text  x="1096.69" y="623.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (1 samples, 0.08%)</title><rect x="227.8" y="661" width="0.9" height="15.0" fill="rgb(237,173,11)" rx="2" ry="2" />
<text  x="230.82" y="671.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyld::finalizeWithMemoryManagerLocking (11 samples, 0.84%)</title><rect x="839.9" y="773" width="9.9" height="15.0" fill="rgb(220,185,28)" rx="2" ry="2" />
<text  x="842.87" y="783.5" ></text>
</g>
<g >
<title>llvm::InstVisitor&lt;llvm::sroa::AllocaSliceRewriter, bool&gt;::visit (1 samples, 0.08%)</title><rect x="801.2" y="549" width="0.9" height="15.0" fill="rgb(219,91,49)" rx="2" ry="2" />
<text  x="804.17" y="559.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.08%)</title><rect x="1075.7" y="757" width="0.9" height="15.0" fill="rgb(251,75,15)" rx="2" ry="2" />
<text  x="1078.69" y="767.5" ></text>
</g>
<g >
<title>__GI__dl_catch_error (1 samples, 0.08%)</title><rect x="991.1" y="837" width="0.9" height="15.0" fill="rgb(234,56,1)" rx="2" ry="2" />
<text  x="994.08" y="847.5" ></text>
</g>
<g >
<title>__GI___fork (5 samples, 0.38%)</title><rect x="1143.2" y="933" width="4.5" height="15.0" fill="rgb(213,105,0)" rx="2" ry="2" />
<text  x="1146.20" y="943.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitTypeAliasDecl (1 samples, 0.08%)</title><rect x="1083.8" y="677" width="0.9" height="15.0" fill="rgb(249,39,49)" rx="2" ry="2" />
<text  x="1086.79" y="687.5" ></text>
</g>
<g >
<title>__GI__dl_catch_error (1 samples, 0.08%)</title><rect x="865.1" y="565" width="0.9" height="15.0" fill="rgb(240,18,37)" rx="2" ry="2" />
<text  x="868.07" y="575.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1074.8" y="405" width="0.9" height="15.0" fill="rgb(233,121,54)" rx="2" ry="2" />
<text  x="1077.79" y="415.5" ></text>
</g>
<g >
<title>_dl_relocate_object (1 samples, 0.08%)</title><rect x="202.6" y="309" width="0.9" height="15.0" fill="rgb(240,130,39)" rx="2" ry="2" />
<text  x="205.62" y="319.5" ></text>
</g>
<g >
<title>clang::ASTReader::readTypeRecord (1 samples, 0.08%)</title><rect x="1083.8" y="613" width="0.9" height="15.0" fill="rgb(219,61,2)" rx="2" ry="2" />
<text  x="1086.79" y="623.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::getAddExpr (1 samples, 0.08%)</title><rect x="1109.9" y="533" width="0.9" height="15.0" fill="rgb(225,198,5)" rx="2" ry="2" />
<text  x="1112.89" y="543.5" ></text>
</g>
<g >
<title>__memchr_avx2 (3 samples, 0.23%)</title><rect x="985.7" y="805" width="2.7" height="15.0" fill="rgb(237,54,26)" rx="2" ry="2" />
<text  x="988.68" y="815.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.08%)</title><rect x="850.7" y="661" width="0.9" height="15.0" fill="rgb(250,171,49)" rx="2" ry="2" />
<text  x="853.67" y="671.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (1 samples, 0.08%)</title><rect x="1061.3" y="773" width="0.9" height="15.0" fill="rgb(214,48,34)" rx="2" ry="2" />
<text  x="1064.29" y="783.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertType (1 samples, 0.08%)</title><rect x="1048.7" y="821" width="0.9" height="15.0" fill="rgb(216,171,39)" rx="2" ry="2" />
<text  x="1051.69" y="831.5" ></text>
</g>
<g >
<title>llvm::X86AsmPrinter::EmitAndCountInstruction (1 samples, 0.08%)</title><rect x="847.1" y="533" width="0.9" height="15.0" fill="rgb(207,183,32)" rx="2" ry="2" />
<text  x="850.07" y="543.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitGlobalDefinition (2 samples, 0.15%)</title><rect x="1034.3" y="597" width="1.8" height="15.0" fill="rgb(222,51,44)" rx="2" ry="2" />
<text  x="1037.29" y="607.5" ></text>
</g>
<g >
<title>llvm::MCStreamer::visitUsedExpr (1 samples, 0.08%)</title><rect x="847.1" y="469" width="0.9" height="15.0" fill="rgb(218,159,0)" rx="2" ry="2" />
<text  x="850.07" y="479.5" ></text>
</g>
<g >
<title>llvm::TargetLowering::LowerCallTo (2 samples, 0.15%)</title><rect x="1123.4" y="853" width="1.8" height="15.0" fill="rgb(227,150,24)" rx="2" ry="2" />
<text  x="1126.39" y="863.5" ></text>
</g>
<g >
<title>clang::VarDecl::isOutOfLine (1 samples, 0.08%)</title><rect x="1023.5" y="581" width="0.9" height="15.0" fill="rgb(232,74,41)" rx="2" ry="2" />
<text  x="1026.49" y="591.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject&lt;std::shared_ptr&lt;llvm::RuntimeDyld::MemoryManager&gt; &gt;::getSymbolMaterializer(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda()#1}&gt;::_M_invoke (138 samples, 10.53%)</title><rect x="674.3" y="757" width="124.2" height="15.0" fill="rgb(243,23,5)" rx="2" ry="2" />
<text  x="677.26" y="767.5" >std::_Function_..</text>
</g>
<g >
<title>llvm::ScopedHashTableScope&lt;llvm::MachineInstr*, unsigned int, llvm::MachineInstrExpressionTrait, llvm::RecyclingAllocator&lt;llvm::BumpPtrAllocatorImpl&lt;llvm::MallocAllocator, 4096ul, 4096ul&gt;, llvm::ScopedHashTableVal&lt;llvm::MachineInstr*, unsigned int&gt;, 32ul, 8ul&gt; &gt;::~ScopedHashTableScope (1 samples, 0.08%)</title><rect x="708.5" y="549" width="0.9" height="15.0" fill="rgb(243,23,6)" rx="2" ry="2" />
<text  x="711.46" y="559.5" ></text>
</g>
<g >
<title>llvm::AttrBuilder::addAttribute (1 samples, 0.08%)</title><rect x="1043.3" y="725" width="0.9" height="15.0" fill="rgb(220,173,26)" rx="2" ry="2" />
<text  x="1046.29" y="735.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="43.3" y="821" width="0.9" height="15.0" fill="rgb(246,125,35)" rx="2" ry="2" />
<text  x="46.30" y="831.5" ></text>
</g>
<g >
<title>ClingMemberIterInternal::DCIter::AdvanceToFirstValidDecl (1 samples, 0.08%)</title><rect x="1118.9" y="341" width="0.9" height="15.0" fill="rgb(209,44,18)" rx="2" ry="2" />
<text  x="1121.89" y="351.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.08%)</title><rect x="928.1" y="533" width="0.9" height="15.0" fill="rgb(240,81,48)" rx="2" ry="2" />
<text  x="931.08" y="543.5" ></text>
</g>
<g >
<title>operator() (1 samples, 0.08%)</title><rect x="449.2" y="933" width="0.9" height="15.0" fill="rgb(224,58,41)" rx="2" ry="2" />
<text  x="452.24" y="943.5" ></text>
</g>
<g >
<title>llvm::visitAll&lt;llvm::SCEVExprContains&lt;llvm::ScalarEvolution::checkValidity(llvm::SCEV const*) const::{lambda(llvm::SCEV const*)#1}&gt;(llvm::SCEV const*, llvm::ScalarEvolution::checkValidity(llvm::SCEV const*) const::{lambda(llvm::SCEV const*)#1})::FindClosure&gt; (1 samples, 0.08%)</title><rect x="853.4" y="581" width="0.9" height="15.0" fill="rgb(244,91,16)" rx="2" ry="2" />
<text  x="856.37" y="591.5" ></text>
</g>
<g >
<title>_GLOBAL__sub_I_TROOT.cxx (6 samples, 0.46%)</title><rect x="1001.9" y="901" width="5.4" height="15.0" fill="rgb(209,35,10)" rx="2" ry="2" />
<text  x="1004.88" y="911.5" ></text>
</g>
<g >
<title>_dlerror_run (2 samples, 0.15%)</title><rect x="989.3" y="869" width="1.8" height="15.0" fill="rgb(223,69,44)" rx="2" ry="2" />
<text  x="992.28" y="879.5" ></text>
</g>
<g >
<title>cling::MultiplexInterpreterCallbacks::LookupObject (1 samples, 0.08%)</title><rect x="1098.2" y="741" width="0.9" height="15.0" fill="rgb(228,26,45)" rx="2" ry="2" />
<text  x="1101.19" y="751.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.08%)</title><rect x="928.1" y="501" width="0.9" height="15.0" fill="rgb(230,143,35)" rx="2" ry="2" />
<text  x="931.08" y="511.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::StartFunction (1 samples, 0.08%)</title><rect x="1024.4" y="917" width="0.9" height="15.0" fill="rgb(210,36,37)" rx="2" ry="2" />
<text  x="1027.39" y="927.5" ></text>
</g>
<g >
<title>clang::Sema::PerformPendingInstantiations (1 samples, 0.08%)</title><rect x="1111.7" y="725" width="0.9" height="15.0" fill="rgb(235,64,52)" rx="2" ry="2" />
<text  x="1114.69" y="735.5" ></text>
</g>
<g >
<title>ROOT::Detail::RDF::RLoopManager::RunAndCheckFilters (3 samples, 0.23%)</title><rect x="368.2" y="885" width="2.7" height="15.0" fill="rgb(233,126,39)" rx="2" ry="2" />
<text  x="371.23" y="895.5" ></text>
</g>
<g >
<title>clang::sema::AnalysisBasedWarnings::IssueWarnings (1 samples, 0.08%)</title><rect x="849.8" y="661" width="0.9" height="15.0" fill="rgb(239,17,13)" rx="2" ry="2" />
<text  x="852.77" y="671.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType (1 samples, 0.08%)</title><rect x="1085.6" y="693" width="0.9" height="15.0" fill="rgb(211,27,42)" rx="2" ry="2" />
<text  x="1088.59" y="703.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::SelectAllBasicBlocks (3 samples, 0.23%)</title><rect x="1127.0" y="821" width="2.7" height="15.0" fill="rgb(219,102,40)" rx="2" ry="2" />
<text  x="1129.99" y="831.5" ></text>
</g>
<g >
<title>__GI___fork (5 samples, 0.38%)</title><rect x="937.1" y="741" width="4.5" height="15.0" fill="rgb(219,22,9)" rx="2" ry="2" />
<text  x="940.08" y="751.5" ></text>
</g>
<g >
<title>clang::ASTReader::readTypeRecord (1 samples, 0.08%)</title><rect x="1011.8" y="741" width="0.9" height="15.0" fill="rgb(245,215,25)" rx="2" ry="2" />
<text  x="1014.78" y="751.5" ></text>
</g>
<g >
<title>clang::Sema::SubstBaseSpecifiers (1 samples, 0.08%)</title><rect x="1073.0" y="645" width="0.9" height="15.0" fill="rgb(220,208,34)" rx="2" ry="2" />
<text  x="1075.99" y="655.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitAggregateCopy (1 samples, 0.08%)</title><rect x="1091.0" y="757" width="0.9" height="15.0" fill="rgb(248,12,32)" rx="2" ry="2" />
<text  x="1093.99" y="767.5" ></text>
</g>
<g >
<title>cling::Interpreter::loadHeader (37 samples, 2.82%)</title><rect x="798.5" y="805" width="33.3" height="15.0" fill="rgb(220,104,44)" rx="2" ry="2" />
<text  x="801.47" y="815.5" >cl..</text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentScopeDeclRefExpr (1 samples, 0.08%)</title><rect x="1064.9" y="853" width="0.9" height="15.0" fill="rgb(211,45,4)" rx="2" ry="2" />
<text  x="1067.89" y="863.5" ></text>
</g>
<g >
<title>llvm::FoldingSetBase::FindNodeOrInsertPos (1 samples, 0.08%)</title><rect x="1091.0" y="693" width="0.9" height="15.0" fill="rgb(236,159,23)" rx="2" ry="2" />
<text  x="1093.99" y="703.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::getSCEV (1 samples, 0.08%)</title><rect x="1118.0" y="645" width="0.9" height="15.0" fill="rgb(212,128,11)" rx="2" ry="2" />
<text  x="1120.99" y="655.5" ></text>
</g>
<g >
<title>clang::ASTStmtReader::VisitDeclStmt (1 samples, 0.08%)</title><rect x="1054.1" y="661" width="0.9" height="15.0" fill="rgb(230,11,43)" rx="2" ry="2" />
<text  x="1057.09" y="671.5" ></text>
</g>
<g >
<title>TStreamerInfo::ReadBuffer&lt;char**&gt; (1 samples, 0.08%)</title><rect x="1118.9" y="629" width="0.9" height="15.0" fill="rgb(233,17,7)" rx="2" ry="2" />
<text  x="1121.89" y="639.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="445.6" y="821" width="0.9" height="15.0" fill="rgb(252,60,4)" rx="2" ry="2" />
<text  x="448.64" y="831.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformExpr (1 samples, 0.08%)</title><rect x="1087.4" y="645" width="0.9" height="15.0" fill="rgb(218,148,6)" rx="2" ry="2" />
<text  x="1090.39" y="655.5" ></text>
</g>
<g >
<title>llvm::StringTableBuilder::finalizeStringTable (1 samples, 0.08%)</title><rect x="839.9" y="565" width="0.9" height="15.0" fill="rgb(224,131,1)" rx="2" ry="2" />
<text  x="842.87" y="575.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1074.8" y="517" width="0.9" height="15.0" fill="rgb(222,87,51)" rx="2" ry="2" />
<text  x="1077.79" y="527.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformDependentScopeDeclRefExpr (1 samples, 0.08%)</title><rect x="1086.5" y="773" width="0.9" height="15.0" fill="rgb(248,24,28)" rx="2" ry="2" />
<text  x="1089.49" y="783.5" ></text>
</g>
<g >
<title>dl_main (1 samples, 0.08%)</title><rect x="1142.3" y="901" width="0.9" height="15.0" fill="rgb(228,132,38)" rx="2" ry="2" />
<text  x="1145.30" y="911.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (3 samples, 0.23%)</title><rect x="1015.4" y="757" width="2.7" height="15.0" fill="rgb(244,225,32)" rx="2" ry="2" />
<text  x="1018.39" y="767.5" ></text>
</g>
<g >
<title>llvm::PMTopLevelManager::findAnalysisPass (1 samples, 0.08%)</title><rect x="901.1" y="549" width="0.9" height="15.0" fill="rgb(223,202,8)" rx="2" ry="2" />
<text  x="904.08" y="559.5" ></text>
</g>
<g >
<title>clang::DeclContext::lookup (2 samples, 0.15%)</title><rect x="1029.8" y="789" width="1.8" height="15.0" fill="rgb(238,165,7)" rx="2" ry="2" />
<text  x="1032.79" y="799.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt;, llvm::DenseMapInfo&lt;llvm::BasicBlock*&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt; &gt; &gt;, llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt;, llvm::DenseMapInfo&lt;llvm::BasicBlock*&gt;, llvm::detail::DenseMapPair&lt;llvm::BasicBlock*, std::unique_ptr&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt;, std::default_delete&lt;llvm::DomTreeNodeBase&lt;llvm::BasicBlock&gt; &gt; &gt; &gt; &gt;::clear (1 samples, 0.08%)</title><rect x="913.7" y="549" width="0.9" height="15.0" fill="rgb(229,197,26)" rx="2" ry="2" />
<text  x="916.68" y="559.5" ></text>
</g>
<g >
<title>TCling::ProcessLine (2 samples, 0.15%)</title><rect x="855.2" y="821" width="1.8" height="15.0" fill="rgb(206,161,31)" rx="2" ry="2" />
<text  x="858.17" y="831.5" ></text>
</g>
<g >
<title>clang::ASTReader::readTypeRecord (1 samples, 0.08%)</title><rect x="1012.7" y="725" width="0.9" height="15.0" fill="rgb(252,52,52)" rx="2" ry="2" />
<text  x="1015.68" y="735.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteTypeImpl (2 samples, 0.15%)</title><rect x="1094.6" y="885" width="1.8" height="15.0" fill="rgb(207,101,32)" rx="2" ry="2" />
<text  x="1097.59" y="895.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1137.8" y="933" width="0.9" height="15.0" fill="rgb(241,156,10)" rx="2" ry="2" />
<text  x="1140.80" y="943.5" ></text>
</g>
<g >
<title>llvm::RuntimeDyldImpl::resolveRelocations (11 samples, 0.84%)</title><rect x="839.9" y="757" width="9.9" height="15.0" fill="rgb(205,228,27)" rx="2" ry="2" />
<text  x="842.87" y="767.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTemplateSpecializationType (1 samples, 0.08%)</title><rect x="1097.3" y="709" width="0.9" height="15.0" fill="rgb(217,218,41)" rx="2" ry="2" />
<text  x="1100.29" y="719.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::GetCPUAndFeaturesAttributes (1 samples, 0.08%)</title><rect x="1018.1" y="613" width="0.9" height="15.0" fill="rgb(236,205,39)" rx="2" ry="2" />
<text  x="1021.09" y="623.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::runOnMachineFunction (5 samples, 0.38%)</title><rect x="1102.7" y="677" width="4.5" height="15.0" fill="rgb(233,217,54)" rx="2" ry="2" />
<text  x="1105.69" y="687.5" ></text>
</g>
<g >
<title>TROOT::RegisterModule (1 samples, 0.08%)</title><rect x="839.0" y="661" width="0.9" height="15.0" fill="rgb(213,199,27)" rx="2" ry="2" />
<text  x="841.97" y="671.5" ></text>
</g>
<g >
<title>clang::Sema::InstantiateFunctionDefinition (1 samples, 0.08%)</title><rect x="1078.4" y="757" width="0.9" height="15.0" fill="rgb(238,96,38)" rx="2" ry="2" />
<text  x="1081.39" y="767.5" ></text>
</g>
<g >
<title>TROOT::InitSystem (6 samples, 0.46%)</title><rect x="1001.9" y="821" width="5.4" height="15.0" fill="rgb(216,180,32)" rx="2" ry="2" />
<text  x="1004.88" y="831.5" ></text>
</g>
<g >
<title>llvm::BranchProbabilityInfo::calculate (3 samples, 0.23%)</title><rect x="680.6" y="549" width="2.7" height="15.0" fill="rgb(252,51,17)" rx="2" ry="2" />
<text  x="683.56" y="559.5" ></text>
</g>
<g >
<title>clang::Sema::PerformQualificationConversion (1 samples, 0.08%)</title><rect x="1082.9" y="917" width="0.9" height="15.0" fill="rgb(216,185,40)" rx="2" ry="2" />
<text  x="1085.89" y="927.5" ></text>
</g>
<g >
<title>llvm::AttributeSetNode::hasAttribute (1 samples, 0.08%)</title><rect x="252.1" y="677" width="0.9" height="15.0" fill="rgb(233,77,47)" rx="2" ry="2" />
<text  x="255.12" y="687.5" ></text>
</g>
<g >
<title>clang::Sema::computeDeclContext (1 samples, 0.08%)</title><rect x="1098.2" y="533" width="0.9" height="15.0" fill="rgb(253,99,39)" rx="2" ry="2" />
<text  x="1101.19" y="543.5" ></text>
</g>
<g >
<title>TCling::RegisterModule (1 samples, 0.08%)</title><rect x="839.0" y="645" width="0.9" height="15.0" fill="rgb(240,227,42)" rx="2" ry="2" />
<text  x="841.97" y="655.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (24 samples, 1.83%)</title><rect x="216.1" y="789" width="21.6" height="15.0" fill="rgb(219,2,26)" rx="2" ry="2" />
<text  x="219.12" y="799.5" >l..</text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LegacyRTDyldObjectLinkingLayer::ConcreteLinkedObject&lt;std::shared_ptr&lt;llvm::RuntimeDyld::MemoryManager&gt; &gt;::getSymbolMaterializer(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;)::{lambda()#1}&gt;::_M_invoke (1 samples, 0.08%)</title><rect x="202.6" y="805" width="0.9" height="15.0" fill="rgb(237,105,1)" rx="2" ry="2" />
<text  x="205.62" y="815.5" ></text>
</g>
<g >
<title>execute_command (4 samples, 0.31%)</title><rect x="36.1" y="805" width="3.6" height="15.0" fill="rgb(245,201,1)" rx="2" ry="2" />
<text  x="39.10" y="815.5" ></text>
</g>
<g >
<title>cling::MetaParser::isCommand (16 samples, 1.22%)</title><rect x="839.9" y="901" width="14.4" height="15.0" fill="rgb(250,215,33)" rx="2" ry="2" />
<text  x="842.87" y="911.5" ></text>
</g>
<g >
<title>default_tty_job_signals (2 samples, 0.15%)</title><rect x="1186.4" y="821" width="1.8" height="15.0" fill="rgb(227,96,39)" rx="2" ry="2" />
<text  x="1189.40" y="831.5" ></text>
</g>
<g >
<title>llvm::InstCombiner::visitLoadInst (1 samples, 0.08%)</title><rect x="221.5" y="709" width="0.9" height="15.0" fill="rgb(242,77,20)" rx="2" ry="2" />
<text  x="224.52" y="719.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::computeExitLimitFromICmp (1 samples, 0.08%)</title><rect x="1109.9" y="597" width="0.9" height="15.0" fill="rgb(235,29,33)" rx="2" ry="2" />
<text  x="1112.89" y="607.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::GenerateCode (1 samples, 0.08%)</title><rect x="1040.6" y="773" width="0.9" height="15.0" fill="rgb(236,180,18)" rx="2" ry="2" />
<text  x="1043.59" y="783.5" ></text>
</g>
<g >
<title>cling::MetaSema::actOnLCommand (2 samples, 0.15%)</title><rect x="855.2" y="725" width="1.8" height="15.0" fill="rgb(238,92,25)" rx="2" ry="2" />
<text  x="858.17" y="735.5" ></text>
</g>
<g >
<title>[bash] (1 samples, 0.08%)</title><rect x="1152.2" y="789" width="0.9" height="15.0" fill="rgb(243,83,22)" rx="2" ry="2" />
<text  x="1155.20" y="799.5" ></text>
</g>
<g >
<title>llvm::CastInst::Create (1 samples, 0.08%)</title><rect x="1015.4" y="437" width="0.9" height="15.0" fill="rgb(220,7,47)" rx="2" ry="2" />
<text  x="1018.39" y="447.5" ></text>
</g>
<g >
<title>execute_command_internal (1 samples, 0.08%)</title><rect x="35.2" y="821" width="0.9" height="15.0" fill="rgb(238,181,52)" rx="2" ry="2" />
<text  x="38.20" y="831.5" ></text>
</g>
<g >
<title>llvm::TargetTransformInfo::Model&lt;llvm::X86TTIImpl&gt;::~Model (1 samples, 0.08%)</title><rect x="861.5" y="565" width="0.9" height="15.0" fill="rgb(248,126,2)" rx="2" ry="2" />
<text  x="864.47" y="575.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="990.2" y="645" width="0.9" height="15.0" fill="rgb(232,99,3)" rx="2" ry="2" />
<text  x="993.18" y="655.5" ></text>
</g>
<g >
<title>TBufferFile::ReadFloat (2 samples, 0.15%)</title><rect x="658.1" y="869" width="1.8" height="15.0" fill="rgb(237,44,10)" rx="2" ry="2" />
<text  x="661.05" y="879.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke (26 samples, 1.98%)</title><rect x="238.6" y="821" width="23.4" height="15.0" fill="rgb(242,100,19)" rx="2" ry="2" />
<text  x="241.62" y="831.5" >s..</text>
</g>
<g >
<title>llvm::ScalarEvolution::createSCEV (1 samples, 0.08%)</title><rect x="1118.0" y="741" width="0.9" height="15.0" fill="rgb(234,121,29)" rx="2" ry="2" />
<text  x="1120.99" y="751.5" ></text>
</g>
<g >
<title>cling::Interpreter::loadHeader (1 samples, 0.08%)</title><rect x="857.0" y="773" width="0.9" height="15.0" fill="rgb(213,6,27)" rx="2" ry="2" />
<text  x="859.97" y="783.5" ></text>
</g>
<g >
<title>clang::Sema::SubstType (1 samples, 0.08%)</title><rect x="1055.9" y="853" width="0.9" height="15.0" fill="rgb(214,225,41)" rx="2" ry="2" />
<text  x="1058.89" y="863.5" ></text>
</g>
<g >
<title>execute_command (1 samples, 0.08%)</title><rect x="35.2" y="885" width="0.9" height="15.0" fill="rgb(231,55,8)" rx="2" ry="2" />
<text  x="38.20" y="895.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ComputeRecordLayout (1 samples, 0.08%)</title><rect x="1048.7" y="949" width="0.9" height="15.0" fill="rgb(218,36,33)" rx="2" ry="2" />
<text  x="1051.69" y="959.5" ></text>
</g>
<g >
<title>clang::Parser::ParseTemplateArgumentList (1 samples, 0.08%)</title><rect x="1109.0" y="741" width="0.9" height="15.0" fill="rgb(246,211,17)" rx="2" ry="2" />
<text  x="1111.99" y="751.5" ></text>
</g>
<g >
<title>cling::MetaSema::actOnxCommand (16 samples, 1.22%)</title><rect x="839.9" y="869" width="14.4" height="15.0" fill="rgb(205,113,0)" rx="2" ry="2" />
<text  x="842.87" y="879.5" ></text>
</g>
<g >
<title>llvm::AAResults::getModRefBehavior (1 samples, 0.08%)</title><rect x="829.1" y="533" width="0.9" height="15.0" fill="rgb(229,76,20)" rx="2" ry="2" />
<text  x="832.07" y="543.5" ></text>
</g>
<g >
<title>llvm::legacy::FunctionPassManagerImpl::run (1 samples, 0.08%)</title><rect x="831.8" y="645" width="0.9" height="15.0" fill="rgb(241,47,31)" rx="2" ry="2" />
<text  x="834.77" y="655.5" ></text>
</g>
<g >
<title>DoMarkVarDeclReferenced (1 samples, 0.08%)</title><rect x="1079.3" y="597" width="0.9" height="15.0" fill="rgb(209,117,41)" rx="2" ry="2" />
<text  x="1082.29" y="607.5" ></text>
</g>
<g >
<title>set_signal_handler (1 samples, 0.08%)</title><rect x="1160.3" y="773" width="0.9" height="15.0" fill="rgb(241,6,26)" rx="2" ry="2" />
<text  x="1163.30" y="783.5" ></text>
</g>
<g >
<title>clang::ASTReader::CompleteRedeclChain (1 samples, 0.08%)</title><rect x="1018.1" y="565" width="0.9" height="15.0" fill="rgb(225,163,27)" rx="2" ry="2" />
<text  x="1021.09" y="575.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGBuilder::resolveOrClearDbgInfo (1 samples, 0.08%)</title><rect x="842.6" y="533" width="0.9" height="15.0" fill="rgb(235,91,23)" rx="2" ry="2" />
<text  x="845.57" y="543.5" ></text>
</g>
<g >
<title>clang::ASTReader::ReadExpr (1 samples, 0.08%)</title><rect x="1012.7" y="405" width="0.9" height="15.0" fill="rgb(223,228,1)" rx="2" ry="2" />
<text  x="1015.68" y="415.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.08%)</title><rect x="237.7" y="677" width="0.9" height="15.0" fill="rgb(212,108,35)" rx="2" ry="2" />
<text  x="240.72" y="687.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::CodeGenAndEmitDAG (8 samples, 0.61%)</title><rect x="1130.6" y="709" width="7.2" height="15.0" fill="rgb(225,43,51)" rx="2" ry="2" />
<text  x="1133.59" y="719.5" ></text>
</g>
<g >
<title>TUnixSystem::GetLinkedLibraries (5 samples, 0.38%)</title><rect x="995.6" y="885" width="4.5" height="15.0" fill="rgb(234,159,53)" rx="2" ry="2" />
<text  x="998.58" y="895.5" ></text>
</g>
<g >
<title>llvm::orc::SimpleCompiler::operator() (3 samples, 0.23%)</title><rect x="1127.0" y="917" width="2.7" height="15.0" fill="rgb(249,191,16)" rx="2" ry="2" />
<text  x="1129.99" y="927.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.08%)</title><rect x="1001.9" y="613" width="0.9" height="15.0" fill="rgb(234,110,39)" rx="2" ry="2" />
<text  x="1004.88" y="623.5" ></text>
</g>
<g >
<title>llvm::PMTopLevelManager::findAnalysisPass (19 samples, 1.45%)</title><rect x="727.4" y="533" width="17.1" height="15.0" fill="rgb(212,220,32)" rx="2" ry="2" />
<text  x="730.36" y="543.5" ></text>
</g>
<g >
<title>cling::MetaSema::actOnxCommand (1 samples, 0.08%)</title><rect x="1109.9" y="917" width="0.9" height="15.0" fill="rgb(222,22,43)" rx="2" ry="2" />
<text  x="1112.89" y="927.5" ></text>
</g>
<g >
<title>clang::Sema::BuildDeclarationNameExpr (1 samples, 0.08%)</title><rect x="1079.3" y="645" width="0.9" height="15.0" fill="rgb(215,91,1)" rx="2" ry="2" />
<text  x="1082.29" y="655.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddTemplateArgument (1 samples, 0.08%)</title><rect x="1094.6" y="645" width="0.9" height="15.0" fill="rgb(234,198,5)" rx="2" ry="2" />
<text  x="1097.59" y="655.5" ></text>
</g>
<g >
<title>llvm::AttributeList::hasFnAttribute (1 samples, 0.08%)</title><rect x="829.1" y="501" width="0.9" height="15.0" fill="rgb(210,178,34)" rx="2" ry="2" />
<text  x="832.07" y="511.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1074.8" y="453" width="0.9" height="15.0" fill="rgb(216,159,39)" rx="2" ry="2" />
<text  x="1077.79" y="463.5" ></text>
</g>
<g >
<title>llvm::orc::lookupWithLegacyFn&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}::operator()(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;) const::{lambda(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)#1}&gt; (138 samples, 10.53%)</title><rect x="674.3" y="661" width="124.2" height="15.0" fill="rgb(236,79,49)" rx="2" ry="2" />
<text  x="677.26" y="671.5" >llvm::orc::look..</text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (1 samples, 0.08%)</title><rect x="1015.4" y="677" width="0.9" height="15.0" fill="rgb(237,165,9)" rx="2" ry="2" />
<text  x="1018.39" y="687.5" ></text>
</g>
<g >
<title>clang::ASTReader::readTypeRecord (1 samples, 0.08%)</title><rect x="1010.9" y="853" width="0.9" height="15.0" fill="rgb(232,123,30)" rx="2" ry="2" />
<text  x="1013.88" y="863.5" ></text>
</g>
<g >
<title>llvm::orc::SimpleCompiler::operator() (1 samples, 0.08%)</title><rect x="1110.8" y="725" width="0.9" height="15.0" fill="rgb(250,7,38)" rx="2" ry="2" />
<text  x="1113.79" y="735.5" ></text>
</g>
<g >
<title>clang::RedeclarableTemplateDecl::loadLazySpecializationsImpl (1 samples, 0.08%)</title><rect x="1064.9" y="757" width="0.9" height="15.0" fill="rgb(208,217,18)" rx="2" ry="2" />
<text  x="1067.89" y="767.5" ></text>
</g>
<g >
<title>__run_fork_handlers (1 samples, 0.08%)</title><rect x="1146.8" y="917" width="0.9" height="15.0" fill="rgb(243,29,32)" rx="2" ry="2" />
<text  x="1149.80" y="927.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetType (1 samples, 0.08%)</title><rect x="1010.9" y="837" width="0.9" height="15.0" fill="rgb(250,47,20)" rx="2" ry="2" />
<text  x="1013.88" y="847.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke (138 samples, 10.53%)</title><rect x="674.3" y="645" width="124.2" height="15.0" fill="rgb(236,64,46)" rx="2" ry="2" />
<text  x="677.26" y="655.5" >std::_Function_..</text>
</g>
<g >
<title>getMangledNameImpl (1 samples, 0.08%)</title><rect x="1025.3" y="853" width="0.9" height="15.0" fill="rgb(224,225,23)" rx="2" ry="2" />
<text  x="1028.29" y="863.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::createSimpleAffineAddRec (1 samples, 0.08%)</title><rect x="1118.0" y="661" width="0.9" height="15.0" fill="rgb(217,138,14)" rx="2" ry="2" />
<text  x="1120.99" y="671.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::SelectBasicBlock (3 samples, 0.23%)</title><rect x="1122.5" y="933" width="2.7" height="15.0" fill="rgb(249,176,2)" rx="2" ry="2" />
<text  x="1125.49" y="943.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1005.5" y="613" width="0.9" height="15.0" fill="rgb(211,87,53)" rx="2" ry="2" />
<text  x="1008.48" y="623.5" ></text>
</g>
<g >
<title>TCling::ProcessLineSynch (1 samples, 0.08%)</title><rect x="857.0" y="901" width="0.9" height="15.0" fill="rgb(214,98,19)" rx="2" ry="2" />
<text  x="859.97" y="911.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitRedeclarableTemplateDecl (1 samples, 0.08%)</title><rect x="1111.7" y="501" width="0.9" height="15.0" fill="rgb(227,100,29)" rx="2" ry="2" />
<text  x="1114.69" y="511.5" ></text>
</g>
<g >
<title>cling::DeclCollector::TransformDecl (1 samples, 0.08%)</title><rect x="855.2" y="613" width="0.9" height="15.0" fill="rgb(214,67,26)" rx="2" ry="2" />
<text  x="858.17" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;unsigned int&gt; &gt;::_M_erase (1 samples, 0.08%)</title><rect x="689.6" y="517" width="0.9" height="15.0" fill="rgb(233,60,9)" rx="2" ry="2" />
<text  x="692.56" y="527.5" ></text>
</g>
<g >
<title>execute_command (4 samples, 0.31%)</title><rect x="36.1" y="917" width="3.6" height="15.0" fill="rgb(222,44,44)" rx="2" ry="2" />
<text  x="39.10" y="927.5" ></text>
</g>
<g >
<title>cling::IncrementalExecutor::executeWrapper (26 samples, 1.98%)</title><rect x="238.6" y="837" width="23.4" height="15.0" fill="rgb(215,214,25)" rx="2" ry="2" />
<text  x="241.62" y="847.5" >c..</text>
</g>
<g >
<title>clang::Sema::InstantiateClass (1 samples, 0.08%)</title><rect x="1075.7" y="933" width="0.9" height="15.0" fill="rgb(240,167,16)" rx="2" ry="2" />
<text  x="1078.69" y="943.5" ></text>
</g>
<g >
<title>[bash] (5 samples, 0.38%)</title><rect x="10.9" y="485" width="4.5" height="15.0" fill="rgb(214,195,27)" rx="2" ry="2" />
<text  x="13.90" y="495.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::GenerateCode (1 samples, 0.08%)</title><rect x="1039.7" y="757" width="0.9" height="15.0" fill="rgb(207,159,41)" rx="2" ry="2" />
<text  x="1042.69" y="767.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (1 samples, 0.08%)</title><rect x="991.1" y="773" width="0.9" height="15.0" fill="rgb(242,130,25)" rx="2" ry="2" />
<text  x="994.08" y="783.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGBuilder::lowerInvokable (1 samples, 0.08%)</title><rect x="1121.6" y="933" width="0.9" height="15.0" fill="rgb(216,221,11)" rx="2" ry="2" />
<text  x="1124.59" y="943.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenFunction::EmitCallArgs&lt;clang::FunctionProtoType&gt; (1 samples, 0.08%)</title><rect x="1091.0" y="901" width="0.9" height="15.0" fill="rgb(215,149,8)" rx="2" ry="2" />
<text  x="1093.99" y="911.5" ></text>
</g>
<g >
<title>TCling::Initialize (11 samples, 0.84%)</title><rect x="943.4" y="869" width="9.9" height="15.0" fill="rgb(239,96,32)" rx="2" ry="2" />
<text  x="946.38" y="879.5" ></text>
</g>
<g >
<title>llvm::X86FrameLowering::emitEpilogue (1 samples, 0.08%)</title><rect x="252.1" y="725" width="0.9" height="15.0" fill="rgb(223,166,41)" rx="2" ry="2" />
<text  x="255.12" y="735.5" ></text>
</g>
<g >
<title>execute_command_internal (4 samples, 0.31%)</title><rect x="36.1" y="789" width="3.6" height="15.0" fill="rgb(231,55,9)" rx="2" ry="2" />
<text  x="39.10" y="799.5" ></text>
</g>
<g >
<title>llvm::legacy::FunctionPassManagerImpl::run (2 samples, 0.15%)</title><rect x="800.3" y="677" width="1.8" height="15.0" fill="rgb(231,123,2)" rx="2" ry="2" />
<text  x="803.27" y="687.5" ></text>
</g>
<g >
<title>clang::Sema::RequireCompleteType (1 samples, 0.08%)</title><rect x="1100.0" y="869" width="0.9" height="15.0" fill="rgb(243,165,9)" rx="2" ry="2" />
<text  x="1102.99" y="879.5" ></text>
</g>
<g >
<title>multikeySort (1 samples, 0.08%)</title><rect x="839.9" y="517" width="0.9" height="15.0" fill="rgb(208,191,33)" rx="2" ry="2" />
<text  x="842.87" y="527.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.08%)</title><rect x="875.0" y="581" width="0.9" height="15.0" fill="rgb(240,210,32)" rx="2" ry="2" />
<text  x="877.97" y="591.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::VisitTypeAliasDecl (1 samples, 0.08%)</title><rect x="1012.7" y="789" width="0.9" height="15.0" fill="rgb(253,148,53)" rx="2" ry="2" />
<text  x="1015.68" y="799.5" ></text>
</g>
<g >
<title>clang::TemplateArgumentList::ComputeODRHash (1 samples, 0.08%)</title><rect x="1094.6" y="661" width="0.9" height="15.0" fill="rgb(246,115,26)" rx="2" ry="2" />
<text  x="1097.59" y="671.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTSIInObjectScope (1 samples, 0.08%)</title><rect x="1088.3" y="773" width="0.9" height="15.0" fill="rgb(250,180,53)" rx="2" ry="2" />
<text  x="1091.29" y="783.5" ></text>
</g>
<g >
<title>TClingMemberIter::Advance (1 samples, 0.08%)</title><rect x="1118.9" y="373" width="0.9" height="15.0" fill="rgb(209,118,30)" rx="2" ry="2" />
<text  x="1121.89" y="383.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertType (1 samples, 0.08%)</title><rect x="1049.6" y="757" width="0.9" height="15.0" fill="rgb(216,152,44)" rx="2" ry="2" />
<text  x="1052.59" y="767.5" ></text>
</g>
<g >
<title>llvm::IVUsers::AddUsersIfInteresting (1 samples, 0.08%)</title><rect x="1129.7" y="821" width="0.9" height="15.0" fill="rgb(241,160,19)" rx="2" ry="2" />
<text  x="1132.69" y="831.5" ></text>
</g>
<g >
<title>clang::Sema::PerformPendingInstantiations (1 samples, 0.08%)</title><rect x="1078.4" y="805" width="0.9" height="15.0" fill="rgb(230,23,16)" rx="2" ry="2" />
<text  x="1081.39" y="815.5" ></text>
</g>
<g >
<title>_dl_start (5 samples, 0.38%)</title><rect x="39.7" y="933" width="4.5" height="15.0" fill="rgb(247,135,0)" rx="2" ry="2" />
<text  x="42.70" y="943.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit (1 samples, 0.08%)</title><rect x="1012.7" y="805" width="0.9" height="15.0" fill="rgb(223,206,29)" rx="2" ry="2" />
<text  x="1015.68" y="815.5" ></text>
</g>
<g >
<title>[libc-2.28.so] (1 samples, 0.08%)</title><rect x="981.2" y="805" width="0.9" height="15.0" fill="rgb(205,89,51)" rx="2" ry="2" />
<text  x="984.18" y="815.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetTypeSourceInfo (1 samples, 0.08%)</title><rect x="1012.7" y="757" width="0.9" height="15.0" fill="rgb(232,177,21)" rx="2" ry="2" />
<text  x="1015.68" y="767.5" ></text>
</g>
<g >
<title>cling::MetaProcessor::process (2 samples, 0.15%)</title><rect x="1111.7" y="949" width="1.8" height="15.0" fill="rgb(233,3,12)" rx="2" ry="2" />
<text  x="1114.69" y="959.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="34.3" y="533" width="0.9" height="15.0" fill="rgb(233,46,21)" rx="2" ry="2" />
<text  x="37.30" y="543.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.23%)</title><rect x="19.0" y="261" width="2.7" height="15.0" fill="rgb(220,54,2)" rx="2" ry="2" />
<text  x="22.00" y="271.5" ></text>
</g>
<g >
<title>llvm::wouldInstructionBeTriviallyDead (1 samples, 0.08%)</title><rect x="823.7" y="613" width="0.9" height="15.0" fill="rgb(234,146,47)" rx="2" ry="2" />
<text  x="826.67" y="623.5" ></text>
</g>
<g >
<title>clang::ASTReader::FindExternalLexicalDecls (1 samples, 0.08%)</title><rect x="1083.8" y="821" width="0.9" height="15.0" fill="rgb(231,13,53)" rx="2" ry="2" />
<text  x="1086.79" y="831.5" ></text>
</g>
<g >
<title>cling::Dyld::searchLibrariesForSymbol[abi:cxx11] (3 samples, 0.23%)</title><rect x="747.2" y="453" width="2.7" height="15.0" fill="rgb(228,173,27)" rx="2" ry="2" />
<text  x="750.16" y="463.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1152.2" y="709" width="0.9" height="15.0" fill="rgb(251,211,29)" rx="2" ry="2" />
<text  x="1155.20" y="719.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformNestedNameSpecifierLoc (1 samples, 0.08%)</title><rect x="1093.7" y="933" width="0.9" height="15.0" fill="rgb(211,75,35)" rx="2" ry="2" />
<text  x="1096.69" y="943.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="957.8" y="773" width="0.9" height="15.0" fill="rgb(226,31,13)" rx="2" ry="2" />
<text  x="960.78" y="783.5" ></text>
</g>
<g >
<title>clang::ASTReader::readTypeRecord (1 samples, 0.08%)</title><rect x="1007.3" y="773" width="0.9" height="15.0" fill="rgb(212,156,16)" rx="2" ry="2" />
<text  x="1010.28" y="783.5" ></text>
</g>
<g >
<title>clang::ASTStmtReader::VisitDependentScopeDeclRefExpr (1 samples, 0.08%)</title><rect x="1010.0" y="725" width="0.9" height="15.0" fill="rgb(213,184,41)" rx="2" ry="2" />
<text  x="1012.98" y="735.5" ></text>
</g>
<g >
<title>__GI___read (1 samples, 0.08%)</title><rect x="934.4" y="693" width="0.9" height="15.0" fill="rgb(208,12,22)" rx="2" ry="2" />
<text  x="937.38" y="703.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformTSIInObjectScope (1 samples, 0.08%)</title><rect x="1064.0" y="661" width="0.9" height="15.0" fill="rgb(235,225,49)" rx="2" ry="2" />
<text  x="1066.99" y="671.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1147.7" y="869" width="0.9" height="15.0" fill="rgb(231,148,43)" rx="2" ry="2" />
<text  x="1150.70" y="879.5" ></text>
</g>
<g >
<title>clang::Sema::BuildDeclarationNameExpr (1 samples, 0.08%)</title><rect x="1095.5" y="597" width="0.9" height="15.0" fill="rgb(216,113,51)" rx="2" ry="2" />
<text  x="1098.49" y="607.5" ></text>
</g>
<g >
<title>clang::DeclContext::isDependentContext (1 samples, 0.08%)</title><rect x="1079.3" y="565" width="0.9" height="15.0" fill="rgb(251,80,19)" rx="2" ry="2" />
<text  x="1082.29" y="575.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1006.4" y="677" width="0.9" height="15.0" fill="rgb(234,150,3)" rx="2" ry="2" />
<text  x="1009.38" y="687.5" ></text>
</g>
<g >
<title>printForSigInfoIfNeeded (1 samples, 0.08%)</title><rect x="916.4" y="565" width="0.9" height="15.0" fill="rgb(220,85,6)" rx="2" ry="2" />
<text  x="919.38" y="575.5" ></text>
</g>
<g >
<title>TCling::InspectMembers (1 samples, 0.08%)</title><rect x="448.3" y="517" width="0.9" height="15.0" fill="rgb(229,136,14)" rx="2" ry="2" />
<text  x="451.34" y="527.5" ></text>
</g>
<g >
<title>TSystem::Load (11 samples, 0.84%)</title><rect x="991.1" y="933" width="9.9" height="15.0" fill="rgb(212,220,6)" rx="2" ry="2" />
<text  x="994.08" y="943.5" ></text>
</g>
<g >
<title>llvm::PMDataManager::findAnalysisPass (1 samples, 0.08%)</title><rect x="900.2" y="565" width="0.9" height="15.0" fill="rgb(241,125,5)" rx="2" ry="2" />
<text  x="903.18" y="575.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (3 samples, 0.23%)</title><rect x="40.6" y="869" width="2.7" height="15.0" fill="rgb(234,229,40)" rx="2" ry="2" />
<text  x="43.60" y="879.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::RebuildDependentNameType (2 samples, 0.15%)</title><rect x="1073.0" y="853" width="1.8" height="15.0" fill="rgb(205,143,46)" rx="2" ry="2" />
<text  x="1075.99" y="863.5" ></text>
</g>
<g >
<title>llvm::PMTopLevelManager::findAnalysisUsage (1 samples, 0.08%)</title><rect x="876.8" y="597" width="0.9" height="15.0" fill="rgb(222,105,46)" rx="2" ry="2" />
<text  x="879.77" y="607.5" ></text>
</g>
<g >
<title>llvm::MachineFunctionPass::runOnFunction (1 samples, 0.08%)</title><rect x="1107.2" y="709" width="0.9" height="15.0" fill="rgb(222,95,36)" rx="2" ry="2" />
<text  x="1110.19" y="719.5" ></text>
</g>
<g >
<title>__GI__dl_catch_exception (1 samples, 0.08%)</title><rect x="202.6" y="389" width="0.9" height="15.0" fill="rgb(223,184,32)" rx="2" ry="2" />
<text  x="205.62" y="399.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.08%)</title><rect x="1064.0" y="709" width="0.9" height="15.0" fill="rgb(243,12,41)" rx="2" ry="2" />
<text  x="1066.99" y="719.5" ></text>
</g>
<g >
<title>llvm::legacy::PassManagerImpl::run (2 samples, 0.15%)</title><rect x="212.5" y="805" width="1.8" height="15.0" fill="rgb(223,56,12)" rx="2" ry="2" />
<text  x="215.52" y="815.5" ></text>
</g>
<g >
<title>TObjArray::Streamer (1 samples, 0.08%)</title><rect x="448.3" y="645" width="0.9" height="15.0" fill="rgb(247,79,24)" rx="2" ry="2" />
<text  x="451.34" y="655.5" ></text>
</g>
<g >
<title>TClingDataMemberInfo::TClingDataMemberInfo (1 samples, 0.08%)</title><rect x="1118.9" y="405" width="0.9" height="15.0" fill="rgb(214,155,35)" rx="2" ry="2" />
<text  x="1121.89" y="415.5" ></text>
</g>
<g >
<title>llvm::orc::SimpleCompiler::operator() (5 samples, 0.38%)</title><rect x="1102.7" y="757" width="4.5" height="15.0" fill="rgb(219,112,29)" rx="2" ry="2" />
<text  x="1105.69" y="767.5" ></text>
</g>
<g >
<title>clang::Preprocessor::Lex (1 samples, 0.08%)</title><rect x="941.6" y="773" width="0.9" height="15.0" fill="rgb(209,198,50)" rx="2" ry="2" />
<text  x="944.58" y="783.5" ></text>
</g>
<g >
<title>llvm::orc::lookupWithLegacyFn&lt;cling::IncrementalJIT::IncrementalJIT(cling::IncrementalExecutor&amp;, std::unique_ptr&lt;llvm::TargetMachine, std::default_delete&lt;llvm::TargetMachine&gt; &gt;, std::function&lt;void (unsigned long, std::unique_ptr&lt;llvm::Module, std::default_delete&lt;llvm::Module&gt; &gt;)&gt;)::{lambda(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;)#2}::operator()(std::shared_ptr&lt;llvm::orc::AsynchronousSymbolQuery&gt;, llvm::DenseSet&lt;llvm::orc::SymbolStringPtr, llvm::DenseMapInfo&lt;llvm::orc::SymbolStringPtr&gt; &gt;) const::{lambda(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)#1}&gt; (1 samples, 0.08%)</title><rect x="202.6" y="581" width="0.9" height="15.0" fill="rgb(226,132,35)" rx="2" ry="2" />
<text  x="205.62" y="591.5" ></text>
</g>
<g >
<title>llvm::FoldingSetBase::FindNodeOrInsertPos (1 samples, 0.08%)</title><rect x="1010.9" y="693" width="0.9" height="15.0" fill="rgb(226,71,8)" rx="2" ry="2" />
<text  x="1013.88" y="703.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddTemplateArgument (1 samples, 0.08%)</title><rect x="1064.9" y="613" width="0.9" height="15.0" fill="rgb(206,19,14)" rx="2" ry="2" />
<text  x="1067.89" y="623.5" ></text>
</g>
<g >
<title>clang::ODRHash::AddTemplateArgument (1 samples, 0.08%)</title><rect x="1094.6" y="533" width="0.9" height="15.0" fill="rgb(215,192,19)" rx="2" ry="2" />
<text  x="1097.59" y="543.5" ></text>
</g>
<g >
<title>clang::Lexer::LexTokenInternal (1 samples, 0.08%)</title><rect x="942.5" y="597" width="0.9" height="15.0" fill="rgb(210,96,22)" rx="2" ry="2" />
<text  x="945.48" y="607.5" ></text>
</g>
<g >
<title>TBufferFile::ReadObjectAny (1 samples, 0.08%)</title><rect x="1118.9" y="741" width="0.9" height="15.0" fill="rgb(235,68,47)" rx="2" ry="2" />
<text  x="1121.89" y="751.5" ></text>
</g>
<g >
<title>llvm::MachineFunction::init (1 samples, 0.08%)</title><rect x="245.8" y="709" width="0.9" height="15.0" fill="rgb(210,150,46)" rx="2" ry="2" />
<text  x="248.82" y="719.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;llvm::Expected&lt;unsigned long&gt; (), llvm::orc::LazyEmittingLayer&lt;llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt; &gt;::EmissionDeferredModule::find(llvm::StringRef, bool, llvm::orc::LegacyIRCompileLayer&lt;cling::IncrementalJIT::RemovableObjectLinkingLayer, llvm::orc::SimpleCompiler&gt;&amp;)::{lambda()#1}&gt;::_M_invoke (11 samples, 0.84%)</title><rect x="839.9" y="677" width="9.9" height="15.0" fill="rgb(216,143,13)" rx="2" ry="2" />
<text  x="842.87" y="687.5" ></text>
</g>
<g >
<title>execute_command_internal (22 samples, 1.68%)</title><rect x="15.4" y="677" width="19.8" height="15.0" fill="rgb(209,108,48)" rx="2" ry="2" />
<text  x="18.40" y="687.5" ></text>
</g>
<g >
<title>__GI__IO_getline_info (11 samples, 0.84%)</title><rect x="979.4" y="821" width="9.9" height="15.0" fill="rgb(222,121,3)" rx="2" ry="2" />
<text  x="982.38" y="831.5" ></text>
</g>
<g >
<title>clang::Sema::ActOnFinishFunctionBody (1 samples, 0.08%)</title><rect x="849.8" y="693" width="0.9" height="15.0" fill="rgb(227,26,40)" rx="2" ry="2" />
<text  x="852.77" y="703.5" ></text>
</g>
<g >
<title>TBranch::GetEntry (3 samples, 0.23%)</title><rect x="640.1" y="869" width="2.7" height="15.0" fill="rgb(239,194,3)" rx="2" ry="2" />
<text  x="643.05" y="879.5" ></text>
</g>
<g >
<title>clang::ASTReader::GetType (1 samples, 0.08%)</title><rect x="1010.0" y="645" width="0.9" height="15.0" fill="rgb(221,18,41)" rx="2" ry="2" />
<text  x="1012.98" y="655.5" ></text>
</g>
<g >
<title>clang::TemplateDeclInstantiator::VisitCXXMethodDecl (1 samples, 0.08%)</title><rect x="1060.4" y="821" width="0.9" height="15.0" fill="rgb(219,162,38)" rx="2" ry="2" />
<text  x="1063.39" y="831.5" ></text>
</g>
<g >
<title>llvm::FPPassManager::runOnFunction (14 samples, 1.07%)</title><rect x="216.1" y="773" width="12.6" height="15.0" fill="rgb(230,33,25)" rx="2" ry="2" />
<text  x="219.12" y="783.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::EmitDeferred (3 samples, 0.23%)</title><rect x="1015.4" y="885" width="2.7" height="15.0" fill="rgb(254,25,20)" rx="2" ry="2" />
<text  x="1018.39" y="895.5" ></text>
</g>
<g >
<title>clang::RecursiveASTVisitor&lt;(anonymous namespace)::PointerCheckInjector&gt;::TraverseDecl (1 samples, 0.08%)</title><rect x="855.2" y="581" width="0.9" height="15.0" fill="rgb(244,157,40)" rx="2" ry="2" />
<text  x="858.17" y="591.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="34.3" y="453" width="0.9" height="15.0" fill="rgb(251,132,3)" rx="2" ry="2" />
<text  x="37.30" y="463.5" ></text>
</g>
<g >
<title>llvm::SelectionDAGISel::SelectAllBasicBlocks (6 samples, 0.46%)</title><rect x="840.8" y="565" width="5.4" height="15.0" fill="rgb(222,227,26)" rx="2" ry="2" />
<text  x="843.77" y="575.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ComputeRecordLayout (1 samples, 0.08%)</title><rect x="1048.7" y="613" width="0.9" height="15.0" fill="rgb(205,135,7)" rx="2" ry="2" />
<text  x="1051.69" y="623.5" ></text>
</g>
<g >
<title>clang::Sema::SubstBaseSpecifiers (1 samples, 0.08%)</title><rect x="1074.8" y="645" width="0.9" height="15.0" fill="rgb(217,204,14)" rx="2" ry="2" />
<text  x="1077.79" y="655.5" ></text>
</g>
<g >
<title>cling::Interpreter::RunFunction (26 samples, 1.98%)</title><rect x="238.6" y="853" width="23.4" height="15.0" fill="rgb(215,64,51)" rx="2" ry="2" />
<text  x="241.62" y="863.5" >c..</text>
</g>
<g >
<title>clang::ASTDeclReader::VisitValueDecl (1 samples, 0.08%)</title><rect x="1010.0" y="885" width="0.9" height="15.0" fill="rgb(209,45,13)" rx="2" ry="2" />
<text  x="1012.98" y="895.5" ></text>
</g>
<g >
<title>clang::LinkageComputer::getTypeLinkageAndVisibility (1 samples, 0.08%)</title><rect x="1016.3" y="437" width="0.9" height="15.0" fill="rgb(249,183,4)" rx="2" ry="2" />
<text  x="1019.29" y="447.5" ></text>
</g>
<g >
<title>__libc_read (2 samples, 0.15%)</title><rect x="1004.6" y="677" width="1.8" height="15.0" fill="rgb(206,219,22)" rx="2" ry="2" />
<text  x="1007.58" y="687.5" ></text>
</g>
<g >
<title>clang::RedeclarableTemplateDecl::findSpecializationImpl&lt;clang::ClassTemplateSpecializationDecl&gt; (1 samples, 0.08%)</title><rect x="1081.1" y="629" width="0.9" height="15.0" fill="rgb(252,2,19)" rx="2" ry="2" />
<text  x="1084.09" y="639.5" ></text>
</g>
<g >
<title>_dl_init (1 samples, 0.08%)</title><rect x="839.0" y="693" width="0.9" height="15.0" fill="rgb(253,107,48)" rx="2" ry="2" />
<text  x="841.97" y="703.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="34.3" y="517" width="0.9" height="15.0" fill="rgb(239,178,6)" rx="2" ry="2" />
<text  x="37.30" y="527.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="1161.2" y="805" width="0.9" height="15.0" fill="rgb(234,227,20)" rx="2" ry="2" />
<text  x="1164.20" y="815.5" ></text>
</g>
<g >
<title>clang::Sema::AddImplicitlyDeclaredMembersToClass (1 samples, 0.08%)</title><rect x="1086.5" y="645" width="0.9" height="15.0" fill="rgb(229,217,19)" rx="2" ry="2" />
<text  x="1089.49" y="655.5" ></text>
</g>
<g >
<title>isStd (1 samples, 0.08%)</title><rect x="1033.4" y="581" width="0.9" height="15.0" fill="rgb(235,174,9)" rx="2" ry="2" />
<text  x="1036.39" y="591.5" ></text>
</g>
<g >
<title>clang::CXXRecordDecl::data (1 samples, 0.08%)</title><rect x="1086.5" y="613" width="0.9" height="15.0" fill="rgb(232,46,30)" rx="2" ry="2" />
<text  x="1089.49" y="623.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::getFunctionLinkage (1 samples, 0.08%)</title><rect x="1035.2" y="565" width="0.9" height="15.0" fill="rgb(212,127,36)" rx="2" ry="2" />
<text  x="1038.19" y="575.5" ></text>
</g>
<g >
<title>clang::Parser::ParseSimpleDeclaration (1 samples, 0.08%)</title><rect x="1053.2" y="853" width="0.9" height="15.0" fill="rgb(209,189,0)" rx="2" ry="2" />
<text  x="1056.19" y="863.5" ></text>
</g>
<g >
<title>clang::Sema::PerformPendingInstantiations (1 samples, 0.08%)</title><rect x="1054.1" y="821" width="0.9" height="15.0" fill="rgb(226,23,54)" rx="2" ry="2" />
<text  x="1057.09" y="831.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.08%)</title><rect x="1072.1" y="789" width="0.9" height="15.0" fill="rgb(215,83,5)" rx="2" ry="2" />
<text  x="1075.09" y="799.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.08%)</title><rect x="1015.4" y="389" width="0.9" height="15.0" fill="rgb(215,33,48)" rx="2" ry="2" />
<text  x="1018.39" y="399.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::createNodeForGEP (1 samples, 0.08%)</title><rect x="852.5" y="645" width="0.9" height="15.0" fill="rgb(207,90,47)" rx="2" ry="2" />
<text  x="855.47" y="655.5" ></text>
</g>
<g >
<title>clang::Sema::CheckFunctionDeclaration (1 samples, 0.08%)</title><rect x="1057.7" y="821" width="0.9" height="15.0" fill="rgb(227,9,51)" rx="2" ry="2" />
<text  x="1060.69" y="831.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (1 samples, 0.08%)</title><rect x="865.1" y="501" width="0.9" height="15.0" fill="rgb(211,174,23)" rx="2" ry="2" />
<text  x="868.07" y="511.5" ></text>
</g>
<g >
<title>clang::FunctionDecl::getNumParams (1 samples, 0.08%)</title><rect x="1057.7" y="773" width="0.9" height="15.0" fill="rgb(238,54,49)" rx="2" ry="2" />
<text  x="1060.69" y="783.5" ></text>
</g>
<g >
<title>llvm::AliasSetTracker::findAliasSetForUnknownInst (1 samples, 0.08%)</title><rect x="829.1" y="613" width="0.9" height="15.0" fill="rgb(205,16,19)" rx="2" ry="2" />
<text  x="832.07" y="623.5" ></text>
</g>
<g >
<title>clang::Sema::BuildQualifiedDeclarationNameExpr (2 samples, 0.15%)</title><rect x="1094.6" y="933" width="1.8" height="15.0" fill="rgb(216,222,35)" rx="2" ry="2" />
<text  x="1097.59" y="943.5" ></text>
</g>
<g >
<title>execute_command (4 samples, 0.31%)</title><rect x="36.1" y="885" width="3.6" height="15.0" fill="rgb(239,19,1)" rx="2" ry="2" />
<text  x="39.10" y="895.5" ></text>
</g>
<g >
<title>llvm::SelectionDAG::Combine (2 samples, 0.15%)</title><rect x="1127.0" y="789" width="1.8" height="15.0" fill="rgb(224,38,30)" rx="2" ry="2" />
<text  x="1129.99" y="799.5" ></text>
</g>
<g >
<title>llvm::MachineInstrBuilder::addReg (1 samples, 0.08%)</title><rect x="1103.6" y="565" width="0.9" height="15.0" fill="rgb(229,58,52)" rx="2" ry="2" />
<text  x="1106.59" y="575.5" ></text>
</g>
<g >
<title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, true&gt; &gt;::CalculateFromScratch (1 samples, 0.08%)</title><rect x="893.0" y="597" width="0.9" height="15.0" fill="rgb(228,28,32)" rx="2" ry="2" />
<text  x="895.97" y="607.5" ></text>
</g>
<g >
<title>TFileCacheRead::ReadBuffer (1 samples, 0.08%)</title><rect x="639.2" y="805" width="0.9" height="15.0" fill="rgb(213,159,28)" rx="2" ry="2" />
<text  x="642.15" y="815.5" ></text>
</g>
<g >
<title>llvm::BranchProbabilityInfo::calculate (1 samples, 0.08%)</title><rect x="832.7" y="629" width="0.9" height="15.0" fill="rgb(232,70,24)" rx="2" ry="2" />
<text  x="835.67" y="639.5" ></text>
</g>
<g >
<title>clang::Sema::SubstType (1 samples, 0.08%)</title><rect x="1073.9" y="725" width="0.9" height="15.0" fill="rgb(222,64,26)" rx="2" ry="2" />
<text  x="1076.89" y="735.5" ></text>
</g>
<g >
<title>llvm::AliasSetTracker::findAliasSetForUnknownInst (1 samples, 0.08%)</title><rect x="230.5" y="693" width="0.9" height="15.0" fill="rgb(211,118,36)" rx="2" ry="2" />
<text  x="233.52" y="703.5" ></text>
</g>
<g >
<title>cling::IncrementalParser::~IncrementalParser (1 samples, 0.08%)</title><rect x="859.7" y="757" width="0.9" height="15.0" fill="rgb(246,127,52)" rx="2" ry="2" />
<text  x="862.67" y="767.5" ></text>
</g>
<g >
<title>llvm::orc::JITSymbolResolverAdapter::lookup (1 samples, 0.08%)</title><rect x="1107.2" y="837" width="0.9" height="15.0" fill="rgb(220,217,7)" rx="2" ry="2" />
<text  x="1110.19" y="847.5" ></text>
</g>
<g >
<title>llvm::X86TargetMachine::getTargetTransformInfo (1 samples, 0.08%)</title><rect x="894.8" y="581" width="0.9" height="15.0" fill="rgb(212,210,2)" rx="2" ry="2" />
<text  x="897.77" y="591.5" ></text>
</g>
<g >
<title>handleEndBlock (2 samples, 0.15%)</title><rect x="804.8" y="645" width="1.8" height="15.0" fill="rgb(236,141,12)" rx="2" ry="2" />
<text  x="807.77" y="655.5" ></text>
</g>
<g >
<title>_int_malloc (1 samples, 0.08%)</title><rect x="923.6" y="533" width="0.9" height="15.0" fill="rgb(217,164,21)" rx="2" ry="2" />
<text  x="926.58" y="543.5" ></text>
</g>
<g >
<title>llvm::DomTreeBuilder::SemiNCAInfo&lt;llvm::DominatorTreeBase&lt;llvm::BasicBlock, false&gt; &gt;::runSemiNCA (1 samples, 0.08%)</title><rect x="819.2" y="629" width="0.9" height="15.0" fill="rgb(239,69,32)" rx="2" ry="2" />
<text  x="822.17" y="639.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenTypes::ConvertTypeForMem (1 samples, 0.08%)</title><rect x="1048.7" y="677" width="0.9" height="15.0" fill="rgb(221,41,49)" rx="2" ry="2" />
<text  x="1051.69" y="687.5" ></text>
</g>
<g >
<title>llvm::DenseMapBase&lt;llvm::DenseMap&lt;void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;, void const*, llvm::Pass*, llvm::DenseMapInfo&lt;void const*&gt;, llvm::detail::DenseMapPair&lt;void const*, llvm::Pass*&gt; &gt;::LookupBucketFor&lt;void const*&gt; (1 samples, 0.08%)</title><rect x="678.8" y="501" width="0.9" height="15.0" fill="rgb(237,128,20)" rx="2" ry="2" />
<text  x="681.76" y="511.5" ></text>
</g>
<g >
<title>llvm::ConstantExpr::getGetElementPtr (1 samples, 0.08%)</title><rect x="203.5" y="661" width="0.9" height="15.0" fill="rgb(245,16,49)" rx="2" ry="2" />
<text  x="206.52" y="671.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit (1 samples, 0.08%)</title><rect x="1077.5" y="773" width="0.9" height="15.0" fill="rgb(248,20,42)" rx="2" ry="2" />
<text  x="1080.49" y="783.5" ></text>
</g>
<g >
<title>clang::ASTReader::readTypeRecord (1 samples, 0.08%)</title><rect x="1008.2" y="757" width="0.9" height="15.0" fill="rgb(209,11,51)" rx="2" ry="2" />
<text  x="1011.18" y="767.5" ></text>
</g>
<g >
<title>clang::CodeGen::CodeGenModule::setNonAliasAttributes (1 samples, 0.08%)</title><rect x="1016.3" y="661" width="0.9" height="15.0" fill="rgb(226,33,54)" rx="2" ry="2" />
<text  x="1019.29" y="671.5" ></text>
</g>
<g >
<title>clang::Sema::PerformPendingInstantiations (1 samples, 0.08%)</title><rect x="1111.7" y="693" width="0.9" height="15.0" fill="rgb(245,68,41)" rx="2" ry="2" />
<text  x="1114.69" y="703.5" ></text>
</g>
<g >
<title>clang::VarDecl::evaluateValue (1 samples, 0.08%)</title><rect x="1023.5" y="741" width="0.9" height="15.0" fill="rgb(219,124,37)" rx="2" ry="2" />
<text  x="1026.49" y="751.5" ></text>
</g>
<g >
<title>llvm::SmallPtrSetImplBase::FindBucketFor (1 samples, 0.08%)</title><rect x="703.1" y="501" width="0.9" height="15.0" fill="rgb(225,16,18)" rx="2" ry="2" />
<text  x="706.06" y="511.5" ></text>
</g>
<g >
<title>clang::ASTDeclReader::Visit (1 samples, 0.08%)</title><rect x="1071.2" y="725" width="0.9" height="15.0" fill="rgb(208,49,18)" rx="2" ry="2" />
<text  x="1074.19" y="735.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (1 samples, 0.08%)</title><rect x="797.6" y="549" width="0.9" height="15.0" fill="rgb(211,189,3)" rx="2" ry="2" />
<text  x="800.57" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;void const*, void const*, std::_Identity&lt;void const*&gt;, std::less&lt;void const*&gt;, std::allocator&lt;void const*&gt; &gt;::_M_erase (1 samples, 0.08%)</title><rect x="928.1" y="581" width="0.9" height="15.0" fill="rgb(214,39,4)" rx="2" ry="2" />
<text  x="931.08" y="591.5" ></text>
</g>
<g >
<title>llvm::BasicBlock::eraseFromParent (1 samples, 0.08%)</title><rect x="859.7" y="677" width="0.9" height="15.0" fill="rgb(225,15,9)" rx="2" ry="2" />
<text  x="862.67" y="687.5" ></text>
</g>
<g >
<title>clang::TreeTransform&lt;(anonymous namespace)::TemplateInstantiator&gt;::TransformType (1 samples, 0.08%)</title><rect x="1073.9" y="693" width="0.9" height="15.0" fill="rgb(242,103,6)" rx="2" ry="2" />
<text  x="1076.89" y="703.5" ></text>
</g>
<g >
<title>clang::TypeLocReader::VisitTemplateSpecializationTypeLoc (1 samples, 0.08%)</title><rect x="1012.7" y="437" width="0.9" height="15.0" fill="rgb(242,162,9)" rx="2" ry="2" />
<text  x="1015.68" y="447.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.08%)</title><rect x="445.6" y="757" width="0.9" height="15.0" fill="rgb(228,85,27)" rx="2" ry="2" />
<text  x="448.64" y="767.5" ></text>
</g>
<g >
<title>?? (1 samples, 0.08%)</title><rect x="1037.0" y="549" width="0.9" height="15.0" fill="rgb(205,171,23)" rx="2" ry="2" />
<text  x="1039.99" y="559.5" ></text>
</g>
<g >
<title>llvm::ScalarEvolution::getRangeRef (1 samples, 0.08%)</title><rect x="1129.7" y="469" width="0.9" height="15.0" fill="rgb(254,24,49)" rx="2" ry="2" />
<text  x="1132.69" y="479.5" ></text>
</g>
</g>
</svg>
